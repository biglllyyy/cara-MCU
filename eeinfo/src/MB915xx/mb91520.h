/*
 MB91520 Series I/O register declaration file V01L05
 ALL RIGHTS RESERVED, COPYRIGHT (C) FUJITSU SEMICONDUCTOR LIMITED 2011
 LICENSED MATERIAL - PROGRAM PROPERTY OF FUJITSU SEMICONDUCTOR LIMITED
*/
#ifndef __MB91520_H
#define __MB91520_H

#ifdef WIN32

#define __io
#define __far
#define __near
#define __interrupt
#define __IO_EXTERN   extern
#define __IO_EXTENDED extern

void __DI(void);
void __EI(void);
void __wait_nop(void);
void __set_il(int il);

#pragma warning(disable:4214)
#pragma	warning(disable:4132)


#else /* !WIN32 */


#ifdef  __IO_NEAR
#ifdef  __IO_FAR
#error "__IO_NEAR and __IO_FAR must not be defined at the same time"
#else
#define ___IOWIDTH __near
#endif
#else
#ifdef __IO_FAR
#define ___IOWIDTH __far
#else                               /* specified by memory model */
#define ___IOWIDTH
#endif
#endif

#ifdef  __IO_DEFINE
#define __IO_EXTERN __io
#define __IO_EXTENDED volatile ___IOWIDTH
#else
#define __IO_EXTERN   extern __io      /* for data, which can have __io */
#define __IO_EXTENDED extern volatile ___IOWIDTH
#endif

#endif     /* end win32 */

typedef unsigned char        __BYTE;
typedef unsigned short       __HWORD;
typedef unsigned long        __WORD;
typedef const unsigned short __HWORD_READ;

#define	CONSTANT_0	(0)
#define	CONSTANT_1	(1)
#define	CONSTANT_2	(2)
#define	CONSTANT_3	(3)
#define	CONSTANT_4	(4)
#define	CONSTANT_5	(5)
#define	CONSTANT_6	(6)
#define	CONSTANT_7	(7)
#define	CONSTANT_8	(8)
#define	CONSTANT_9	(9)
#define	CONSTANT_10	(10)
#define	CONSTANT_11	(11)
#define	CONSTANT_12	(12)
#define	CONSTANT_13	(13)
#define	CONSTANT_14	(14)
#define	CONSTANT_15	(15)
#define	CONSTANT_16	(16)
#define	CONSTANT_17	(17)
#define	CONSTANT_18	(18)
#define	CONSTANT_19	(19)
#define	CONSTANT_20	(20)
#define	CONSTANT_21	(21)
#define	CONSTANT_22	(22)
#define	CONSTANT_23	(23)
#define	CONSTANT_24	(24)
#define	CONSTANT_25	(25)
#define	CONSTANT_26	(26)
#define	CONSTANT_27	(27)
#define	CONSTANT_28	(28)
#define	CONSTANT_29	(29)
#define	CONSTANT_30	(30)
#define	CONSTANT_31	(31)
#define	CONSTANT_32	(32)
#define	CONSTANT_33	(33)
#define	CONSTANT_34	(34)
#define	CONSTANT_35	(35)
#define	CONSTANT_36	(36)
#define	CONSTANT_37	(37)
#define	CONSTANT_38	(38)
#define	CONSTANT_39	(39)
#define	CONSTANT_40	(40)
#define	CONSTANT_41	(41)
#define	CONSTANT_42	(42)
#define	CONSTANT_43	(43)
#define	CONSTANT_44	(44)
#define	CONSTANT_45	(45)
#define	CONSTANT_46	(46)
#define	CONSTANT_47	(47)
#define	CONSTANT_48	(48)
#define	CONSTANT_49	(49)
#define	CONSTANT_50	(50)
#define	CONSTANT_51	(51)
#define	CONSTANT_52	(52)
#define	CONSTANT_53	(53)
#define	CONSTANT_54	(54)
#define	CONSTANT_55	(55)
#define	CONSTANT_56	(56)
#define	CONSTANT_57	(57)
#define	CONSTANT_58	(58)
#define	CONSTANT_59	(59)
#define	CONSTANT_60	(60)
#define	CONSTANT_61	(61)
#define	CONSTANT_62	(62)
#define	CONSTANT_63	(63)


#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR00, locate=0x0
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR00STR;

__IO_EXTERN	  PDR00STR	IO_PDR00;
#define	_pdr00		(IO_PDR00)
#define	PDR00		(IO_PDR00.byte)
#define	PDR00_P7  	(IO_PDR00.bit.P7)
#define	PDR00_P6  	(IO_PDR00.bit.P6)
#define	PDR00_P5  	(IO_PDR00.bit.P5)
#define	PDR00_P4  	(IO_PDR00.bit.P4)
#define	PDR00_P3  	(IO_PDR00.bit.P3)
#define	PDR00_P2  	(IO_PDR00.bit.P2)
#define	PDR00_P1  	(IO_PDR00.bit.P1)
#define	PDR00_P0  	(IO_PDR00.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR01, locate=0x1
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR01STR;

__IO_EXTERN	  PDR01STR	IO_PDR01;
#define	_pdr01		(IO_PDR01)
#define	PDR01		(IO_PDR01.byte)
#define	PDR01_P7  	(IO_PDR01.bit.P7)
#define	PDR01_P6  	(IO_PDR01.bit.P6)
#define	PDR01_P5  	(IO_PDR01.bit.P5)
#define	PDR01_P4  	(IO_PDR01.bit.P4)
#define	PDR01_P3  	(IO_PDR01.bit.P3)
#define	PDR01_P2  	(IO_PDR01.bit.P2)
#define	PDR01_P1  	(IO_PDR01.bit.P1)
#define	PDR01_P0  	(IO_PDR01.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR02, locate=0x2
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR02STR;

__IO_EXTERN	  PDR02STR	IO_PDR02;
#define	_pdr02		(IO_PDR02)
#define	PDR02		(IO_PDR02.byte)
#define	PDR02_P7  	(IO_PDR02.bit.P7)
#define	PDR02_P6  	(IO_PDR02.bit.P6)
#define	PDR02_P5  	(IO_PDR02.bit.P5)
#define	PDR02_P4  	(IO_PDR02.bit.P4)
#define	PDR02_P3  	(IO_PDR02.bit.P3)
#define	PDR02_P2  	(IO_PDR02.bit.P2)
#define	PDR02_P1  	(IO_PDR02.bit.P1)
#define	PDR02_P0  	(IO_PDR02.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR03, locate=0x3
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR03STR;

__IO_EXTERN	  PDR03STR	IO_PDR03;
#define	_pdr03		(IO_PDR03)
#define	PDR03		(IO_PDR03.byte)
#define	PDR03_P7  	(IO_PDR03.bit.P7)
#define	PDR03_P6  	(IO_PDR03.bit.P6)
#define	PDR03_P5  	(IO_PDR03.bit.P5)
#define	PDR03_P4  	(IO_PDR03.bit.P4)
#define	PDR03_P3  	(IO_PDR03.bit.P3)
#define	PDR03_P2  	(IO_PDR03.bit.P2)
#define	PDR03_P1  	(IO_PDR03.bit.P1)
#define	PDR03_P0  	(IO_PDR03.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR04, locate=0x4
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR04STR;

__IO_EXTERN	  PDR04STR	IO_PDR04;
#define	_pdr04		(IO_PDR04)
#define	PDR04		(IO_PDR04.byte)
#define	PDR04_P7  	(IO_PDR04.bit.P7)
#define	PDR04_P6  	(IO_PDR04.bit.P6)
#define	PDR04_P5  	(IO_PDR04.bit.P5)
#define	PDR04_P4  	(IO_PDR04.bit.P4)
#define	PDR04_P3  	(IO_PDR04.bit.P3)
#define	PDR04_P2  	(IO_PDR04.bit.P2)
#define	PDR04_P1  	(IO_PDR04.bit.P1)
#define	PDR04_P0  	(IO_PDR04.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR05, locate=0x5
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR05STR;

__IO_EXTERN	  PDR05STR	IO_PDR05;
#define	_pdr05		(IO_PDR05)
#define	PDR05		(IO_PDR05.byte)
#define	PDR05_P7  	(IO_PDR05.bit.P7)
#define	PDR05_P6  	(IO_PDR05.bit.P6)
#define	PDR05_P5  	(IO_PDR05.bit.P5)
#define	PDR05_P4  	(IO_PDR05.bit.P4)
#define	PDR05_P3  	(IO_PDR05.bit.P3)
#define	PDR05_P2  	(IO_PDR05.bit.P2)
#define	PDR05_P1  	(IO_PDR05.bit.P1)
#define	PDR05_P0  	(IO_PDR05.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR06, locate=0x6
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR06STR;

__IO_EXTERN	  PDR06STR	IO_PDR06;
#define	_pdr06		(IO_PDR06)
#define	PDR06		(IO_PDR06.byte)
#define	PDR06_P7  	(IO_PDR06.bit.P7)
#define	PDR06_P6  	(IO_PDR06.bit.P6)
#define	PDR06_P5  	(IO_PDR06.bit.P5)
#define	PDR06_P4  	(IO_PDR06.bit.P4)
#define	PDR06_P3  	(IO_PDR06.bit.P3)
#define	PDR06_P2  	(IO_PDR06.bit.P2)
#define	PDR06_P1  	(IO_PDR06.bit.P1)
#define	PDR06_P0  	(IO_PDR06.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR07, locate=0x7
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR07STR;

__IO_EXTERN	  PDR07STR	IO_PDR07;
#define	_pdr07		(IO_PDR07)
#define	PDR07		(IO_PDR07.byte)
#define	PDR07_P7  	(IO_PDR07.bit.P7)
#define	PDR07_P6  	(IO_PDR07.bit.P6)
#define	PDR07_P5  	(IO_PDR07.bit.P5)
#define	PDR07_P4  	(IO_PDR07.bit.P4)
#define	PDR07_P3  	(IO_PDR07.bit.P3)
#define	PDR07_P2  	(IO_PDR07.bit.P2)
#define	PDR07_P1  	(IO_PDR07.bit.P1)
#define	PDR07_P0  	(IO_PDR07.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR08, locate=0x8
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR08STR;

__IO_EXTERN	  PDR08STR	IO_PDR08;
#define	_pdr08		(IO_PDR08)
#define	PDR08		(IO_PDR08.byte)
#define	PDR08_P7  	(IO_PDR08.bit.P7)
#define	PDR08_P6  	(IO_PDR08.bit.P6)
#define	PDR08_P5  	(IO_PDR08.bit.P5)
#define	PDR08_P4  	(IO_PDR08.bit.P4)
#define	PDR08_P3  	(IO_PDR08.bit.P3)
#define	PDR08_P2  	(IO_PDR08.bit.P2)
#define	PDR08_P1  	(IO_PDR08.bit.P1)
#define	PDR08_P0  	(IO_PDR08.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR09, locate=0x9
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR09STR;

__IO_EXTERN	  PDR09STR	IO_PDR09;
#define	_pdr09		(IO_PDR09)
#define	PDR09		(IO_PDR09.byte)
#define	PDR09_P7  	(IO_PDR09.bit.P7)
#define	PDR09_P6  	(IO_PDR09.bit.P6)
#define	PDR09_P5  	(IO_PDR09.bit.P5)
#define	PDR09_P4  	(IO_PDR09.bit.P4)
#define	PDR09_P3  	(IO_PDR09.bit.P3)
#define	PDR09_P2  	(IO_PDR09.bit.P2)
#define	PDR09_P1  	(IO_PDR09.bit.P1)
#define	PDR09_P0  	(IO_PDR09.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR10, locate=0xA
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR10STR;

__IO_EXTERN	  PDR10STR	IO_PDR10;
#define	_pdr10		(IO_PDR10)
#define	PDR10		(IO_PDR10.byte)
#define	PDR10_P7  	(IO_PDR10.bit.P7)
#define	PDR10_P6  	(IO_PDR10.bit.P6)
#define	PDR10_P5  	(IO_PDR10.bit.P5)
#define	PDR10_P4  	(IO_PDR10.bit.P4)
#define	PDR10_P3  	(IO_PDR10.bit.P3)
#define	PDR10_P2  	(IO_PDR10.bit.P2)
#define	PDR10_P1  	(IO_PDR10.bit.P1)
#define	PDR10_P0  	(IO_PDR10.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR11, locate=0xB
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR11STR;

__IO_EXTERN	  PDR11STR	IO_PDR11;
#define	_pdr11		(IO_PDR11)
#define	PDR11		(IO_PDR11.byte)
#define	PDR11_P7  	(IO_PDR11.bit.P7)
#define	PDR11_P6  	(IO_PDR11.bit.P6)
#define	PDR11_P5  	(IO_PDR11.bit.P5)
#define	PDR11_P4  	(IO_PDR11.bit.P4)
#define	PDR11_P3  	(IO_PDR11.bit.P3)
#define	PDR11_P2  	(IO_PDR11.bit.P2)
#define	PDR11_P1  	(IO_PDR11.bit.P1)
#define	PDR11_P0  	(IO_PDR11.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR12, locate=0xC
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR12STR;

__IO_EXTERN	  PDR12STR	IO_PDR12;
#define	_pdr12		(IO_PDR12)
#define	PDR12		(IO_PDR12.byte)
#define	PDR12_P7  	(IO_PDR12.bit.P7)
#define	PDR12_P6  	(IO_PDR12.bit.P6)
#define	PDR12_P5  	(IO_PDR12.bit.P5)
#define	PDR12_P4  	(IO_PDR12.bit.P4)
#define	PDR12_P3  	(IO_PDR12.bit.P3)
#define	PDR12_P2  	(IO_PDR12.bit.P2)
#define	PDR12_P1  	(IO_PDR12.bit.P1)
#define	PDR12_P0  	(IO_PDR12.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR13, locate=0xD
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR13STR;

__IO_EXTERN	  PDR13STR	IO_PDR13;
#define	_pdr13		(IO_PDR13)
#define	PDR13		(IO_PDR13.byte)
#define	PDR13_P7  	(IO_PDR13.bit.P7)
#define	PDR13_P6  	(IO_PDR13.bit.P6)
#define	PDR13_P5  	(IO_PDR13.bit.P5)
#define	PDR13_P4  	(IO_PDR13.bit.P4)
#define	PDR13_P3  	(IO_PDR13.bit.P3)
#define	PDR13_P2  	(IO_PDR13.bit.P2)
#define	PDR13_P1  	(IO_PDR13.bit.P1)
#define	PDR13_P0  	(IO_PDR13.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR14, locate=0xE
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR14STR;

__IO_EXTERN	  PDR14STR	IO_PDR14;
#define	_pdr14		(IO_PDR14)
#define	PDR14		(IO_PDR14.byte)
#define	PDR14_P7  	(IO_PDR14.bit.P7)
#define	PDR14_P6  	(IO_PDR14.bit.P6)
#define	PDR14_P5  	(IO_PDR14.bit.P5)
#define	PDR14_P4  	(IO_PDR14.bit.P4)
#define	PDR14_P3  	(IO_PDR14.bit.P3)
#define	PDR14_P2  	(IO_PDR14.bit.P2)
#define	PDR14_P1  	(IO_PDR14.bit.P1)
#define	PDR14_P0  	(IO_PDR14.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR15, locate=0xF
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR15STR;

__IO_EXTERN	  PDR15STR	IO_PDR15;
#define	_pdr15		(IO_PDR15)
#define	PDR15		(IO_PDR15.byte)
#define	PDR15_P7  	(IO_PDR15.bit.P7)
#define	PDR15_P6  	(IO_PDR15.bit.P6)
#define	PDR15_P5  	(IO_PDR15.bit.P5)
#define	PDR15_P4  	(IO_PDR15.bit.P4)
#define	PDR15_P3  	(IO_PDR15.bit.P3)
#define	PDR15_P2  	(IO_PDR15.bit.P2)
#define	PDR15_P1  	(IO_PDR15.bit.P1)
#define	PDR15_P0  	(IO_PDR15.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR16, locate=0x18
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR16STR;

__IO_EXTERN	  PDR16STR	IO_PDR16;
#define	_pdr16		(IO_PDR16)
#define	PDR16		(IO_PDR16.byte)
#define	PDR16_P7  	(IO_PDR16.bit.P7)
#define	PDR16_P6  	(IO_PDR16.bit.P6)
#define	PDR16_P5  	(IO_PDR16.bit.P5)
#define	PDR16_P4  	(IO_PDR16.bit.P4)
#define	PDR16_P3  	(IO_PDR16.bit.P3)
#define	PDR16_P2  	(IO_PDR16.bit.P2)
#define	PDR16_P1  	(IO_PDR16.bit.P1)
#define	PDR16_P0  	(IO_PDR16.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR17, locate=0x19
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR17STR;

__IO_EXTERN	  PDR17STR	IO_PDR17;
#define	_pdr17		(IO_PDR17)
#define	PDR17		(IO_PDR17.byte)
#define	PDR17_P7  	(IO_PDR17.bit.P7)
#define	PDR17_P6  	(IO_PDR17.bit.P6)
#define	PDR17_P5  	(IO_PDR17.bit.P5)
#define	PDR17_P4  	(IO_PDR17.bit.P4)
#define	PDR17_P3  	(IO_PDR17.bit.P3)
#define	PDR17_P2  	(IO_PDR17.bit.P2)
#define	PDR17_P1  	(IO_PDR17.bit.P1)
#define	PDR17_P0  	(IO_PDR17.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR18, locate=0x1A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR18STR;

__IO_EXTERN	  PDR18STR	IO_PDR18;
#define	_pdr18		(IO_PDR18)
#define	PDR18		(IO_PDR18.byte)
#define	PDR18_P7  	(IO_PDR18.bit.P7)
#define	PDR18_P6  	(IO_PDR18.bit.P6)
#define	PDR18_P5  	(IO_PDR18.bit.P5)
#define	PDR18_P4  	(IO_PDR18.bit.P4)
#define	PDR18_P3  	(IO_PDR18.bit.P3)
#define	PDR18_P2  	(IO_PDR18.bit.P2)
#define	PDR18_P1  	(IO_PDR18.bit.P1)
#define	PDR18_P0  	(IO_PDR18.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_PDR19, locate=0x1B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDR19STR;

__IO_EXTERN	  PDR19STR	IO_PDR19;
#define	_pdr19		(IO_PDR19)
#define	PDR19		(IO_PDR19.byte)
#define	PDR19_P7  	(IO_PDR19.bit.P7)
#define	PDR19_P6  	(IO_PDR19.bit.P6)
#define	PDR19_P5  	(IO_PDR19.bit.P5)
#define	PDR19_P4  	(IO_PDR19.bit.P4)
#define	PDR19_P3  	(IO_PDR19.bit.P3)
#define	PDR19_P2  	(IO_PDR19.bit.P2)
#define	PDR19_P1  	(IO_PDR19.bit.P1)
#define	PDR19_P0  	(IO_PDR19.bit.P0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_WDTECR0, locate=0x38
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	WTWE:1;
        __BYTE	WTLI:4;
    } bit;
} WDTECR0STR;

__IO_EXTERN	  WDTECR0STR	IO_WDTECR0;
#define	_wdtecr0		(IO_WDTECR0)
#define	WDTECR0		(IO_WDTECR0.byte)
#define	WDTECR0_WTWE  	(IO_WDTECR0.bit.WTWE)
#define	WDTECR0_WTLI  	(IO_WDTECR0.bit.WTLI)

#ifdef __IO_DEFINE
#pragma segment IO=IO_WDTCR0, locate=0x3C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RSTP:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	WT:4;
    } bit;
} WDTCR0STR;

__IO_EXTERN	  WDTCR0STR	IO_WDTCR0;
#define	_wdtcr0		(IO_WDTCR0)
#define	WDTCR0		(IO_WDTCR0.byte)
#define	WDTCR0_RSTP  	(IO_WDTCR0.bit.RSTP)
#define	WDTCR0_WT  	(IO_WDTCR0.bit.WT)

#ifdef __IO_DEFINE
#pragma segment IO=IO_WDTCPR0, locate=0x3D
#endif

__IO_EXTERN	__BYTE	IO_WDTCPR0;
#define	_wdtcpr0		(IO_WDTCPR0)
#define	WDTCPR0	(_wdtcpr0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_WDTCR1, locate=0x3E
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	WT:4;
    } bit;
} WDTCR1STR;

__IO_EXTERN	 const  WDTCR1STR	IO_WDTCR1;
#define	_wdtcr1		(IO_WDTCR1)
#define	WDTCR1		(IO_WDTCR1.byte)
#define	WDTCR1_WT  	(IO_WDTCR1.bit.WT)

#ifdef __IO_DEFINE
#pragma segment IO=IO_WDTCPR1, locate=0x3F
#endif

__IO_EXTERN	__BYTE	IO_WDTCPR1;
#define	_wdtcpr1		(IO_WDTCPR1)
#define	WDTCPR1	(_wdtcpr1)

#ifdef __IO_DEFINE
#pragma segment IO=IO_DICR, locate=0x44
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	DLYI:1;
    } bit;
} DICRSTR;

__IO_EXTERN	  DICRSTR	IO_DICR;
#define	_dicr		(IO_DICR)
#define	DICR		(IO_DICR.byte)
#define	DICR_DLYI  	(IO_DICR.bit.DLYI)

#ifdef __IO_DEFINE
#pragma segment IO=IO_TMRLRA0, locate=0x60
#endif

__IO_EXTERN	__HWORD	IO_TMRLRA0;
#define	_tmrlra0		(IO_TMRLRA0)
#define	TMRLRA0	(_tmrlra0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_TMR0, locate=0x62
#endif

__IO_EXTERN	const __HWORD	IO_TMR0;
#define	_tmr0		(IO_TMR0)
#define	TMR0_	(_tmr0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_TMRLRB0, locate=0x64
#endif

__IO_EXTERN	__HWORD	IO_TMRLRB0;
#define	_tmrlrb0		(IO_TMRLRB0)
#define	TMRLRB0	(_tmrlrb0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_TMCSR0, locate=0x66
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __BYTE	TMCSR0H;
        __BYTE	TMCSR0L;
    } byte;
    struct
    {
        __HWORD	MOD:2;
        __HWORD	TRGM:2;
        __HWORD	CSL:3;
        __HWORD	GATE:1;
        __HWORD	EF:1;
        __HWORD	RESV5:1;
        __HWORD	OUTL:1;
        __HWORD	RELD:1;
        __HWORD	INTE:1;
        __HWORD	UF:1;
        __HWORD	CNTE:1;
        __HWORD	TRG:1;
    } bit;
} TMCSR0STR;

__IO_EXTERN	  TMCSR0STR	IO_TMCSR0;
#define	_tmcsr0		(IO_TMCSR0)
#define	TMCSR0		(IO_TMCSR0.hword)
#define	TMCSR0_TMCSR0H	(IO_TMCSR0.byte.TMCSR0H)
#define	TMCSR0_TMCSR0L	(IO_TMCSR0.byte.TMCSR0L)
#define	TMCSR0_MOD  	(IO_TMCSR0.bit.MOD)
#define	TMCSR0_TRGM  	(IO_TMCSR0.bit.TRGM)
#define	TMCSR0_CSL  	(IO_TMCSR0.bit.CSL)
#define	TMCSR0_GATE  	(IO_TMCSR0.bit.GATE)
#define	TMCSR0_EF  	(IO_TMCSR0.bit.EF)
#define	TMCSR0_OUTL  	(IO_TMCSR0.bit.OUTL)
#define	TMCSR0_RELD  	(IO_TMCSR0.bit.RELD)
#define	TMCSR0_INTE  	(IO_TMCSR0.bit.INTE)
#define	TMCSR0_UF  	(IO_TMCSR0.bit.UF)
#define	TMCSR0_CNTE  	(IO_TMCSR0.bit.CNTE)
#define	TMCSR0_TRG  	(IO_TMCSR0.bit.TRG)

#ifdef __IO_DEFINE
#pragma segment IO=IO_TMRLRA7, locate=0x68
#endif

__IO_EXTERN	__HWORD	IO_TMRLRA7;
#define	_tmrlra7		(IO_TMRLRA7)
#define	TMRLRA7	(_tmrlra7)

#ifdef __IO_DEFINE
#pragma segment IO=IO_TMR7, locate=0x6A
#endif

__IO_EXTERN	const __HWORD	IO_TMR7;
#define	_tmr7		(IO_TMR7)
#define	TMR7_	(_tmr7)

#ifdef __IO_DEFINE
#pragma segment IO=IO_TMRLRB7, locate=0x6C
#endif

__IO_EXTERN	__HWORD	IO_TMRLRB7;
#define	_tmrlrb7		(IO_TMRLRB7)
#define	TMRLRB7	(_tmrlrb7)

#ifdef __IO_DEFINE
#pragma segment IO=IO_TMCSR7, locate=0x6E
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __BYTE	TMCSR7H;
        __BYTE	TMCSR7L;
    } byte;
    struct
    {
        __HWORD	MOD:2;
        __HWORD	TRGM:2;
        __HWORD	CSL:3;
        __HWORD	GATE:1;
        __HWORD	EF:1;
        __HWORD	RESV5:1;
        __HWORD	OUTL:1;
        __HWORD	RELD:1;
        __HWORD	INTE:1;
        __HWORD	UF:1;
        __HWORD	CNTE:1;
        __HWORD	TRG:1;
    } bit;
} TMCSR7STR;

__IO_EXTERN	  TMCSR7STR	IO_TMCSR7;
#define	_tmcsr7		(IO_TMCSR7)
#define	TMCSR7		(IO_TMCSR7.hword)
#define	TMCSR7_TMCSR7H	(IO_TMCSR7.byte.TMCSR7H)
#define	TMCSR7_TMCSR7L	(IO_TMCSR7.byte.TMCSR7L)
#define	TMCSR7_MOD  	(IO_TMCSR7.bit.MOD)
#define	TMCSR7_TRGM  	(IO_TMCSR7.bit.TRGM)
#define	TMCSR7_CSL  	(IO_TMCSR7.bit.CSL)
#define	TMCSR7_GATE  	(IO_TMCSR7.bit.GATE)
#define	TMCSR7_EF  	(IO_TMCSR7.bit.EF)
#define	TMCSR7_OUTL  	(IO_TMCSR7.bit.OUTL)
#define	TMCSR7_RELD  	(IO_TMCSR7.bit.RELD)
#define	TMCSR7_INTE  	(IO_TMCSR7.bit.INTE)
#define	TMCSR7_UF  	(IO_TMCSR7.bit.UF)
#define	TMCSR7_CNTE  	(IO_TMCSR7.bit.CNTE)
#define	TMCSR7_TRG  	(IO_TMCSR7.bit.TRG)

#ifdef __IO_DEFINE
#pragma segment IO=IO_FRS8, locate=0x70
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	OS11:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	OS10:2;
        __WORD	RESV14:1;
        __WORD	RESV15:1;
        __WORD	OS9:2;
        __WORD	RESV17:1;
        __WORD	RESV18:1;
        __WORD	OS8:2;
        __WORD	RESV20:1;
        __WORD	RESV21:1;
        __WORD	OS7:2;
        __WORD	RESV23:1;
        __WORD	RESV24:1;
        __WORD	OS6:2;
    } bit;
} FRS8STR;

__IO_EXTERN	  FRS8STR	IO_FRS8;
#define	_frs8		(IO_FRS8)
#define	FRS8		(IO_FRS8.word)
#define	FRS8_OS11  	(IO_FRS8.bit.OS11)
#define	FRS8_OS10  	(IO_FRS8.bit.OS10)
#define	FRS8_OS9  	(IO_FRS8.bit.OS9)
#define	FRS8_OS8  	(IO_FRS8.bit.OS8)
#define	FRS8_OS7  	(IO_FRS8.bit.OS7)
#define	FRS8_OS6  	(IO_FRS8.bit.OS6)

#ifdef __IO_DEFINE
#pragma segment IO=IO_FRS9, locate=0x74
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	IS9:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	IS8:2;
        __WORD	RESV14:1;
        __WORD	RESV15:1;
        __WORD	IS7:2;
        __WORD	RESV17:1;
        __WORD	RESV18:1;
        __WORD	IS6:2;
        __WORD	RESV20:1;
        __WORD	RESV21:1;
        __WORD	IS5:2;
        __WORD	RESV23:1;
        __WORD	RESV24:1;
        __WORD	IS4:2;
    } bit;
} FRS9STR;

__IO_EXTERN	  FRS9STR	IO_FRS9;
#define	_frs9		(IO_FRS9)
#define	FRS9		(IO_FRS9.word)
#define	FRS9_IS9  	(IO_FRS9.bit.IS9)
#define	FRS9_IS8  	(IO_FRS9.bit.IS8)
#define	FRS9_IS7  	(IO_FRS9.bit.IS7)
#define	FRS9_IS6  	(IO_FRS9.bit.IS6)
#define	FRS9_IS5  	(IO_FRS9.bit.IS5)
#define	FRS9_IS4  	(IO_FRS9.bit.IS4)

#ifdef __IO_DEFINE
#pragma segment IO=IO_OCLS67, locate=0x7B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	OLS7:1;
        __BYTE	OLS6:1;
        __BYTE	OMS7:1;
        __BYTE	OMS6:1;
    } bit;
} OCLS67STR;

__IO_EXTERN	  OCLS67STR	IO_OCLS67;
#define	_ocls67		(IO_OCLS67)
#define	OCLS67		(IO_OCLS67.byte)
#define	OCLS67_OLS7  	(IO_OCLS67.bit.OLS7)
#define	OCLS67_OLS6  	(IO_OCLS67.bit.OLS6)
#define	OCLS67_OMS7  	(IO_OCLS67.bit.OMS7)
#define	OCLS67_OMS6  	(IO_OCLS67.bit.OMS6)

#ifdef __IO_DEFINE
#pragma segment IO=IO_OCLS89, locate=0x7F
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	OLS9:1;
        __BYTE	OLS8:1;
        __BYTE	OMS9:1;
        __BYTE	OMS8:1;
    } bit;
} OCLS89STR;

__IO_EXTERN	  OCLS89STR	IO_OCLS89;
#define	_ocls89		(IO_OCLS89)
#define	OCLS89		(IO_OCLS89.byte)
#define	OCLS89_OLS9  	(IO_OCLS89.bit.OLS9)
#define	OCLS89_OLS8  	(IO_OCLS89.bit.OLS8)
#define	OCLS89_OMS9  	(IO_OCLS89.bit.OMS9)
#define	OCLS89_OMS8  	(IO_OCLS89.bit.OMS8)

#ifdef __IO_DEFINE
#pragma segment IO=IO_BT0, locate=0x80
#endif

typedef union
{

    struct
    {
        const __HWORD	TMR0;
        union
        {
            __HWORD	hword;
            struct
            {
                __HWORD	RESV20:1;
                __HWORD	CKS:3;
                __HWORD	RESV22:1;
                __HWORD	RESV23:1;
                __HWORD	EGS:2;
                __HWORD	T32:1;
                __HWORD	FMD:3;
                __HWORD	OSEL:1;
                __HWORD	MDSE:1;
                __HWORD	CTEN:1;
                __HWORD	STRG:1;
            } bit;
        } TMCR0;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV40:1;
                __BYTE	RESV41:1;
                __BYTE	RESV42:1;
                __BYTE	RESV43:1;
                __BYTE	RESV44:1;
                __BYTE	RESV45:1;
                __BYTE	RESV46:1;
                __BYTE	CKS3:1;
            } bit;
        } TMCR2;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV50:1;
                __BYTE	TGIE:1;
                __BYTE	RESV52:1;
                __BYTE	UDIE:1;
                __BYTE	RESV54:1;
                __BYTE	TGIR:1;
                __BYTE	RESV56:1;
                __BYTE	UDIR:1;
            } bit;
        } STC0;
        __HWORD	IO_RESV2;
        __HWORD	PCSR0;
        __HWORD	IO_RESV3;
    } RT0;

    struct
    {
        const __HWORD	TMR0;
        union
        {
            __HWORD	hword;
            struct
            {
                __HWORD	RESV20:1;
                __HWORD	CKS:3;
                __HWORD	RESV22:1;
                __HWORD	EGS:3;
                __HWORD	T32:1;
                __HWORD	FMD:3;
                __HWORD	RESV26:1;
                __HWORD	MDSE:1;
                __HWORD	CTEN:1;
                __HWORD	STRG:1;
            } bit;
        } TMCR0;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV40:1;
                __BYTE	RESV41:1;
                __BYTE	RESV42:1;
                __BYTE	RESV43:1;
                __BYTE	RESV44:1;
                __BYTE	RESV45:1;
                __BYTE	RESV46:1;
                __BYTE	CKS3:1;
            } bit;
        } TMCR2;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	SERR:1;
                __BYTE	EDIE:1;
                __BYTE	RESV52:1;
                __BYTE	OVIE:1;
                __BYTE	RESV54:1;
                __BYTE	EDIR:1;
                __BYTE	RESV56:1;
                __BYTE	OVIR:1;
            } bit;
        } STC0;
        __HWORD	IO_RESV2;
        __HWORD	IO_RESV3;
        __HWORD	DTBF0;
    } PWC0;

    struct
    {
        const __HWORD	TMR0;
        union
        {
            __HWORD	hword;
            struct
            {
                __HWORD	RESV20:1;
                __HWORD	CKS:3;
                __HWORD	RTGEN:1;
                __HWORD	PMSK:1;
                __HWORD	EGS:2;
                __HWORD	RESV25:1;
                __HWORD	FMD:3;
                __HWORD	OSEL:1;
                __HWORD	MDSE:1;
                __HWORD	CTEN:1;
                __HWORD	STRG:1;
            } bit;
        } TMCR0;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV40:1;
                __BYTE	RESV41:1;
                __BYTE	RESV42:1;
                __BYTE	RESV43:1;
                __BYTE	RESV44:1;
                __BYTE	RESV45:1;
                __BYTE	RESV46:1;
                __BYTE	CKS3:1;
            } bit;
        } TMCR2;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV50:1;
                __BYTE	TGIE:1;
                __BYTE	DTIE:1;
                __BYTE	UDIE:1;
                __BYTE	RESV54:1;
                __BYTE	TGIR:1;
                __BYTE	DTIR:1;
                __BYTE	UDIR:1;
            } bit;
        } STC0;
        __HWORD	IO_RESV2;
        __HWORD	PCSR0;
        __HWORD	PDUT0;
    } PWM0;

    struct
    {
        const __HWORD	TMR0;
        union
        {
            __HWORD	hword;
            struct
            {
                __HWORD	RESV20:1;
                __HWORD	CKS:3;
                __HWORD	RTGEN:1;
                __HWORD	PMSK:1;
                __HWORD	EGS:2;
                __HWORD	RESV25:1;
                __HWORD	FMD:3;
                __HWORD	OSEL:1;
                __HWORD	MDSE:1;
                __HWORD	CTEN:1;
                __HWORD	STRG:1;
            } bit;
        } TMCR0;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV40:1;
                __BYTE	RESV41:1;
                __BYTE	RESV42:1;
                __BYTE	RESV43:1;
                __BYTE	RESV44:1;
                __BYTE	RESV45:1;
                __BYTE	RESV46:1;
                __BYTE	CKS3:1;
            } bit;
        } TMCR2;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV50:1;
                __BYTE	TGIE:1;
                __BYTE	RESV52:1;
                __BYTE	UDIE:1;
                __BYTE	RESV54:1;
                __BYTE	TGIR:1;
                __BYTE	RESV56:1;
                __BYTE	UDIR:1;
            } bit;
        } STC0;
        __HWORD	IO_RESV2;
        __HWORD	PRLL0;
        __HWORD	PRLH0;
    } PPG0;

} BT0STR;

__IO_EXTERN	BT0STR	IO_BT0;

#define	BT0_RT0_TMR0	(IO_BT0.RT0.TMR0)
#define	BT0_RT0_TMCR0			(IO_BT0.RT0.TMCR0.hword)
#define	BT0_RT0_TMCR0_CKS    	(IO_BT0.RT0.TMCR0.bit.CKS)
#define	BT0_RT0_TMCR0_EGS    	(IO_BT0.RT0.TMCR0.bit.EGS)
#define	BT0_RT0_TMCR0_T32    	(IO_BT0.RT0.TMCR0.bit.T32)
#define	BT0_RT0_TMCR0_FMD    	(IO_BT0.RT0.TMCR0.bit.FMD)
#define	BT0_RT0_TMCR0_OSEL    	(IO_BT0.RT0.TMCR0.bit.OSEL)
#define	BT0_RT0_TMCR0_MDSE    	(IO_BT0.RT0.TMCR0.bit.MDSE)
#define	BT0_RT0_TMCR0_CTEN    	(IO_BT0.RT0.TMCR0.bit.CTEN)
#define	BT0_RT0_TMCR0_STRG    	(IO_BT0.RT0.TMCR0.bit.STRG)
#define	BT0_RT0_TMCR2			(IO_BT0.RT0.TMCR2.byte)
#define	BT0_RT0_TMCR2_CKS3    	(IO_BT0.RT0.TMCR2.bit.CKS3)
#define	BT0_RT0_STC0			(IO_BT0.RT0.STC0.byte)
#define	BT0_RT0_STC0_TGIE    	(IO_BT0.RT0.STC0.bit.TGIE)
#define	BT0_RT0_STC0_UDIE    	(IO_BT0.RT0.STC0.bit.UDIE)
#define	BT0_RT0_STC0_TGIR    	(IO_BT0.RT0.STC0.bit.TGIR)
#define	BT0_RT0_STC0_UDIR    	(IO_BT0.RT0.STC0.bit.UDIR)
#define	BT0_RT0_PCSR0	(IO_BT0.RT0.PCSR0)

#define	BT0_PWC0_TMR0	(IO_BT0.PWC0.TMR0)
#define	BT0_PWC0_TMCR0			(IO_BT0.PWC0.TMCR0.hword)
#define	BT0_PWC0_TMCR0_CKS    	(IO_BT0.PWC0.TMCR0.bit.CKS)
#define	BT0_PWC0_TMCR0_EGS    	(IO_BT0.PWC0.TMCR0.bit.EGS)
#define	BT0_PWC0_TMCR0_T32    	(IO_BT0.PWC0.TMCR0.bit.T32)
#define	BT0_PWC0_TMCR0_FMD    	(IO_BT0.PWC0.TMCR0.bit.FMD)
#define	BT0_PWC0_TMCR0_MDSE    	(IO_BT0.PWC0.TMCR0.bit.MDSE)
#define	BT0_PWC0_TMCR0_CTEN    	(IO_BT0.PWC0.TMCR0.bit.CTEN)
#define	BT0_PWC0_TMCR0_STRG    	(IO_BT0.PWC0.TMCR0.bit.STRG)
#define	BT0_PWC0_TMCR2			(IO_BT0.PWC0.TMCR2.byte)
#define	BT0_PWC0_TMCR2_CKS3    	(IO_BT0.PWC0.TMCR2.bit.CKS3)
#define	BT0_PWC0_STC0			(IO_BT0.PWC0.STC0.byte)
#define	BT0_PWC0_STC0_ERR    	(IO_BT0.PWC0.STC0.bit.ERR)
#define	BT0_PWC0_STC0_EDIE    	(IO_BT0.PWC0.STC0.bit.EDIE)
#define	BT0_PWC0_STC0_OVIE    	(IO_BT0.PWC0.STC0.bit.OVIE)
#define	BT0_PWC0_STC0_EDIR    	(IO_BT0.PWC0.STC0.bit.EDIR)
#define	BT0_PWC0_STC0_OVIR    	(IO_BT0.PWC0.STC0.bit.OVIR)
#define	BT0_PWC0_DTBF0	(IO_BT0.PWC0.DTBF0)

#define	BT0_PWM0_TMR0	(IO_BT0.PWM0.TMR0)
#define	BT0_PWM0_TMCR0			(IO_BT0.PWM0.TMCR0.hword)
#define	BT0_PWM0_TMCR0_CKS    	(IO_BT0.PWM0.TMCR0.bit.CKS)
#define	BT0_PWM0_TMCR0_RTGEN    	(IO_BT0.PWM0.TMCR0.bit.RTGEN)
#define	BT0_PWM0_TMCR0_PMSK    	(IO_BT0.PWM0.TMCR0.bit.PMSK)
#define	BT0_PWM0_TMCR0_EGS    	(IO_BT0.PWM0.TMCR0.bit.EGS)
#define	BT0_PWM0_TMCR0_FMD    	(IO_BT0.PWM0.TMCR0.bit.FMD)
#define	BT0_PWM0_TMCR0_OSEL    	(IO_BT0.PWM0.TMCR0.bit.OSEL)
#define	BT0_PWM0_TMCR0_MDSE    	(IO_BT0.PWM0.TMCR0.bit.MDSE)
#define	BT0_PWM0_TMCR0_CTEN    	(IO_BT0.PWM0.TMCR0.bit.CTEN)
#define	BT0_PWM0_TMCR0_STRG    	(IO_BT0.PWM0.TMCR0.bit.STRG)
#define	BT0_PWM0_TMCR2			(IO_BT0.PWM0.TMCR2.byte)
#define	BT0_PWM0_TMCR2_CKS3    	(IO_BT0.PWM0.TMCR2.bit.CKS3)
#define	BT0_PWM0_STC0			(IO_BT0.PWM0.STC0.byte)
#define	BT0_PWM0_STC0_TGIE    	(IO_BT0.PWM0.STC0.bit.TGIE)
#define	BT0_PWM0_STC0_DTIE    	(IO_BT0.PWM0.STC0.bit.DTIE)
#define	BT0_PWM0_STC0_UDIE    	(IO_BT0.PWM0.STC0.bit.UDIE)
#define	BT0_PWM0_STC0_TGIR    	(IO_BT0.PWM0.STC0.bit.TGIR)
#define	BT0_PWM0_STC0_DTIR    	(IO_BT0.PWM0.STC0.bit.DTIR)
#define	BT0_PWM0_STC0_UDIR    	(IO_BT0.PWM0.STC0.bit.UDIR)
#define	BT0_PWM0_PCSR0	(IO_BT0.PWM0.PCSR0)
#define	BT0_PWM0_PDUT0	(IO_BT0.PWM0.PDUT0)

#define	BT0_PPG0_TMR0	(IO_BT0.PPG0.TMR0)
#define	BT0_PPG0_TMCR0			(IO_BT0.PPG0.TMCR0.hword)
#define	BT0_PPG0_TMCR0_CKS    	(IO_BT0.PPG0.TMCR0.bit.CKS)
#define	BT0_PPG0_TMCR0_RTGEN    	(IO_BT0.PPG0.TMCR0.bit.RTGEN)
#define	BT0_PPG0_TMCR0_PMSK    	(IO_BT0.PPG0.TMCR0.bit.PMSK)
#define	BT0_PPG0_TMCR0_EGS    	(IO_BT0.PPG0.TMCR0.bit.EGS)
#define	BT0_PPG0_TMCR0_FMD    	(IO_BT0.PPG0.TMCR0.bit.FMD)
#define	BT0_PPG0_TMCR0_OSEL    	(IO_BT0.PPG0.TMCR0.bit.OSEL)
#define	BT0_PPG0_TMCR0_MDSE    	(IO_BT0.PPG0.TMCR0.bit.MDSE)
#define	BT0_PPG0_TMCR0_CTEN    	(IO_BT0.PPG0.TMCR0.bit.CTEN)
#define	BT0_PPG0_TMCR0_STRG    	(IO_BT0.PPG0.TMCR0.bit.STRG)
#define	BT0_PPG0_TMCR2			(IO_BT0.PPG0.TMCR2.byte)
#define	BT0_PPG0_TMCR2_CKS3    	(IO_BT0.PPG0.TMCR2.bit.CKS3)
#define	BT0_PPG0_STC0			(IO_BT0.PPG0.STC0.byte)
#define	BT0_PPG0_STC0_TGIE    	(IO_BT0.PPG0.STC0.bit.TGIE)
#define	BT0_PPG0_STC0_UDIE    	(IO_BT0.PPG0.STC0.bit.UDIE)
#define	BT0_PPG0_STC0_TGIR    	(IO_BT0.PPG0.STC0.bit.TGIR)
#define	BT0_PPG0_STC0_UDIR    	(IO_BT0.PPG0.STC0.bit.UDIR)
#define	BT0_PPG0_PRLL0	(IO_BT0.PPG0.PRLL0)
#define	BT0_PPG0_PRLH0	(IO_BT0.PPG0.PRLH0)

#ifdef __IO_DEFINE
#pragma segment IO=IO_BT1, locate=0x90
#endif

typedef union
{

    struct
    {
        const __HWORD	TMR1;
        union
        {
            __HWORD	hword;
            struct
            {
                __HWORD	RESV20:1;
                __HWORD	CKS:3;
                __HWORD	RESV22:1;
                __HWORD	RESV23:1;
                __HWORD	EGS:2;
                __HWORD	T32:1;
                __HWORD	FMD:3;
                __HWORD	OSEL:1;
                __HWORD	MDSE:1;
                __HWORD	CTEN:1;
                __HWORD	STRG:1;
            } bit;
        } TMCR1;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV40:1;
                __BYTE	RESV41:1;
                __BYTE	RESV42:1;
                __BYTE	RESV43:1;
                __BYTE	RESV44:1;
                __BYTE	RESV45:1;
                __BYTE	RESV46:1;
                __BYTE	CKS3:1;
            } bit;
        } TMCR2;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV50:1;
                __BYTE	TGIE:1;
                __BYTE	RESV52:1;
                __BYTE	UDIE:1;
                __BYTE	RESV54:1;
                __BYTE	TGIR:1;
                __BYTE	RESV56:1;
                __BYTE	UDIR:1;
            } bit;
        } STC1;
        __HWORD	IO_RESV2;
        __HWORD	PCSR1;
        __HWORD	IO_RESV3;
    } RT1;

    struct
    {
        const __HWORD	TMR1;
        union
        {
            __HWORD	hword;
            struct
            {
                __HWORD	RESV20:1;
                __HWORD	CKS:3;
                __HWORD	RESV22:1;
                __HWORD	EGS:3;
                __HWORD	T32:1;
                __HWORD	FMD:3;
                __HWORD	RESV26:1;
                __HWORD	MDSE:1;
                __HWORD	CTEN:1;
                __HWORD	STRG:1;
            } bit;
        } TMCR1;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV40:1;
                __BYTE	RESV41:1;
                __BYTE	RESV42:1;
                __BYTE	RESV43:1;
                __BYTE	RESV44:1;
                __BYTE	RESV45:1;
                __BYTE	RESV46:1;
                __BYTE	CKS3:1;
            } bit;
        } TMCR2;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	SERR:1;
                __BYTE	EDIE:1;
                __BYTE	RESV52:1;
                __BYTE	OVIE:1;
                __BYTE	RESV54:1;
                __BYTE	EDIR:1;
                __BYTE	RESV56:1;
                __BYTE	OVIR:1;
            } bit;
        } STC1;
        __HWORD	IO_RESV2;
        __HWORD	IO_RESV3;
        __HWORD	DTBF1;
    } PWC1;

    struct
    {
        const __HWORD	TMR1;
        union
        {
            __HWORD	hword;
            struct
            {
                __HWORD	RESV20:1;
                __HWORD	CKS:3;
                __HWORD	RTGEN:1;
                __HWORD	PMSK:1;
                __HWORD	EGS:2;
                __HWORD	RESV25:1;
                __HWORD	FMD:3;
                __HWORD	OSEL:1;
                __HWORD	MDSE:1;
                __HWORD	CTEN:1;
                __HWORD	STRG:1;
            } bit;
        } TMCR1;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV40:1;
                __BYTE	RESV41:1;
                __BYTE	RESV42:1;
                __BYTE	RESV43:1;
                __BYTE	RESV44:1;
                __BYTE	RESV45:1;
                __BYTE	RESV46:1;
                __BYTE	CKS3:1;
            } bit;
        } TMCR2;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV50:1;
                __BYTE	TGIE:1;
                __BYTE	DTIE:1;
                __BYTE	UDIE:1;
                __BYTE	RESV54:1;
                __BYTE	TGIR:1;
                __BYTE	DTIR:1;
                __BYTE	UDIR:1;
            } bit;
        } STC1;
        __HWORD	IO_RESV2;
        __HWORD	PCSR1;
        __HWORD	PDUT1;
    } PWM1;

    struct
    {
        const __HWORD	TMR1;
        union
        {
            __HWORD	hword;
            struct
            {
                __HWORD	RESV20:1;
                __HWORD	CKS:3;
                __HWORD	RTGEN:1;
                __HWORD	PMSK:1;
                __HWORD	EGS:2;
                __HWORD	RESV25:1;
                __HWORD	FMD:3;
                __HWORD	OSEL:1;
                __HWORD	MDSE:1;
                __HWORD	CTEN:1;
                __HWORD	STRG:1;
            } bit;
        } TMCR1;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV40:1;
                __BYTE	RESV41:1;
                __BYTE	RESV42:1;
                __BYTE	RESV43:1;
                __BYTE	RESV44:1;
                __BYTE	RESV45:1;
                __BYTE	RESV46:1;
                __BYTE	CKS3:1;
            } bit;
        } TMCR2;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV50:1;
                __BYTE	TGIE:1;
                __BYTE	RESV52:1;
                __BYTE	UDIE:1;
                __BYTE	RESV54:1;
                __BYTE	TGIR:1;
                __BYTE	RESV56:1;
                __BYTE	UDIR:1;
            } bit;
        } STC1;
        __HWORD	IO_RESV2;
        __HWORD	PRLL1;
        __HWORD	PRLH1;
    } PPG1;

} BT1STR;

__IO_EXTERN	BT1STR	IO_BT1;

#define	BT1_RT1_TMR1	(IO_BT1.RT1.TMR1)
#define	BT1_RT1_TMCR1			(IO_BT1.RT1.TMCR1.hword)
#define	BT1_RT1_TMCR1_CKS    	(IO_BT1.RT1.TMCR1.bit.CKS)
#define	BT1_RT1_TMCR1_EGS    	(IO_BT1.RT1.TMCR1.bit.EGS)
#define	BT1_RT1_TMCR1_T32    	(IO_BT1.RT1.TMCR1.bit.T32)
#define	BT1_RT1_TMCR1_FMD    	(IO_BT1.RT1.TMCR1.bit.FMD)
#define	BT1_RT1_TMCR1_OSEL    	(IO_BT1.RT1.TMCR1.bit.OSEL)
#define	BT1_RT1_TMCR1_MDSE    	(IO_BT1.RT1.TMCR1.bit.MDSE)
#define	BT1_RT1_TMCR1_CTEN    	(IO_BT1.RT1.TMCR1.bit.CTEN)
#define	BT1_RT1_TMCR1_STRG    	(IO_BT1.RT1.TMCR1.bit.STRG)
#define	BT1_RT1_TMCR2			(IO_BT1.RT1.TMCR2.byte)
#define	BT1_RT1_TMCR2_CKS3    	(IO_BT1.RT1.TMCR2.bit.CKS3)
#define	BT1_RT1_STC1			(IO_BT1.RT1.STC1.byte)
#define	BT1_RT1_STC1_TGIE    	(IO_BT1.RT1.STC1.bit.TGIE)
#define	BT1_RT1_STC1_UDIE    	(IO_BT1.RT1.STC1.bit.UDIE)
#define	BT1_RT1_STC1_TGIR    	(IO_BT1.RT1.STC1.bit.TGIR)
#define	BT1_RT1_STC1_UDIR    	(IO_BT1.RT1.STC1.bit.UDIR)
#define	BT1_RT1_PCSR1	(IO_BT1.RT1.PCSR1)

#define	BT1_PWC1_TMR1	(IO_BT1.PWC1.TMR1)
#define	BT1_PWC1_TMCR1			(IO_BT1.PWC1.TMCR1.hword)
#define	BT1_PWC1_TMCR1_CKS    	(IO_BT1.PWC1.TMCR1.bit.CKS)
#define	BT1_PWC1_TMCR1_EGS    	(IO_BT1.PWC1.TMCR1.bit.EGS)
#define	BT1_PWC1_TMCR1_T32    	(IO_BT1.PWC1.TMCR1.bit.T32)
#define	BT1_PWC1_TMCR1_FMD    	(IO_BT1.PWC1.TMCR1.bit.FMD)
#define	BT1_PWC1_TMCR1_MDSE    	(IO_BT1.PWC1.TMCR1.bit.MDSE)
#define	BT1_PWC1_TMCR1_CTEN    	(IO_BT1.PWC1.TMCR1.bit.CTEN)
#define	BT1_PWC1_TMCR1_STRG    	(IO_BT1.PWC1.TMCR1.bit.STRG)
#define	BT1_PWC1_TMCR2			(IO_BT1.PWC1.TMCR2.byte)
#define	BT1_PWC1_TMCR2_CKS3    	(IO_BT1.PWC1.TMCR2.bit.CKS3)
#define	BT1_PWC1_STC1			(IO_BT1.PWC1.STC1.byte)
#define	BT1_PWC1_STC1_ERR    	(IO_BT1.PWC1.STC1.bit.ERR)
#define	BT1_PWC1_STC1_EDIE    	(IO_BT1.PWC1.STC1.bit.EDIE)
#define	BT1_PWC1_STC1_OVIE    	(IO_BT1.PWC1.STC1.bit.OVIE)
#define	BT1_PWC1_STC1_EDIR    	(IO_BT1.PWC1.STC1.bit.EDIR)
#define	BT1_PWC1_STC1_OVIR    	(IO_BT1.PWC1.STC1.bit.OVIR)
#define	BT1_PWC1_DTBF1	(IO_BT1.PWC1.DTBF1)

#define	BT1_PWM1_TMR1	(IO_BT1.PWM1.TMR1)
#define	BT1_PWM1_TMCR1			(IO_BT1.PWM1.TMCR1.hword)
#define	BT1_PWM1_TMCR1_CKS    	(IO_BT1.PWM1.TMCR1.bit.CKS)
#define	BT1_PWM1_TMCR1_RTGEN    	(IO_BT1.PWM1.TMCR1.bit.RTGEN)
#define	BT1_PWM1_TMCR1_PMSK    	(IO_BT1.PWM1.TMCR1.bit.PMSK)
#define	BT1_PWM1_TMCR1_EGS    	(IO_BT1.PWM1.TMCR1.bit.EGS)
#define	BT1_PWM1_TMCR1_FMD    	(IO_BT1.PWM1.TMCR1.bit.FMD)
#define	BT1_PWM1_TMCR1_OSEL    	(IO_BT1.PWM1.TMCR1.bit.OSEL)
#define	BT1_PWM1_TMCR1_MDSE    	(IO_BT1.PWM1.TMCR1.bit.MDSE)
#define	BT1_PWM1_TMCR1_CTEN    	(IO_BT1.PWM1.TMCR1.bit.CTEN)
#define	BT1_PWM1_TMCR1_STRG    	(IO_BT1.PWM1.TMCR1.bit.STRG)
#define	BT1_PWM1_TMCR2			(IO_BT1.PWM1.TMCR2.byte)
#define	BT1_PWM1_TMCR2_CKS3    	(IO_BT1.PWM1.TMCR2.bit.CKS3)
#define	BT1_PWM1_STC1			(IO_BT1.PWM1.STC1.byte)
#define	BT1_PWM1_STC1_TGIE    	(IO_BT1.PWM1.STC1.bit.TGIE)
#define	BT1_PWM1_STC1_DTIE    	(IO_BT1.PWM1.STC1.bit.DTIE)
#define	BT1_PWM1_STC1_UDIE    	(IO_BT1.PWM1.STC1.bit.UDIE)
#define	BT1_PWM1_STC1_TGIR    	(IO_BT1.PWM1.STC1.bit.TGIR)
#define	BT1_PWM1_STC1_DTIR    	(IO_BT1.PWM1.STC1.bit.DTIR)
#define	BT1_PWM1_STC1_UDIR    	(IO_BT1.PWM1.STC1.bit.UDIR)
#define	BT1_PWM1_PCSR1	(IO_BT1.PWM1.PCSR1)
#define	BT1_PWM1_PDUT1	(IO_BT1.PWM1.PDUT1)

#define	BT1_PPG1_TMR1	(IO_BT1.PPG1.TMR1)
#define	BT1_PPG1_TMCR1			(IO_BT1.PPG1.TMCR1.hword)
#define	BT1_PPG1_TMCR1_CKS    	(IO_BT1.PPG1.TMCR1.bit.CKS)
#define	BT1_PPG1_TMCR1_RTGEN    	(IO_BT1.PPG1.TMCR1.bit.RTGEN)
#define	BT1_PPG1_TMCR1_PMSK    	(IO_BT1.PPG1.TMCR1.bit.PMSK)
#define	BT1_PPG1_TMCR1_EGS    	(IO_BT1.PPG1.TMCR1.bit.EGS)
#define	BT1_PPG1_TMCR1_FMD    	(IO_BT1.PPG1.TMCR1.bit.FMD)
#define	BT1_PPG1_TMCR1_OSEL    	(IO_BT1.PPG1.TMCR1.bit.OSEL)
#define	BT1_PPG1_TMCR1_MDSE    	(IO_BT1.PPG1.TMCR1.bit.MDSE)
#define	BT1_PPG1_TMCR1_CTEN    	(IO_BT1.PPG1.TMCR1.bit.CTEN)
#define	BT1_PPG1_TMCR1_STRG    	(IO_BT1.PPG1.TMCR1.bit.STRG)
#define	BT1_PPG1_TMCR2			(IO_BT1.PPG1.TMCR2.byte)
#define	BT1_PPG1_TMCR2_CKS3    	(IO_BT1.PPG1.TMCR2.bit.CKS3)
#define	BT1_PPG1_STC1			(IO_BT1.PPG1.STC1.byte)
#define	BT1_PPG1_STC1_TGIE    	(IO_BT1.PPG1.STC1.bit.TGIE)
#define	BT1_PPG1_STC1_UDIE    	(IO_BT1.PPG1.STC1.bit.UDIE)
#define	BT1_PPG1_STC1_TGIR    	(IO_BT1.PPG1.STC1.bit.TGIR)
#define	BT1_PPG1_STC1_UDIR    	(IO_BT1.PPG1.STC1.bit.UDIR)
#define	BT1_PPG1_PRLL1	(IO_BT1.PPG1.PRLL1)
#define	BT1_PPG1_PRLH1	(IO_BT1.PPG1.PRLH1)

#ifdef __IO_DEFINE
#pragma segment IO=IO_BTSEL01, locate=0x9C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	SEL01:4;
    } bit;
} BTSEL01STR;

__IO_EXTERN	  BTSEL01STR	IO_BTSEL01;
#define	_btsel01		(IO_BTSEL01)
#define	BTSEL01		(IO_BTSEL01.byte)
#define	BTSEL01_SEL01  	(IO_BTSEL01.bit.SEL01)

#ifdef __IO_DEFINE
#pragma segment IO=IO_BTSSSR, locate=0x9E
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __BYTE	BTSSSRH;
        __BYTE	BTSSSRL;
    } byte;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
        __HWORD	SSSR1:1;
        __HWORD	SSSR0:1;
    } bit;
} BTSSSRSTR;

__IO_EXTERN	  BTSSSRSTR	IO_BTSSSR;
#define	_btsssr		(IO_BTSSSR)
#define	BTSSSR		(IO_BTSSSR.hword)
#define	BTSSSR_BTSSSRH	(IO_BTSSSR.byte.BTSSSRH)
#define	BTSSSR_BTSSSRL	(IO_BTSSSR.byte.BTSSSRL)
#define	BTSSSR_SSSR1  	(IO_BTSSSR.bit.SSSR1)
#define	BTSSSR_SSSR0  	(IO_BTSSSR.bit.SSSR0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMRLRA1,attr=IO,locate=0x100
#endif

__IO_EXTENDED	__HWORD	IO_TMRLRA1;
#define	_tmrlra1		(IO_TMRLRA1)
#define	TMRLRA1	(_tmrlra1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMR1,attr=IO,locate=0x102
#endif

__IO_EXTENDED	const __HWORD	IO_TMR1;
#define	_tmr1		(IO_TMR1)
#define	TMR1_	(_tmr1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMRLRB1,attr=IO,locate=0x104
#endif

__IO_EXTENDED	__HWORD	IO_TMRLRB1;
#define	_tmrlrb1		(IO_TMRLRB1)
#define	TMRLRB1	(_tmrlrb1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMCSR1,attr=IO,locate=0x106
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __BYTE	TMCSR1H;
        __BYTE	TMCSR1L;
    } byte;
    struct
    {
        __HWORD	MOD:2;
        __HWORD	TRGM:2;
        __HWORD	CSL:3;
        __HWORD	GATE:1;
        __HWORD	EF:1;
        __HWORD	RESV5:1;
        __HWORD	OUTL:1;
        __HWORD	RELD:1;
        __HWORD	INTE:1;
        __HWORD	UF:1;
        __HWORD	CNTE:1;
        __HWORD	TRG:1;
    } bit;
} TMCSR1STR;

__IO_EXTENDED	  TMCSR1STR	IO_TMCSR1;
#define	_tmcsr1		(IO_TMCSR1)
#define	TMCSR1		(IO_TMCSR1.hword)
#define	TMCSR1_TMCSR1H	(IO_TMCSR1.byte.TMCSR1H)
#define	TMCSR1_TMCSR1L	(IO_TMCSR1.byte.TMCSR1L)
#define	TMCSR1_MOD  	(IO_TMCSR1.bit.MOD)
#define	TMCSR1_TRGM  	(IO_TMCSR1.bit.TRGM)
#define	TMCSR1_CSL  	(IO_TMCSR1.bit.CSL)
#define	TMCSR1_GATE  	(IO_TMCSR1.bit.GATE)
#define	TMCSR1_EF  	(IO_TMCSR1.bit.EF)
#define	TMCSR1_OUTL  	(IO_TMCSR1.bit.OUTL)
#define	TMCSR1_RELD  	(IO_TMCSR1.bit.RELD)
#define	TMCSR1_INTE  	(IO_TMCSR1.bit.INTE)
#define	TMCSR1_UF  	(IO_TMCSR1.bit.UF)
#define	TMCSR1_CNTE  	(IO_TMCSR1.bit.CNTE)
#define	TMCSR1_TRG  	(IO_TMCSR1.bit.TRG)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMRLRA2,attr=IO,locate=0x108
#endif

__IO_EXTENDED	__HWORD	IO_TMRLRA2;
#define	_tmrlra2		(IO_TMRLRA2)
#define	TMRLRA2	(_tmrlra2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMR2,attr=IO,locate=0x10A
#endif

__IO_EXTENDED	const __HWORD	IO_TMR2;
#define	_tmr2		(IO_TMR2)
#define	TMR2_	(_tmr2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMRLRB2,attr=IO,locate=0x10C
#endif

__IO_EXTENDED	__HWORD	IO_TMRLRB2;
#define	_tmrlrb2		(IO_TMRLRB2)
#define	TMRLRB2	(_tmrlrb2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMCSR2,attr=IO,locate=0x10E
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __BYTE	TMCSR2H;
        __BYTE	TMCSR2L;
    } byte;
    struct
    {
        __HWORD	MOD:2;
        __HWORD	TRGM:2;
        __HWORD	CSL:3;
        __HWORD	GATE:1;
        __HWORD	EF:1;
        __HWORD	RESV5:1;
        __HWORD	OUTL:1;
        __HWORD	RELD:1;
        __HWORD	INTE:1;
        __HWORD	UF:1;
        __HWORD	CNTE:1;
        __HWORD	TRG:1;
    } bit;
} TMCSR2STR;

__IO_EXTENDED	  TMCSR2STR	IO_TMCSR2;
#define	_tmcsr2		(IO_TMCSR2)
#define	TMCSR2		(IO_TMCSR2.hword)
#define	TMCSR2_TMCSR2H	(IO_TMCSR2.byte.TMCSR2H)
#define	TMCSR2_TMCSR2L	(IO_TMCSR2.byte.TMCSR2L)
#define	TMCSR2_MOD  	(IO_TMCSR2.bit.MOD)
#define	TMCSR2_TRGM  	(IO_TMCSR2.bit.TRGM)
#define	TMCSR2_CSL  	(IO_TMCSR2.bit.CSL)
#define	TMCSR2_GATE  	(IO_TMCSR2.bit.GATE)
#define	TMCSR2_EF  	(IO_TMCSR2.bit.EF)
#define	TMCSR2_OUTL  	(IO_TMCSR2.bit.OUTL)
#define	TMCSR2_RELD  	(IO_TMCSR2.bit.RELD)
#define	TMCSR2_INTE  	(IO_TMCSR2.bit.INTE)
#define	TMCSR2_UF  	(IO_TMCSR2.bit.UF)
#define	TMCSR2_CNTE  	(IO_TMCSR2.bit.CNTE)
#define	TMCSR2_TRG  	(IO_TMCSR2.bit.TRG)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMRLRA3,attr=IO,locate=0x110
#endif

__IO_EXTENDED	__HWORD	IO_TMRLRA3;
#define	_tmrlra3		(IO_TMRLRA3)
#define	TMRLRA3	(_tmrlra3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMR3,attr=IO,locate=0x112
#endif

__IO_EXTENDED	const __HWORD	IO_TMR3;
#define	_tmr3		(IO_TMR3)
#define	TMR3_	(_tmr3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMRLRB3,attr=IO,locate=0x114
#endif

__IO_EXTENDED	__HWORD	IO_TMRLRB3;
#define	_tmrlrb3		(IO_TMRLRB3)
#define	TMRLRB3	(_tmrlrb3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMCSR3,attr=IO,locate=0x116
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __BYTE	TMCSR3H;
        __BYTE	TMCSR3L;
    } byte;
    struct
    {
        __HWORD	MOD:2;
        __HWORD	TRGM:2;
        __HWORD	CSL:3;
        __HWORD	GATE:1;
        __HWORD	EF:1;
        __HWORD	RESV5:1;
        __HWORD	OUTL:1;
        __HWORD	RELD:1;
        __HWORD	INTE:1;
        __HWORD	UF:1;
        __HWORD	CNTE:1;
        __HWORD	TRG:1;
    } bit;
} TMCSR3STR;

__IO_EXTENDED	  TMCSR3STR	IO_TMCSR3;
#define	_tmcsr3		(IO_TMCSR3)
#define	TMCSR3		(IO_TMCSR3.hword)
#define	TMCSR3_TMCSR3H	(IO_TMCSR3.byte.TMCSR3H)
#define	TMCSR3_TMCSR3L	(IO_TMCSR3.byte.TMCSR3L)
#define	TMCSR3_MOD  	(IO_TMCSR3.bit.MOD)
#define	TMCSR3_TRGM  	(IO_TMCSR3.bit.TRGM)
#define	TMCSR3_CSL  	(IO_TMCSR3.bit.CSL)
#define	TMCSR3_GATE  	(IO_TMCSR3.bit.GATE)
#define	TMCSR3_EF  	(IO_TMCSR3.bit.EF)
#define	TMCSR3_OUTL  	(IO_TMCSR3.bit.OUTL)
#define	TMCSR3_RELD  	(IO_TMCSR3.bit.RELD)
#define	TMCSR3_INTE  	(IO_TMCSR3.bit.INTE)
#define	TMCSR3_UF  	(IO_TMCSR3.bit.UF)
#define	TMCSR3_CNTE  	(IO_TMCSR3.bit.CNTE)
#define	TMCSR3_TRG  	(IO_TMCSR3.bit.TRG)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MSCY4,attr=IO,locate=0x118
#endif

__IO_EXTENDED	const __WORD	IO_MSCY4;
#define	_mscy4		(IO_MSCY4)
#define	MSCY4	(_mscy4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MSCY5,attr=IO,locate=0x11C
#endif

__IO_EXTENDED	const __WORD	IO_MSCY5;
#define	_mscy5		(IO_MSCY5)
#define	MSCY5	(_mscy5)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCCP6,attr=IO,locate=0x120
#endif

__IO_EXTENDED	__WORD	IO_OCCP6;
#define	_occp6		(IO_OCCP6)
#define	OCCP6	(_occp6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCCP7,attr=IO,locate=0x124
#endif

__IO_EXTENDED	__WORD	IO_OCCP7;
#define	_occp7		(IO_OCCP7)
#define	OCCP7	(_occp7)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCS67,attr=IO,locate=0x12A
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __BYTE	OCSH67;
        __BYTE	OCSL67;
    } byte;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	CMOD:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	OTD7:1;
        __HWORD	OTD6:1;
        __HWORD	IOP7:1;
        __HWORD	IOP6:1;
        __HWORD	IOE7:1;
        __HWORD	IOE6:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
        __HWORD	CST7:1;
        __HWORD	CST6:1;
    } bit;
} OCS67STR;

__IO_EXTENDED	  OCS67STR	IO_OCS67;
#define	_ocs67		(IO_OCS67)
#define	OCS67		(IO_OCS67.hword)
#define	OCS67_OCSH67	(IO_OCS67.byte.OCSH67)
#define	OCS67_OCSL67	(IO_OCS67.byte.OCSL67)
#define	OCS67_CMOD  	(IO_OCS67.bit.CMOD)
#define	OCS67_OTD7  	(IO_OCS67.bit.OTD7)
#define	OCS67_OTD6  	(IO_OCS67.bit.OTD6)
#define	OCS67_IOP7  	(IO_OCS67.bit.IOP7)
#define	OCS67_IOP6  	(IO_OCS67.bit.IOP6)
#define	OCS67_IOE7  	(IO_OCS67.bit.IOE7)
#define	OCS67_IOE6  	(IO_OCS67.bit.IOE6)
#define	OCS67_CST7  	(IO_OCS67.bit.CST7)
#define	OCS67_CST6  	(IO_OCS67.bit.CST6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCCP8,attr=IO,locate=0x12C
#endif

__IO_EXTENDED	__WORD	IO_OCCP8;
#define	_occp8		(IO_OCCP8)
#define	OCCP8	(_occp8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCCP9,attr=IO,locate=0x130
#endif

__IO_EXTENDED	__WORD	IO_OCCP9;
#define	_occp9		(IO_OCCP9)
#define	OCCP9	(_occp9)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCS89,attr=IO,locate=0x136
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __BYTE	OCSH89;
        __BYTE	OCSL89;
    } byte;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	CMOD:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	OTD9:1;
        __HWORD	OTD8:1;
        __HWORD	IOP9:1;
        __HWORD	IOP8:1;
        __HWORD	IOE9:1;
        __HWORD	IOE8:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
        __HWORD	CST9:1;
        __HWORD	CST8:1;
    } bit;
} OCS89STR;

__IO_EXTENDED	  OCS89STR	IO_OCS89;
#define	_ocs89		(IO_OCS89)
#define	OCS89		(IO_OCS89.hword)
#define	OCS89_OCSH89	(IO_OCS89.byte.OCSH89)
#define	OCS89_OCSL89	(IO_OCS89.byte.OCSL89)
#define	OCS89_CMOD  	(IO_OCS89.bit.CMOD)
#define	OCS89_OTD9  	(IO_OCS89.bit.OTD9)
#define	OCS89_OTD8  	(IO_OCS89.bit.OTD8)
#define	OCS89_IOP9  	(IO_OCS89.bit.IOP9)
#define	OCS89_IOP8  	(IO_OCS89.bit.IOP8)
#define	OCS89_IOE9  	(IO_OCS89.bit.IOE9)
#define	OCS89_IOE8  	(IO_OCS89.bit.IOE8)
#define	OCS89_CST9  	(IO_OCS89.bit.CST9)
#define	OCS89_CST8  	(IO_OCS89.bit.CST8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR64,attr=IO,locate=0x1B8
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	SOT11E:1;
        __BYTE	SCK11E:1;
        __BYTE	RESV7:1;
    } bit;
} EPFR64STR;

__IO_EXTENDED	  EPFR64STR	IO_EPFR64;
#define	_epfr64		(IO_EPFR64)
#define	EPFR64		(IO_EPFR64.byte)
#define	EPFR64_SOT11E  	(IO_EPFR64.bit.SOT11E)
#define	EPFR64_SCK11E  	(IO_EPFR64.bit.SCK11E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR65,attr=IO,locate=0x1B9
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	SCSO40E:2;
        __BYTE	SCSO3E:2;
        __BYTE	RESV2:1;
        __BYTE	SCSO2E:1;
        __BYTE	SCSO1E:2;
    } bit;
} EPFR65STR;

__IO_EXTENDED	  EPFR65STR	IO_EPFR65;
#define	_epfr65		(IO_EPFR65)
#define	EPFR65		(IO_EPFR65.byte)
#define	EPFR65_SCSO40E  	(IO_EPFR65.bit.SCSO40E)
#define	EPFR65_SCSO3E  	(IO_EPFR65.bit.SCSO3E)
#define	EPFR65_SCSO2E  	(IO_EPFR65.bit.SCSO2E)
#define	EPFR65_SCSO1E  	(IO_EPFR65.bit.SCSO1E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR66,attr=IO,locate=0x1BA
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	SCSO43E:2;
        __BYTE	SCSO42E:2;
        __BYTE	SCSO41E:2;
    } bit;
} EPFR66STR;

__IO_EXTENDED	  EPFR66STR	IO_EPFR66;
#define	_epfr66		(IO_EPFR66)
#define	EPFR66		(IO_EPFR66.byte)
#define	EPFR66_SCSO43E  	(IO_EPFR66.bit.SCSO43E)
#define	EPFR66_SCSO42E  	(IO_EPFR66.bit.SCSO42E)
#define	EPFR66_SCSO41E  	(IO_EPFR66.bit.SCSO41E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR67,attr=IO,locate=0x1BB
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	SCSO53E:1;
        __BYTE	SCSO52E:1;
        __BYTE	SCSO51E:1;
        __BYTE	SCSO50E:1;
    } bit;
} EPFR67STR;

__IO_EXTENDED	  EPFR67STR	IO_EPFR67;
#define	_epfr67		(IO_EPFR67)
#define	EPFR67		(IO_EPFR67.byte)
#define	EPFR67_SCSO53E  	(IO_EPFR67.bit.SCSO53E)
#define	EPFR67_SCSO52E  	(IO_EPFR67.bit.SCSO52E)
#define	EPFR67_SCSO51E  	(IO_EPFR67.bit.SCSO51E)
#define	EPFR67_SCSO50E  	(IO_EPFR67.bit.SCSO50E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR68,attr=IO,locate=0x1BC
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	SCSO63E:1;
        __BYTE	SCSO62E:1;
        __BYTE	SCSO61E:1;
        __BYTE	SCSO60E:1;
    } bit;
} EPFR68STR;

__IO_EXTENDED	  EPFR68STR	IO_EPFR68;
#define	_epfr68		(IO_EPFR68)
#define	EPFR68		(IO_EPFR68.byte)
#define	EPFR68_SCSO63E  	(IO_EPFR68.bit.SCSO63E)
#define	EPFR68_SCSO62E  	(IO_EPFR68.bit.SCSO62E)
#define	EPFR68_SCSO61E  	(IO_EPFR68.bit.SCSO61E)
#define	EPFR68_SCSO60E  	(IO_EPFR68.bit.SCSO60E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR69,attr=IO,locate=0x1BD
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	SCSO73E:1;
        __BYTE	SCSO72E:1;
        __BYTE	SCSO71E:1;
        __BYTE	SCSO70E:1;
    } bit;
} EPFR69STR;

__IO_EXTENDED	  EPFR69STR	IO_EPFR69;
#define	_epfr69		(IO_EPFR69)
#define	EPFR69		(IO_EPFR69.byte)
#define	EPFR69_SCSO73E  	(IO_EPFR69.bit.SCSO73E)
#define	EPFR69_SCSO72E  	(IO_EPFR69.bit.SCSO72E)
#define	EPFR69_SCSO71E  	(IO_EPFR69.bit.SCSO71E)
#define	EPFR69_SCSO70E  	(IO_EPFR69.bit.SCSO70E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR70,attr=IO,locate=0x1BE
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	SCSO11E:1;
        __BYTE	SCSO10E:2;
        __BYTE	SCSO9E:1;
        __BYTE	SCSO8E:1;
    } bit;
} EPFR70STR;

__IO_EXTENDED	  EPFR70STR	IO_EPFR70;
#define	_epfr70		(IO_EPFR70)
#define	EPFR70		(IO_EPFR70.byte)
#define	EPFR70_SCSO11E  	(IO_EPFR70.bit.SCSO11E)
#define	EPFR70_SCSO10E  	(IO_EPFR70.bit.SCSO10E)
#define	EPFR70_SCSO9E  	(IO_EPFR70.bit.SCSO9E)
#define	EPFR70_SCSO8E  	(IO_EPFR70.bit.SCSO8E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR71,attr=IO,locate=0x1BF
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	PPG21E:1;
        __BYTE	RESV2:1;
        __BYTE	PPG20E:1;
        __BYTE	RESV4:1;
        __BYTE	PPG19E:1;
        __BYTE	RESV6:1;
        __BYTE	PPG18E:1;
    } bit;
} EPFR71STR;

__IO_EXTENDED	  EPFR71STR	IO_EPFR71;
#define	_epfr71		(IO_EPFR71)
#define	EPFR71		(IO_EPFR71.byte)
#define	EPFR71_PPG21E  	(IO_EPFR71.bit.PPG21E)
#define	EPFR71_PPG20E  	(IO_EPFR71.bit.PPG20E)
#define	EPFR71_PPG19E  	(IO_EPFR71.bit.PPG19E)
#define	EPFR71_PPG18E  	(IO_EPFR71.bit.PPG18E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR72,attr=IO,locate=0x1C0
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	PPG25E:2;
        __BYTE	PPG24E:2;
        __BYTE	PPG23E:2;
        __BYTE	RESV3:1;
        __BYTE	PPG22E:1;
    } bit;
} EPFR72STR;

__IO_EXTENDED	  EPFR72STR	IO_EPFR72;
#define	_epfr72		(IO_EPFR72)
#define	EPFR72		(IO_EPFR72.byte)
#define	EPFR72_PPG25E  	(IO_EPFR72.bit.PPG25E)
#define	EPFR72_PPG24E  	(IO_EPFR72.bit.PPG24E)
#define	EPFR72_PPG23E  	(IO_EPFR72.bit.PPG23E)
#define	EPFR72_PPG22E  	(IO_EPFR72.bit.PPG22E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR73,attr=IO,locate=0x1C1
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	PPG29E:2;
        __BYTE	PPG28E:2;
        __BYTE	PPG27E:2;
        __BYTE	PPG26E:2;
    } bit;
} EPFR73STR;

__IO_EXTENDED	  EPFR73STR	IO_EPFR73;
#define	_epfr73		(IO_EPFR73)
#define	EPFR73		(IO_EPFR73.byte)
#define	EPFR73_PPG29E  	(IO_EPFR73.bit.PPG29E)
#define	EPFR73_PPG28E  	(IO_EPFR73.bit.PPG28E)
#define	EPFR73_PPG27E  	(IO_EPFR73.bit.PPG27E)
#define	EPFR73_PPG26E  	(IO_EPFR73.bit.PPG26E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR74,attr=IO,locate=0x1C2
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	PPG33E:2;
        __BYTE	PPG32E:2;
        __BYTE	PPG31E:2;
        __BYTE	PPG30E:2;
    } bit;
} EPFR74STR;

__IO_EXTENDED	  EPFR74STR	IO_EPFR74;
#define	_epfr74		(IO_EPFR74)
#define	EPFR74		(IO_EPFR74.byte)
#define	EPFR74_PPG33E  	(IO_EPFR74.bit.PPG33E)
#define	EPFR74_PPG32E  	(IO_EPFR74.bit.PPG32E)
#define	EPFR74_PPG31E  	(IO_EPFR74.bit.PPG31E)
#define	EPFR74_PPG30E  	(IO_EPFR74.bit.PPG30E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR75,attr=IO,locate=0x1C3
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	PPG37E:2;
        __BYTE	PPG36E:2;
        __BYTE	PPG35E:2;
        __BYTE	PPG34E:2;
    } bit;
} EPFR75STR;

__IO_EXTENDED	  EPFR75STR	IO_EPFR75;
#define	_epfr75		(IO_EPFR75)
#define	EPFR75		(IO_EPFR75.byte)
#define	EPFR75_PPG37E  	(IO_EPFR75.bit.PPG37E)
#define	EPFR75_PPG36E  	(IO_EPFR75.bit.PPG36E)
#define	EPFR75_PPG35E  	(IO_EPFR75.bit.PPG35E)
#define	EPFR75_PPG34E  	(IO_EPFR75.bit.PPG34E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR76,attr=IO,locate=0x1C4
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	PPG41E:2;
        __BYTE	PPG40E:2;
        __BYTE	PPG39E:2;
        __BYTE	PPG38E:2;
    } bit;
} EPFR76STR;

__IO_EXTENDED	  EPFR76STR	IO_EPFR76;
#define	_epfr76		(IO_EPFR76)
#define	EPFR76		(IO_EPFR76.byte)
#define	EPFR76_PPG41E  	(IO_EPFR76.bit.PPG41E)
#define	EPFR76_PPG40E  	(IO_EPFR76.bit.PPG40E)
#define	EPFR76_PPG39E  	(IO_EPFR76.bit.PPG39E)
#define	EPFR76_PPG38E  	(IO_EPFR76.bit.PPG38E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR77,attr=IO,locate=0x1C5
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	PPG45E:1;
        __BYTE	PPG44E:2;
        __BYTE	PPG43E:2;
        __BYTE	PPG42E:1;
    } bit;
} EPFR77STR;

__IO_EXTENDED	  EPFR77STR	IO_EPFR77;
#define	_epfr77		(IO_EPFR77)
#define	EPFR77		(IO_EPFR77.byte)
#define	EPFR77_PPG45E  	(IO_EPFR77.bit.PPG45E)
#define	EPFR77_PPG44E  	(IO_EPFR77.bit.PPG44E)
#define	EPFR77_PPG43E  	(IO_EPFR77.bit.PPG43E)
#define	EPFR77_PPG42E  	(IO_EPFR77.bit.PPG42E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR78,attr=IO,locate=0x1C6
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	PPG47E:1;
        __BYTE	PPG46E:1;
    } bit;
} EPFR78STR;

__IO_EXTENDED	  EPFR78STR	IO_EPFR78;
#define	_epfr78		(IO_EPFR78)
#define	EPFR78		(IO_EPFR78.byte)
#define	EPFR78_PPG47E  	(IO_EPFR78.bit.PPG47E)
#define	EPFR78_PPG46E  	(IO_EPFR78.bit.PPG46E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR79,attr=IO,locate=0x1C7
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	TRG5E:2;
        __BYTE	TRG4E:1;
        __BYTE	TRG3E:1;
        __BYTE	TRG2E:1;
        __BYTE	TRG1E:1;
        __BYTE	TRG0E:2;
    } bit;
} EPFR79STR;

__IO_EXTENDED	  EPFR79STR	IO_EPFR79;
#define	_epfr79		(IO_EPFR79)
#define	EPFR79		(IO_EPFR79.byte)
#define	EPFR79_TRG5E  	(IO_EPFR79.bit.TRG5E)
#define	EPFR79_TRG4E  	(IO_EPFR79.bit.TRG4E)
#define	EPFR79_TRG3E  	(IO_EPFR79.bit.TRG3E)
#define	EPFR79_TRG2E  	(IO_EPFR79.bit.TRG2E)
#define	EPFR79_TRG1E  	(IO_EPFR79.bit.TRG1E)
#define	EPFR79_TRG0E  	(IO_EPFR79.bit.TRG0E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR80,attr=IO,locate=0x1C8
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	TRG9E:1;
        __BYTE	TRG8E:1;
        __BYTE	TRG7E:1;
        __BYTE	TRG6E:2;
    } bit;
} EPFR80STR;

__IO_EXTENDED	  EPFR80STR	IO_EPFR80;
#define	_epfr80		(IO_EPFR80)
#define	EPFR80		(IO_EPFR80.byte)
#define	EPFR80_TRG9E  	(IO_EPFR80.bit.TRG9E)
#define	EPFR80_TRG8E  	(IO_EPFR80.bit.TRG8E)
#define	EPFR80_TRG7E  	(IO_EPFR80.bit.TRG7E)
#define	EPFR80_TRG6E  	(IO_EPFR80.bit.TRG6E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR81,attr=IO,locate=0x1C9
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	OCU7E:2;
        __BYTE	OCU6E:2;
        __BYTE	OCU5E:2;
        __BYTE	OCU4E:2;
    } bit;
} EPFR81STR;

__IO_EXTENDED	  EPFR81STR	IO_EPFR81;
#define	_epfr81		(IO_EPFR81)
#define	EPFR81		(IO_EPFR81.byte)
#define	EPFR81_OCU7E  	(IO_EPFR81.bit.OCU7E)
#define	EPFR81_OCU6E  	(IO_EPFR81.bit.OCU6E)
#define	EPFR81_OCU5E  	(IO_EPFR81.bit.OCU5E)
#define	EPFR81_OCU4E  	(IO_EPFR81.bit.OCU4E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR82,attr=IO,locate=0x1CA
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	OCU11E:2;
        __BYTE	OCU10E:2;
        __BYTE	OCU9E:2;
        __BYTE	OCU8E:2;
    } bit;
} EPFR82STR;

__IO_EXTENDED	  EPFR82STR	IO_EPFR82;
#define	_epfr82		(IO_EPFR82)
#define	EPFR82		(IO_EPFR82.byte)
#define	EPFR82_OCU11E  	(IO_EPFR82.bit.OCU11E)
#define	EPFR82_OCU10E  	(IO_EPFR82.bit.OCU10E)
#define	EPFR82_OCU9E  	(IO_EPFR82.bit.OCU9E)
#define	EPFR82_OCU8E  	(IO_EPFR82.bit.OCU8E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR83,attr=IO,locate=0x1CB
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	ZIN1E:1;
        __BYTE	BIN1E:1;
        __BYTE	AIN1E:1;
        __BYTE	ZIN0E:2;
        __BYTE	BIN0E:1;
        __BYTE	AIN0E:1;
    } bit;
} EPFR83STR;

__IO_EXTENDED	  EPFR83STR	IO_EPFR83;
#define	_epfr83		(IO_EPFR83)
#define	EPFR83		(IO_EPFR83.byte)
#define	EPFR83_ZIN1E  	(IO_EPFR83.bit.ZIN1E)
#define	EPFR83_BIN1E  	(IO_EPFR83.bit.BIN1E)
#define	EPFR83_AIN1E  	(IO_EPFR83.bit.AIN1E)
#define	EPFR83_ZIN0E  	(IO_EPFR83.bit.ZIN0E)
#define	EPFR83_BIN0E  	(IO_EPFR83.bit.BIN0E)
#define	EPFR83_AIN0E  	(IO_EPFR83.bit.AIN0E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR84,attr=IO,locate=0x1CC
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RTO3E:2;
        __BYTE	RTO2E:2;
        __BYTE	RTO1E:2;
        __BYTE	RTO0E:2;
    } bit;
} EPFR84STR;

__IO_EXTENDED	  EPFR84STR	IO_EPFR84;
#define	_epfr84		(IO_EPFR84)
#define	EPFR84		(IO_EPFR84.byte)
#define	EPFR84_RTO3E  	(IO_EPFR84.bit.RTO3E)
#define	EPFR84_RTO2E  	(IO_EPFR84.bit.RTO2E)
#define	EPFR84_RTO1E  	(IO_EPFR84.bit.RTO1E)
#define	EPFR84_RTO0E  	(IO_EPFR84.bit.RTO0E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR85,attr=IO,locate=0x1CD
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	DTTI0E:2;
        __BYTE	RTO5E:2;
        __BYTE	RTO4E:2;
    } bit;
} EPFR85STR;

__IO_EXTENDED	  EPFR85STR	IO_EPFR85;
#define	_epfr85		(IO_EPFR85)
#define	EPFR85		(IO_EPFR85.byte)
#define	EPFR85_DTTI0E  	(IO_EPFR85.bit.DTTI0E)
#define	EPFR85_RTO5E  	(IO_EPFR85.bit.RTO5E)
#define	EPFR85_RTO4E  	(IO_EPFR85.bit.RTO4E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR86,attr=IO,locate=0x1CE
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RX1E:1;
        __BYTE	TX2E:1;
        __BYTE	TX1E:1;
        __BYTE	TX0E:2;
    } bit;
} EPFR86STR;

__IO_EXTENDED	  EPFR86STR	IO_EPFR86;
#define	_epfr86		(IO_EPFR86)
#define	EPFR86		(IO_EPFR86.byte)
#define	EPFR86_RX1E  	(IO_EPFR86.bit.RX1E)
#define	EPFR86_TX2E  	(IO_EPFR86.bit.TX2E)
#define	EPFR86_TX1E  	(IO_EPFR86.bit.TX1E)
#define	EPFR86_TX0E  	(IO_EPFR86.bit.TX0E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR87,attr=IO,locate=0x1CF
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	ADTG1E:1;
        __BYTE	ADTG0E:1;
    } bit;
} EPFR87STR;

__IO_EXTENDED	  EPFR87STR	IO_EPFR87;
#define	_epfr87		(IO_EPFR87)
#define	EPFR87		(IO_EPFR87.byte)
#define	EPFR87_ADTG1E  	(IO_EPFR87.bit.ADTG1E)
#define	EPFR87_ADTG0E  	(IO_EPFR87.bit.ADTG0E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR88,attr=IO,locate=0x1D0
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	MONKCLKE:1;
    } bit;
} EPFR88STR;

__IO_EXTENDED	  EPFR88STR	IO_EPFR88;
#define	_epfr88		(IO_EPFR88)
#define	EPFR88		(IO_EPFR88.byte)
#define	EPFR88_MONKCLKE  	(IO_EPFR88.bit.MONKCLKE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMRLRA4,attr=IO,locate=0x1D8
#endif

__IO_EXTENDED	__HWORD	IO_TMRLRA4;
#define	_tmrlra4		(IO_TMRLRA4)
#define	TMRLRA4	(_tmrlra4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMR4,attr=IO,locate=0x1DA
#endif

__IO_EXTENDED	const __HWORD	IO_TMR4;
#define	_tmr4		(IO_TMR4)
#define	TMR4	(_tmr4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMRLRB4,attr=IO,locate=0x1DC
#endif

__IO_EXTENDED	__HWORD	IO_TMRLRB4;
#define	_tmrlrb4		(IO_TMRLRB4)
#define	TMRLRB4	(_tmrlrb4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMCSR4,attr=IO,locate=0x1DE
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __BYTE	TMCSR4H;
        __BYTE	TMCSR4L;
    } byte;
    struct
    {
        __HWORD	MOD:2;
        __HWORD	TRGM:2;
        __HWORD	CSL:3;
        __HWORD	GATE:1;
        __HWORD	EF:1;
        __HWORD	RESV5:1;
        __HWORD	OUTL:1;
        __HWORD	RELD:1;
        __HWORD	INTE:1;
        __HWORD	UF:1;
        __HWORD	CNTE:1;
        __HWORD	TRG:1;
    } bit;
} TMCSR4STR;

__IO_EXTENDED	  TMCSR4STR	IO_TMCSR4;
#define	_tmcsr4		(IO_TMCSR4)
#define	TMCSR4		(IO_TMCSR4.hword)
#define	TMCSR4_TMCSR4H	(IO_TMCSR4.byte.TMCSR4H)
#define	TMCSR4_TMCSR4L	(IO_TMCSR4.byte.TMCSR4L)
#define	TMCSR4_MOD  	(IO_TMCSR4.bit.MOD)
#define	TMCSR4_TRGM  	(IO_TMCSR4.bit.TRGM)
#define	TMCSR4_CSL  	(IO_TMCSR4.bit.CSL)
#define	TMCSR4_GATE  	(IO_TMCSR4.bit.GATE)
#define	TMCSR4_EF  	(IO_TMCSR4.bit.EF)
#define	TMCSR4_OUTL  	(IO_TMCSR4.bit.OUTL)
#define	TMCSR4_RELD  	(IO_TMCSR4.bit.RELD)
#define	TMCSR4_INTE  	(IO_TMCSR4.bit.INTE)
#define	TMCSR4_UF  	(IO_TMCSR4.bit.UF)
#define	TMCSR4_CNTE  	(IO_TMCSR4.bit.CNTE)
#define	TMCSR4_TRG  	(IO_TMCSR4.bit.TRG)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMRLRA5,attr=IO,locate=0x1F0
#endif

__IO_EXTENDED	__HWORD	IO_TMRLRA5;
#define	_tmrlra5		(IO_TMRLRA5)
#define	TMRLRA5	(_tmrlra5)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMR5,attr=IO,locate=0x1F2
#endif

__IO_EXTENDED	const __HWORD	IO_TMR5;
#define	_tmr5		(IO_TMR5)
#define	TMR5	(_tmr5)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMRLRB5,attr=IO,locate=0x1F4
#endif

__IO_EXTENDED	__HWORD	IO_TMRLRB5;
#define	_tmrlrb5		(IO_TMRLRB5)
#define	TMRLRB5	(_tmrlrb5)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMCSR5,attr=IO,locate=0x1F6
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __BYTE	TMCSR5H;
        __BYTE	TMCSR5L;
    } byte;
    struct
    {
        __HWORD	MOD:2;
        __HWORD	TRGM:2;
        __HWORD	CSL:3;
        __HWORD	GATE:1;
        __HWORD	EF:1;
        __HWORD	RESV5:1;
        __HWORD	OUTL:1;
        __HWORD	RELD:1;
        __HWORD	INTE:1;
        __HWORD	UF:1;
        __HWORD	CNTE:1;
        __HWORD	TRG:1;
    } bit;
} TMCSR5STR;

__IO_EXTENDED	  TMCSR5STR	IO_TMCSR5;
#define	_tmcsr5		(IO_TMCSR5)
#define	TMCSR5		(IO_TMCSR5.hword)
#define	TMCSR5_TMCSR5H	(IO_TMCSR5.byte.TMCSR5H)
#define	TMCSR5_TMCSR5L	(IO_TMCSR5.byte.TMCSR5L)
#define	TMCSR5_MOD  	(IO_TMCSR5.bit.MOD)
#define	TMCSR5_TRGM  	(IO_TMCSR5.bit.TRGM)
#define	TMCSR5_CSL  	(IO_TMCSR5.bit.CSL)
#define	TMCSR5_GATE  	(IO_TMCSR5.bit.GATE)
#define	TMCSR5_EF  	(IO_TMCSR5.bit.EF)
#define	TMCSR5_OUTL  	(IO_TMCSR5.bit.OUTL)
#define	TMCSR5_RELD  	(IO_TMCSR5.bit.RELD)
#define	TMCSR5_INTE  	(IO_TMCSR5.bit.INTE)
#define	TMCSR5_UF  	(IO_TMCSR5.bit.UF)
#define	TMCSR5_CNTE  	(IO_TMCSR5.bit.CNTE)
#define	TMCSR5_TRG  	(IO_TMCSR5.bit.TRG)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMRLRA6,attr=IO,locate=0x1F8
#endif

__IO_EXTENDED	__HWORD	IO_TMRLRA6;
#define	_tmrlra6		(IO_TMRLRA6)
#define	TMRLRA6	(_tmrlra6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMR6,attr=IO,locate=0x1FA
#endif

__IO_EXTENDED	const __HWORD	IO_TMR6;
#define	_tmr6		(IO_TMR6)
#define	TMR6	(_tmr6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMRLRB6,attr=IO,locate=0x1FC
#endif

__IO_EXTENDED	__HWORD	IO_TMRLRB6;
#define	_tmrlrb6		(IO_TMRLRB6)
#define	TMRLRB6	(_tmrlrb6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMCSR6,attr=IO,locate=0x1FE
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __BYTE	TMCSR6H;
        __BYTE	TMCSR6L;
    } byte;
    struct
    {
        __HWORD	MOD:2;
        __HWORD	TRGM:2;
        __HWORD	CSL:3;
        __HWORD	GATE:1;
        __HWORD	EF:1;
        __HWORD	RESV5:1;
        __HWORD	OUTL:1;
        __HWORD	RELD:1;
        __HWORD	INTE:1;
        __HWORD	UF:1;
        __HWORD	CNTE:1;
        __HWORD	TRG:1;
    } bit;
} TMCSR6STR;

__IO_EXTENDED	  TMCSR6STR	IO_TMCSR6;
#define	_tmcsr6		(IO_TMCSR6)
#define	TMCSR6		(IO_TMCSR6.hword)
#define	TMCSR6_TMCSR6H	(IO_TMCSR6.byte.TMCSR6H)
#define	TMCSR6_TMCSR6L	(IO_TMCSR6.byte.TMCSR6L)
#define	TMCSR6_MOD  	(IO_TMCSR6.bit.MOD)
#define	TMCSR6_TRGM  	(IO_TMCSR6.bit.TRGM)
#define	TMCSR6_CSL  	(IO_TMCSR6.bit.CSL)
#define	TMCSR6_GATE  	(IO_TMCSR6.bit.GATE)
#define	TMCSR6_EF  	(IO_TMCSR6.bit.EF)
#define	TMCSR6_OUTL  	(IO_TMCSR6.bit.OUTL)
#define	TMCSR6_RELD  	(IO_TMCSR6.bit.RELD)
#define	TMCSR6_INTE  	(IO_TMCSR6.bit.INTE)
#define	TMCSR6_UF  	(IO_TMCSR6.bit.UF)
#define	TMCSR6_CNTE  	(IO_TMCSR6.bit.CNTE)
#define	TMCSR6_TRG  	(IO_TMCSR6.bit.TRG)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DACR0,attr=IO,locate=0x23C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	DAE:1;
    } bit;
} DACR0STR;

__IO_EXTENDED	  DACR0STR	IO_DACR0;
#define	_dacr0		(IO_DACR0)
#define	DACR0		(IO_DACR0.byte)
#define	DACR0_DAE  	(IO_DACR0.bit.DAE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DADR0,attr=IO,locate=0x23D
#endif

__IO_EXTENDED	__BYTE	IO_DADR0;
#define	_dadr0		(IO_DADR0)
#define	DADR0	(_dadr0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DACR1,attr=IO,locate=0x23E
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	DAE:1;
    } bit;
} DACR1STR;

__IO_EXTENDED	  DACR1STR	IO_DACR1;
#define	_dacr1		(IO_DACR1)
#define	DACR1		(IO_DACR1.byte)
#define	DACR1_DAE  	(IO_DACR1.bit.DAE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DADR1,attr=IO,locate=0x23F
#endif

__IO_EXTENDED	__BYTE	IO_DADR1;
#define	_dadr1		(IO_DADR1)
#define	DADR1	(_dadr1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FT3,attr=IO,locate=0x240
#endif

typedef struct
{
    __WORD	IO_CPCLR3;
    __WORD	IO_TCDT3;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	TCCSH3;
            __BYTE	TCCSL3;
        } byte;
        struct
        {
            __HWORD	ECKE:1;
            __HWORD	RESV81:1;
            __HWORD	RESV82:1;
            __HWORD	RESV83:1;
            __HWORD	RESV84:1;
            __HWORD	RESV85:1;
            __HWORD	ICLR:1;
            __HWORD	ICRE:1;
            __HWORD	RESV88:1;
            __HWORD	STOP:1;
            __HWORD	RESV810:1;
            __HWORD	SCLR:1;
            __HWORD	CLK:4;
        } bit;
    } IO_TCCS3;
} IO_FT3_STR;

__IO_EXTENDED  IO_FT3_STR   IO_FT3;
#define	FT3_CPCLR3	(IO_FT3.IO_CPCLR3)
#define	FT3_TCDT3	(IO_FT3.IO_TCDT3)
#define	FT3_TCCS3			(IO_FT3.IO_TCCS3.hword)
#define	FT3_TCCS3_TCCSH3    	(IO_FT3.IO_TCCS3.byte.TCCSH3)
#define	FT3_TCCS3_TCCSL3    	(IO_FT3.IO_TCCS3.byte.TCCSL3)
#define	FT3_TCCS3_ECKE    	(IO_FT3.IO_TCCS3.bit.ECKE)
#define	FT3_TCCS3_ICLR    	(IO_FT3.IO_TCCS3.bit.ICLR)
#define	FT3_TCCS3_ICRE    	(IO_FT3.IO_TCCS3.bit.ICRE)
#define	FT3_TCCS3_STOP    	(IO_FT3.IO_TCCS3.bit.STOP)
#define	FT3_TCCS3_SCLR    	(IO_FT3.IO_TCCS3.bit.SCLR)
#define	FT3_TCCS3_CLK    	(IO_FT3.IO_TCCS3.bit.CLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FT4,attr=IO,locate=0x24C
#endif


typedef struct
{
    __WORD	IO_CPCLR4;
    __WORD	IO_TCDT4;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	TCCSH4;
            __BYTE	TCCSL4;
        } byte;
        struct
        {
            __HWORD	ECKE:1;
            __HWORD	RESV81:1;
            __HWORD	RESV82:1;
            __HWORD	RESV83:1;
            __HWORD	RESV84:1;
            __HWORD	RESV85:1;
            __HWORD	ICLR:1;
            __HWORD	ICRE:1;
            __HWORD	RESV88:1;
            __HWORD	STOP:1;
            __HWORD	RESV810:1;
            __HWORD	SCLR:1;
            __HWORD	CLK:4;
        } bit;
    } IO_TCCS4;
} IO_FT4_STR;

__IO_EXTENDED   IO_FT4_STR   IO_FT4;
#define	FT4_CPCLR4	(IO_FT4.IO_CPCLR4)
#define	FT4_TCDT4	(IO_FT4.IO_TCDT4)
#define	FT4_TCCS4			(IO_FT4.IO_TCCS4.hword)
#define	FT4_TCCS4_TCCSH4    	(IO_FT4.IO_TCCS4.byte.TCCSH4)
#define	FT4_TCCS4_TCCSL4    	(IO_FT4.IO_TCCS4.byte.TCCSL4)
#define	FT4_TCCS4_ECKE    	(IO_FT4.IO_TCCS4.bit.ECKE)
#define	FT4_TCCS4_ICLR    	(IO_FT4.IO_TCCS4.bit.ICLR)
#define	FT4_TCCS4_ICRE    	(IO_FT4.IO_TCCS4.bit.ICRE)
#define	FT4_TCCS4_STOP    	(IO_FT4.IO_TCCS4.bit.STOP)
#define	FT4_TCCS4_SCLR    	(IO_FT4.IO_TCCS4.bit.SCLR)
#define	FT4_TCCS4_CLK    	(IO_FT4.IO_TCCS4.bit.CLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MPU0,attr=IO,locate=0x310
#endif

__IO_EXTENDED	struct
{
    __HWORD	IO_RESV1;
    union
    {
        __HWORD	hword;
        struct
        {
            __HWORD	PIE:1;
            __HWORD	PRE:1;
            __HWORD	PWE:1;
            __HWORD	UIE:1;
            __HWORD	URE:1;
            __HWORD	UWE:1;
            __HWORD	RESV26:1;
            __HWORD	BE:1;
            __HWORD	RESV28:1;
            __HWORD	RESV29:1;
            __HWORD	RESV210:1;
            __HWORD	RESV211:1;
            __HWORD	PAN:2;
            __HWORD	DEE:1;
            __HWORD	MPE:1;
        } bit;
    } IO_MPUCR;
    __HWORD	IO_RESV2;
    __HWORD	IO_RESV3;
    __WORD	IO_RESV15;
    __HWORD	IO_RESV4;
    __HWORD	IO_RESV16;
    const __WORD	IO_DPVAR;
    __HWORD	IO_RESV5;
    union
    {
        __HWORD	hword;
        struct
        {
            __HWORD	RESV220:1;
            __HWORD	RESV221:1;
            __HWORD	RESV222:1;
            __HWORD	RESV223:1;
            __HWORD	RESV224:1;
            __HWORD	RESV225:1;
            __HWORD	RESV226:1;
            __HWORD	RESV227:1;
            __HWORD	RW:2;
            __HWORD	SZ:2;
            __HWORD	MD:1;
            __HWORD	RESV2211:1;
            __HWORD	RESV2212:1;
            __HWORD	DPV:1;
        } bit;
    } IO_DPVSR;
    const __WORD	IO_DEAR;
    __HWORD	IO_RESV6;
    union
    {
        __HWORD	hword;
        struct
        {
            __HWORD	RESV300:1;
            __HWORD	RESV301:1;
            __HWORD	RESV302:1;
            __HWORD	RESV303:1;
            __HWORD	RESV304:1;
            __HWORD	RESV305:1;
            __HWORD	RESV306:1;
            __HWORD	RESV307:1;
            __HWORD	RW:2;
            __HWORD	SZ:2;
            __HWORD	MD:1;
            __HWORD	RESV3011:1;
            __HWORD	RESV3012:1;
            __HWORD	DAE:1;
        } bit;
    } IO_DESR;
    __WORD	IO_PABR0;
    __HWORD	IO_RESV7;
    union
    {
        __HWORD	hword;
        struct
        {
            __HWORD	PIE:1;
            __HWORD	PRE:1;
            __HWORD	PWE:1;
            __HWORD	UIE:1;
            __HWORD	URE:1;
            __HWORD	UWE:1;
            __HWORD	RESV386:1;
            __HWORD	BE:1;
            __HWORD	ASZ:5;
            __HWORD	RESV389:1;
            __HWORD	RESV3810:1;
            __HWORD	PAE:1;
        } bit;
    } IO_PACR0;
    __WORD	IO_PABR1;
    __HWORD	IO_RESV8;
    union
    {
        __HWORD	hword;
        struct
        {
            __HWORD	PIE:1;
            __HWORD	PRE:1;
            __HWORD	PWE:1;
            __HWORD	UIE:1;
            __HWORD	URE:1;
            __HWORD	UWE:1;
            __HWORD	RESV466:1;
            __HWORD	BE:1;
            __HWORD	ASZ:5;
            __HWORD	RESV469:1;
            __HWORD	RESV4610:1;
            __HWORD	PAE:1;
        } bit;
    } IO_PACR1;
    __WORD	IO_PABR2;
    __HWORD	IO_RESV9;
    union
    {
        __HWORD	hword;
        struct
        {
            __HWORD	PIE:1;
            __HWORD	PRE:1;
            __HWORD	PWE:1;
            __HWORD	UIE:1;
            __HWORD	URE:1;
            __HWORD	UWE:1;
            __HWORD	RESV546:1;
            __HWORD	BE:1;
            __HWORD	ASZ:5;
            __HWORD	RESV549:1;
            __HWORD	RESV5410:1;
            __HWORD	PAE:1;
        } bit;
    } IO_PACR2;
    __WORD	IO_PABR3;
    __HWORD	IO_RESV10;
    union
    {
        __HWORD	hword;
        struct
        {
            __HWORD	PIE:1;
            __HWORD	PRE:1;
            __HWORD	PWE:1;
            __HWORD	UIE:1;
            __HWORD	URE:1;
            __HWORD	UWE:1;
            __HWORD	RESV626:1;
            __HWORD	BE:1;
            __HWORD	ASZ:5;
            __HWORD	RESV629:1;
            __HWORD	RESV6210:1;
            __HWORD	PAE:1;
        } bit;
    } IO_PACR3;
    __WORD	IO_PABR4;
    __HWORD	IO_RESV11;
    union
    {
        __HWORD	hword;
        struct
        {
            __HWORD	PIE:1;
            __HWORD	PRE:1;
            __HWORD	PWE:1;
            __HWORD	UIE:1;
            __HWORD	URE:1;
            __HWORD	UWE:1;
            __HWORD	RESV706:1;
            __HWORD	BE:1;
            __HWORD	ASZ:5;
            __HWORD	RESV709:1;
            __HWORD	RESV7010:1;
            __HWORD	PAE:1;
        } bit;
    } IO_PACR4;
    __WORD	IO_PABR5;
    __HWORD	IO_RESV12;
    union
    {
        __HWORD	hword;
        struct
        {
            __HWORD	PIE:1;
            __HWORD	PRE:1;
            __HWORD	PWE:1;
            __HWORD	UIE:1;
            __HWORD	URE:1;
            __HWORD	UWE:1;
            __HWORD	RESV786:1;
            __HWORD	BE:1;
            __HWORD	ASZ:5;
            __HWORD	RESV789:1;
            __HWORD	RESV7810:1;
            __HWORD	PAE:1;
        } bit;
    } IO_PACR5;
    __WORD	IO_PABR6;
    __HWORD	IO_RESV13;
    union
    {
        __HWORD	hword;
        struct
        {
            __HWORD	PIE:1;
            __HWORD	PRE:1;
            __HWORD	PWE:1;
            __HWORD	UIE:1;
            __HWORD	URE:1;
            __HWORD	UWE:1;
            __HWORD	RESV866:1;
            __HWORD	BE:1;
            __HWORD	ASZ:5;
            __HWORD	RESV869:1;
            __HWORD	RESV8610:1;
            __HWORD	PAE:1;
        } bit;
    } IO_PACR6;
    __WORD	IO_PABR7;
    __HWORD	IO_RESV14;
    union
    {
        __HWORD	hword;
        struct
        {
            __HWORD	PIE:1;
            __HWORD	PRE:1;
            __HWORD	PWE:1;
            __HWORD	UIE:1;
            __HWORD	URE:1;
            __HWORD	UWE:1;
            __HWORD	RESV946:1;
            __HWORD	BE:1;
            __HWORD	ASZ:5;
            __HWORD	RESV949:1;
            __HWORD	RESV9410:1;
            __HWORD	PAE:1;
        } bit;
    } IO_PACR7;
} IO_MPU0;

#define	MPU0_MPUCR			(IO_MPU0.IO_MPUCR.hword)
#define	MPU0_MPUCR_PIE    	(IO_MPU0.IO_MPUCR.bit.PIE)
#define	MPU0_MPUCR_PRE    	(IO_MPU0.IO_MPUCR.bit.PRE)
#define	MPU0_MPUCR_PWE    	(IO_MPU0.IO_MPUCR.bit.PWE)
#define	MPU0_MPUCR_UIE    	(IO_MPU0.IO_MPUCR.bit.UIE)
#define	MPU0_MPUCR_URE    	(IO_MPU0.IO_MPUCR.bit.URE)
#define	MPU0_MPUCR_UWE    	(IO_MPU0.IO_MPUCR.bit.UWE)
#define	MPU0_MPUCR_BE    	(IO_MPU0.IO_MPUCR.bit.BE)
#define	MPU0_MPUCR_PAN    	(IO_MPU0.IO_MPUCR.bit.PAN)
#define	MPU0_MPUCR_DEE    	(IO_MPU0.IO_MPUCR.bit.DEE)
#define	MPU0_MPUCR_MPE    	(IO_MPU0.IO_MPUCR.bit.MPE)
#define	MPU0_DPVAR	(IO_MPU0.IO_DPVAR)
#define	MPU0_DPVSR			(IO_MPU0.IO_DPVSR.hword)
#define	MPU0_DPVSR_RW    	(IO_MPU0.IO_DPVSR.bit.RW)
#define	MPU0_DPVSR_SZ    	(IO_MPU0.IO_DPVSR.bit.SZ)
#define	MPU0_DPVSR_MD    	(IO_MPU0.IO_DPVSR.bit.MD)
#define	MPU0_DPVSR_DPV    	(IO_MPU0.IO_DPVSR.bit.DPV)
#define	MPU0_DEAR	(IO_MPU0.IO_DEAR)
#define	MPU0_DESR			(IO_MPU0.IO_DESR.hword)
#define	MPU0_DESR_RW    	(IO_MPU0.IO_DESR.bit.RW)
#define	MPU0_DESR_SZ    	(IO_MPU0.IO_DESR.bit.SZ)
#define	MPU0_DESR_MD    	(IO_MPU0.IO_DESR.bit.MD)
#define	MPU0_DESR_DAE    	(IO_MPU0.IO_DESR.bit.DAE)
#define	MPU0_PABR0	(IO_MPU0.IO_PABR0)
#define	MPU0_PACR0			(IO_MPU0.IO_PACR0.hword)
#define	MPU0_PACR0_PIE    	(IO_MPU0.IO_PACR0.bit.PIE)
#define	MPU0_PACR0_PRE    	(IO_MPU0.IO_PACR0.bit.PRE)
#define	MPU0_PACR0_PWE    	(IO_MPU0.IO_PACR0.bit.PWE)
#define	MPU0_PACR0_UIE    	(IO_MPU0.IO_PACR0.bit.UIE)
#define	MPU0_PACR0_URE    	(IO_MPU0.IO_PACR0.bit.URE)
#define	MPU0_PACR0_UWE    	(IO_MPU0.IO_PACR0.bit.UWE)
#define	MPU0_PACR0_BE    	(IO_MPU0.IO_PACR0.bit.BE)
#define	MPU0_PACR0_ASZ    	(IO_MPU0.IO_PACR0.bit.ASZ)
#define	MPU0_PACR0_PAE    	(IO_MPU0.IO_PACR0.bit.PAE)
#define	MPU0_PABR1	(IO_MPU0.IO_PABR1)
#define	MPU0_PACR1			(IO_MPU0.IO_PACR1.hword)
#define	MPU0_PACR1_PIE    	(IO_MPU0.IO_PACR1.bit.PIE)
#define	MPU0_PACR1_PRE    	(IO_MPU0.IO_PACR1.bit.PRE)
#define	MPU0_PACR1_PWE    	(IO_MPU0.IO_PACR1.bit.PWE)
#define	MPU0_PACR1_UIE    	(IO_MPU0.IO_PACR1.bit.UIE)
#define	MPU0_PACR1_URE    	(IO_MPU0.IO_PACR1.bit.URE)
#define	MPU0_PACR1_UWE    	(IO_MPU0.IO_PACR1.bit.UWE)
#define	MPU0_PACR1_BE    	(IO_MPU0.IO_PACR1.bit.BE)
#define	MPU0_PACR1_ASZ    	(IO_MPU0.IO_PACR1.bit.ASZ)
#define	MPU0_PACR1_PAE    	(IO_MPU0.IO_PACR1.bit.PAE)
#define	MPU0_PABR2	(IO_MPU0.IO_PABR2)
#define	MPU0_PACR2			(IO_MPU0.IO_PACR2.hword)
#define	MPU0_PACR2_PIE    	(IO_MPU0.IO_PACR2.bit.PIE)
#define	MPU0_PACR2_PRE    	(IO_MPU0.IO_PACR2.bit.PRE)
#define	MPU0_PACR2_PWE    	(IO_MPU0.IO_PACR2.bit.PWE)
#define	MPU0_PACR2_UIE    	(IO_MPU0.IO_PACR2.bit.UIE)
#define	MPU0_PACR2_URE    	(IO_MPU0.IO_PACR2.bit.URE)
#define	MPU0_PACR2_UWE    	(IO_MPU0.IO_PACR2.bit.UWE)
#define	MPU0_PACR2_BE    	(IO_MPU0.IO_PACR2.bit.BE)
#define	MPU0_PACR2_ASZ    	(IO_MPU0.IO_PACR2.bit.ASZ)
#define	MPU0_PACR2_PAE    	(IO_MPU0.IO_PACR2.bit.PAE)
#define	MPU0_PABR3	(IO_MPU0.IO_PABR3)
#define	MPU0_PACR3			(IO_MPU0.IO_PACR3.hword)
#define	MPU0_PACR3_PIE    	(IO_MPU0.IO_PACR3.bit.PIE)
#define	MPU0_PACR3_PRE    	(IO_MPU0.IO_PACR3.bit.PRE)
#define	MPU0_PACR3_PWE    	(IO_MPU0.IO_PACR3.bit.PWE)
#define	MPU0_PACR3_UIE    	(IO_MPU0.IO_PACR3.bit.UIE)
#define	MPU0_PACR3_URE    	(IO_MPU0.IO_PACR3.bit.URE)
#define	MPU0_PACR3_UWE    	(IO_MPU0.IO_PACR3.bit.UWE)
#define	MPU0_PACR3_BE    	(IO_MPU0.IO_PACR3.bit.BE)
#define	MPU0_PACR3_ASZ    	(IO_MPU0.IO_PACR3.bit.ASZ)
#define	MPU0_PACR3_PAE    	(IO_MPU0.IO_PACR3.bit.PAE)
#define	MPU0_PABR4	(IO_MPU0.IO_PABR4)
#define	MPU0_PACR4			(IO_MPU0.IO_PACR4.hword)
#define	MPU0_PACR4_PIE    	(IO_MPU0.IO_PACR4.bit.PIE)
#define	MPU0_PACR4_PRE    	(IO_MPU0.IO_PACR4.bit.PRE)
#define	MPU0_PACR4_PWE    	(IO_MPU0.IO_PACR4.bit.PWE)
#define	MPU0_PACR4_UIE    	(IO_MPU0.IO_PACR4.bit.UIE)
#define	MPU0_PACR4_URE    	(IO_MPU0.IO_PACR4.bit.URE)
#define	MPU0_PACR4_UWE    	(IO_MPU0.IO_PACR4.bit.UWE)
#define	MPU0_PACR4_BE    	(IO_MPU0.IO_PACR4.bit.BE)
#define	MPU0_PACR4_ASZ    	(IO_MPU0.IO_PACR4.bit.ASZ)
#define	MPU0_PACR4_PAE    	(IO_MPU0.IO_PACR4.bit.PAE)
#define	MPU0_PABR5	(IO_MPU0.IO_PABR5)
#define	MPU0_PACR5			(IO_MPU0.IO_PACR5.hword)
#define	MPU0_PACR5_PIE    	(IO_MPU0.IO_PACR5.bit.PIE)
#define	MPU0_PACR5_PRE    	(IO_MPU0.IO_PACR5.bit.PRE)
#define	MPU0_PACR5_PWE    	(IO_MPU0.IO_PACR5.bit.PWE)
#define	MPU0_PACR5_UIE    	(IO_MPU0.IO_PACR5.bit.UIE)
#define	MPU0_PACR5_URE    	(IO_MPU0.IO_PACR5.bit.URE)
#define	MPU0_PACR5_UWE    	(IO_MPU0.IO_PACR5.bit.UWE)
#define	MPU0_PACR5_BE    	(IO_MPU0.IO_PACR5.bit.BE)
#define	MPU0_PACR5_ASZ    	(IO_MPU0.IO_PACR5.bit.ASZ)
#define	MPU0_PACR5_PAE    	(IO_MPU0.IO_PACR5.bit.PAE)
#define	MPU0_PABR6	(IO_MPU0.IO_PABR6)
#define	MPU0_PACR6			(IO_MPU0.IO_PACR6.hword)
#define	MPU0_PACR6_PIE    	(IO_MPU0.IO_PACR6.bit.PIE)
#define	MPU0_PACR6_PRE    	(IO_MPU0.IO_PACR6.bit.PRE)
#define	MPU0_PACR6_PWE    	(IO_MPU0.IO_PACR6.bit.PWE)
#define	MPU0_PACR6_UIE    	(IO_MPU0.IO_PACR6.bit.UIE)
#define	MPU0_PACR6_URE    	(IO_MPU0.IO_PACR6.bit.URE)
#define	MPU0_PACR6_UWE    	(IO_MPU0.IO_PACR6.bit.UWE)
#define	MPU0_PACR6_BE    	(IO_MPU0.IO_PACR6.bit.BE)
#define	MPU0_PACR6_ASZ    	(IO_MPU0.IO_PACR6.bit.ASZ)
#define	MPU0_PACR6_PAE    	(IO_MPU0.IO_PACR6.bit.PAE)
#define	MPU0_PABR7	(IO_MPU0.IO_PABR7)
#define	MPU0_PACR7			(IO_MPU0.IO_PACR7.hword)
#define	MPU0_PACR7_PIE    	(IO_MPU0.IO_PACR7.bit.PIE)
#define	MPU0_PACR7_PRE    	(IO_MPU0.IO_PACR7.bit.PRE)
#define	MPU0_PACR7_PWE    	(IO_MPU0.IO_PACR7.bit.PWE)
#define	MPU0_PACR7_UIE    	(IO_MPU0.IO_PACR7.bit.UIE)
#define	MPU0_PACR7_URE    	(IO_MPU0.IO_PACR7.bit.URE)
#define	MPU0_PACR7_UWE    	(IO_MPU0.IO_PACR7.bit.UWE)
#define	MPU0_PACR7_BE    	(IO_MPU0.IO_PACR7.bit.BE)
#define	MPU0_PACR7_ASZ    	(IO_MPU0.IO_PACR7.bit.ASZ)
#define	MPU0_PACR7_PAE    	(IO_MPU0.IO_PACR7.bit.PAE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL0,attr=IO,locate=0x400
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	EISEL:3;
    } bit;
} ICSEL0STR;

__IO_EXTENDED	  ICSEL0STR	IO_ICSEL0;
#define	_icsel0		(IO_ICSEL0)
#define	ICSEL0		(IO_ICSEL0.byte)
#define	ICSEL0_EISEL  	(IO_ICSEL0.bit.EISEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL1,attr=IO,locate=0x401
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	EISEL:3;
    } bit;
} ICSEL1STR;

__IO_EXTENDED	  ICSEL1STR	IO_ICSEL1;
#define	_icsel1		(IO_ICSEL1)
#define	ICSEL1		(IO_ICSEL1.byte)
#define	ICSEL1_EISEL  	(IO_ICSEL1.bit.EISEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL2,attr=IO,locate=0x402
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RTSEL0:1;
    } bit;
} ICSEL2STR;

__IO_EXTENDED	  ICSEL2STR	IO_ICSEL2;
#define	_icsel2		(IO_ICSEL2)
#define	ICSEL2		(IO_ICSEL2.byte)
#define	ICSEL2_RTSEL0  	(IO_ICSEL2.bit.RTSEL0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL3,attr=IO,locate=0x403
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RTSEL1:1;
    } bit;
} ICSEL3STR;

__IO_EXTENDED	  ICSEL3STR	IO_ICSEL3;
#define	_icsel3		(IO_ICSEL3)
#define	ICSEL3		(IO_ICSEL3.byte)
#define	ICSEL3_RTSEL1  	(IO_ICSEL3.bit.RTSEL1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL5,attr=IO,locate=0x405
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	SG_RX_SEL1:3;
    } bit;
} ICSEL5STR;

__IO_EXTENDED	  ICSEL5STR	IO_ICSEL5;
#define	_icsel5		(IO_ICSEL5)
#define	ICSEL5		(IO_ICSEL5.byte)
#define	ICSEL5_SG_RX_SEL1  	(IO_ICSEL5.bit.SG_RX_SEL1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL6,attr=IO,locate=0x406
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	PPGSEL0:4;
    } bit;
} ICSEL6STR;

__IO_EXTENDED	  ICSEL6STR	IO_ICSEL6;
#define	_icsel6		(IO_ICSEL6)
#define	ICSEL6		(IO_ICSEL6.byte)
#define	ICSEL6_PPGSEL0  	(IO_ICSEL6.bit.PPGSEL0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL7,attr=IO,locate=0x407
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	PPGSEL1:4;
    } bit;
} ICSEL7STR;

__IO_EXTENDED	  ICSEL7STR	IO_ICSEL7;
#define	_icsel7		(IO_ICSEL7)
#define	ICSEL7		(IO_ICSEL7.byte)
#define	ICSEL7_PPGSEL1  	(IO_ICSEL7.bit.PPGSEL1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL8,attr=IO,locate=0x408
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	PPGSEL2:2;
    } bit;
} ICSEL8STR;

__IO_EXTENDED	  ICSEL8STR	IO_ICSEL8;
#define	_icsel8		(IO_ICSEL8)
#define	ICSEL8		(IO_ICSEL8.byte)
#define	ICSEL8_PPGSEL2  	(IO_ICSEL8.bit.PPGSEL2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL9,attr=IO,locate=0x409
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	PPGSEL3:2;
    } bit;
} ICSEL9STR;

__IO_EXTENDED	  ICSEL9STR	IO_ICSEL9;
#define	_icsel9		(IO_ICSEL9)
#define	ICSEL9		(IO_ICSEL9.byte)
#define	ICSEL9_PPGSEL3  	(IO_ICSEL9.bit.PPGSEL3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL10,attr=IO,locate=0x40A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	PPGSEL4:2;
    } bit;
} ICSEL10STR;

__IO_EXTENDED	  ICSEL10STR	IO_ICSEL10;
#define	_icsel10		(IO_ICSEL10)
#define	ICSEL10		(IO_ICSEL10.byte)
#define	ICSEL10_PPGSEL4  	(IO_ICSEL10.bit.PPGSEL4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL11,attr=IO,locate=0x40B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	PMSTSEL:3;
    } bit;
} ICSEL11STR;

__IO_EXTENDED	  ICSEL11STR	IO_ICSEL11;
#define	_icsel11		(IO_ICSEL11)
#define	ICSEL11		(IO_ICSEL11.byte)
#define	ICSEL11_PMSTSEL  	(IO_ICSEL11.bit.PMSTSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL13,attr=IO,locate=0x40D
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	ICUSEL0:2;
    } bit;
} ICSEL13STR;

__IO_EXTENDED	  ICSEL13STR	IO_ICSEL13;
#define	_icsel13		(IO_ICSEL13)
#define	ICSEL13		(IO_ICSEL13.byte)
#define	ICSEL13_ICUSEL0  	(IO_ICSEL13.bit.ICUSEL0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL14,attr=IO,locate=0x40E
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	ICUSEL1:2;
    } bit;
} ICSEL14STR;

__IO_EXTENDED	  ICSEL14STR	IO_ICSEL14;
#define	_icsel14		(IO_ICSEL14)
#define	ICSEL14		(IO_ICSEL14.byte)
#define	ICSEL14_ICUSEL1  	(IO_ICSEL14.bit.ICUSEL1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL15,attr=IO,locate=0x40F
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	ICUSEL2:2;
    } bit;
} ICSEL15STR;

__IO_EXTENDED	  ICSEL15STR	IO_ICSEL15;
#define	_icsel15		(IO_ICSEL15)
#define	ICSEL15		(IO_ICSEL15.byte)
#define	ICSEL15_ICUSEL2  	(IO_ICSEL15.bit.ICUSEL2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL16,attr=IO,locate=0x410
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	ICUSEL3:4;
    } bit;
} ICSEL16STR;

__IO_EXTENDED	  ICSEL16STR	IO_ICSEL16;
#define	_icsel16		(IO_ICSEL16)
#define	ICSEL16		(IO_ICSEL16.byte)
#define	ICSEL16_ICUSEL3  	(IO_ICSEL16.bit.ICUSEL3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL17,attr=IO,locate=0x411
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	ICUSEL4:2;
    } bit;
} ICSEL17STR;

__IO_EXTENDED	  ICSEL17STR	IO_ICSEL17;
#define	_icsel17		(IO_ICSEL17)
#define	ICSEL17		(IO_ICSEL17.byte)
#define	ICSEL17_ICUSEL4  	(IO_ICSEL17.bit.ICUSEL4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL18,attr=IO,locate=0x412
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	ICUSEL5:5;
    } bit;
} ICSEL18STR;

__IO_EXTENDED	  ICSEL18STR	IO_ICSEL18;
#define	_icsel18		(IO_ICSEL18)
#define	ICSEL18		(IO_ICSEL18.byte)
#define	ICSEL18_ICUSEL5  	(IO_ICSEL18.bit.ICUSEL5)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL19,attr=IO,locate=0x413
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	OCUSEL0:3;
    } bit;
} ICSEL19STR;

__IO_EXTENDED	  ICSEL19STR	IO_ICSEL19;
#define	_icsel19		(IO_ICSEL19)
#define	ICSEL19		(IO_ICSEL19.byte)
#define	ICSEL19_OCUSEL0  	(IO_ICSEL19.bit.OCUSEL0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL20,attr=IO,locate=0x414
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	OCUSEL1:3;
    } bit;
} ICSEL20STR;

__IO_EXTENDED	  ICSEL20STR	IO_ICSEL20;
#define	_icsel20		(IO_ICSEL20)
#define	ICSEL20		(IO_ICSEL20.byte)
#define	ICSEL20_OCUSEL1  	(IO_ICSEL20.bit.OCUSEL1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL21,attr=IO,locate=0x415
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	BT_SG_SEL0:2;
    } bit;
} ICSEL21STR;

__IO_EXTENDED	  ICSEL21STR	IO_ICSEL21;
#define	_icsel21		(IO_ICSEL21)
#define	ICSEL21		(IO_ICSEL21.byte)
#define	ICSEL21_BT_SG_SEL0  	(IO_ICSEL21.bit.BT_SG_SEL0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL22,attr=IO,locate=0x416
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	BT_SG_SEL1:2;
    } bit;
} ICSEL22STR;

__IO_EXTENDED	  ICSEL22STR	IO_ICSEL22;
#define	_icsel22		(IO_ICSEL22)
#define	ICSEL22		(IO_ICSEL22.byte)
#define	ICSEL22_BT_SG_SEL1  	(IO_ICSEL22.bit.BT_SG_SEL1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL23,attr=IO,locate=0x417
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	MFS_SEL0:2;
    } bit;
} ICSEL23STR;

__IO_EXTENDED	  ICSEL23STR	IO_ICSEL23;
#define	_icsel23		(IO_ICSEL23)
#define	ICSEL23		(IO_ICSEL23.byte)
#define	ICSEL23_MFS_SEL0  	(IO_ICSEL23.bit.MFS_SEL0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR0H,attr=IO,locate=0x418
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RTIR0:1;
        __BYTE	RTIR1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR0HSTR;

__IO_EXTENDED	 const  IRPR0HSTR	IO_IRPR0H;
#define	_irpr0h		(IO_IRPR0H)
#define	IRPR0H		(IO_IRPR0H.byte)
#define	IRPR0H_RTIR0  	(IO_IRPR0H.bit.RTIR0)
#define	IRPR0H_RTIR1  	(IO_IRPR0H.bit.RTIR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR0L,attr=IO,locate=0x419
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RTIR2:1;
        __BYTE	RTIR3:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR0LSTR;

__IO_EXTENDED	 const  IRPR0LSTR	IO_IRPR0L;
#define	_irpr0l		(IO_IRPR0L)
#define	IRPR0L		(IO_IRPR0L.byte)
#define	IRPR0L_RTIR2  	(IO_IRPR0L.bit.RTIR2)
#define	IRPR0L_RTIR3  	(IO_IRPR0L.bit.RTIR3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR1H,attr=IO,locate=0x41A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RXIR0:1;
        __BYTE	ISIR0:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR1HSTR;

__IO_EXTENDED	 const  IRPR1HSTR	IO_IRPR1H;
#define	_irpr1h		(IO_IRPR1H)
#define	IRPR1H		(IO_IRPR1H.byte)
#define	IRPR1H_RXIR0  	(IO_IRPR1H.bit.RXIR0)
#define	IRPR1H_ISIR0  	(IO_IRPR1H.bit.ISIR0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR1L,attr=IO,locate=0x41B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RXIR1:1;
        __BYTE	ISIR1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR1LSTR;

__IO_EXTENDED	 const  IRPR1LSTR	IO_IRPR1L;
#define	_irpr1l		(IO_IRPR1L)
#define	IRPR1L		(IO_IRPR1L.byte)
#define	IRPR1L_RXIR1  	(IO_IRPR1L.bit.RXIR1)
#define	IRPR1L_ISIR1  	(IO_IRPR1L.bit.ISIR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR3H,attr=IO,locate=0x41E
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	PPGIR0:1;
        __BYTE	PPGIR1:1;
        __BYTE	PPGIR10:1;
        __BYTE	PPGIR11:1;
        __BYTE	PPGIR20:1;
        __BYTE	PPGIR21:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR3HSTR;

__IO_EXTENDED	 const  IRPR3HSTR	IO_IRPR3H;
#define	_irpr3h		(IO_IRPR3H)
#define	IRPR3H		(IO_IRPR3H.byte)
#define	IRPR3H_PPGIR0  	(IO_IRPR3H.bit.PPGIR0)
#define	IRPR3H_PPGIR1  	(IO_IRPR3H.bit.PPGIR1)
#define	IRPR3H_PPGIR10  	(IO_IRPR3H.bit.PPGIR10)
#define	IRPR3H_PPGIR11  	(IO_IRPR3H.bit.PPGIR11)
#define	IRPR3H_PPGIR20  	(IO_IRPR3H.bit.PPGIR20)
#define	IRPR3H_PPGIR21  	(IO_IRPR3H.bit.PPGIR21)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR3L,attr=IO,locate=0x41F
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	PPGIR2:1;
        __BYTE	PPGIR3:1;
        __BYTE	PPGIR12:1;
        __BYTE	PPGIR13:1;
        __BYTE	PPGIR22:1;
        __BYTE	PPGIR23:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR3LSTR;

__IO_EXTENDED	 const  IRPR3LSTR	IO_IRPR3L;
#define	_irpr3l		(IO_IRPR3L)
#define	IRPR3L		(IO_IRPR3L.byte)
#define	IRPR3L_PPGIR2  	(IO_IRPR3L.bit.PPGIR2)
#define	IRPR3L_PPGIR3  	(IO_IRPR3L.bit.PPGIR3)
#define	IRPR3L_PPGIR12  	(IO_IRPR3L.bit.PPGIR12)
#define	IRPR3L_PPGIR13  	(IO_IRPR3L.bit.PPGIR13)
#define	IRPR3L_PPGIR22  	(IO_IRPR3L.bit.PPGIR22)
#define	IRPR3L_PPGIR23  	(IO_IRPR3L.bit.PPGIR23)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR4H,attr=IO,locate=0x420
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	PPGIR4:1;
        __BYTE	PPGIR5:1;
        __BYTE	PPGIR14:1;
        __BYTE	PPGIR15:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR4HSTR;

__IO_EXTENDED	 const  IRPR4HSTR	IO_IRPR4H;
#define	_irpr4h		(IO_IRPR4H)
#define	IRPR4H		(IO_IRPR4H.byte)
#define	IRPR4H_PPGIR4  	(IO_IRPR4H.bit.PPGIR4)
#define	IRPR4H_PPGIR5  	(IO_IRPR4H.bit.PPGIR5)
#define	IRPR4H_PPGIR14  	(IO_IRPR4H.bit.PPGIR14)
#define	IRPR4H_PPGIR15  	(IO_IRPR4H.bit.PPGIR15)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR4L,attr=IO,locate=0x421
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	PPGIR6:1;
        __BYTE	PPGIR7:1;
        __BYTE	PPGIR16:1;
        __BYTE	PPGIR17:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR4LSTR;

__IO_EXTENDED	 const  IRPR4LSTR	IO_IRPR4L;
#define	_irpr4l		(IO_IRPR4L)
#define	IRPR4L		(IO_IRPR4L.byte)
#define	IRPR4L_PPGIR6  	(IO_IRPR4L.bit.PPGIR6)
#define	IRPR4L_PPGIR7  	(IO_IRPR4L.bit.PPGIR7)
#define	IRPR4L_PPGIR16  	(IO_IRPR4L.bit.PPGIR16)
#define	IRPR4L_PPGIR17  	(IO_IRPR4L.bit.PPGIR17)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR5H,attr=IO,locate=0x422
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	PPGIR8:1;
        __BYTE	PPGIR9:1;
        __BYTE	PPGIR18:1;
        __BYTE	PPGIR19:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR5HSTR;

__IO_EXTENDED	 const  IRPR5HSTR	IO_IRPR5H;
#define	_irpr5h		(IO_IRPR5H)
#define	IRPR5H		(IO_IRPR5H.byte)
#define	IRPR5H_PPGIR8  	(IO_IRPR5H.bit.PPGIR8)
#define	IRPR5H_PPGIR9  	(IO_IRPR5H.bit.PPGIR9)
#define	IRPR5H_PPGIR18  	(IO_IRPR5H.bit.PPGIR18)
#define	IRPR5H_PPGIR19  	(IO_IRPR5H.bit.PPGIR19)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR5L,attr=IO,locate=0x423
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CANIR2:1;
        __BYTE	UDCIR0:1;
        __BYTE	UDCIR1:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR5LSTR;

__IO_EXTENDED	 const  IRPR5LSTR	IO_IRPR5L;
#define	_irpr5l		(IO_IRPR5L)
#define	IRPR5L		(IO_IRPR5L.byte)
#define	IRPR5L_CANIR2  	(IO_IRPR5L.bit.CANIR2)
#define	IRPR5L_UDCIR0  	(IO_IRPR5L.bit.UDCIR0)
#define	IRPR5L_UDCIR1  	(IO_IRPR5L.bit.UDCIR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR6H,attr=IO,locate=0x424
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RXIR8:1;
        __BYTE	ISIR8:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR6HSTR;

__IO_EXTENDED	 const  IRPR6HSTR	IO_IRPR6H;
#define	_irpr6h		(IO_IRPR6H)
#define	IRPR6H		(IO_IRPR6H.byte)
#define	IRPR6H_RXIR8  	(IO_IRPR6H.bit.RXIR8)
#define	IRPR6H_ISIR8  	(IO_IRPR6H.bit.ISIR8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR6L,attr=IO,locate=0x425
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	MTIR:1;
        __BYTE	STIR:1;
        __BYTE	PTIR:1;
        __BYTE	TXIR8:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR6LSTR;

__IO_EXTENDED	 const  IRPR6LSTR	IO_IRPR6L;
#define	_irpr6l		(IO_IRPR6L)
#define	IRPR6L		(IO_IRPR6L.byte)
#define	IRPR6L_MTIR  	(IO_IRPR6L.bit.MTIR)
#define	IRPR6L_STIR  	(IO_IRPR6L.bit.STIR)
#define	IRPR6L_PTIR  	(IO_IRPR6L.bit.PTIR)
#define	IRPR6L_TXIR8  	(IO_IRPR6L.bit.TXIR8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR7H,attr=IO,locate=0x426
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	SUBIR:1;
        __BYTE	RESV2:1;
        __BYTE	RXIR9:1;
        __BYTE	ISIR9:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR7HSTR;

__IO_EXTENDED	 const  IRPR7HSTR	IO_IRPR7H;
#define	_irpr7h		(IO_IRPR7H)
#define	IRPR7H		(IO_IRPR7H.byte)
#define	IRPR7H_SUBIR  	(IO_IRPR7H.bit.SUBIR)
#define	IRPR7H_RXIR9  	(IO_IRPR7H.bit.RXIR9)
#define	IRPR7H_ISIR9  	(IO_IRPR7H.bit.ISIR9)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR7L,attr=IO,locate=0x427
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	CRIR:1;
        __BYTE	TXIR9:1;
    } bit;
} IRPR7LSTR;

__IO_EXTENDED	 const  IRPR7LSTR	IO_IRPR7L;
#define	_irpr7l		(IO_IRPR7L)
#define	IRPR7L		(IO_IRPR7L.byte)
#define	IRPR7L_CRIR  	(IO_IRPR7L.bit.CRIR)
#define	IRPR7L_TXIR9  	(IO_IRPR7L.bit.TXIR9)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR8H,attr=IO,locate=0x428
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	FRTIR4:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR8HSTR;

__IO_EXTENDED	 const  IRPR8HSTR	IO_IRPR8H;
#define	_irpr8h		(IO_IRPR8H)
#define	IRPR8H		(IO_IRPR8H.byte)
#define	IRPR8H_FRTIR4  	(IO_IRPR8H.bit.FRTIR4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR8L,attr=IO,locate=0x429
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	FRTIR3:1;
        __BYTE	FRTIR5:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR8LSTR;

__IO_EXTENDED	 const  IRPR8LSTR	IO_IRPR8L;
#define	_irpr8l		(IO_IRPR8L)
#define	IRPR8L		(IO_IRPR8L.byte)
#define	IRPR8L_FRTIR3  	(IO_IRPR8L.bit.FRTIR3)
#define	IRPR8L_FRTIR5  	(IO_IRPR8L.bit.FRTIR5)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR9H,attr=IO,locate=0x42A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	ICUIR6:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR9HSTR;

__IO_EXTENDED	 const  IRPR9HSTR	IO_IRPR9H;
#define	_irpr9h		(IO_IRPR9H)
#define	IRPR9H		(IO_IRPR9H.byte)
#define	IRPR9H_ICUIR6  	(IO_IRPR9H.bit.ICUIR6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR9L,attr=IO,locate=0x42B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	ICUIR7:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR9LSTR;

__IO_EXTENDED	 const  IRPR9LSTR	IO_IRPR9L;
#define	_irpr9l		(IO_IRPR9L)
#define	IRPR9L		(IO_IRPR9L.byte)
#define	IRPR9L_ICUIR7  	(IO_IRPR9L.bit.ICUIR7)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR10H,attr=IO,locate=0x42C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	ICUIR8:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR10HSTR;

__IO_EXTENDED	 const  IRPR10HSTR	IO_IRPR10H;
#define	_irpr10h		(IO_IRPR10H)
#define	IRPR10H		(IO_IRPR10H.byte)
#define	IRPR10H_ICUIR8  	(IO_IRPR10H.bit.ICUIR8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR10L,attr=IO,locate=0x42D
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	ICUIR9:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR10LSTR;

__IO_EXTENDED	 const  IRPR10LSTR	IO_IRPR10L;
#define	_irpr10l		(IO_IRPR10L)
#define	IRPR10L		(IO_IRPR10L.byte)
#define	IRPR10L_ICUIR9  	(IO_IRPR10L.bit.ICUIR9)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR11H,attr=IO,locate=0x42E
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	ICUIR4:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR11HSTR;

__IO_EXTENDED	 const  IRPR11HSTR	IO_IRPR11H;
#define	_irpr11h		(IO_IRPR11H)
#define	IRPR11H		(IO_IRPR11H.byte)
#define	IRPR11H_ICUIR4  	(IO_IRPR11H.bit.ICUIR4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR11L,attr=IO,locate=0x42F
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	ICUIR5:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR11LSTR;

__IO_EXTENDED	 const  IRPR11LSTR	IO_IRPR11L;
#define	_irpr11l		(IO_IRPR11L)
#define	IRPR11L		(IO_IRPR11L.byte)
#define	IRPR11L_ICUIR5  	(IO_IRPR11L.bit.ICUIR5)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR12H,attr=IO,locate=0x430
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	OCUIR6:1;
        __BYTE	OCUIR7:1;
        __BYTE	OCUIR10:1;
        __BYTE	OCUIR11:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR12HSTR;

__IO_EXTENDED	 const  IRPR12HSTR	IO_IRPR12H;
#define	_irpr12h		(IO_IRPR12H)
#define	IRPR12H		(IO_IRPR12H.byte)
#define	IRPR12H_OCUIR6  	(IO_IRPR12H.bit.OCUIR6)
#define	IRPR12H_OCUIR7  	(IO_IRPR12H.bit.OCUIR7)
#define	IRPR12H_OCUIR10  	(IO_IRPR12H.bit.OCUIR10)
#define	IRPR12H_OCUIR11  	(IO_IRPR12H.bit.OCUIR11)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR12L,attr=IO,locate=0x431
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	OCUIR8:1;
        __BYTE	OCUIR9:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR12LSTR;

__IO_EXTENDED	 const  IRPR12LSTR	IO_IRPR12L;
#define	_irpr12l		(IO_IRPR12L)
#define	IRPR12L		(IO_IRPR12L.byte)
#define	IRPR12L_OCUIR8  	(IO_IRPR12L.bit.OCUIR8)
#define	IRPR12L_OCUIR9  	(IO_IRPR12L.bit.OCUIR9)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR13H,attr=IO,locate=0x432
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	BT0IR0:1;
        __BYTE	BT0IR1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR13HSTR;

__IO_EXTENDED	 const  IRPR13HSTR	IO_IRPR13H;
#define	_irpr13h		(IO_IRPR13H)
#define	IRPR13H		(IO_IRPR13H.byte)
#define	IRPR13H_BT0IR0  	(IO_IRPR13H.bit.BT0IR0)
#define	IRPR13H_BT0IR1  	(IO_IRPR13H.bit.BT0IR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR13L,attr=IO,locate=0x433
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	BT1IR0:1;
        __BYTE	BT1IR1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR13LSTR;

__IO_EXTENDED	 const  IRPR13LSTR	IO_IRPR13L;
#define	_irpr13l		(IO_IRPR13L)
#define	IRPR13L		(IO_IRPR13L.byte)
#define	IRPR13L_BT1IR0  	(IO_IRPR13L.bit.BT1IR0)
#define	IRPR13L_BT1IR1  	(IO_IRPR13L.bit.BT1IR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR14H,attr=IO,locate=0x434
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	DMAC0IR:1;
        __BYTE	DMAC1IR:1;
        __BYTE	DMAC2IR:1;
        __BYTE	DMAC3IR:1;
        __BYTE	DMAC4IR:1;
        __BYTE	DMAC5IR:1;
        __BYTE	DMAC6IR:1;
        __BYTE	DMAC7IR:1;
    } bit;
} IRPR14HSTR;

__IO_EXTENDED	 const  IRPR14HSTR	IO_IRPR14H;
#define	_irpr14h		(IO_IRPR14H)
#define	IRPR14H		(IO_IRPR14H.byte)
#define	IRPR14H_DMAC0IR  	(IO_IRPR14H.bit.DMAC0IR)
#define	IRPR14H_DMAC1IR  	(IO_IRPR14H.bit.DMAC1IR)
#define	IRPR14H_DMAC2IR  	(IO_IRPR14H.bit.DMAC2IR)
#define	IRPR14H_DMAC3IR  	(IO_IRPR14H.bit.DMAC3IR)
#define	IRPR14H_DMAC4IR  	(IO_IRPR14H.bit.DMAC4IR)
#define	IRPR14H_DMAC5IR  	(IO_IRPR14H.bit.DMAC5IR)
#define	IRPR14H_DMAC6IR  	(IO_IRPR14H.bit.DMAC6IR)
#define	IRPR14H_DMAC7IR  	(IO_IRPR14H.bit.DMAC7IR)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR14L,attr=IO,locate=0x435
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	DMAC8IR:1;
        __BYTE	DMAC9IR:1;
        __BYTE	DMAC10IR:1;
        __BYTE	DMAC11IR:1;
        __BYTE	DMAC12IR:1;
        __BYTE	DMAC13IR:1;
        __BYTE	DMAC14IR:1;
        __BYTE	DMAC15IR:1;
    } bit;
} IRPR14LSTR;

__IO_EXTENDED	 const  IRPR14LSTR	IO_IRPR14L;
#define	_irpr14l		(IO_IRPR14L)
#define	IRPR14L		(IO_IRPR14L.byte)
#define	IRPR14L_DMAC8IR  	(IO_IRPR14L.bit.DMAC8IR)
#define	IRPR14L_DMAC9IR  	(IO_IRPR14L.bit.DMAC9IR)
#define	IRPR14L_DMAC10IR  	(IO_IRPR14L.bit.DMAC10IR)
#define	IRPR14L_DMAC11IR  	(IO_IRPR14L.bit.DMAC11IR)
#define	IRPR14L_DMAC12IR  	(IO_IRPR14L.bit.DMAC12IR)
#define	IRPR14L_DMAC13IR  	(IO_IRPR14L.bit.DMAC13IR)
#define	IRPR14L_DMAC14IR  	(IO_IRPR14L.bit.DMAC14IR)
#define	IRPR14L_DMAC15IR  	(IO_IRPR14L.bit.DMAC15IR)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR15H,attr=IO,locate=0x436
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	EXTNMI:1;
        __BYTE	XB_ECC_DE:1;
        __BYTE	BR_ECC_DE:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR15HSTR;

__IO_EXTENDED	 const  IRPR15HSTR	IO_IRPR15H;
#define	_irpr15h		(IO_IRPR15H)
#define	IRPR15H		(IO_IRPR15H.byte)
#define	IRPR15H_EXTNMI  	(IO_IRPR15H.bit.EXTNMI)
#define	IRPR15H_XB_ECC_DE  	(IO_IRPR15H.bit.XB_ECC_DE)
#define	IRPR15H_BR_ECC_DE  	(IO_IRPR15H.bit.BR_ECC_DE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IRPR15L,attr=IO,locate=0x437
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CANIR1:1;
        __BYTE	XBTC:1;
        __BYTE	XBIC:1;
        __BYTE	XBTE:1;
        __BYTE	BRTC:1;
        __BYTE	BRIC:1;
        __BYTE	BRTE:1;
        __BYTE	RESV7:1;
    } bit;
} IRPR15LSTR;

__IO_EXTENDED	 const  IRPR15LSTR	IO_IRPR15L;
#define	_irpr15l		(IO_IRPR15L)
#define	IRPR15L		(IO_IRPR15L.byte)
#define	IRPR15L_CANIR1  	(IO_IRPR15L.bit.CANIR1)
#define	IRPR15L_XBTC  	(IO_IRPR15L.bit.XBTC)
#define	IRPR15L_XBIC  	(IO_IRPR15L.bit.XBIC)
#define	IRPR15L_XBTE  	(IO_IRPR15L.bit.XBTE)
#define	IRPR15L_BRTC  	(IO_IRPR15L.bit.BRTC)
#define	IRPR15L_BRIC  	(IO_IRPR15L.bit.BRIC)
#define	IRPR15L_BRTE  	(IO_IRPR15L.bit.BRTE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL24,attr=IO,locate=0x438
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	MFS_SEL1:2;
    } bit;
} ICSEL24STR;

__IO_EXTENDED	  ICSEL24STR	IO_ICSEL24;
#define	_icsel24		(IO_ICSEL24)
#define	ICSEL24		(IO_ICSEL24.byte)
#define	ICSEL24_MFS_SEL1  	(IO_ICSEL24.bit.MFS_SEL1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL25,attr=IO,locate=0x439
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	AD_SEL:5;
    } bit;
} ICSEL25STR;

__IO_EXTENDED	  ICSEL25STR	IO_ICSEL25;
#define	_icsel25		(IO_ICSEL25)
#define	ICSEL25		(IO_ICSEL25.byte)
#define	ICSEL25_AD_SEL  	(IO_ICSEL25.bit.AD_SEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL26,attr=IO,locate=0x43A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	OCU_SEL2:1;
    } bit;
} ICSEL26STR;

__IO_EXTENDED	  ICSEL26STR	IO_ICSEL26;
#define	_icsel26		(IO_ICSEL26)
#define	ICSEL26		(IO_ICSEL26.byte)
#define	ICSEL26_OCU_SEL2  	(IO_ICSEL26.bit.OCU_SEL2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICSEL27,attr=IO,locate=0x43B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	OCU_SEL3:1;
    } bit;
} ICSEL27STR;

__IO_EXTENDED	  ICSEL27STR	IO_ICSEL27;
#define	_icsel27		(IO_ICSEL27)
#define	ICSEL27		(IO_ICSEL27.byte)
#define	ICSEL27_OCU_SEL3  	(IO_ICSEL27.bit.OCU_SEL3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICR,attr=IO,locate=0x440
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	IL:5;
    } bit;
} ICRSTR;

__IO_EXTENDED	ICRSTR	IO_ICR[CONSTANT_48];

#define	ICR0	(IO_ICR[CONSTANT_0].byte)
#define	ICR0_IL  	(IO_ICR[CONSTANT_0].bit.IL)
#define	ICR1	(IO_ICR[CONSTANT_1].byte)
#define	ICR1_IL  	(IO_ICR[CONSTANT_1].bit.IL)
#define	ICR2	(IO_ICR[CONSTANT_2].byte)
#define	ICR2_IL  	(IO_ICR[CONSTANT_2].bit.IL)
#define	ICR3	(IO_ICR[CONSTANT_3].byte)
#define	ICR3_IL  	(IO_ICR[CONSTANT_3].bit.IL)
#define	ICR4	(IO_ICR[CONSTANT_4].byte)
#define	ICR4_IL  	(IO_ICR[CONSTANT_4].bit.IL)
#define	ICR5	(IO_ICR[CONSTANT_5].byte)
#define	ICR5_IL  	(IO_ICR[CONSTANT_5].bit.IL)
#define	ICR6	(IO_ICR[CONSTANT_6].byte)
#define	ICR6_IL  	(IO_ICR[CONSTANT_6].bit.IL)
#define	ICR7	(IO_ICR[CONSTANT_7].byte)
#define	ICR7_IL  	(IO_ICR[CONSTANT_7].bit.IL)
#define	ICR8	(IO_ICR[CONSTANT_8].byte)
#define	ICR8_IL  	(IO_ICR[CONSTANT_8].bit.IL)
#define	ICR9	(IO_ICR[CONSTANT_9].byte)
#define	ICR9_IL  	(IO_ICR[CONSTANT_9].bit.IL)
#define	ICR10	(IO_ICR[CONSTANT_10].byte)
#define	ICR10_IL  	(IO_ICR[CONSTANT_10].bit.IL)
#define	ICR11	(IO_ICR[CONSTANT_11].byte)
#define	ICR11_IL  	(IO_ICR[CONSTANT_11].bit.IL)
#define	ICR12	(IO_ICR[CONSTANT_12].byte)
#define	ICR12_IL  	(IO_ICR[CONSTANT_12].bit.IL)
#define	ICR13	(IO_ICR[CONSTANT_13].byte)
#define	ICR13_IL  	(IO_ICR[CONSTANT_13].bit.IL)
#define	ICR14	(IO_ICR[CONSTANT_14].byte)
#define	ICR14_IL  	(IO_ICR[CONSTANT_14].bit.IL)
#define	ICR15	(IO_ICR[CONSTANT_15].byte)
#define	ICR15_IL  	(IO_ICR[CONSTANT_15].bit.IL)
#define	ICR16	(IO_ICR[CONSTANT_16].byte)
#define	ICR16_IL  	(IO_ICR[CONSTANT_16].bit.IL)
#define	ICR17	(IO_ICR[CONSTANT_17].byte)
#define	ICR17_IL  	(IO_ICR[CONSTANT_17].bit.IL)
#define	ICR18	(IO_ICR[CONSTANT_18].byte)
#define	ICR18_IL  	(IO_ICR[CONSTANT_18].bit.IL)
#define	ICR19	(IO_ICR[CONSTANT_19].byte)
#define	ICR19_IL  	(IO_ICR[CONSTANT_19].bit.IL)
#define	ICR20	(IO_ICR[CONSTANT_20].byte)
#define	ICR20_IL  	(IO_ICR[CONSTANT_20].bit.IL)
#define	ICR21	(IO_ICR[CONSTANT_21].byte)
#define	ICR21_IL  	(IO_ICR[CONSTANT_21].bit.IL)
#define	ICR22	(IO_ICR[CONSTANT_22].byte)
#define	ICR22_IL  	(IO_ICR[CONSTANT_22].bit.IL)
#define	ICR23	(IO_ICR[CONSTANT_23].byte)
#define	ICR23_IL  	(IO_ICR[CONSTANT_23].bit.IL)
#define	ICR24	(IO_ICR[CONSTANT_24].byte)
#define	ICR24_IL  	(IO_ICR[CONSTANT_24].bit.IL)
#define	ICR25	(IO_ICR[CONSTANT_25].byte)
#define	ICR25_IL  	(IO_ICR[CONSTANT_25].bit.IL)
#define	ICR26	(IO_ICR[CONSTANT_26].byte)
#define	ICR26_IL  	(IO_ICR[CONSTANT_26].bit.IL)
#define	ICR27	(IO_ICR[CONSTANT_27].byte)
#define	ICR27_IL  	(IO_ICR[CONSTANT_27].bit.IL)
#define	ICR28	(IO_ICR[CONSTANT_28].byte)
#define	ICR28_IL  	(IO_ICR[CONSTANT_28].bit.IL)
#define	ICR29	(IO_ICR[CONSTANT_29].byte)
#define	ICR29_IL  	(IO_ICR[CONSTANT_29].bit.IL)
#define	ICR30	(IO_ICR[CONSTANT_30].byte)
#define	ICR30_IL  	(IO_ICR[CONSTANT_30].bit.IL)
#define	ICR31	(IO_ICR[CONSTANT_31].byte)
#define	ICR31_IL  	(IO_ICR[CONSTANT_31].bit.IL)
#define	ICR32	(IO_ICR[CONSTANT_32].byte)
#define	ICR32_IL  	(IO_ICR[CONSTANT_32].bit.IL)
#define	ICR33	(IO_ICR[CONSTANT_33].byte)
#define	ICR33_IL  	(IO_ICR[CONSTANT_33].bit.IL)
#define	ICR34	(IO_ICR[CONSTANT_34].byte)
#define	ICR34_IL  	(IO_ICR[CONSTANT_34].bit.IL)
#define	ICR35	(IO_ICR[CONSTANT_35].byte)
#define	ICR35_IL  	(IO_ICR[CONSTANT_35].bit.IL)
#define	ICR36	(IO_ICR[CONSTANT_36].byte)
#define	ICR36_IL  	(IO_ICR[CONSTANT_36].bit.IL)
#define	ICR37	(IO_ICR[CONSTANT_37].byte)
#define	ICR37_IL  	(IO_ICR[CONSTANT_37].bit.IL)
#define	ICR38	(IO_ICR[CONSTANT_38].byte)
#define	ICR38_IL  	(IO_ICR[CONSTANT_38].bit.IL)
#define	ICR39	(IO_ICR[CONSTANT_39].byte)
#define	ICR39_IL  	(IO_ICR[CONSTANT_39].bit.IL)
#define	ICR40	(IO_ICR[CONSTANT_40].byte)
#define	ICR40_IL  	(IO_ICR[CONSTANT_40].bit.IL)
#define	ICR41	(IO_ICR[CONSTANT_41].byte)
#define	ICR41_IL  	(IO_ICR[CONSTANT_41].bit.IL)
#define	ICR42	(IO_ICR[CONSTANT_42].byte)
#define	ICR42_IL  	(IO_ICR[CONSTANT_42].bit.IL)
#define	ICR43	(IO_ICR[CONSTANT_43].byte)
#define	ICR43_IL  	(IO_ICR[CONSTANT_43].bit.IL)
#define	ICR44	(IO_ICR[CONSTANT_44].byte)
#define	ICR44_IL  	(IO_ICR[CONSTANT_44].bit.IL)
#define	ICR45	(IO_ICR[CONSTANT_45].byte)
#define	ICR45_IL  	(IO_ICR[CONSTANT_45].bit.IL)
#define	ICR46	(IO_ICR[CONSTANT_46].byte)
#define	ICR46_IL  	(IO_ICR[CONSTANT_46].bit.IL)
#define	ICR47	(IO_ICR[CONSTANT_47].byte)
#define	ICR47_IL  	(IO_ICR[CONSTANT_47].bit.IL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_RSTRR,attr=IO,locate=0x480
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	IRRST:1;
        __BYTE	ERST:1;
        __BYTE	WDG1:1;
        __BYTE	WDG0:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	SCRT:1;
        __BYTE	SRST:1;
    } bit;
} RSTRRSTR;

__IO_EXTENDED	 const  RSTRRSTR	IO_RSTRR;
#define	_rstrr		(IO_RSTRR)
#define	RSTRR		(IO_RSTRR.byte)
#define	RSTRR_IRRST  	(IO_RSTRR.bit.IRRST)
#define	RSTRR_ERST  	(IO_RSTRR.bit.ERST)
#define	RSTRR_WDG1  	(IO_RSTRR.bit.WDG1)
#define	RSTRR_WDG0  	(IO_RSTRR.bit.WDG0)
#define	RSTRR_SCRT  	(IO_RSTRR.bit.SCRT)
#define	RSTRR_SRST  	(IO_RSTRR.bit.SRST)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_RSTCR,attr=IO,locate=0x481
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RDLY:3;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	SRST:1;
    } bit;
} RSTCRSTR;

__IO_EXTENDED	  RSTCRSTR	IO_RSTCR;
#define	_rstcr		(IO_RSTCR)
#define	RSTCR		(IO_RSTCR.byte)
#define	RSTCR_RDLY  	(IO_RSTCR.bit.RDLY)
#define	RSTCR_SRST  	(IO_RSTCR.bit.SRST)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_STBCR,attr=IO,locate=0x482
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	STOP:1;
        __BYTE	TIMER:1;
        __BYTE	SLEEP:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	SLVL:2;
    } bit;
} STBCRSTR;

__IO_EXTENDED	  STBCRSTR	IO_STBCR;
#define	_stbcr		(IO_STBCR)
#define	STBCR		(IO_STBCR.byte)
#define	STBCR_STOP  	(IO_STBCR.bit.STOP)
#define	STBCR_TIMER  	(IO_STBCR.bit.TIMER)
#define	STBCR_SLEEP  	(IO_STBCR.bit.SLEEP)
#define	STBCR_SLVL  	(IO_STBCR.bit.SLVL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DIVR0,attr=IO,locate=0x488
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	DIVB:3;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
    } bit;
} DIVR0STR;

__IO_EXTENDED	  DIVR0STR	IO_DIVR0;
#define	_divr0		(IO_DIVR0)
#define	DIVR0		(IO_DIVR0.byte)
#define	DIVR0_DIVB  	(IO_DIVR0.bit.DIVB)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DIVR1,attr=IO,locate=0x489
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	TSTP:1;
        __BYTE	DIVT:3;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
    } bit;
} DIVR1STR;

__IO_EXTENDED	  DIVR1STR	IO_DIVR1;
#define	_divr1		(IO_DIVR1)
#define	DIVR1		(IO_DIVR1.byte)
#define	DIVR1_TSTP  	(IO_DIVR1.bit.TSTP)
#define	DIVR1_DIVT  	(IO_DIVR1.bit.DIVT)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DIVR2,attr=IO,locate=0x48A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	DIVP:4;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
    } bit;
} DIVR2STR;

__IO_EXTENDED	  DIVR2STR	IO_DIVR2;
#define	_divr2		(IO_DIVR2)
#define	DIVR2		(IO_DIVR2.byte)
#define	DIVR2_DIVP  	(IO_DIVR2.bit.DIVP)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IORR00,attr=IO,locate=0x490
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	IOE:1;
        __BYTE	IOS:6;
    } bit;
} IORR00STR;

__IO_EXTENDED	  IORR00STR	IO_IORR00;
#define	_iorr00		(IO_IORR00)
#define	IORR00		(IO_IORR00.byte)
#define	IORR00_IOE  	(IO_IORR00.bit.IOE)
#define	IORR00_IOS  	(IO_IORR00.bit.IOS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IORR01,attr=IO,locate=0x491
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	IOE:1;
        __BYTE	IOS:6;
    } bit;
} IORR01STR;

__IO_EXTENDED	  IORR01STR	IO_IORR01;
#define	_iorr01		(IO_IORR01)
#define	IORR01		(IO_IORR01.byte)
#define	IORR01_IOE  	(IO_IORR01.bit.IOE)
#define	IORR01_IOS  	(IO_IORR01.bit.IOS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IORR02,attr=IO,locate=0x492
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	IOE:1;
        __BYTE	IOS:6;
    } bit;
} IORR02STR;

__IO_EXTENDED	  IORR02STR	IO_IORR02;
#define	_iorr02		(IO_IORR02)
#define	IORR02		(IO_IORR02.byte)
#define	IORR02_IOE  	(IO_IORR02.bit.IOE)
#define	IORR02_IOS  	(IO_IORR02.bit.IOS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IORR03,attr=IO,locate=0x493
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	IOE:1;
        __BYTE	IOS:6;
    } bit;
} IORR03STR;

__IO_EXTENDED	  IORR03STR	IO_IORR03;
#define	_iorr03		(IO_IORR03)
#define	IORR03		(IO_IORR03.byte)
#define	IORR03_IOE  	(IO_IORR03.bit.IOE)
#define	IORR03_IOS  	(IO_IORR03.bit.IOS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IORR04,attr=IO,locate=0x494
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	IOE:1;
        __BYTE	IOS:6;
    } bit;
} IORR04STR;

__IO_EXTENDED	  IORR04STR	IO_IORR04;
#define	_iorr04		(IO_IORR04)
#define	IORR04		(IO_IORR04.byte)
#define	IORR04_IOE  	(IO_IORR04.bit.IOE)
#define	IORR04_IOS  	(IO_IORR04.bit.IOS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IORR05,attr=IO,locate=0x495
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	IOE:1;
        __BYTE	IOS:6;
    } bit;
} IORR05STR;

__IO_EXTENDED	  IORR05STR	IO_IORR05;
#define	_iorr05		(IO_IORR05)
#define	IORR05		(IO_IORR05.byte)
#define	IORR05_IOE  	(IO_IORR05.bit.IOE)
#define	IORR05_IOS  	(IO_IORR05.bit.IOS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IORR06,attr=IO,locate=0x496
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	IOE:1;
        __BYTE	IOS:6;
    } bit;
} IORR06STR;

__IO_EXTENDED	  IORR06STR	IO_IORR06;
#define	_iorr06		(IO_IORR06)
#define	IORR06		(IO_IORR06.byte)
#define	IORR06_IOE  	(IO_IORR06.bit.IOE)
#define	IORR06_IOS  	(IO_IORR06.bit.IOS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IORR07,attr=IO,locate=0x497
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	IOE:1;
        __BYTE	IOS:6;
    } bit;
} IORR07STR;

__IO_EXTENDED	  IORR07STR	IO_IORR07;
#define	_iorr07		(IO_IORR07)
#define	IORR07		(IO_IORR07.byte)
#define	IORR07_IOE  	(IO_IORR07.bit.IOE)
#define	IORR07_IOS  	(IO_IORR07.bit.IOS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IORR08,attr=IO,locate=0x498
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	IOE:1;
        __BYTE	IOS:6;
    } bit;
} IORR08STR;

__IO_EXTENDED	  IORR08STR	IO_IORR08;
#define	_iorr08		(IO_IORR08)
#define	IORR08		(IO_IORR08.byte)
#define	IORR08_IOE  	(IO_IORR08.bit.IOE)
#define	IORR08_IOS  	(IO_IORR08.bit.IOS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IORR09,attr=IO,locate=0x499
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	IOE:1;
        __BYTE	IOS:6;
    } bit;
} IORR09STR;

__IO_EXTENDED	  IORR09STR	IO_IORR09;
#define	_iorr09		(IO_IORR09)
#define	IORR09		(IO_IORR09.byte)
#define	IORR09_IOE  	(IO_IORR09.bit.IOE)
#define	IORR09_IOS  	(IO_IORR09.bit.IOS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IORR10,attr=IO,locate=0x49A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	IOE:1;
        __BYTE	IOS:6;
    } bit;
} IORR10STR;

__IO_EXTENDED	  IORR10STR	IO_IORR10;
#define	_iorr10		(IO_IORR10)
#define	IORR10		(IO_IORR10.byte)
#define	IORR10_IOE  	(IO_IORR10.bit.IOE)
#define	IORR10_IOS  	(IO_IORR10.bit.IOS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IORR11,attr=IO,locate=0x49B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	IOE:1;
        __BYTE	IOS:6;
    } bit;
} IORR11STR;

__IO_EXTENDED	  IORR11STR	IO_IORR11;
#define	_iorr11		(IO_IORR11)
#define	IORR11		(IO_IORR11.byte)
#define	IORR11_IOE  	(IO_IORR11.bit.IOE)
#define	IORR11_IOS  	(IO_IORR11.bit.IOS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IORR12,attr=IO,locate=0x49C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	IOE:1;
        __BYTE	IOS:6;
    } bit;
} IORR12STR;

__IO_EXTENDED	  IORR12STR	IO_IORR12;
#define	_iorr12		(IO_IORR12)
#define	IORR12		(IO_IORR12.byte)
#define	IORR12_IOE  	(IO_IORR12.bit.IOE)
#define	IORR12_IOS  	(IO_IORR12.bit.IOS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IORR13,attr=IO,locate=0x49D
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	IOE:1;
        __BYTE	IOS:6;
    } bit;
} IORR13STR;

__IO_EXTENDED	  IORR13STR	IO_IORR13;
#define	_iorr13		(IO_IORR13)
#define	IORR13		(IO_IORR13.byte)
#define	IORR13_IOE  	(IO_IORR13.bit.IOE)
#define	IORR13_IOS  	(IO_IORR13.bit.IOS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IORR14,attr=IO,locate=0x49E
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	IOE:1;
        __BYTE	IOS:6;
    } bit;
} IORR14STR;

__IO_EXTENDED	  IORR14STR	IO_IORR14;
#define	_iorr14		(IO_IORR14)
#define	IORR14		(IO_IORR14.byte)
#define	IORR14_IOE  	(IO_IORR14.bit.IOE)
#define	IORR14_IOS  	(IO_IORR14.bit.IOS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IORR15,attr=IO,locate=0x49F
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	IOE:1;
        __BYTE	IOS:6;
    } bit;
} IORR15STR;

__IO_EXTENDED	  IORR15STR	IO_IORR15;
#define	_iorr15		(IO_IORR15)
#define	IORR15		(IO_IORR15.byte)
#define	IORR15_IOE  	(IO_IORR15.bit.IOE)
#define	IORR15_IOS  	(IO_IORR15.bit.IOS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CANPRE,attr=IO,locate=0x4A4
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	CPCKS:1;
        __BYTE	CANPRE:4;
    } bit;
} CANPRESTR;

__IO_EXTENDED	  CANPRESTR	IO_CANPRE;
#define	_canpre		(IO_CANPRE)
#define	CANPRE_		(IO_CANPRE.byte)
#define	CANPRE_CPCKS  	(IO_CANPRE.bit.CPCKS)
#define	CANPRE_CANPRE  	(IO_CANPRE.bit.CANPRE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CSCFG,attr=IO,locate=0x4AA
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	MONCKI:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} CSCFGSTR;

__IO_EXTENDED	  CSCFGSTR	IO_CSCFG;
#define	_cscfg		(IO_CSCFG)
#define	CSCFG		(IO_CSCFG.byte)
#define	CSCFG_MONCKI  	(IO_CSCFG.bit.MONCKI)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CMCFG,attr=IO,locate=0x4AB
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CMPRE:4;
        __BYTE	CMSEL:4;
    } bit;
} CMCFGSTR;

__IO_EXTENDED	  CMCFGSTR	IO_CMCFG;
#define	_cmcfg		(IO_CMCFG)
#define	CMCFG		(IO_CMCFG.byte)
#define	CMCFG_CMPRE  	(IO_CMCFG.bit.CMPRE)
#define	CMCFG_CMSEL  	(IO_CMCFG.bit.CMSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADERH0,attr=IO,locate=0x4AC
#endif

__IO_EXTENDED	__HWORD	IO_ADERH0;
#define	_aderh0		(IO_ADERH0)
#define	ADERH0	(_aderh0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADERL0,attr=IO,locate=0x4AE
#endif

__IO_EXTENDED	__HWORD	IO_ADERL0;
#define	_aderl0		(IO_ADERL0)
#define	ADERL0	(_aderl0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADERL1,attr=IO,locate=0x4B2
#endif

__IO_EXTENDED	__HWORD	IO_ADERL1;
#define	_aderl1		(IO_ADERL1)
#define	ADERL1	(_aderl1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CUCR0,attr=IO,locate=0x4B8
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __BYTE	CUCR0H;
        __BYTE	CUCR0L;
    } byte;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	STRT:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
        __HWORD	INT:1;
        __HWORD	INTEN:1;
    } bit;
} CUCR0STR;

__IO_EXTENDED	  CUCR0STR	IO_CUCR0;
#define	_cucr0		(IO_CUCR0)
#define	CUCR0		(IO_CUCR0.hword)
#define	CUCR0_CUCR0H	(IO_CUCR0.byte.CUCR0H)
#define	CUCR0_CUCR0L	(IO_CUCR0.byte.CUCR0L)
#define	CUCR0_STRT  	(IO_CUCR0.bit.STRT)
#define	CUCR0_INT  	(IO_CUCR0.bit.INT)
#define	CUCR0_INTEN  	(IO_CUCR0.bit.INTEN)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CUTD0,attr=IO,locate=0x4BA
#endif

__IO_EXTENDED	union
{
    __HWORD	hword;
    struct
    {
        __BYTE	CUTD0H;
        __BYTE	CUTD0L;
    } byte;
} IO_CUTD0;

#define	CUTD0_		(IO_CUTD0.hword)
#define	CUTD0_CUTD0H	(IO_CUTD0.byte.CUTD0H)
#define	CUTD0_CUTD0L	(IO_CUTD0.byte.CUTD0L)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CUTR0,attr=IO,locate=0x4BC
#endif

__IO_EXTENDED	const	union
{
    __WORD	word;
    struct
    {
        __HWORD	CUTR0H;
        __HWORD	CUTR0L;
    } hword;
    struct
    {
        __BYTE	CUTR0HH;
        __BYTE	CUTR0HL;
        __BYTE	CUTR0LH;
        __BYTE	CUTR0LL;
    } byte;
} IO_CUTR0;

#define	CUTR0_		(IO_CUTR0.word)
#define	CUTR0_CUTR0H	(IO_CUTR0.hword.CUTR0H)
#define	CUTR0_CUTR0L	(IO_CUTR0.hword.CUTR0L)
#define	CUTR0_CUTR0HH	(IO_CUTR0.byte.CUTR0HH)
#define	CUTR0_CUTR0HL	(IO_CUTR0.byte.CUTR0HL)
#define	CUTR0_CUTR0LH	(IO_CUTR0.byte.CUTR0LH)
#define	CUTR0_CUTR0LL	(IO_CUTR0.byte.CUTR0LL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CUCR1,attr=IO,locate=0x4C4
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __BYTE	CUCR1H;
        __BYTE	CUCR1L;
    } byte;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	STRT:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
        __HWORD	INT:1;
        __HWORD	INTEN:1;
    } bit;
} CUCR1STR;

__IO_EXTENDED	  CUCR1STR	IO_CUCR1;
#define	_cucr1		(IO_CUCR1)
#define	CUCR1		(IO_CUCR1.hword)
#define	CUCR1_CUCR1H	(IO_CUCR1.byte.CUCR1H)
#define	CUCR1_CUCR1L	(IO_CUCR1.byte.CUCR1L)
#define	CUCR1_STRT  	(IO_CUCR1.bit.STRT)
#define	CUCR1_INT  	(IO_CUCR1.bit.INT)
#define	CUCR1_INTEN  	(IO_CUCR1.bit.INTEN)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CUTD1,attr=IO,locate=0x4C6
#endif

__IO_EXTENDED	union
{
    __HWORD	hword;
    struct
    {
        __BYTE	CUTD1H;
        __BYTE	CUTD1L;
    } byte;
} IO_CUTD1;

#define	CUTD1_		(IO_CUTD1.hword)
#define	CUTD1_CUTD1H	(IO_CUTD1.byte.CUTD1H)
#define	CUTD1_CUTD1L	(IO_CUTD1.byte.CUTD1L)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CUTR1,attr=IO,locate=0x4C8
#endif

__IO_EXTENDED	const	union
{
    __WORD	word;
    struct
    {
        __HWORD	CUTR1H;
        __HWORD	CUTR1L;
    } hword;
    struct
    {
        __BYTE	CUTR1HH;
        __BYTE	CUTR1HL;
        __BYTE	CUTR1LH;
        __BYTE	CUTR1LL;
    } byte;
} IO_CUTR1;

#define	CUTR1_		(IO_CUTR1.word)
#define	CUTR1_CUTR1H	(IO_CUTR1.hword.CUTR1H)
#define	CUTR1_CUTR1L	(IO_CUTR1.hword.CUTR1L)
#define	CUTR1_CUTR1HH	(IO_CUTR1.byte.CUTR1HH)
#define	CUTR1_CUTR1HL	(IO_CUTR1.byte.CUTR1HL)
#define	CUTR1_CUTR1LH	(IO_CUTR1.byte.CUTR1LH)
#define	CUTR1_CUTR1LL	(IO_CUTR1.byte.CUTR1LL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CLKG,attr=IO,locate=0x510
#endif

typedef struct
{
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	SCEN:1;
            __BYTE	PCEN:1;
            __BYTE	MCEN:1;
            __BYTE	RESV03:1;
            __BYTE	RESV04:1;
            __BYTE	RESV05:1;
            __BYTE	CKS:2;
        } bit;
    } IO_CSELR;
    const union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	SCRDY:1;
            __BYTE	PCRDY:1;
            __BYTE	MCRDY:1;
            __BYTE	RESV13:1;
            __BYTE	RESV14:1;
            __BYTE	RESV15:1;
            __BYTE	CKM:2;
        } bit;
    } IO_CMONR;
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	MTIF:1;
            __BYTE	MTIE:1;
            __BYTE	MTC:1;
            __BYTE	MTE:1;
            __BYTE	MTS:4;
        } bit;
    } IO_MTMCR;
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	STIF:1;
            __BYTE	STIE:1;
            __BYTE	STC:1;
            __BYTE	STE:1;
            __BYTE	RESV34:1;
            __BYTE	STS:3;
        } bit;
    } IO_STMCR;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	PLLCRH;
            __BYTE	PLLCRL;
        } byte;
        struct
        {
            __BYTE	RESV40:1;
            __BYTE	RESV41:1;
            __BYTE	RESV42:1;
            __BYTE	RESV43:1;
            __BYTE	RESV44:1;
            __BYTE	RESV45:1;
            __BYTE	RESV46:1;
            __BYTE	RESV47:1;
            __BYTE	POSW:4;
            __BYTE	PDS:4;
        } bit;
    } IO_PLLCR;
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	RESV60:1;
            __BYTE	SOSW:3;
            __BYTE	MOSW:4;
        } bit;
    } IO_CSTBR;
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	PTIF:1;
            __BYTE	PTIE:1;
            __BYTE	RESV72:1;
            __BYTE	RESV73:1;
            __BYTE	RESV74:1;
            __BYTE	RESV75:1;
            __BYTE	RESV76:1;
            __BYTE	RESV77:1;
        } bit;
    } IO_PTMCR;
} IO_CLKG_STR;
__IO_EXTENDED  IO_CLKG_STR	IO_CLKG;
#define	CLKG_CSELR			(IO_CLKG.IO_CSELR.byte)
#define	CLKG_CSELR_SCEN    	(IO_CLKG.IO_CSELR.bit.SCEN)
#define	CLKG_CSELR_PCEN    	(IO_CLKG.IO_CSELR.bit.PCEN)
#define	CLKG_CSELR_MCEN    	(IO_CLKG.IO_CSELR.bit.MCEN)
#define	CLKG_CSELR_CKS    	(IO_CLKG.IO_CSELR.bit.CKS)
#define	CLKG_CMONR			(IO_CLKG.IO_CMONR.byte)
#define	CLKG_CMONR_SCRDY    	(IO_CLKG.IO_CMONR.bit.SCRDY)
#define	CLKG_CMONR_PCRDY    	(IO_CLKG.IO_CMONR.bit.PCRDY)
#define	CLKG_CMONR_MCRDY    	(IO_CLKG.IO_CMONR.bit.MCRDY)
#define	CLKG_CMONR_CKM    	(IO_CLKG.IO_CMONR.bit.CKM)
#define	CLKG_MTMCR			(IO_CLKG.IO_MTMCR.byte)
#define	CLKG_MTMCR_MTIF    	(IO_CLKG.IO_MTMCR.bit.MTIF)
#define	CLKG_MTMCR_MTIE    	(IO_CLKG.IO_MTMCR.bit.MTIE)
#define	CLKG_MTMCR_MTC    	(IO_CLKG.IO_MTMCR.bit.MTC)
#define	CLKG_MTMCR_MTE    	(IO_CLKG.IO_MTMCR.bit.MTE)
#define	CLKG_MTMCR_MTS    	(IO_CLKG.IO_MTMCR.bit.MTS)
#define	CLKG_STMCR			(IO_CLKG.IO_STMCR.byte)
#define	CLKG_STMCR_STIF    	(IO_CLKG.IO_STMCR.bit.STIF)
#define	CLKG_STMCR_STIE    	(IO_CLKG.IO_STMCR.bit.STIE)
#define	CLKG_STMCR_STC    	(IO_CLKG.IO_STMCR.bit.STC)
#define	CLKG_STMCR_STE    	(IO_CLKG.IO_STMCR.bit.STE)
#define	CLKG_STMCR_STS    	(IO_CLKG.IO_STMCR.bit.STS)
#define	CLKG_PLLCR			(IO_CLKG.IO_PLLCR.hword)
#define	CLKG_PLLCR_PLLCRH			(IO_CLKG.IO_PLLCR.byte.PLLCRH)
#define	CLKG_PLLCR_PLLCRL			(IO_CLKG.IO_PLLCR.byte.PLLCRL)
#define	CLKG_PLLCR_POSW    	(IO_CLKG.IO_PLLCR.bit.POSW)
#define	CLKG_PLLCR_PDS    	(IO_CLKG.IO_PLLCR.bit.PDS)
#define	CLKG_CSTBR			(IO_CLKG.IO_CSTBR.byte)
#define	CLKG_CSTBR_SOSW    	(IO_CLKG.IO_CSTBR.bit.SOSW)
#define	CLKG_CSTBR_MOSW    	(IO_CLKG.IO_CSTBR.bit.MOSW)
#define	CLKG_PTMCR			(IO_CLKG.IO_PTMCR.byte)
#define	CLKG_PTMCR_PTIF    	(IO_CLKG.IO_PTMCR.bit.PTIF)
#define	CLKG_PTMCR_PTIE    	(IO_CLKG.IO_PTMCR.bit.PTIE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CPUAR,attr=IO,locate=0x51A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	PSTRE:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	PMDF:1;
        __BYTE	PSTF:1;
        __BYTE	HWDF:1;
    } bit;
} CPUARSTR;

__IO_EXTENDED	  CPUARSTR	IO_CPUAR;
#define	_cpuar		(IO_CPUAR)
#define	CPUAR		(IO_CPUAR.byte)
#define	CPUAR_PSTRE  	(IO_CPUAR.bit.PSTRE)
#define	CPUAR_PMDF  	(IO_CPUAR.bit.PMDF)
#define	CPUAR_PSTF  	(IO_CPUAR.bit.PSTF)
#define	CPUAR_HWDF  	(IO_CPUAR.bit.HWDF)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CCTL,attr=IO,locate=0x520
#endif

typedef	struct
{
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	RESV00:1;
            __BYTE	RESV01:1;
            __BYTE	RESV02:1;
            __BYTE	RESV03:1;
            __BYTE	RESV04:1;
            __BYTE	RESV05:1;
            __BYTE	RESV06:1;
            __BYTE	PCSEL:1;
        } bit;
    } IO_CCPSSELR;
    __BYTE	IO_RESV1;
    __BYTE	IO_RESV2;
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	RESV30:1;
            __BYTE	PODS:3;
            __BYTE	RESV32:1;
            __BYTE	SODS:3;
        } bit;
    } IO_CCPSDIVR;
    __BYTE	IO_RESV3;
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	RESV50:1;
            __BYTE	IDIV:7;
        } bit;
    } IO_CCPLLFBR;
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	RESV60:1;
            __BYTE	RESV61:1;
            __BYTE	NDIV:6;
        } bit;
    } IO_CCSSFBR0;
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	RESV70:1;
            __BYTE	RESV71:1;
            __BYTE	RESV72:1;
            __BYTE	PDIV:5;
        } bit;
    } IO_CCSSFBR1;
    __BYTE	IO_RESV4;
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	RESV90:1;
            __BYTE	RESV91:1;
            __BYTE	RESV92:1;
            __BYTE	RESV93:1;
            __BYTE	SFREQ:2;
            __BYTE	SMODE:1;
            __BYTE	SSEN:1;
        } bit;
    } IO_CCSSCCR0;
    union
    {
        __HWORD	hword;
        struct
        {
            __HWORD	RATESEL:3;
            __HWORD	RESV101:1;
            __HWORD	RESV102:1;
            __HWORD	RESV103:1;
            __HWORD	RESV104:1;
            __HWORD	RESV105:1;
            __HWORD	RESV106:1;
            __HWORD	RESV107:1;
            __HWORD	RESV108:1;
            __HWORD	RESV109:1;
            __HWORD	RESV1010:1;
            __HWORD	RESV1011:1;
            __HWORD	RESV1012:1;
            __HWORD	RESV1013:1;
        } bit;
    } IO_CCSSCCR1;
    __BYTE	IO_RESV5;
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	GRSTS:2;
            __BYTE	RESV131:1;
            __BYTE	RESV132:1;
            __BYTE	RESV133:1;
            __BYTE	RESV134:1;
            __BYTE	GRSTR:1;
            __BYTE	GREN:1;
        } bit;
    } IO_CCCGRCR0;
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	GRSTP:2;
            __BYTE	GRSTN:6;
        } bit;
    } IO_CCCGRCR1;
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	GRLP:8;
        } bit;
    } IO_CCCGRCR2;
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	CST:1;
            __BYTE	RESV161:1;
            __BYTE	RESV162:1;
            __BYTE	RESV163:1;
            __BYTE	RESV164:1;
            __BYTE	RESV165:1;
            __BYTE	RESV166:1;
            __BYTE	CSC:1;
        } bit;
    } IO_CCRTSELR;
    __BYTE	IO_RESV6;
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	FST:1;
            __BYTE	RESV181:1;
            __BYTE	RESV182:1;
            __BYTE	RESV183:1;
            __BYTE	RESV184:1;
            __BYTE	RESV185:1;
            __BYTE	FDIV:2;
        } bit;
    } IO_CCPMUCR0;
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	GST:1;
            __BYTE	RESV191:1;
            __BYTE	RESV192:1;
            __BYTE	GDIV:5;
        } bit;
    } IO_CCPMUCR1;
    __WORD	IO_RESV7;
    __WORD	IO_RESV8;
    __WORD	IO_RESV9;
} IO_CCTL_STR;
__IO_EXTENDED IO_CCTL_STR       IO_CCTL;
#define	CCTL_CCPSSELR			(IO_CCTL.IO_CCPSSELR.byte)
#define	CCTL_CCPSSELR_PCSEL    	(IO_CCTL.IO_CCPSSELR.bit.PCSEL)
#define	CCTL_CCPSDIVR			(IO_CCTL.IO_CCPSDIVR.byte)
#define	CCTL_CCPSDIVR_PODS    	(IO_CCTL.IO_CCPSDIVR.bit.PODS)
#define	CCTL_CCPSDIVR_SODS    	(IO_CCTL.IO_CCPSDIVR.bit.SODS)
#define	CCTL_CCPLLFBR			(IO_CCTL.IO_CCPLLFBR.byte)
#define	CCTL_CCPLLFBR_IDIV    	(IO_CCTL.IO_CCPLLFBR.bit.IDIV)
#define	CCTL_CCSSFBR0			(IO_CCTL.IO_CCSSFBR0.byte)
#define	CCTL_CCSSFBR0_NDIV    	(IO_CCTL.IO_CCSSFBR0.bit.NDIV)
#define	CCTL_CCSSFBR1			(IO_CCTL.IO_CCSSFBR1.byte)
#define	CCTL_CCSSFBR1_PDIV    	(IO_CCTL.IO_CCSSFBR1.bit.PDIV)
#define	CCTL_CCSSCCR0			(IO_CCTL.IO_CCSSCCR0.byte)
#define	CCTL_CCSSCCR0_SFREQ    	(IO_CCTL.IO_CCSSCCR0.bit.SFREQ)
#define	CCTL_CCSSCCR0_SMODE    	(IO_CCTL.IO_CCSSCCR0.bit.SMODE)
#define	CCTL_CCSSCCR0_SSEN    	(IO_CCTL.IO_CCSSCCR0.bit.SSEN)
#define	CCTL_CCSSCCR1			(IO_CCTL.IO_CCSSCCR1.hword)
#define	CCTL_CCSSCCR1_RATESEL    	(IO_CCTL.IO_CCSSCCR1.bit.RATESEL)
#define	CCTL_CCCGRCR0			(IO_CCTL.IO_CCCGRCR0.byte)
#define	CCTL_CCCGRCR0_GRSTS    	(IO_CCTL.IO_CCCGRCR0.bit.GRSTS)
#define	CCTL_CCCGRCR0_GRSTR    	(IO_CCTL.IO_CCCGRCR0.bit.GRSTR)
#define	CCTL_CCCGRCR0_GREN    	(IO_CCTL.IO_CCCGRCR0.bit.GREN)
#define	CCTL_CCCGRCR1			(IO_CCTL.IO_CCCGRCR1.byte)
#define	CCTL_CCCGRCR1_GRSTP    	(IO_CCTL.IO_CCCGRCR1.bit.GRSTP)
#define	CCTL_CCCGRCR1_GRSTN    	(IO_CCTL.IO_CCCGRCR1.bit.GRSTN)
#define	CCTL_CCCGRCR2			(IO_CCTL.IO_CCCGRCR2.byte)
#define	CCTL_CCCGRCR2_GRLP    	(IO_CCTL.IO_CCCGRCR2.bit.GRLP)
#define	CCTL_CCRTSELR			(IO_CCTL.IO_CCRTSELR.byte)
#define	CCTL_CCRTSELR_CST    	(IO_CCTL.IO_CCRTSELR.bit.CST)
#define	CCTL_CCRTSELR_CSC    	(IO_CCTL.IO_CCRTSELR.bit.CSC)
#define	CCTL_CCPMUCR0			(IO_CCTL.IO_CCPMUCR0.byte)
#define	CCTL_CCPMUCR0_FST    	(IO_CCTL.IO_CCPMUCR0.bit.FST)
#define	CCTL_CCPMUCR0_FDIV    	(IO_CCTL.IO_CCPMUCR0.bit.FDIV)
#define	CCTL_CCPMUCR1			(IO_CCTL.IO_CCPMUCR1.byte)
#define	CCTL_CCPMUCR1_GST    	(IO_CCTL.IO_CCPMUCR1.bit.GST)
#define	CCTL_CCPMUCR1_GDIV    	(IO_CCTL.IO_CCPMUCR1.bit.GDIV)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EIRR0,attr=IO,locate=0x550
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	ER7:1;
        __BYTE	ER6:1;
        __BYTE	ER5:1;
        __BYTE	ER4:1;
        __BYTE	ER3:1;
        __BYTE	ER2:1;
        __BYTE	ER1:1;
        __BYTE	ER0:1;
    } bit;
} EIRR0STR;

__IO_EXTENDED	  EIRR0STR	IO_EIRR0;
#define	_eirr0		(IO_EIRR0)
#define	EIRR0		(IO_EIRR0.byte)
#define	EIRR0_ER7  	(IO_EIRR0.bit.ER7)
#define	EIRR0_ER6  	(IO_EIRR0.bit.ER6)
#define	EIRR0_ER5  	(IO_EIRR0.bit.ER5)
#define	EIRR0_ER4  	(IO_EIRR0.bit.ER4)
#define	EIRR0_ER3  	(IO_EIRR0.bit.ER3)
#define	EIRR0_ER2  	(IO_EIRR0.bit.ER2)
#define	EIRR0_ER1  	(IO_EIRR0.bit.ER1)
#define	EIRR0_ER0  	(IO_EIRR0.bit.ER0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ENIR0,attr=IO,locate=0x551
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	EN7:1;
        __BYTE	EN6:1;
        __BYTE	EN5:1;
        __BYTE	EN4:1;
        __BYTE	EN3:1;
        __BYTE	EN2:1;
        __BYTE	EN1:1;
        __BYTE	EN0:1;
    } bit;
} ENIR0STR;

__IO_EXTENDED	  ENIR0STR	IO_ENIR0;
#define	_enir0		(IO_ENIR0)
#define	ENIR0		(IO_ENIR0.byte)
#define	ENIR0_EN7  	(IO_ENIR0.bit.EN7)
#define	ENIR0_EN6  	(IO_ENIR0.bit.EN6)
#define	ENIR0_EN5  	(IO_ENIR0.bit.EN5)
#define	ENIR0_EN4  	(IO_ENIR0.bit.EN4)
#define	ENIR0_EN3  	(IO_ENIR0.bit.EN3)
#define	ENIR0_EN2  	(IO_ENIR0.bit.EN2)
#define	ENIR0_EN1  	(IO_ENIR0.bit.EN1)
#define	ENIR0_EN0  	(IO_ENIR0.bit.EN0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ELVR0,attr=IO,locate=0x552
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	LBLA7:2;
        __HWORD	LBLA6:2;
        __HWORD	LBLA5:2;
        __HWORD	LBLA4:2;
        __HWORD	LBLA3:2;
        __HWORD	LBLA2:2;
        __HWORD	LBLA1:2;
        __HWORD	LBLA0:2;
    } bit;
} ELVR0STR;

__IO_EXTENDED	  ELVR0STR	IO_ELVR0;
#define	_elvr0		(IO_ELVR0)
#define	ELVR0		(IO_ELVR0.hword)
#define	ELVR0_LBLA7  	(IO_ELVR0.bit.LBLA7)
#define	ELVR0_LBLA6  	(IO_ELVR0.bit.LBLA6)
#define	ELVR0_LBLA5  	(IO_ELVR0.bit.LBLA5)
#define	ELVR0_LBLA4  	(IO_ELVR0.bit.LBLA4)
#define	ELVR0_LBLA3  	(IO_ELVR0.bit.LBLA3)
#define	ELVR0_LBLA2  	(IO_ELVR0.bit.LBLA2)
#define	ELVR0_LBLA1  	(IO_ELVR0.bit.LBLA1)
#define	ELVR0_LBLA0  	(IO_ELVR0.bit.LBLA0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EIRR1,attr=IO,locate=0x554
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	ER7:1;
        __BYTE	ER6:1;
        __BYTE	ER5:1;
        __BYTE	ER4:1;
        __BYTE	ER3:1;
        __BYTE	ER2:1;
        __BYTE	ER1:1;
        __BYTE	ER0:1;
    } bit;
} EIRR1STR;

__IO_EXTENDED	  EIRR1STR	IO_EIRR1;
#define	_eirr1		(IO_EIRR1)
#define	EIRR1		(IO_EIRR1.byte)
#define	EIRR1_ER7  	(IO_EIRR1.bit.ER7)
#define	EIRR1_ER6  	(IO_EIRR1.bit.ER6)
#define	EIRR1_ER5  	(IO_EIRR1.bit.ER5)
#define	EIRR1_ER4  	(IO_EIRR1.bit.ER4)
#define	EIRR1_ER3  	(IO_EIRR1.bit.ER3)
#define	EIRR1_ER2  	(IO_EIRR1.bit.ER2)
#define	EIRR1_ER1  	(IO_EIRR1.bit.ER1)
#define	EIRR1_ER0  	(IO_EIRR1.bit.ER0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ENIR1,attr=IO,locate=0x555
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	EN7:1;
        __BYTE	EN6:1;
        __BYTE	EN5:1;
        __BYTE	EN4:1;
        __BYTE	EN3:1;
        __BYTE	EN2:1;
        __BYTE	EN1:1;
        __BYTE	EN0:1;
    } bit;
} ENIR1STR;

__IO_EXTENDED	  ENIR1STR	IO_ENIR1;
#define	_enir1		(IO_ENIR1)
#define	ENIR1		(IO_ENIR1.byte)
#define	ENIR1_EN7  	(IO_ENIR1.bit.EN7)
#define	ENIR1_EN6  	(IO_ENIR1.bit.EN6)
#define	ENIR1_EN5  	(IO_ENIR1.bit.EN5)
#define	ENIR1_EN4  	(IO_ENIR1.bit.EN4)
#define	ENIR1_EN3  	(IO_ENIR1.bit.EN3)
#define	ENIR1_EN2  	(IO_ENIR1.bit.EN2)
#define	ENIR1_EN1  	(IO_ENIR1.bit.EN1)
#define	ENIR1_EN0  	(IO_ENIR1.bit.EN0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ELVR1,attr=IO,locate=0x556
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	LBLA7:2;
        __HWORD	LBLA6:2;
        __HWORD	LBLA5:2;
        __HWORD	LBLA4:2;
        __HWORD	LBLA3:2;
        __HWORD	LBLA2:2;
        __HWORD	LBLA1:2;
        __HWORD	LBLA0:2;
    } bit;
} ELVR1STR;

__IO_EXTENDED	  ELVR1STR	IO_ELVR1;
#define	_elvr1		(IO_ELVR1)
#define	ELVR1		(IO_ELVR1.hword)
#define	ELVR1_LBLA7  	(IO_ELVR1.bit.LBLA7)
#define	ELVR1_LBLA6  	(IO_ELVR1.bit.LBLA6)
#define	ELVR1_LBLA5  	(IO_ELVR1.bit.LBLA5)
#define	ELVR1_LBLA4  	(IO_ELVR1.bit.LBLA4)
#define	ELVR1_LBLA3  	(IO_ELVR1.bit.LBLA3)
#define	ELVR1_LBLA2  	(IO_ELVR1.bit.LBLA2)
#define	ELVR1_LBLA1  	(IO_ELVR1.bit.LBLA1)
#define	ELVR1_LBLA0  	(IO_ELVR1.bit.LBLA0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_WTDR,attr=IO,locate=0x55E
#endif

__IO_EXTENDED	__HWORD	IO_WTDR;
#define	_wtdr		(IO_WTDR)
#define	WTDR	(_wtdr)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_WTCRH,attr=IO,locate=0x561
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	INTE4:1;
        __BYTE	INT4:1;
    } bit;
} WTCRHSTR;

__IO_EXTENDED	  WTCRHSTR	IO_WTCRH;
#define	_wtcrh		(IO_WTCRH)
#define	WTCRH		(IO_WTCRH.byte)
#define	WTCRH_INTE4  	(IO_WTCRH.bit.INTE4)
#define	WTCRH_INT4  	(IO_WTCRH.bit.INT4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_WTCRM,attr=IO,locate=0x562
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	INTE3:1;
        __BYTE	INT3:1;
        __BYTE	INTE2:1;
        __BYTE	INT2:1;
        __BYTE	INTE1:1;
        __BYTE	INT1:1;
        __BYTE	INTE0:1;
        __BYTE	INT0:1;
    } bit;
} WTCRMSTR;

__IO_EXTENDED	  WTCRMSTR	IO_WTCRM;
#define	_wtcrm		(IO_WTCRM)
#define	WTCRM		(IO_WTCRM.byte)
#define	WTCRM_INTE3  	(IO_WTCRM.bit.INTE3)
#define	WTCRM_INT3  	(IO_WTCRM.bit.INT3)
#define	WTCRM_INTE2  	(IO_WTCRM.bit.INTE2)
#define	WTCRM_INT2  	(IO_WTCRM.bit.INT2)
#define	WTCRM_INTE1  	(IO_WTCRM.bit.INTE1)
#define	WTCRM_INT1  	(IO_WTCRM.bit.INT1)
#define	WTCRM_INTE0  	(IO_WTCRM.bit.INTE0)
#define	WTCRM_INT0  	(IO_WTCRM.bit.INT0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_WTCRL,attr=IO,locate=0x563
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RUN:1;
        __BYTE	UPDT:1;
        __BYTE	RESV6:1;
        __BYTE	ST:1;
    } bit;
} WTCRLSTR;

__IO_EXTENDED	  WTCRLSTR	IO_WTCRL;
#define	_wtcrl		(IO_WTCRL)
#define	WTCRL		(IO_WTCRL.byte)
#define	WTCRL_RUN  	(IO_WTCRL.bit.RUN)
#define	WTCRL_UPDT  	(IO_WTCRL.bit.UPDT)
#define	WTCRL_ST  	(IO_WTCRL.bit.ST)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_WTBRH,attr=IO,locate=0x565
#endif

__IO_EXTENDED	__BYTE	IO_WTBRH;
#define	_wtbrh		(IO_WTBRH)
#define	WTBRH	(_wtbrh)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_WTBRM,attr=IO,locate=0x566
#endif

__IO_EXTENDED	__BYTE	IO_WTBRM;
#define	_wtbrm		(IO_WTBRM)
#define	WTBRM	(_wtbrm)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_WTBRL,attr=IO,locate=0x567
#endif

__IO_EXTENDED	__BYTE	IO_WTBRL;
#define	_wtbrl		(IO_WTBRL)
#define	WTBRL	(_wtbrl)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_WTHR,attr=IO,locate=0x568
#endif

__IO_EXTENDED	__BYTE	IO_WTHR;
#define	_wthr		(IO_WTHR)
#define	WTHR	(_wthr)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_WTMR,attr=IO,locate=0x569
#endif

__IO_EXTENDED	__BYTE	IO_WTMR;
#define	_wtmr		(IO_WTMR)
#define	WTMR	(_wtmr)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_WTSR,attr=IO,locate=0x56A
#endif

__IO_EXTENDED	__BYTE	IO_WTSR;
#define	_wtsr		(IO_WTSR)
#define	WTSR	(_wtsr)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CSVCR,attr=IO,locate=0x56D
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	SCKS:1;
        __BYTE	MM:1;
        __BYTE	SM:1;
        __BYTE	RCE:1;
        __BYTE	MSVE:1;
        __BYTE	SSVE:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} CSVCRSTR;

__IO_EXTENDED	  CSVCRSTR	IO_CSVCR;
#define	_csvcr		(IO_CSVCR)
#define	CSVCR		(IO_CSVCR.byte)
#define	CSVCR_SCKS  	(IO_CSVCR.bit.SCKS)
#define	CSVCR_MM  	(IO_CSVCR.bit.MM)
#define	CSVCR_SM  	(IO_CSVCR.bit.SM)
#define	CSVCR_RCE  	(IO_CSVCR.bit.RCE)
#define	CSVCR_MSVE  	(IO_CSVCR.bit.MSVE)
#define	CSVCR_SSVE  	(IO_CSVCR.bit.SSVE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_REGSEL,attr=IO,locate=0x580
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	MRSEL:2;
        __BYTE	SRSEL:2;
        __BYTE	STRSEL:3;
        __BYTE	RESV3:1;
    } bit;
} REGSELSTR;

__IO_EXTENDED	  REGSELSTR	IO_REGSEL;
#define	_regsel		(IO_REGSEL)
#define	REGSEL		(IO_REGSEL.byte)
#define	REGSEL_MRSEL  	(IO_REGSEL.bit.MRSEL)
#define	REGSEL_SRSEL  	(IO_REGSEL.bit.SRSEL)
#define	REGSEL_STRSEL  	(IO_REGSEL.bit.STRSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_LVD5R,attr=IO,locate=0x584
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	LVD5R_F:1;
    } bit;
} LVD5RSTR;

__IO_EXTENDED	  LVD5RSTR	IO_LVD5R;
#define	_lvd5r		(IO_LVD5R)
#define	LVD5R		(IO_LVD5R.byte)
#define	LVD5R_LVD5R_F  	(IO_LVD5R.bit.LVD5R_F)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_LVD5F,attr=IO,locate=0x585
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	LVD5F_PD:1;
        __BYTE	LVD5F_SEL3:1;
        __BYTE	LVD5F_SEL2:1;
        __BYTE	LVD5F_SEL1:1;
        __BYTE	LVD5F_OE:1;
        __BYTE	LVD5F_SEL0:1;
        __BYTE	LVD5F_RI:1;
        __BYTE	LVD5F_F:1;
    } bit;
} LVD5FSTR;

__IO_EXTENDED	  LVD5FSTR	IO_LVD5F;
#define	_lvd5f		(IO_LVD5F)
#define	LVD5F		(IO_LVD5F.byte)
#define	LVD5F_LVD5F_PD  	(IO_LVD5F.bit.LVD5F_PD)
#define	LVD5F_LVD5F_SEL3  	(IO_LVD5F.bit.LVD5F_SEL3)
#define	LVD5F_LVD5F_SEL2  	(IO_LVD5F.bit.LVD5F_SEL2)
#define	LVD5F_LVD5F_SEL1  	(IO_LVD5F.bit.LVD5F_SEL1)
#define	LVD5F_LVD5F_OE  	(IO_LVD5F.bit.LVD5F_OE)
#define	LVD5F_LVD5F_SEL0  	(IO_LVD5F.bit.LVD5F_SEL0)
#define	LVD5F_LVD5F_RI  	(IO_LVD5F.bit.LVD5F_RI)
#define	LVD5F_LVD5F_F  	(IO_LVD5F.bit.LVD5F_F)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_LVD,attr=IO,locate=0x586
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	LVD_PD:1;
        __BYTE	LVD_SEL:3;
        __BYTE	LVD_OE:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	LVD_F:1;
    } bit;
} LVDSTR;

__IO_EXTENDED	  LVDSTR	IO_LVD;
#define	_lvd		(IO_LVD)
#define	LVD		(IO_LVD.byte)
#define	LVD_LVD_PD  	(IO_LVD.bit.LVD_PD)
#define	LVD_LVD_SEL  	(IO_LVD.bit.LVD_SEL)
#define	LVD_LVD_OE  	(IO_LVD.bit.LVD_OE)
#define	LVD_LVD_F  	(IO_LVD.bit.LVD_F)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PMUSTR,attr=IO,locate=0x590
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	PMUST:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	PONR_F:1;
        __BYTE	RSTX_F:1;
    } bit;
} PMUSTRSTR;

__IO_EXTENDED	  PMUSTRSTR	IO_PMUSTR;
#define	_pmustr		(IO_PMUSTR)
#define	PMUSTR		(IO_PMUSTR.byte)
#define	PMUSTR_PMUST  	(IO_PMUSTR.bit.PMUST)
#define	PMUSTR_PONR_F  	(IO_PMUSTR.bit.PONR_F)
#define	PMUSTR_RSTX_F  	(IO_PMUSTR.bit.RSTX_F)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PMUCTLR,attr=IO,locate=0x591
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	SHDE:1;
        __BYTE	RESV1:1;
        __BYTE	IOCTMD:1;
        __BYTE	IOCT:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} PMUCTLRSTR;

__IO_EXTENDED	  PMUCTLRSTR	IO_PMUCTLR;
#define	_pmuctlr		(IO_PMUCTLR)
#define	PMUCTLR		(IO_PMUCTLR.byte)
#define	PMUCTLR_SHDE  	(IO_PMUCTLR.bit.SHDE)
#define	PMUCTLR_IOCTMD  	(IO_PMUCTLR.bit.IOCTMD)
#define	PMUCTLR_IOCT  	(IO_PMUCTLR.bit.IOCT)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PWRTMCTL,attr=IO,locate=0x592
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	PTC:3;
    } bit;
} PWRTMCTLSTR;

__IO_EXTENDED	  PWRTMCTLSTR	IO_PWRTMCTL;
#define	_pwrtmctl		(IO_PWRTMCTL)
#define	PWRTMCTL		(IO_PWRTMCTL.byte)
#define	PWRTMCTL_PTC  	(IO_PWRTMCTL.bit.PTC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PMUINTF0,attr=IO,locate=0x594
#endif

__IO_EXTENDED	__BYTE	IO_PMUINTF0;
#define	_pmuintf0		(IO_PMUINTF0)
#define	PMUINTF0	(_pmuintf0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PMUINTF1,attr=IO,locate=0x595
#endif

__IO_EXTENDED	__BYTE	IO_PMUINTF1;
#define	_pmuintf1		(IO_PMUINTF1)
#define	PMUINTF1	(_pmuintf1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PMUINTF2,attr=IO,locate=0x596
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RIF:1;
        __BYTE	NIF:1;
        __BYTE	MTIF:1;
        __BYTE	STIF:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} PMUINTF2STR;

__IO_EXTENDED	  PMUINTF2STR	IO_PMUINTF2;
#define	_pmuintf2		(IO_PMUINTF2)
#define	PMUINTF2		(IO_PMUINTF2.byte)
#define	PMUINTF2_RIF  	(IO_PMUINTF2.bit.RIF)
#define	PMUINTF2_NIF  	(IO_PMUINTF2.bit.NIF)
#define	PMUINTF2_MTIF  	(IO_PMUINTF2.bit.MTIF)
#define	PMUINTF2_STIF  	(IO_PMUINTF2.bit.STIF)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ASR0,attr=IO,locate=0x600
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	SADR1:16;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	ASZ:4;
        __WORD	RESV10:1;
        __WORD	WREN:1;
        __WORD	LEDN:1;
        __WORD	CSEN:1;
    } bit;
} ASR0STR;

__IO_EXTENDED	  ASR0STR	IO_ASR0;
#define	_asr0		(IO_ASR0)
#define	ASR0		(IO_ASR0.word)
#define	ASR0_SADR1  	(IO_ASR0.bit.SADR1)
#define	ASR0_ASZ  	(IO_ASR0.bit.ASZ)
#define	ASR0_WREN  	(IO_ASR0.bit.WREN)
#define	ASR0_LEDN  	(IO_ASR0.bit.LEDN)
#define	ASR0_CSEN  	(IO_ASR0.bit.CSEN)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ASR1,attr=IO,locate=0x604
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	SADR1:16;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	ASZ:4;
        __WORD	RESV10:1;
        __WORD	WREN:1;
        __WORD	LEDN:1;
        __WORD	CSEN:1;
    } bit;
} ASR1STR;

__IO_EXTENDED	  ASR1STR	IO_ASR1;
#define	_asr1		(IO_ASR1)
#define	ASR1		(IO_ASR1.word)
#define	ASR1_SADR1  	(IO_ASR1.bit.SADR1)
#define	ASR1_ASZ  	(IO_ASR1.bit.ASZ)
#define	ASR1_WREN  	(IO_ASR1.bit.WREN)
#define	ASR1_LEDN  	(IO_ASR1.bit.LEDN)
#define	ASR1_CSEN  	(IO_ASR1.bit.CSEN)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ASR2,attr=IO,locate=0x608
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	SADR1:16;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	ASZ:4;
        __WORD	RESV10:1;
        __WORD	WREN:1;
        __WORD	LEDN:1;
        __WORD	CSEN:1;
    } bit;
} ASR2STR;

__IO_EXTENDED	  ASR2STR	IO_ASR2;
#define	_asr2		(IO_ASR2)
#define	ASR2		(IO_ASR2.word)
#define	ASR2_SADR1  	(IO_ASR2.bit.SADR1)
#define	ASR2_ASZ  	(IO_ASR2.bit.ASZ)
#define	ASR2_WREN  	(IO_ASR2.bit.WREN)
#define	ASR2_LEDN  	(IO_ASR2.bit.LEDN)
#define	ASR2_CSEN  	(IO_ASR2.bit.CSEN)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ASR3,attr=IO,locate=0x60C
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	SADR1:16;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	ASZ:4;
        __WORD	RESV10:1;
        __WORD	WREN:1;
        __WORD	LEDN:1;
        __WORD	CSEN:1;
    } bit;
} ASR3STR;

__IO_EXTENDED	  ASR3STR	IO_ASR3;
#define	_asr3		(IO_ASR3)
#define	ASR3		(IO_ASR3.word)
#define	ASR3_SADR1  	(IO_ASR3.bit.SADR1)
#define	ASR3_ASZ  	(IO_ASR3.bit.ASZ)
#define	ASR3_WREN  	(IO_ASR3.bit.WREN)
#define	ASR3_LEDN  	(IO_ASR3.bit.LEDN)
#define	ASR3_CSEN  	(IO_ASR3.bit.CSEN)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ACR0,attr=IO,locate=0x640
#endif
typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	RESV14:1;
        __WORD	RESV15:1;
        __WORD	RESV16:1;
        __WORD	RESV17:1;
        __WORD	RESV18:1;
        __WORD	RESV19:1;
        __WORD	RESV20:1;
        __WORD	RESV21:1;
        __WORD	RESV22:1;
        __WORD	RESV23:1;
        __WORD	DBW:2;
        __WORD	RESV25:1;
        __WORD	RESV26:1;
        __WORD	ADTY:1;
        __WORD	BSTY:1;
        __WORD	RESV29:1;
        __WORD	RESV30:1;
    } bit;
} ACR0STR;

__IO_EXTENDED	  ACR0STR	IO_ACR0;
#define	_acr0		(IO_ACR0)
#define	ACR0		(IO_ACR0.word)
#define	ACR0_DBW  	(IO_ACR0.bit.DBW)
#define	ACR0_ADTY  	(IO_ACR0.bit.ADTY)
#define	ACR0_BSTY  	(IO_ACR0.bit.BSTY)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ACR1,attr=IO,locate=0x644
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	RESV14:1;
        __WORD	RESV15:1;
        __WORD	RESV16:1;
        __WORD	RESV17:1;
        __WORD	RESV18:1;
        __WORD	RESV19:1;
        __WORD	RESV20:1;
        __WORD	RESV21:1;
        __WORD	RESV22:1;
        __WORD	RESV23:1;
        __WORD	DBW:2;
        __WORD	RESV25:1;
        __WORD	RESV26:1;
        __WORD	ADTY:1;
        __WORD	BSTY:1;
        __WORD	RESV29:1;
        __WORD	RESV30:1;
    } bit;
} ACR1STR;

__IO_EXTENDED	  ACR1STR	IO_ACR1;
#define	_acr1		(IO_ACR1)
#define	ACR1		(IO_ACR1.word)
#define	ACR1_DBW  	(IO_ACR1.bit.DBW)
#define	ACR1_ADTY  	(IO_ACR1.bit.ADTY)
#define	ACR1_BSTY  	(IO_ACR1.bit.BSTY)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ACR2,attr=IO,locate=0x648
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	RESV14:1;
        __WORD	RESV15:1;
        __WORD	RESV16:1;
        __WORD	RESV17:1;
        __WORD	RESV18:1;
        __WORD	RESV19:1;
        __WORD	RESV20:1;
        __WORD	RESV21:1;
        __WORD	RESV22:1;
        __WORD	RESV23:1;
        __WORD	DBW:2;
        __WORD	RESV25:1;
        __WORD	RESV26:1;
        __WORD	ADTY:1;
        __WORD	BSTY:1;
        __WORD	RESV29:1;
        __WORD	RESV30:1;
    } bit;
} ACR2STR;

__IO_EXTENDED	  ACR2STR	IO_ACR2;
#define	_acr2		(IO_ACR2)
#define	ACR2		(IO_ACR2.word)
#define	ACR2_DBW  	(IO_ACR2.bit.DBW)
#define	ACR2_ADTY  	(IO_ACR2.bit.ADTY)
#define	ACR2_BSTY  	(IO_ACR2.bit.BSTY)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ACR3,attr=IO,locate=0x64C
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	RESV14:1;
        __WORD	RESV15:1;
        __WORD	RESV16:1;
        __WORD	RESV17:1;
        __WORD	RESV18:1;
        __WORD	RESV19:1;
        __WORD	RESV20:1;
        __WORD	RESV21:1;
        __WORD	RESV22:1;
        __WORD	RESV23:1;
        __WORD	DBW:2;
        __WORD	RESV25:1;
        __WORD	RESV26:1;
        __WORD	ADTY:1;
        __WORD	BSTY:1;
        __WORD	RESV29:1;
        __WORD	RESV30:1;
    } bit;
} ACR3STR;

__IO_EXTENDED	  ACR3STR	IO_ACR3;
#define	_acr3		(IO_ACR3)
#define	ACR3		(IO_ACR3.word)
#define	ACR3_DBW  	(IO_ACR3.bit.DBW)
#define	ACR3_ADTY  	(IO_ACR3.bit.ADTY)
#define	ACR3_BSTY  	(IO_ACR3.bit.BSTY)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_AWR0,attr=IO,locate=0x680
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RWT:4;
        __WORD	WWT:4;
        __WORD	RIDL:2;
        __WORD	WRCV:2;
        __WORD	CSRD:2;
        __WORD	RDCS:2;
        __WORD	CSWR:2;
        __WORD	WRCS:2;
        __WORD	ADCY:2;
        __WORD	ACS:2;
        __WORD	ASCY:1;
        __WORD	RESV15:1;
        __WORD	RDYE:1;
        __WORD	RESV17:1;
    } bit;
} AWR0STR;

__IO_EXTENDED	  AWR0STR	IO_AWR0;
#define	_awr0		(IO_AWR0)
#define	AWR0		(IO_AWR0.word)
#define	AWR0_RWT  	(IO_AWR0.bit.RWT)
#define	AWR0_WWT  	(IO_AWR0.bit.WWT)
#define	AWR0_RIDL  	(IO_AWR0.bit.RIDL)
#define	AWR0_WRCV  	(IO_AWR0.bit.WRCV)
#define	AWR0_CSRD  	(IO_AWR0.bit.CSRD)
#define	AWR0_RDCS  	(IO_AWR0.bit.RDCS)
#define	AWR0_CSWR  	(IO_AWR0.bit.CSWR)
#define	AWR0_WRCS  	(IO_AWR0.bit.WRCS)
#define	AWR0_ADCY  	(IO_AWR0.bit.ADCY)
#define	AWR0_ACS  	(IO_AWR0.bit.ACS)
#define	AWR0_ASCY  	(IO_AWR0.bit.ASCY)
#define	AWR0_RDYE  	(IO_AWR0.bit.RDYE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_AWR1,attr=IO,locate=0x684
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RWT:4;
        __WORD	WWT:4;
        __WORD	RIDL:2;
        __WORD	WRCV:2;
        __WORD	CSRD:2;
        __WORD	RDCS:2;
        __WORD	CSWR:2;
        __WORD	WRCS:2;
        __WORD	ADCY:2;
        __WORD	ACS:2;
        __WORD	ASCY:1;
        __WORD	RESV15:1;
        __WORD	RDYE:1;
        __WORD	RESV17:1;
    } bit;
} AWR1STR;

__IO_EXTENDED	  AWR1STR	IO_AWR1;
#define	_awr1		(IO_AWR1)
#define	AWR1		(IO_AWR1.word)
#define	AWR1_RWT  	(IO_AWR1.bit.RWT)
#define	AWR1_WWT  	(IO_AWR1.bit.WWT)
#define	AWR1_RIDL  	(IO_AWR1.bit.RIDL)
#define	AWR1_WRCV  	(IO_AWR1.bit.WRCV)
#define	AWR1_CSRD  	(IO_AWR1.bit.CSRD)
#define	AWR1_RDCS  	(IO_AWR1.bit.RDCS)
#define	AWR1_CSWR  	(IO_AWR1.bit.CSWR)
#define	AWR1_WRCS  	(IO_AWR1.bit.WRCS)
#define	AWR1_ADCY  	(IO_AWR1.bit.ADCY)
#define	AWR1_ACS  	(IO_AWR1.bit.ACS)
#define	AWR1_ASCY  	(IO_AWR1.bit.ASCY)
#define	AWR1_RDYE  	(IO_AWR1.bit.RDYE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_AWR2,attr=IO,locate=0x688
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RWT:4;
        __WORD	WWT:4;
        __WORD	RIDL:2;
        __WORD	WRCV:2;
        __WORD	CSRD:2;
        __WORD	RDCS:2;
        __WORD	CSWR:2;
        __WORD	WRCS:2;
        __WORD	ADCY:2;
        __WORD	ACS:2;
        __WORD	ASCY:1;
        __WORD	RESV15:1;
        __WORD	RDYE:1;
        __WORD	RESV17:1;
    } bit;
} AWR2STR;

__IO_EXTENDED	  AWR2STR	IO_AWR2;
#define	_awr2		(IO_AWR2)
#define	AWR2		(IO_AWR2.word)
#define	AWR2_RWT  	(IO_AWR2.bit.RWT)
#define	AWR2_WWT  	(IO_AWR2.bit.WWT)
#define	AWR2_RIDL  	(IO_AWR2.bit.RIDL)
#define	AWR2_WRCV  	(IO_AWR2.bit.WRCV)
#define	AWR2_CSRD  	(IO_AWR2.bit.CSRD)
#define	AWR2_RDCS  	(IO_AWR2.bit.RDCS)
#define	AWR2_CSWR  	(IO_AWR2.bit.CSWR)
#define	AWR2_WRCS  	(IO_AWR2.bit.WRCS)
#define	AWR2_ADCY  	(IO_AWR2.bit.ADCY)
#define	AWR2_ACS  	(IO_AWR2.bit.ACS)
#define	AWR2_ASCY  	(IO_AWR2.bit.ASCY)
#define	AWR2_RDYE  	(IO_AWR2.bit.RDYE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_AWR3,attr=IO,locate=0x68C
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RWT:4;
        __WORD	WWT:4;
        __WORD	RIDL:2;
        __WORD	WRCV:2;
        __WORD	CSRD:2;
        __WORD	RDCS:2;
        __WORD	CSWR:2;
        __WORD	WRCS:2;
        __WORD	ADCY:2;
        __WORD	ACS:2;
        __WORD	ASCY:1;
        __WORD	RESV15:1;
        __WORD	RDYE:1;
        __WORD	RESV17:1;
    } bit;
} AWR3STR;

__IO_EXTENDED	  AWR3STR	IO_AWR3;
#define	_awr3		(IO_AWR3)
#define	AWR3		(IO_AWR3.word)
#define	AWR3_RWT  	(IO_AWR3.bit.RWT)
#define	AWR3_WWT  	(IO_AWR3.bit.WWT)
#define	AWR3_RIDL  	(IO_AWR3.bit.RIDL)
#define	AWR3_WRCV  	(IO_AWR3.bit.WRCV)
#define	AWR3_CSRD  	(IO_AWR3.bit.CSRD)
#define	AWR3_RDCS  	(IO_AWR3.bit.RDCS)
#define	AWR3_CSWR  	(IO_AWR3.bit.CSWR)
#define	AWR3_WRCS  	(IO_AWR3.bit.WRCS)
#define	AWR3_ADCY  	(IO_AWR3.bit.ADCY)
#define	AWR3_ACS  	(IO_AWR3.bit.ACS)
#define	AWR3_ASCY  	(IO_AWR3.bit.ASCY)
#define	AWR3_RDYE  	(IO_AWR3.bit.RDYE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BPCCRA,attr=IO,locate=0x710
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	FUNC:2;
        __BYTE	MST:4;
        __BYTE	SLV:2;
    } bit;
} BPCCRASTR;

__IO_EXTENDED	  BPCCRASTR	IO_BPCCRA;
#define	_bpccra		(IO_BPCCRA)
#define	BPCCRA		(IO_BPCCRA.byte)
#define	BPCCRA_FUNC  	(IO_BPCCRA.bit.FUNC)
#define	BPCCRA_MST  	(IO_BPCCRA.bit.MST)
#define	BPCCRA_SLV  	(IO_BPCCRA.bit.SLV)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BPCCRB,attr=IO,locate=0x711
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	FUNC:2;
        __BYTE	MST:4;
        __BYTE	SLV:2;
    } bit;
} BPCCRBSTR;

__IO_EXTENDED	  BPCCRBSTR	IO_BPCCRB;
#define	_bpccrb		(IO_BPCCRB)
#define	BPCCRB		(IO_BPCCRB.byte)
#define	BPCCRB_FUNC  	(IO_BPCCRB.bit.FUNC)
#define	BPCCRB_MST  	(IO_BPCCRB.bit.MST)
#define	BPCCRB_SLV  	(IO_BPCCRB.bit.SLV)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BPCCRC,attr=IO,locate=0x712
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	FUNC:2;
        __BYTE	MST:4;
        __BYTE	SLV:2;
    } bit;
} BPCCRCSTR;

__IO_EXTENDED	  BPCCRCSTR	IO_BPCCRC;
#define	_bpccrc		(IO_BPCCRC)
#define	BPCCRC		(IO_BPCCRC.byte)
#define	BPCCRC_FUNC  	(IO_BPCCRC.bit.FUNC)
#define	BPCCRC_MST  	(IO_BPCCRC.bit.MST)
#define	BPCCRC_SLV  	(IO_BPCCRC.bit.SLV)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BPCTRA,attr=IO,locate=0x714
#endif

__IO_EXTENDED	__WORD	IO_BPCTRA;
#define	_bpctra		(IO_BPCTRA)
#define	BPCTRA	(_bpctra)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BPCTRB,attr=IO,locate=0x718
#endif

__IO_EXTENDED	__WORD	IO_BPCTRB;
#define	_bpctrb		(IO_BPCTRB)
#define	BPCTRB	(_bpctrb)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BPCTRC,attr=IO,locate=0x71C
#endif

__IO_EXTENDED	__WORD	IO_BPCTRC;
#define	_bpctrc		(IO_BPCTRC)
#define	BPCTRC	(_bpctrc)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BMODR,attr=IO,locate=0x7FC
#endif

__IO_EXTENDED	const __BYTE	IO_BMODR;
#define	_bmodr		(IO_BMODR)
#define	BMODR	(_bmodr)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FCTLR,attr=IO,locate=0x840
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	FWE:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	FSZ:2;
        __HWORD	FAW:2;
        __HWORD	FDSBL:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RDYF:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} FCTLRSTR;

__IO_EXTENDED	  FCTLRSTR	IO_FCTLR;
#define	_fctlr		(IO_FCTLR)
#define	FCTLR		(IO_FCTLR.hword)
#define	FCTLR_FWE  	(IO_FCTLR.bit.FWE)
#define	FCTLR_FSZ  	(IO_FCTLR.bit.FSZ)
#define	FCTLR_FAW  	(IO_FCTLR.bit.FAW)
#define	FCTLR_FDSBL  	(IO_FCTLR.bit.FDSBL)
#define	FCTLR_RDYF  	(IO_FCTLR.bit.RDYF)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FSTR,attr=IO,locate=0x843
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	FECCERR:1;
        __BYTE	FHANG:1;
        __BYTE	FRDY:1;
    } bit;
} FSTRSTR;

__IO_EXTENDED	  FSTRSTR	IO_FSTR;
#define	_fstr		(IO_FSTR)
#define	FSTR		(IO_FSTR.byte)
#define	FSTR_FECCERR  	(IO_FSTR.bit.FECCERR)
#define	FSTR_FHANG  	(IO_FSTR.bit.FHANG)
#define	FSTR_FRDY  	(IO_FSTR.bit.FRDY)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_WREN,attr=IO,locate=0x85A
#endif

__IO_EXTENDED	__HWORD	IO_WREN;
#define	_wren		(IO_WREN)
#define	WREN_	(_wren)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_WR,attr=IO,locate=0x880
#endif

typedef struct
{
    __WORD	WRAR;
    __WORD	WRDR;
} WRSTR;

__IO_EXTENDED	  WRSTR	IO_WR[CONSTANT_16];
#define	_wr		(IO_WR)
#define	WR0_WRAR  	(IO_WR[CONSTANT_0].WRAR)
#define	WR1_WRAR  	(IO_WR[CONSTANT_1].WRAR)
#define	WR2_WRAR  	(IO_WR[CONSTANT_2].WRAR)
#define	WR3_WRAR  	(IO_WR[CONSTANT_3].WRAR)
#define	WR4_WRAR  	(IO_WR[CONSTANT_4].WRAR)
#define	WR5_WRAR  	(IO_WR[CONSTANT_5].WRAR)
#define	WR6_WRAR  	(IO_WR[CONSTANT_6].WRAR)
#define	WR7_WRAR  	(IO_WR[CONSTANT_7].WRAR)
#define	WR8_WRAR  	(IO_WR[CONSTANT_8].WRAR)
#define	WR9_WRAR  	(IO_WR[CONSTANT_9].WRAR)
#define	WR10_WRAR  	(IO_WR[CONSTANT_10].WRAR)
#define	WR11_WRAR  	(IO_WR[CONSTANT_11].WRAR)
#define	WR12_WRAR  	(IO_WR[CONSTANT_12].WRAR)
#define	WR13_WRAR  	(IO_WR[CONSTANT_13].WRAR)
#define	WR14_WRAR  	(IO_WR[CONSTANT_14].WRAR)
#define	WR15_WRAR  	(IO_WR[CONSTANT_15].WRAR)
#define	WR0_WRDR  	(IO_WR[CONSTANT_0].WRDR)
#define	WR1_WRDR  	(IO_WR[CONSTANT_1].WRDR)
#define	WR2_WRDR  	(IO_WR[CONSTANT_2].WRDR)
#define	WR3_WRDR  	(IO_WR[CONSTANT_3].WRDR)
#define	WR4_WRDR  	(IO_WR[CONSTANT_4].WRDR)
#define	WR5_WRDR  	(IO_WR[CONSTANT_5].WRDR)
#define	WR6_WRDR  	(IO_WR[CONSTANT_6].WRDR)
#define	WR7_WRDR  	(IO_WR[CONSTANT_7].WRDR)
#define	WR8_WRDR  	(IO_WR[CONSTANT_8].WRDR)
#define	WR9_WRDR  	(IO_WR[CONSTANT_9].WRDR)
#define	WR10_WRDR  	(IO_WR[CONSTANT_10].WRDR)
#define	WR11_WRDR  	(IO_WR[CONSTANT_11].WRDR)
#define	WR12_WRDR  	(IO_WR[CONSTANT_12].WRDR)
#define	WR13_WRDR  	(IO_WR[CONSTANT_13].WRDR)
#define	WR14_WRDR  	(IO_WR[CONSTANT_14].WRDR)
#define	WR15_WRDR  	(IO_WR[CONSTANT_15].WRDR)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUUNLOCK,attr=IO,locate=0x900
#endif

__IO_EXTENDED	__WORD	IO_TPUUNLOCK;
#define	_tpuunlock		(IO_TPUUNLOCK)
#define	TPUUNLOCK	(_tpuunlock)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPULST,attr=IO,locate=0x904
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	LST:1;
    } bit;
} TPULSTSTR;

__IO_EXTENDED	 const  TPULSTSTR	IO_TPULST;
#define	_tpulst		(IO_TPULST)
#define	TPULST		(IO_TPULST.byte)
#define	TPULST_LST  	(IO_TPULST.bit.LST)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUVST,attr=IO,locate=0x906
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	IULST:1;
        __BYTE	ULVST:1;
        __BYTE	AVST:1;
    } bit;
} TPUVSTSTR;

__IO_EXTENDED	  TPUVSTSTR	IO_TPUVST;
#define	_tpuvst		(IO_TPUVST)
#define	TPUVST		(IO_TPUVST.byte)
#define	TPUVST_IULST  	(IO_TPUVST.bit.IULST)
#define	TPUVST_ULVST  	(IO_TPUVST.bit.ULVST)
#define	TPUVST_AVST  	(IO_TPUVST.bit.AVST)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUCFG,attr=IO,locate=0x908
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	DBGE:1;
        __WORD	GLBPSE:1;
        __WORD	RESV9:1;
        __WORD	GLBPS:6;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	RESV14:1;
        __WORD	RESV15:1;
        __WORD	RESV16:1;
        __WORD	RESV17:1;
        __WORD	RESV18:1;
        __WORD	RESV19:1;
        __WORD	RESV20:1;
        __WORD	RESV21:1;
        __WORD	RESV22:1;
        __WORD	RESV23:1;
        __WORD	RESV24:1;
        __WORD	RESV25:1;
        __WORD	INTE:1;
    } bit;
} TPUCFGSTR;

__IO_EXTENDED	  TPUCFGSTR	IO_TPUCFG;
#define	_tpucfg		(IO_TPUCFG)
#define	TPUCFG		(IO_TPUCFG.word)
#define	TPUCFG_DBGE  	(IO_TPUCFG.bit.DBGE)
#define	TPUCFG_GLBPSE  	(IO_TPUCFG.bit.GLBPSE)
#define	TPUCFG_GLBPS  	(IO_TPUCFG.bit.GLBPS)
#define	TPUCFG_INTE  	(IO_TPUCFG.bit.INTE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTIR,attr=IO,locate=0x90C
#endif

__IO_EXTENDED	const __BYTE	IO_TPUTIR;
#define	_tputir		(IO_TPUTIR)
#define	TPUTIR	(_tputir)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTST,attr=IO,locate=0x910
#endif

__IO_EXTENDED	const __BYTE	IO_TPUTST;
#define	_tputst		(IO_TPUTST)
#define	TPUTST	(_tputst)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTIE,attr=IO,locate=0x914
#endif

__IO_EXTENDED	const __BYTE	IO_TPUTIE;
#define	_tputie		(IO_TPUTIE)
#define	TPUTIE	(_tputie)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUMID,attr=IO,locate=0x918
#endif

__IO_EXTENDED	const __WORD	IO_TPUMID;
#define	_tpumid		(IO_TPUMID)
#define	TPUMID	(_tpumid)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCN00,attr=IO,locate=0x930
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	START:1;
        __WORD	STOP:1;
        __WORD	CONT:1;
        __WORD	IES:1;
        __WORD	IEC:1;
        __WORD	IRC:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	ECPL:24;
    } bit;
} TPUTCN00STR;

__IO_EXTENDED	  TPUTCN00STR	IO_TPUTCN00;
#define	_tputcn00		(IO_TPUTCN00)
#define	TPUTCN00		(IO_TPUTCN00.word)
#define	TPUTCN00_START  	(IO_TPUTCN00.bit.START)
#define	TPUTCN00_STOP  	(IO_TPUTCN00.bit.STOP)
#define	TPUTCN00_CONT  	(IO_TPUTCN00.bit.CONT)
#define	TPUTCN00_IES  	(IO_TPUTCN00.bit.IES)
#define	TPUTCN00_IEC  	(IO_TPUTCN00.bit.IEC)
#define	TPUTCN00_IRC  	(IO_TPUTCN00.bit.IRC)
#define	TPUTCN00_ECPL  	(IO_TPUTCN00.bit.ECPL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCN01,attr=IO,locate=0x934
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	START:1;
        __WORD	STOP:1;
        __WORD	CONT:1;
        __WORD	IES:1;
        __WORD	IEC:1;
        __WORD	IRC:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	ECPL:24;
    } bit;
} TPUTCN01STR;

__IO_EXTENDED	  TPUTCN01STR	IO_TPUTCN01;
#define	_tputcn01		(IO_TPUTCN01)
#define	TPUTCN01		(IO_TPUTCN01.word)
#define	TPUTCN01_START  	(IO_TPUTCN01.bit.START)
#define	TPUTCN01_STOP  	(IO_TPUTCN01.bit.STOP)
#define	TPUTCN01_CONT  	(IO_TPUTCN01.bit.CONT)
#define	TPUTCN01_IES  	(IO_TPUTCN01.bit.IES)
#define	TPUTCN01_IEC  	(IO_TPUTCN01.bit.IEC)
#define	TPUTCN01_IRC  	(IO_TPUTCN01.bit.IRC)
#define	TPUTCN01_ECPL  	(IO_TPUTCN01.bit.ECPL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCN02,attr=IO,locate=0x938
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	START:1;
        __WORD	STOP:1;
        __WORD	CONT:1;
        __WORD	IES:1;
        __WORD	IEC:1;
        __WORD	IRC:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	ECPL:24;
    } bit;
} TPUTCN02STR;

__IO_EXTENDED	  TPUTCN02STR	IO_TPUTCN02;
#define	_tputcn02		(IO_TPUTCN02)
#define	TPUTCN02		(IO_TPUTCN02.word)
#define	TPUTCN02_START  	(IO_TPUTCN02.bit.START)
#define	TPUTCN02_STOP  	(IO_TPUTCN02.bit.STOP)
#define	TPUTCN02_CONT  	(IO_TPUTCN02.bit.CONT)
#define	TPUTCN02_IES  	(IO_TPUTCN02.bit.IES)
#define	TPUTCN02_IEC  	(IO_TPUTCN02.bit.IEC)
#define	TPUTCN02_IRC  	(IO_TPUTCN02.bit.IRC)
#define	TPUTCN02_ECPL  	(IO_TPUTCN02.bit.ECPL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCN03,attr=IO,locate=0x93C
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	START:1;
        __WORD	STOP:1;
        __WORD	CONT:1;
        __WORD	IES:1;
        __WORD	IEC:1;
        __WORD	IRC:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	ECPL:24;
    } bit;
} TPUTCN03STR;

__IO_EXTENDED	  TPUTCN03STR	IO_TPUTCN03;
#define	_tputcn03		(IO_TPUTCN03)
#define	TPUTCN03		(IO_TPUTCN03.word)
#define	TPUTCN03_START  	(IO_TPUTCN03.bit.START)
#define	TPUTCN03_STOP  	(IO_TPUTCN03.bit.STOP)
#define	TPUTCN03_CONT  	(IO_TPUTCN03.bit.CONT)
#define	TPUTCN03_IES  	(IO_TPUTCN03.bit.IES)
#define	TPUTCN03_IEC  	(IO_TPUTCN03.bit.IEC)
#define	TPUTCN03_IRC  	(IO_TPUTCN03.bit.IRC)
#define	TPUTCN03_ECPL  	(IO_TPUTCN03.bit.ECPL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCN04,attr=IO,locate=0x940
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	START:1;
        __WORD	STOP:1;
        __WORD	CONT:1;
        __WORD	IES:1;
        __WORD	IEC:1;
        __WORD	IRC:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	ECPL:24;
    } bit;
} TPUTCN04STR;

__IO_EXTENDED	  TPUTCN04STR	IO_TPUTCN04;
#define	_tputcn04		(IO_TPUTCN04)
#define	TPUTCN04		(IO_TPUTCN04.word)
#define	TPUTCN04_START  	(IO_TPUTCN04.bit.START)
#define	TPUTCN04_STOP  	(IO_TPUTCN04.bit.STOP)
#define	TPUTCN04_CONT  	(IO_TPUTCN04.bit.CONT)
#define	TPUTCN04_IES  	(IO_TPUTCN04.bit.IES)
#define	TPUTCN04_IEC  	(IO_TPUTCN04.bit.IEC)
#define	TPUTCN04_IRC  	(IO_TPUTCN04.bit.IRC)
#define	TPUTCN04_ECPL  	(IO_TPUTCN04.bit.ECPL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCN05,attr=IO,locate=0x944
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	START:1;
        __WORD	STOP:1;
        __WORD	CONT:1;
        __WORD	IES:1;
        __WORD	IEC:1;
        __WORD	IRC:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	ECPL:24;
    } bit;
} TPUTCN05STR;

__IO_EXTENDED	  TPUTCN05STR	IO_TPUTCN05;
#define	_tputcn05		(IO_TPUTCN05)
#define	TPUTCN05		(IO_TPUTCN05.word)
#define	TPUTCN05_START  	(IO_TPUTCN05.bit.START)
#define	TPUTCN05_STOP  	(IO_TPUTCN05.bit.STOP)
#define	TPUTCN05_CONT  	(IO_TPUTCN05.bit.CONT)
#define	TPUTCN05_IES  	(IO_TPUTCN05.bit.IES)
#define	TPUTCN05_IEC  	(IO_TPUTCN05.bit.IEC)
#define	TPUTCN05_IRC  	(IO_TPUTCN05.bit.IRC)
#define	TPUTCN05_ECPL  	(IO_TPUTCN05.bit.ECPL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCN06,attr=IO,locate=0x948
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	START:1;
        __WORD	STOP:1;
        __WORD	CONT:1;
        __WORD	IES:1;
        __WORD	IEC:1;
        __WORD	IRC:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	ECPL:24;
    } bit;
} TPUTCN06STR;

__IO_EXTENDED	  TPUTCN06STR	IO_TPUTCN06;
#define	_tputcn06		(IO_TPUTCN06)
#define	TPUTCN06		(IO_TPUTCN06.word)
#define	TPUTCN06_START  	(IO_TPUTCN06.bit.START)
#define	TPUTCN06_STOP  	(IO_TPUTCN06.bit.STOP)
#define	TPUTCN06_CONT  	(IO_TPUTCN06.bit.CONT)
#define	TPUTCN06_IES  	(IO_TPUTCN06.bit.IES)
#define	TPUTCN06_IEC  	(IO_TPUTCN06.bit.IEC)
#define	TPUTCN06_IRC  	(IO_TPUTCN06.bit.IRC)
#define	TPUTCN06_ECPL  	(IO_TPUTCN06.bit.ECPL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCN07,attr=IO,locate=0x94C
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	START:1;
        __WORD	STOP:1;
        __WORD	CONT:1;
        __WORD	IES:1;
        __WORD	IEC:1;
        __WORD	IRC:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	ECPL:24;
    } bit;
} TPUTCN07STR;

__IO_EXTENDED	  TPUTCN07STR	IO_TPUTCN07;
#define	_tputcn07		(IO_TPUTCN07)
#define	TPUTCN07		(IO_TPUTCN07.word)
#define	TPUTCN07_START  	(IO_TPUTCN07.bit.START)
#define	TPUTCN07_STOP  	(IO_TPUTCN07.bit.STOP)
#define	TPUTCN07_CONT  	(IO_TPUTCN07.bit.CONT)
#define	TPUTCN07_IES  	(IO_TPUTCN07.bit.IES)
#define	TPUTCN07_IEC  	(IO_TPUTCN07.bit.IEC)
#define	TPUTCN07_IRC  	(IO_TPUTCN07.bit.IRC)
#define	TPUTCN07_ECPL  	(IO_TPUTCN07.bit.ECPL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCN10,attr=IO,locate=0x950
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	PL:1;
        __BYTE	FRT:1;
        __BYTE	TMOD:1;
        __BYTE	PS:2;
    } bit;
} TPUTCN10STR;

__IO_EXTENDED	  TPUTCN10STR	IO_TPUTCN10;
#define	_tputcn10		(IO_TPUTCN10)
#define	TPUTCN10		(IO_TPUTCN10.byte)
#define	TPUTCN10_PL  	(IO_TPUTCN10.bit.PL)
#define	TPUTCN10_FRT  	(IO_TPUTCN10.bit.FRT)
#define	TPUTCN10_TMOD  	(IO_TPUTCN10.bit.TMOD)
#define	TPUTCN10_PS  	(IO_TPUTCN10.bit.PS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCN11,attr=IO,locate=0x954
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	PL:1;
        __BYTE	FRT:1;
        __BYTE	TMOD:1;
        __BYTE	PS:2;
    } bit;
} TPUTCN11STR;

__IO_EXTENDED	  TPUTCN11STR	IO_TPUTCN11;
#define	_tputcn11		(IO_TPUTCN11)
#define	TPUTCN11		(IO_TPUTCN11.byte)
#define	TPUTCN11_PL  	(IO_TPUTCN11.bit.PL)
#define	TPUTCN11_FRT  	(IO_TPUTCN11.bit.FRT)
#define	TPUTCN11_TMOD  	(IO_TPUTCN11.bit.TMOD)
#define	TPUTCN11_PS  	(IO_TPUTCN11.bit.PS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCN12,attr=IO,locate=0x958
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	PL:1;
        __BYTE	FRT:1;
        __BYTE	TMOD:1;
        __BYTE	PS:2;
    } bit;
} TPUTCN12STR;

__IO_EXTENDED	  TPUTCN12STR	IO_TPUTCN12;
#define	_tputcn12		(IO_TPUTCN12)
#define	TPUTCN12		(IO_TPUTCN12.byte)
#define	TPUTCN12_PL  	(IO_TPUTCN12.bit.PL)
#define	TPUTCN12_FRT  	(IO_TPUTCN12.bit.FRT)
#define	TPUTCN12_TMOD  	(IO_TPUTCN12.bit.TMOD)
#define	TPUTCN12_PS  	(IO_TPUTCN12.bit.PS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCN13,attr=IO,locate=0x95C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	PL:1;
        __BYTE	FRT:1;
        __BYTE	TMOD:1;
        __BYTE	PS:2;
    } bit;
} TPUTCN13STR;

__IO_EXTENDED	  TPUTCN13STR	IO_TPUTCN13;
#define	_tputcn13		(IO_TPUTCN13)
#define	TPUTCN13		(IO_TPUTCN13.byte)
#define	TPUTCN13_PL  	(IO_TPUTCN13.bit.PL)
#define	TPUTCN13_FRT  	(IO_TPUTCN13.bit.FRT)
#define	TPUTCN13_TMOD  	(IO_TPUTCN13.bit.TMOD)
#define	TPUTCN13_PS  	(IO_TPUTCN13.bit.PS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCN14,attr=IO,locate=0x960
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	PL:1;
        __BYTE	FRT:1;
        __BYTE	TMOD:1;
        __BYTE	PS:2;
    } bit;
} TPUTCN14STR;

__IO_EXTENDED	  TPUTCN14STR	IO_TPUTCN14;
#define	_tputcn14		(IO_TPUTCN14)
#define	TPUTCN14		(IO_TPUTCN14.byte)
#define	TPUTCN14_PL  	(IO_TPUTCN14.bit.PL)
#define	TPUTCN14_FRT  	(IO_TPUTCN14.bit.FRT)
#define	TPUTCN14_TMOD  	(IO_TPUTCN14.bit.TMOD)
#define	TPUTCN14_PS  	(IO_TPUTCN14.bit.PS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCN15,attr=IO,locate=0x964
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	PL:1;
        __BYTE	FRT:1;
        __BYTE	TMOD:1;
        __BYTE	PS:2;
    } bit;
} TPUTCN15STR;

__IO_EXTENDED	  TPUTCN15STR	IO_TPUTCN15;
#define	_tputcn15		(IO_TPUTCN15)
#define	TPUTCN15		(IO_TPUTCN15.byte)
#define	TPUTCN15_PL  	(IO_TPUTCN15.bit.PL)
#define	TPUTCN15_FRT  	(IO_TPUTCN15.bit.FRT)
#define	TPUTCN15_TMOD  	(IO_TPUTCN15.bit.TMOD)
#define	TPUTCN15_PS  	(IO_TPUTCN15.bit.PS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCN16,attr=IO,locate=0x968
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	PL:1;
        __BYTE	FRT:1;
        __BYTE	TMOD:1;
        __BYTE	PS:2;
    } bit;
} TPUTCN16STR;

__IO_EXTENDED	  TPUTCN16STR	IO_TPUTCN16;
#define	_tputcn16		(IO_TPUTCN16)
#define	TPUTCN16		(IO_TPUTCN16.byte)
#define	TPUTCN16_PL  	(IO_TPUTCN16.bit.PL)
#define	TPUTCN16_FRT  	(IO_TPUTCN16.bit.FRT)
#define	TPUTCN16_TMOD  	(IO_TPUTCN16.bit.TMOD)
#define	TPUTCN16_PS  	(IO_TPUTCN16.bit.PS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCN17,attr=IO,locate=0x96C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	PL:1;
        __BYTE	FRT:1;
        __BYTE	TMOD:1;
        __BYTE	PS:2;
    } bit;
} TPUTCN17STR;

__IO_EXTENDED	  TPUTCN17STR	IO_TPUTCN17;
#define	_tputcn17		(IO_TPUTCN17)
#define	TPUTCN17		(IO_TPUTCN17.byte)
#define	TPUTCN17_PL  	(IO_TPUTCN17.bit.PL)
#define	TPUTCN17_FRT  	(IO_TPUTCN17.bit.FRT)
#define	TPUTCN17_TMOD  	(IO_TPUTCN17.bit.TMOD)
#define	TPUTCN17_PS  	(IO_TPUTCN17.bit.PS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCC0,attr=IO,locate=0x970
#endif

__IO_EXTENDED	const __WORD	IO_TPUTCC0;
#define	_tputcc0		(IO_TPUTCC0)
#define	TPUTCC0	(_tputcc0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCC1,attr=IO,locate=0x974
#endif

__IO_EXTENDED	const __WORD	IO_TPUTCC1;
#define	_tputcc1		(IO_TPUTCC1)
#define	TPUTCC1	(_tputcc1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCC2,attr=IO,locate=0x978
#endif

__IO_EXTENDED	const __WORD	IO_TPUTCC2;
#define	_tputcc2		(IO_TPUTCC2)
#define	TPUTCC2	(_tputcc2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCC3,attr=IO,locate=0x97C
#endif

__IO_EXTENDED	const __WORD	IO_TPUTCC3;
#define	_tputcc3		(IO_TPUTCC3)
#define	TPUTCC3	(_tputcc3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCC4,attr=IO,locate=0x980
#endif

__IO_EXTENDED	const __WORD	IO_TPUTCC4;
#define	_tputcc4		(IO_TPUTCC4)
#define	TPUTCC4	(_tputcc4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCC5,attr=IO,locate=0x984
#endif

__IO_EXTENDED	const __WORD	IO_TPUTCC5;
#define	_tputcc5		(IO_TPUTCC5)
#define	TPUTCC5	(_tputcc5)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCC6,attr=IO,locate=0x988
#endif

__IO_EXTENDED	const __WORD	IO_TPUTCC6;
#define	_tputcc6		(IO_TPUTCC6)
#define	TPUTCC6	(_tputcc6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TPUTCC7,attr=IO,locate=0x98C
#endif

__IO_EXTENDED	const __WORD	IO_TPUTCC7;
#define	_tputcc7		(IO_TPUTCC7)
#define	TPUTCC7	(_tputcc7)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_HSCFR,attr=IO,locate=0xBF0
#endif

__IO_EXTENDED	__WORD	IO_HSCFR;
#define	_hscfr		(IO_HSCFR)
#define	HSCFR	(_hscfr)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MBR,attr=IO,locate=0xBFA
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	DMAREQ:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	MB:8;
    } bit;
} MBRSTR;

__IO_EXTENDED	  MBRSTR	IO_MBR;
#define	_mbr		(IO_MBR)
#define	MBR		(IO_MBR.hword)
#define	MBR_BUSY  	(IO_MBR.bit.BUSY)
#define	MBR_DMAREQ  	(IO_MBR.bit.DMAREQ)
#define	MBR_MB  	(IO_MBR.bit.MB)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_UER,attr=IO,locate=0xBFE
#endif

__IO_EXTENDED	__HWORD	IO_UER;
#define	_uer		(IO_UER)
#define	UER	(_uer)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCCR0,attr=IO,locate=0xC00
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	CE:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AIE:1;
        __WORD	SIE:1;
        __WORD	NIE:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RS:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	TM:2;
        __WORD	ST:1;
        __WORD	SAR:1;
        __WORD	SAC:2;
        __WORD	DT:1;
        __WORD	DAR:1;
        __WORD	DAC:2;
        __WORD	TCR:1;
        __WORD	RESV21:1;
        __WORD	TS:2;
        __WORD	BLK:4;
    } bit;
} DCCR0STR;

__IO_EXTENDED	  DCCR0STR	IO_DCCR0;
#define	_dccr0		(IO_DCCR0)
#define	DCCR0		(IO_DCCR0.word)
#define	DCCR0_CE  	(IO_DCCR0.bit.CE)
#define	DCCR0_AIE  	(IO_DCCR0.bit.AIE)
#define	DCCR0_SIE  	(IO_DCCR0.bit.SIE)
#define	DCCR0_NIE  	(IO_DCCR0.bit.NIE)
#define	DCCR0_RS  	(IO_DCCR0.bit.RS)
#define	DCCR0_TM  	(IO_DCCR0.bit.TM)
#define	DCCR0_ST  	(IO_DCCR0.bit.ST)
#define	DCCR0_SAR  	(IO_DCCR0.bit.SAR)
#define	DCCR0_SAC  	(IO_DCCR0.bit.SAC)
#define	DCCR0_DT  	(IO_DCCR0.bit.DT)
#define	DCCR0_DAR  	(IO_DCCR0.bit.DAR)
#define	DCCR0_DAC  	(IO_DCCR0.bit.DAC)
#define	DCCR0_TCR  	(IO_DCCR0.bit.TCR)
#define	DCCR0_TS  	(IO_DCCR0.bit.TS)
#define	DCCR0_BLK  	(IO_DCCR0.bit.BLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCSR0,attr=IO,locate=0xC04
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	CA:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	AC:1;
        __HWORD	SP:1;
        __HWORD	NC:1;
    } bit;
} DCSR0STR;

__IO_EXTENDED	  DCSR0STR	IO_DCSR0;
#define	_dcsr0		(IO_DCSR0)
#define	DCSR0		(IO_DCSR0.hword)
#define	DCSR0_CA  	(IO_DCSR0.bit.CA)
#define	DCSR0_AC  	(IO_DCSR0.bit.AC)
#define	DCSR0_SP  	(IO_DCSR0.bit.SP)
#define	DCSR0_NC  	(IO_DCSR0.bit.NC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTCR0,attr=IO,locate=0xC06
#endif

__IO_EXTENDED	__HWORD	IO_DTCR0;
#define	_dtcr0		(IO_DTCR0)
#define	DTCR0	(_dtcr0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSAR0,attr=IO,locate=0xC08
#endif

__IO_EXTENDED	__WORD	IO_DSAR0;
#define	_dsar0		(IO_DSAR0)
#define	DSAR0	(_dsar0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDAR0,attr=IO,locate=0xC0C
#endif

__IO_EXTENDED	__WORD	IO_DDAR0;
#define	_ddar0		(IO_DDAR0)
#define	DDAR0	(_ddar0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCCR1,attr=IO,locate=0xC10
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	CE:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AIE:1;
        __WORD	SIE:1;
        __WORD	NIE:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RS:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	TM:2;
        __WORD	ST:1;
        __WORD	SAR:1;
        __WORD	SAC:2;
        __WORD	DT:1;
        __WORD	DAR:1;
        __WORD	DAC:2;
        __WORD	TCR:1;
        __WORD	RESV21:1;
        __WORD	TS:2;
        __WORD	BLK:4;
    } bit;
} DCCR1STR;

__IO_EXTENDED	  DCCR1STR	IO_DCCR1;
#define	_dccr1		(IO_DCCR1)
#define	DCCR1		(IO_DCCR1.word)
#define	DCCR1_CE  	(IO_DCCR1.bit.CE)
#define	DCCR1_AIE  	(IO_DCCR1.bit.AIE)
#define	DCCR1_SIE  	(IO_DCCR1.bit.SIE)
#define	DCCR1_NIE  	(IO_DCCR1.bit.NIE)
#define	DCCR1_RS  	(IO_DCCR1.bit.RS)
#define	DCCR1_TM  	(IO_DCCR1.bit.TM)
#define	DCCR1_ST  	(IO_DCCR1.bit.ST)
#define	DCCR1_SAR  	(IO_DCCR1.bit.SAR)
#define	DCCR1_SAC  	(IO_DCCR1.bit.SAC)
#define	DCCR1_DT  	(IO_DCCR1.bit.DT)
#define	DCCR1_DAR  	(IO_DCCR1.bit.DAR)
#define	DCCR1_DAC  	(IO_DCCR1.bit.DAC)
#define	DCCR1_TCR  	(IO_DCCR1.bit.TCR)
#define	DCCR1_TS  	(IO_DCCR1.bit.TS)
#define	DCCR1_BLK  	(IO_DCCR1.bit.BLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCSR1,attr=IO,locate=0xC14
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	CA:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	AC:1;
        __HWORD	SP:1;
        __HWORD	NC:1;
    } bit;
} DCSR1STR;

__IO_EXTENDED	  DCSR1STR	IO_DCSR1;
#define	_dcsr1		(IO_DCSR1)
#define	DCSR1		(IO_DCSR1.hword)
#define	DCSR1_CA  	(IO_DCSR1.bit.CA)
#define	DCSR1_AC  	(IO_DCSR1.bit.AC)
#define	DCSR1_SP  	(IO_DCSR1.bit.SP)
#define	DCSR1_NC  	(IO_DCSR1.bit.NC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTCR1,attr=IO,locate=0xC16
#endif

__IO_EXTENDED	__HWORD	IO_DTCR1;
#define	_dtcr1		(IO_DTCR1)
#define	DTCR1	(_dtcr1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSAR1,attr=IO,locate=0xC18
#endif

__IO_EXTENDED	__WORD	IO_DSAR1;
#define	_dsar1		(IO_DSAR1)
#define	DSAR1	(_dsar1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDAR1,attr=IO,locate=0xC1C
#endif

__IO_EXTENDED	__WORD	IO_DDAR1;
#define	_ddar1		(IO_DDAR1)
#define	DDAR1	(_ddar1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCCR2,attr=IO,locate=0xC20
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	CE:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AIE:1;
        __WORD	SIE:1;
        __WORD	NIE:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RS:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	TM:2;
        __WORD	ST:1;
        __WORD	SAR:1;
        __WORD	SAC:2;
        __WORD	DT:1;
        __WORD	DAR:1;
        __WORD	DAC:2;
        __WORD	TCR:1;
        __WORD	RESV21:1;
        __WORD	TS:2;
        __WORD	BLK:4;
    } bit;
} DCCR2STR;

__IO_EXTENDED	  DCCR2STR	IO_DCCR2;
#define	_dccr2		(IO_DCCR2)
#define	DCCR2		(IO_DCCR2.word)
#define	DCCR2_CE  	(IO_DCCR2.bit.CE)
#define	DCCR2_AIE  	(IO_DCCR2.bit.AIE)
#define	DCCR2_SIE  	(IO_DCCR2.bit.SIE)
#define	DCCR2_NIE  	(IO_DCCR2.bit.NIE)
#define	DCCR2_RS  	(IO_DCCR2.bit.RS)
#define	DCCR2_TM  	(IO_DCCR2.bit.TM)
#define	DCCR2_ST  	(IO_DCCR2.bit.ST)
#define	DCCR2_SAR  	(IO_DCCR2.bit.SAR)
#define	DCCR2_SAC  	(IO_DCCR2.bit.SAC)
#define	DCCR2_DT  	(IO_DCCR2.bit.DT)
#define	DCCR2_DAR  	(IO_DCCR2.bit.DAR)
#define	DCCR2_DAC  	(IO_DCCR2.bit.DAC)
#define	DCCR2_TCR  	(IO_DCCR2.bit.TCR)
#define	DCCR2_TS  	(IO_DCCR2.bit.TS)
#define	DCCR2_BLK  	(IO_DCCR2.bit.BLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCSR2,attr=IO,locate=0xC24
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	CA:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	AC:1;
        __HWORD	SP:1;
        __HWORD	NC:1;
    } bit;
} DCSR2STR;

__IO_EXTENDED	  DCSR2STR	IO_DCSR2;
#define	_dcsr2		(IO_DCSR2)
#define	DCSR2		(IO_DCSR2.hword)
#define	DCSR2_CA  	(IO_DCSR2.bit.CA)
#define	DCSR2_AC  	(IO_DCSR2.bit.AC)
#define	DCSR2_SP  	(IO_DCSR2.bit.SP)
#define	DCSR2_NC  	(IO_DCSR2.bit.NC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTCR2,attr=IO,locate=0xC26
#endif

__IO_EXTENDED	__HWORD	IO_DTCR2;
#define	_dtcr2		(IO_DTCR2)
#define	DTCR2	(_dtcr2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSAR2,attr=IO,locate=0xC28
#endif

__IO_EXTENDED	__WORD	IO_DSAR2;
#define	_dsar2		(IO_DSAR2)
#define	DSAR2	(_dsar2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDAR2,attr=IO,locate=0xC2C
#endif

__IO_EXTENDED	__WORD	IO_DDAR2;
#define	_ddar2		(IO_DDAR2)
#define	DDAR2	(_ddar2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCCR3,attr=IO,locate=0xC30
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	CE:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AIE:1;
        __WORD	SIE:1;
        __WORD	NIE:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RS:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	TM:2;
        __WORD	ST:1;
        __WORD	SAR:1;
        __WORD	SAC:2;
        __WORD	DT:1;
        __WORD	DAR:1;
        __WORD	DAC:2;
        __WORD	TCR:1;
        __WORD	RESV21:1;
        __WORD	TS:2;
        __WORD	BLK:4;
    } bit;
} DCCR3STR;

__IO_EXTENDED	  DCCR3STR	IO_DCCR3;
#define	_dccr3		(IO_DCCR3)
#define	DCCR3		(IO_DCCR3.word)
#define	DCCR3_CE  	(IO_DCCR3.bit.CE)
#define	DCCR3_AIE  	(IO_DCCR3.bit.AIE)
#define	DCCR3_SIE  	(IO_DCCR3.bit.SIE)
#define	DCCR3_NIE  	(IO_DCCR3.bit.NIE)
#define	DCCR3_RS  	(IO_DCCR3.bit.RS)
#define	DCCR3_TM  	(IO_DCCR3.bit.TM)
#define	DCCR3_ST  	(IO_DCCR3.bit.ST)
#define	DCCR3_SAR  	(IO_DCCR3.bit.SAR)
#define	DCCR3_SAC  	(IO_DCCR3.bit.SAC)
#define	DCCR3_DT  	(IO_DCCR3.bit.DT)
#define	DCCR3_DAR  	(IO_DCCR3.bit.DAR)
#define	DCCR3_DAC  	(IO_DCCR3.bit.DAC)
#define	DCCR3_TCR  	(IO_DCCR3.bit.TCR)
#define	DCCR3_TS  	(IO_DCCR3.bit.TS)
#define	DCCR3_BLK  	(IO_DCCR3.bit.BLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCSR3,attr=IO,locate=0xC34
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	CA:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	AC:1;
        __HWORD	SP:1;
        __HWORD	NC:1;
    } bit;
} DCSR3STR;

__IO_EXTENDED	  DCSR3STR	IO_DCSR3;
#define	_dcsr3		(IO_DCSR3)
#define	DCSR3		(IO_DCSR3.hword)
#define	DCSR3_CA  	(IO_DCSR3.bit.CA)
#define	DCSR3_AC  	(IO_DCSR3.bit.AC)
#define	DCSR3_SP  	(IO_DCSR3.bit.SP)
#define	DCSR3_NC  	(IO_DCSR3.bit.NC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTCR3,attr=IO,locate=0xC36
#endif

__IO_EXTENDED	__HWORD	IO_DTCR3;
#define	_dtcr3		(IO_DTCR3)
#define	DTCR3	(_dtcr3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSAR3,attr=IO,locate=0xC38
#endif

__IO_EXTENDED	__WORD	IO_DSAR3;
#define	_dsar3		(IO_DSAR3)
#define	DSAR3	(_dsar3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDAR3,attr=IO,locate=0xC3C
#endif

__IO_EXTENDED	__WORD	IO_DDAR3;
#define	_ddar3		(IO_DDAR3)
#define	DDAR3	(_ddar3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCCR4,attr=IO,locate=0xC40
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	CE:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AIE:1;
        __WORD	SIE:1;
        __WORD	NIE:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RS:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	TM:2;
        __WORD	ST:1;
        __WORD	SAR:1;
        __WORD	SAC:2;
        __WORD	DT:1;
        __WORD	DAR:1;
        __WORD	DAC:2;
        __WORD	TCR:1;
        __WORD	RESV21:1;
        __WORD	TS:2;
        __WORD	BLK:4;
    } bit;
} DCCR4STR;

__IO_EXTENDED	  DCCR4STR	IO_DCCR4;
#define	_dccr4		(IO_DCCR4)
#define	DCCR4		(IO_DCCR4.word)
#define	DCCR4_CE  	(IO_DCCR4.bit.CE)
#define	DCCR4_AIE  	(IO_DCCR4.bit.AIE)
#define	DCCR4_SIE  	(IO_DCCR4.bit.SIE)
#define	DCCR4_NIE  	(IO_DCCR4.bit.NIE)
#define	DCCR4_RS  	(IO_DCCR4.bit.RS)
#define	DCCR4_TM  	(IO_DCCR4.bit.TM)
#define	DCCR4_ST  	(IO_DCCR4.bit.ST)
#define	DCCR4_SAR  	(IO_DCCR4.bit.SAR)
#define	DCCR4_SAC  	(IO_DCCR4.bit.SAC)
#define	DCCR4_DT  	(IO_DCCR4.bit.DT)
#define	DCCR4_DAR  	(IO_DCCR4.bit.DAR)
#define	DCCR4_DAC  	(IO_DCCR4.bit.DAC)
#define	DCCR4_TCR  	(IO_DCCR4.bit.TCR)
#define	DCCR4_TS  	(IO_DCCR4.bit.TS)
#define	DCCR4_BLK  	(IO_DCCR4.bit.BLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCSR4,attr=IO,locate=0xC44
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	CA:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	AC:1;
        __HWORD	SP:1;
        __HWORD	NC:1;
    } bit;
} DCSR4STR;

__IO_EXTENDED	  DCSR4STR	IO_DCSR4;
#define	_dcsr4		(IO_DCSR4)
#define	DCSR4		(IO_DCSR4.hword)
#define	DCSR4_CA  	(IO_DCSR4.bit.CA)
#define	DCSR4_AC  	(IO_DCSR4.bit.AC)
#define	DCSR4_SP  	(IO_DCSR4.bit.SP)
#define	DCSR4_NC  	(IO_DCSR4.bit.NC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTCR4,attr=IO,locate=0xC46
#endif

__IO_EXTENDED	__HWORD	IO_DTCR4;
#define	_dtcr4		(IO_DTCR4)
#define	DTCR4	(_dtcr4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSAR4,attr=IO,locate=0xC48
#endif

__IO_EXTENDED	__WORD	IO_DSAR4;
#define	_dsar4		(IO_DSAR4)
#define	DSAR4	(_dsar4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDAR4,attr=IO,locate=0xC4C
#endif

__IO_EXTENDED	__WORD	IO_DDAR4;
#define	_ddar4		(IO_DDAR4)
#define	DDAR4	(_ddar4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCCR5,attr=IO,locate=0xC50
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	CE:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AIE:1;
        __WORD	SIE:1;
        __WORD	NIE:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RS:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	TM:2;
        __WORD	ST:1;
        __WORD	SAR:1;
        __WORD	SAC:2;
        __WORD	DT:1;
        __WORD	DAR:1;
        __WORD	DAC:2;
        __WORD	TCR:1;
        __WORD	RESV21:1;
        __WORD	TS:2;
        __WORD	BLK:4;
    } bit;
} DCCR5STR;

__IO_EXTENDED	  DCCR5STR	IO_DCCR5;
#define	_dccr5		(IO_DCCR5)
#define	DCCR5		(IO_DCCR5.word)
#define	DCCR5_CE  	(IO_DCCR5.bit.CE)
#define	DCCR5_AIE  	(IO_DCCR5.bit.AIE)
#define	DCCR5_SIE  	(IO_DCCR5.bit.SIE)
#define	DCCR5_NIE  	(IO_DCCR5.bit.NIE)
#define	DCCR5_RS  	(IO_DCCR5.bit.RS)
#define	DCCR5_TM  	(IO_DCCR5.bit.TM)
#define	DCCR5_ST  	(IO_DCCR5.bit.ST)
#define	DCCR5_SAR  	(IO_DCCR5.bit.SAR)
#define	DCCR5_SAC  	(IO_DCCR5.bit.SAC)
#define	DCCR5_DT  	(IO_DCCR5.bit.DT)
#define	DCCR5_DAR  	(IO_DCCR5.bit.DAR)
#define	DCCR5_DAC  	(IO_DCCR5.bit.DAC)
#define	DCCR5_TCR  	(IO_DCCR5.bit.TCR)
#define	DCCR5_TS  	(IO_DCCR5.bit.TS)
#define	DCCR5_BLK  	(IO_DCCR5.bit.BLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCSR5,attr=IO,locate=0xC54
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	CA:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	AC:1;
        __HWORD	SP:1;
        __HWORD	NC:1;
    } bit;
} DCSR5STR;

__IO_EXTENDED	  DCSR5STR	IO_DCSR5;
#define	_dcsr5		(IO_DCSR5)
#define	DCSR5		(IO_DCSR5.hword)
#define	DCSR5_CA  	(IO_DCSR5.bit.CA)
#define	DCSR5_AC  	(IO_DCSR5.bit.AC)
#define	DCSR5_SP  	(IO_DCSR5.bit.SP)
#define	DCSR5_NC  	(IO_DCSR5.bit.NC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTCR5,attr=IO,locate=0xC56
#endif

__IO_EXTENDED	__HWORD	IO_DTCR5;
#define	_dtcr5		(IO_DTCR5)
#define	DTCR5	(_dtcr5)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSAR5,attr=IO,locate=0xC58
#endif

__IO_EXTENDED	__WORD	IO_DSAR5;
#define	_dsar5		(IO_DSAR5)
#define	DSAR5	(_dsar5)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDAR5,attr=IO,locate=0xC5C
#endif

__IO_EXTENDED	__WORD	IO_DDAR5;
#define	_ddar5		(IO_DDAR5)
#define	DDAR5	(_ddar5)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCCR6,attr=IO,locate=0xC60
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	CE:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AIE:1;
        __WORD	SIE:1;
        __WORD	NIE:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RS:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	TM:2;
        __WORD	ST:1;
        __WORD	SAR:1;
        __WORD	SAC:2;
        __WORD	DT:1;
        __WORD	DAR:1;
        __WORD	DAC:2;
        __WORD	TCR:1;
        __WORD	RESV21:1;
        __WORD	TS:2;
        __WORD	BLK:4;
    } bit;
} DCCR6STR;

__IO_EXTENDED	  DCCR6STR	IO_DCCR6;
#define	_dccr6		(IO_DCCR6)
#define	DCCR6		(IO_DCCR6.word)
#define	DCCR6_CE  	(IO_DCCR6.bit.CE)
#define	DCCR6_AIE  	(IO_DCCR6.bit.AIE)
#define	DCCR6_SIE  	(IO_DCCR6.bit.SIE)
#define	DCCR6_NIE  	(IO_DCCR6.bit.NIE)
#define	DCCR6_RS  	(IO_DCCR6.bit.RS)
#define	DCCR6_TM  	(IO_DCCR6.bit.TM)
#define	DCCR6_ST  	(IO_DCCR6.bit.ST)
#define	DCCR6_SAR  	(IO_DCCR6.bit.SAR)
#define	DCCR6_SAC  	(IO_DCCR6.bit.SAC)
#define	DCCR6_DT  	(IO_DCCR6.bit.DT)
#define	DCCR6_DAR  	(IO_DCCR6.bit.DAR)
#define	DCCR6_DAC  	(IO_DCCR6.bit.DAC)
#define	DCCR6_TCR  	(IO_DCCR6.bit.TCR)
#define	DCCR6_TS  	(IO_DCCR6.bit.TS)
#define	DCCR6_BLK  	(IO_DCCR6.bit.BLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCSR6,attr=IO,locate=0xC64
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	CA:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	AC:1;
        __HWORD	SP:1;
        __HWORD	NC:1;
    } bit;
} DCSR6STR;

__IO_EXTENDED	  DCSR6STR	IO_DCSR6;
#define	_dcsr6		(IO_DCSR6)
#define	DCSR6		(IO_DCSR6.hword)
#define	DCSR6_CA  	(IO_DCSR6.bit.CA)
#define	DCSR6_AC  	(IO_DCSR6.bit.AC)
#define	DCSR6_SP  	(IO_DCSR6.bit.SP)
#define	DCSR6_NC  	(IO_DCSR6.bit.NC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTCR6,attr=IO,locate=0xC66
#endif

__IO_EXTENDED	__HWORD	IO_DTCR6;
#define	_dtcr6		(IO_DTCR6)
#define	DTCR6	(_dtcr6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSAR6,attr=IO,locate=0xC68
#endif

__IO_EXTENDED	__WORD	IO_DSAR6;
#define	_dsar6		(IO_DSAR6)
#define	DSAR6	(_dsar6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDAR6,attr=IO,locate=0xC6C
#endif

__IO_EXTENDED	__WORD	IO_DDAR6;
#define	_ddar6		(IO_DDAR6)
#define	DDAR6	(_ddar6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCCR7,attr=IO,locate=0xC70
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	CE:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AIE:1;
        __WORD	SIE:1;
        __WORD	NIE:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RS:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	TM:2;
        __WORD	ST:1;
        __WORD	SAR:1;
        __WORD	SAC:2;
        __WORD	DT:1;
        __WORD	DAR:1;
        __WORD	DAC:2;
        __WORD	TCR:1;
        __WORD	RESV21:1;
        __WORD	TS:2;
        __WORD	BLK:4;
    } bit;
} DCCR7STR;

__IO_EXTENDED	  DCCR7STR	IO_DCCR7;
#define	_dccr7		(IO_DCCR7)
#define	DCCR7		(IO_DCCR7.word)
#define	DCCR7_CE  	(IO_DCCR7.bit.CE)
#define	DCCR7_AIE  	(IO_DCCR7.bit.AIE)
#define	DCCR7_SIE  	(IO_DCCR7.bit.SIE)
#define	DCCR7_NIE  	(IO_DCCR7.bit.NIE)
#define	DCCR7_RS  	(IO_DCCR7.bit.RS)
#define	DCCR7_TM  	(IO_DCCR7.bit.TM)
#define	DCCR7_ST  	(IO_DCCR7.bit.ST)
#define	DCCR7_SAR  	(IO_DCCR7.bit.SAR)
#define	DCCR7_SAC  	(IO_DCCR7.bit.SAC)
#define	DCCR7_DT  	(IO_DCCR7.bit.DT)
#define	DCCR7_DAR  	(IO_DCCR7.bit.DAR)
#define	DCCR7_DAC  	(IO_DCCR7.bit.DAC)
#define	DCCR7_TCR  	(IO_DCCR7.bit.TCR)
#define	DCCR7_TS  	(IO_DCCR7.bit.TS)
#define	DCCR7_BLK  	(IO_DCCR7.bit.BLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCSR7,attr=IO,locate=0xC74
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	CA:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	AC:1;
        __HWORD	SP:1;
        __HWORD	NC:1;
    } bit;
} DCSR7STR;

__IO_EXTENDED	  DCSR7STR	IO_DCSR7;
#define	_dcsr7		(IO_DCSR7)
#define	DCSR7		(IO_DCSR7.hword)
#define	DCSR7_CA  	(IO_DCSR7.bit.CA)
#define	DCSR7_AC  	(IO_DCSR7.bit.AC)
#define	DCSR7_SP  	(IO_DCSR7.bit.SP)
#define	DCSR7_NC  	(IO_DCSR7.bit.NC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTCR7,attr=IO,locate=0xC76
#endif

__IO_EXTENDED	__HWORD	IO_DTCR7;
#define	_dtcr7		(IO_DTCR7)
#define	DTCR7	(_dtcr7)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSAR7,attr=IO,locate=0xC78
#endif

__IO_EXTENDED	__WORD	IO_DSAR7;
#define	_dsar7		(IO_DSAR7)
#define	DSAR7	(_dsar7)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDAR7,attr=IO,locate=0xC7C
#endif

__IO_EXTENDED	__WORD	IO_DDAR7;
#define	_ddar7		(IO_DDAR7)
#define	DDAR7	(_ddar7)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCCR8,attr=IO,locate=0xC80
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	CE:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AIE:1;
        __WORD	SIE:1;
        __WORD	NIE:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RS:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	TM:2;
        __WORD	ST:1;
        __WORD	SAR:1;
        __WORD	SAC:2;
        __WORD	DT:1;
        __WORD	DAR:1;
        __WORD	DAC:2;
        __WORD	TCR:1;
        __WORD	RESV21:1;
        __WORD	TS:2;
        __WORD	BLK:4;
    } bit;
} DCCR8STR;

__IO_EXTENDED	  DCCR8STR	IO_DCCR8;
#define	_dccr8		(IO_DCCR8)
#define	DCCR8		(IO_DCCR8.word)
#define	DCCR8_CE  	(IO_DCCR8.bit.CE)
#define	DCCR8_AIE  	(IO_DCCR8.bit.AIE)
#define	DCCR8_SIE  	(IO_DCCR8.bit.SIE)
#define	DCCR8_NIE  	(IO_DCCR8.bit.NIE)
#define	DCCR8_RS  	(IO_DCCR8.bit.RS)
#define	DCCR8_TM  	(IO_DCCR8.bit.TM)
#define	DCCR8_ST  	(IO_DCCR8.bit.ST)
#define	DCCR8_SAR  	(IO_DCCR8.bit.SAR)
#define	DCCR8_SAC  	(IO_DCCR8.bit.SAC)
#define	DCCR8_DT  	(IO_DCCR8.bit.DT)
#define	DCCR8_DAR  	(IO_DCCR8.bit.DAR)
#define	DCCR8_DAC  	(IO_DCCR8.bit.DAC)
#define	DCCR8_TCR  	(IO_DCCR8.bit.TCR)
#define	DCCR8_TS  	(IO_DCCR8.bit.TS)
#define	DCCR8_BLK  	(IO_DCCR8.bit.BLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCSR8,attr=IO,locate=0xC84
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	CA:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	AC:1;
        __HWORD	SP:1;
        __HWORD	NC:1;
    } bit;
} DCSR8STR;

__IO_EXTENDED	  DCSR8STR	IO_DCSR8;
#define	_dcsr8		(IO_DCSR8)
#define	DCSR8		(IO_DCSR8.hword)
#define	DCSR8_CA  	(IO_DCSR8.bit.CA)
#define	DCSR8_AC  	(IO_DCSR8.bit.AC)
#define	DCSR8_SP  	(IO_DCSR8.bit.SP)
#define	DCSR8_NC  	(IO_DCSR8.bit.NC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTCR8,attr=IO,locate=0xC86
#endif

__IO_EXTENDED	__HWORD	IO_DTCR8;
#define	_dtcr8		(IO_DTCR8)
#define	DTCR8	(_dtcr8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSAR8,attr=IO,locate=0xC88
#endif

__IO_EXTENDED	__WORD	IO_DSAR8;
#define	_dsar8		(IO_DSAR8)
#define	DSAR8	(_dsar8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDAR8,attr=IO,locate=0xC8C
#endif

__IO_EXTENDED	__WORD	IO_DDAR8;
#define	_ddar8		(IO_DDAR8)
#define	DDAR8	(_ddar8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCCR9,attr=IO,locate=0xC90
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	CE:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AIE:1;
        __WORD	SIE:1;
        __WORD	NIE:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RS:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	TM:2;
        __WORD	ST:1;
        __WORD	SAR:1;
        __WORD	SAC:2;
        __WORD	DT:1;
        __WORD	DAR:1;
        __WORD	DAC:2;
        __WORD	TCR:1;
        __WORD	RESV21:1;
        __WORD	TS:2;
        __WORD	BLK:4;
    } bit;
} DCCR9STR;

__IO_EXTENDED	  DCCR9STR	IO_DCCR9;
#define	_dccr9		(IO_DCCR9)
#define	DCCR9		(IO_DCCR9.word)
#define	DCCR9_CE  	(IO_DCCR9.bit.CE)
#define	DCCR9_AIE  	(IO_DCCR9.bit.AIE)
#define	DCCR9_SIE  	(IO_DCCR9.bit.SIE)
#define	DCCR9_NIE  	(IO_DCCR9.bit.NIE)
#define	DCCR9_RS  	(IO_DCCR9.bit.RS)
#define	DCCR9_TM  	(IO_DCCR9.bit.TM)
#define	DCCR9_ST  	(IO_DCCR9.bit.ST)
#define	DCCR9_SAR  	(IO_DCCR9.bit.SAR)
#define	DCCR9_SAC  	(IO_DCCR9.bit.SAC)
#define	DCCR9_DT  	(IO_DCCR9.bit.DT)
#define	DCCR9_DAR  	(IO_DCCR9.bit.DAR)
#define	DCCR9_DAC  	(IO_DCCR9.bit.DAC)
#define	DCCR9_TCR  	(IO_DCCR9.bit.TCR)
#define	DCCR9_TS  	(IO_DCCR9.bit.TS)
#define	DCCR9_BLK  	(IO_DCCR9.bit.BLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCSR9,attr=IO,locate=0xC94
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	CA:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	AC:1;
        __HWORD	SP:1;
        __HWORD	NC:1;
    } bit;
} DCSR9STR;

__IO_EXTENDED	  DCSR9STR	IO_DCSR9;
#define	_dcsr9		(IO_DCSR9)
#define	DCSR9		(IO_DCSR9.hword)
#define	DCSR9_CA  	(IO_DCSR9.bit.CA)
#define	DCSR9_AC  	(IO_DCSR9.bit.AC)
#define	DCSR9_SP  	(IO_DCSR9.bit.SP)
#define	DCSR9_NC  	(IO_DCSR9.bit.NC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTCR9,attr=IO,locate=0xC96
#endif

__IO_EXTENDED	__HWORD	IO_DTCR9;
#define	_dtcr9		(IO_DTCR9)
#define	DTCR9	(_dtcr9)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSAR9,attr=IO,locate=0xC98
#endif

__IO_EXTENDED	__WORD	IO_DSAR9;
#define	_dsar9		(IO_DSAR9)
#define	DSAR9	(_dsar9)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDAR9,attr=IO,locate=0xC9C
#endif

__IO_EXTENDED	__WORD	IO_DDAR9;
#define	_ddar9		(IO_DDAR9)
#define	DDAR9	(_ddar9)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCCR10,attr=IO,locate=0xCA0
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	CE:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AIE:1;
        __WORD	SIE:1;
        __WORD	NIE:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RS:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	TM:2;
        __WORD	ST:1;
        __WORD	SAR:1;
        __WORD	SAC:2;
        __WORD	DT:1;
        __WORD	DAR:1;
        __WORD	DAC:2;
        __WORD	TCR:1;
        __WORD	RESV21:1;
        __WORD	TS:2;
        __WORD	BLK:4;
    } bit;
} DCCR10STR;

__IO_EXTENDED	  DCCR10STR	IO_DCCR10;
#define	_dccr10		(IO_DCCR10)
#define	DCCR10		(IO_DCCR10.word)
#define	DCCR10_CE  	(IO_DCCR10.bit.CE)
#define	DCCR10_AIE  	(IO_DCCR10.bit.AIE)
#define	DCCR10_SIE  	(IO_DCCR10.bit.SIE)
#define	DCCR10_NIE  	(IO_DCCR10.bit.NIE)
#define	DCCR10_RS  	(IO_DCCR10.bit.RS)
#define	DCCR10_TM  	(IO_DCCR10.bit.TM)
#define	DCCR10_ST  	(IO_DCCR10.bit.ST)
#define	DCCR10_SAR  	(IO_DCCR10.bit.SAR)
#define	DCCR10_SAC  	(IO_DCCR10.bit.SAC)
#define	DCCR10_DT  	(IO_DCCR10.bit.DT)
#define	DCCR10_DAR  	(IO_DCCR10.bit.DAR)
#define	DCCR10_DAC  	(IO_DCCR10.bit.DAC)
#define	DCCR10_TCR  	(IO_DCCR10.bit.TCR)
#define	DCCR10_TS  	(IO_DCCR10.bit.TS)
#define	DCCR10_BLK  	(IO_DCCR10.bit.BLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCSR10,attr=IO,locate=0xCA4
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	CA:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	AC:1;
        __HWORD	SP:1;
        __HWORD	NC:1;
    } bit;
} DCSR10STR;

__IO_EXTENDED	  DCSR10STR	IO_DCSR10;
#define	_dcsr10		(IO_DCSR10)
#define	DCSR10		(IO_DCSR10.hword)
#define	DCSR10_CA  	(IO_DCSR10.bit.CA)
#define	DCSR10_AC  	(IO_DCSR10.bit.AC)
#define	DCSR10_SP  	(IO_DCSR10.bit.SP)
#define	DCSR10_NC  	(IO_DCSR10.bit.NC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTCR10,attr=IO,locate=0xCA6
#endif

__IO_EXTENDED	__HWORD	IO_DTCR10;
#define	_dtcr10		(IO_DTCR10)
#define	DTCR10	(_dtcr10)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSAR10,attr=IO,locate=0xCA8
#endif

__IO_EXTENDED	__WORD	IO_DSAR10;
#define	_dsar10		(IO_DSAR10)
#define	DSAR10	(_dsar10)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDAR10,attr=IO,locate=0xCAC
#endif

__IO_EXTENDED	__WORD	IO_DDAR10;
#define	_ddar10		(IO_DDAR10)
#define	DDAR10	(_ddar10)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCCR11,attr=IO,locate=0xCB0
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	CE:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AIE:1;
        __WORD	SIE:1;
        __WORD	NIE:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RS:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	TM:2;
        __WORD	ST:1;
        __WORD	SAR:1;
        __WORD	SAC:2;
        __WORD	DT:1;
        __WORD	DAR:1;
        __WORD	DAC:2;
        __WORD	TCR:1;
        __WORD	RESV21:1;
        __WORD	TS:2;
        __WORD	BLK:4;
    } bit;
} DCCR11STR;

__IO_EXTENDED	  DCCR11STR	IO_DCCR11;
#define	_dccr11		(IO_DCCR11)
#define	DCCR11		(IO_DCCR11.word)
#define	DCCR11_CE  	(IO_DCCR11.bit.CE)
#define	DCCR11_AIE  	(IO_DCCR11.bit.AIE)
#define	DCCR11_SIE  	(IO_DCCR11.bit.SIE)
#define	DCCR11_NIE  	(IO_DCCR11.bit.NIE)
#define	DCCR11_RS  	(IO_DCCR11.bit.RS)
#define	DCCR11_TM  	(IO_DCCR11.bit.TM)
#define	DCCR11_ST  	(IO_DCCR11.bit.ST)
#define	DCCR11_SAR  	(IO_DCCR11.bit.SAR)
#define	DCCR11_SAC  	(IO_DCCR11.bit.SAC)
#define	DCCR11_DT  	(IO_DCCR11.bit.DT)
#define	DCCR11_DAR  	(IO_DCCR11.bit.DAR)
#define	DCCR11_DAC  	(IO_DCCR11.bit.DAC)
#define	DCCR11_TCR  	(IO_DCCR11.bit.TCR)
#define	DCCR11_TS  	(IO_DCCR11.bit.TS)
#define	DCCR11_BLK  	(IO_DCCR11.bit.BLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCSR11,attr=IO,locate=0xCB4
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	CA:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	AC:1;
        __HWORD	SP:1;
        __HWORD	NC:1;
    } bit;
} DCSR11STR;

__IO_EXTENDED	  DCSR11STR	IO_DCSR11;
#define	_dcsr11		(IO_DCSR11)
#define	DCSR11		(IO_DCSR11.hword)
#define	DCSR11_CA  	(IO_DCSR11.bit.CA)
#define	DCSR11_AC  	(IO_DCSR11.bit.AC)
#define	DCSR11_SP  	(IO_DCSR11.bit.SP)
#define	DCSR11_NC  	(IO_DCSR11.bit.NC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTCR11,attr=IO,locate=0xCB6
#endif

__IO_EXTENDED	__HWORD	IO_DTCR11;
#define	_dtcr11		(IO_DTCR11)
#define	DTCR11	(_dtcr11)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSAR11,attr=IO,locate=0xCB8
#endif

__IO_EXTENDED	__WORD	IO_DSAR11;
#define	_dsar11		(IO_DSAR11)
#define	DSAR11	(_dsar11)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDAR11,attr=IO,locate=0xCBC
#endif

__IO_EXTENDED	__WORD	IO_DDAR11;
#define	_ddar11		(IO_DDAR11)
#define	DDAR11	(_ddar11)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCCR12,attr=IO,locate=0xCC0
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	CE:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AIE:1;
        __WORD	SIE:1;
        __WORD	NIE:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RS:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	TM:2;
        __WORD	ST:1;
        __WORD	SAR:1;
        __WORD	SAC:2;
        __WORD	DT:1;
        __WORD	DAR:1;
        __WORD	DAC:2;
        __WORD	TCR:1;
        __WORD	RESV21:1;
        __WORD	TS:2;
        __WORD	BLK:4;
    } bit;
} DCCR12STR;

__IO_EXTENDED	  DCCR12STR	IO_DCCR12;
#define	_dccr12		(IO_DCCR12)
#define	DCCR12		(IO_DCCR12.word)
#define	DCCR12_CE  	(IO_DCCR12.bit.CE)
#define	DCCR12_AIE  	(IO_DCCR12.bit.AIE)
#define	DCCR12_SIE  	(IO_DCCR12.bit.SIE)
#define	DCCR12_NIE  	(IO_DCCR12.bit.NIE)
#define	DCCR12_RS  	(IO_DCCR12.bit.RS)
#define	DCCR12_TM  	(IO_DCCR12.bit.TM)
#define	DCCR12_ST  	(IO_DCCR12.bit.ST)
#define	DCCR12_SAR  	(IO_DCCR12.bit.SAR)
#define	DCCR12_SAC  	(IO_DCCR12.bit.SAC)
#define	DCCR12_DT  	(IO_DCCR12.bit.DT)
#define	DCCR12_DAR  	(IO_DCCR12.bit.DAR)
#define	DCCR12_DAC  	(IO_DCCR12.bit.DAC)
#define	DCCR12_TCR  	(IO_DCCR12.bit.TCR)
#define	DCCR12_TS  	(IO_DCCR12.bit.TS)
#define	DCCR12_BLK  	(IO_DCCR12.bit.BLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCSR12,attr=IO,locate=0xCC4
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	CA:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	AC:1;
        __HWORD	SP:1;
        __HWORD	NC:1;
    } bit;
} DCSR12STR;

__IO_EXTENDED	  DCSR12STR	IO_DCSR12;
#define	_dcsr12		(IO_DCSR12)
#define	DCSR12		(IO_DCSR12.hword)
#define	DCSR12_CA  	(IO_DCSR12.bit.CA)
#define	DCSR12_AC  	(IO_DCSR12.bit.AC)
#define	DCSR12_SP  	(IO_DCSR12.bit.SP)
#define	DCSR12_NC  	(IO_DCSR12.bit.NC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTCR12,attr=IO,locate=0xCC6
#endif

__IO_EXTENDED	__HWORD	IO_DTCR12;
#define	_dtcr12		(IO_DTCR12)
#define	DTCR12	(_dtcr12)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSAR12,attr=IO,locate=0xCC8
#endif

__IO_EXTENDED	__WORD	IO_DSAR12;
#define	_dsar12		(IO_DSAR12)
#define	DSAR12	(_dsar12)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDAR12,attr=IO,locate=0xCCC
#endif

__IO_EXTENDED	__WORD	IO_DDAR12;
#define	_ddar12		(IO_DDAR12)
#define	DDAR12	(_ddar12)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCCR13,attr=IO,locate=0xCD0
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	CE:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AIE:1;
        __WORD	SIE:1;
        __WORD	NIE:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RS:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	TM:2;
        __WORD	ST:1;
        __WORD	SAR:1;
        __WORD	SAC:2;
        __WORD	DT:1;
        __WORD	DAR:1;
        __WORD	DAC:2;
        __WORD	TCR:1;
        __WORD	RESV21:1;
        __WORD	TS:2;
        __WORD	BLK:4;
    } bit;
} DCCR13STR;

__IO_EXTENDED	  DCCR13STR	IO_DCCR13;
#define	_dccr13		(IO_DCCR13)
#define	DCCR13		(IO_DCCR13.word)
#define	DCCR13_CE  	(IO_DCCR13.bit.CE)
#define	DCCR13_AIE  	(IO_DCCR13.bit.AIE)
#define	DCCR13_SIE  	(IO_DCCR13.bit.SIE)
#define	DCCR13_NIE  	(IO_DCCR13.bit.NIE)
#define	DCCR13_RS  	(IO_DCCR13.bit.RS)
#define	DCCR13_TM  	(IO_DCCR13.bit.TM)
#define	DCCR13_ST  	(IO_DCCR13.bit.ST)
#define	DCCR13_SAR  	(IO_DCCR13.bit.SAR)
#define	DCCR13_SAC  	(IO_DCCR13.bit.SAC)
#define	DCCR13_DT  	(IO_DCCR13.bit.DT)
#define	DCCR13_DAR  	(IO_DCCR13.bit.DAR)
#define	DCCR13_DAC  	(IO_DCCR13.bit.DAC)
#define	DCCR13_TCR  	(IO_DCCR13.bit.TCR)
#define	DCCR13_TS  	(IO_DCCR13.bit.TS)
#define	DCCR13_BLK  	(IO_DCCR13.bit.BLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCSR13,attr=IO,locate=0xCD4
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	CA:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	AC:1;
        __HWORD	SP:1;
        __HWORD	NC:1;
    } bit;
} DCSR13STR;

__IO_EXTENDED	  DCSR13STR	IO_DCSR13;
#define	_dcsr13		(IO_DCSR13)
#define	DCSR13		(IO_DCSR13.hword)
#define	DCSR13_CA  	(IO_DCSR13.bit.CA)
#define	DCSR13_AC  	(IO_DCSR13.bit.AC)
#define	DCSR13_SP  	(IO_DCSR13.bit.SP)
#define	DCSR13_NC  	(IO_DCSR13.bit.NC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTCR13,attr=IO,locate=0xCD6
#endif

__IO_EXTENDED	__HWORD	IO_DTCR13;
#define	_dtcr13		(IO_DTCR13)
#define	DTCR13	(_dtcr13)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSAR13,attr=IO,locate=0xCD8
#endif

__IO_EXTENDED	__WORD	IO_DSAR13;
#define	_dsar13		(IO_DSAR13)
#define	DSAR13	(_dsar13)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDAR13,attr=IO,locate=0xCDC
#endif

__IO_EXTENDED	__WORD	IO_DDAR13;
#define	_ddar13		(IO_DDAR13)
#define	DDAR13	(_ddar13)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCCR14,attr=IO,locate=0xCE0
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	CE:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AIE:1;
        __WORD	SIE:1;
        __WORD	NIE:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RS:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	TM:2;
        __WORD	ST:1;
        __WORD	SAR:1;
        __WORD	SAC:2;
        __WORD	DT:1;
        __WORD	DAR:1;
        __WORD	DAC:2;
        __WORD	TCR:1;
        __WORD	RESV21:1;
        __WORD	TS:2;
        __WORD	BLK:4;
    } bit;
} DCCR14STR;

__IO_EXTENDED	  DCCR14STR	IO_DCCR14;
#define	_dccr14		(IO_DCCR14)
#define	DCCR14		(IO_DCCR14.word)
#define	DCCR14_CE  	(IO_DCCR14.bit.CE)
#define	DCCR14_AIE  	(IO_DCCR14.bit.AIE)
#define	DCCR14_SIE  	(IO_DCCR14.bit.SIE)
#define	DCCR14_NIE  	(IO_DCCR14.bit.NIE)
#define	DCCR14_RS  	(IO_DCCR14.bit.RS)
#define	DCCR14_TM  	(IO_DCCR14.bit.TM)
#define	DCCR14_ST  	(IO_DCCR14.bit.ST)
#define	DCCR14_SAR  	(IO_DCCR14.bit.SAR)
#define	DCCR14_SAC  	(IO_DCCR14.bit.SAC)
#define	DCCR14_DT  	(IO_DCCR14.bit.DT)
#define	DCCR14_DAR  	(IO_DCCR14.bit.DAR)
#define	DCCR14_DAC  	(IO_DCCR14.bit.DAC)
#define	DCCR14_TCR  	(IO_DCCR14.bit.TCR)
#define	DCCR14_TS  	(IO_DCCR14.bit.TS)
#define	DCCR14_BLK  	(IO_DCCR14.bit.BLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCSR14,attr=IO,locate=0xCE4
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	CA:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	AC:1;
        __HWORD	SP:1;
        __HWORD	NC:1;
    } bit;
} DCSR14STR;

__IO_EXTENDED	  DCSR14STR	IO_DCSR14;
#define	_dcsr14		(IO_DCSR14)
#define	DCSR14		(IO_DCSR14.hword)
#define	DCSR14_CA  	(IO_DCSR14.bit.CA)
#define	DCSR14_AC  	(IO_DCSR14.bit.AC)
#define	DCSR14_SP  	(IO_DCSR14.bit.SP)
#define	DCSR14_NC  	(IO_DCSR14.bit.NC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTCR14,attr=IO,locate=0xCE6
#endif

__IO_EXTENDED	__HWORD	IO_DTCR14;
#define	_dtcr14		(IO_DTCR14)
#define	DTCR14	(_dtcr14)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSAR14,attr=IO,locate=0xCE8
#endif

__IO_EXTENDED	__WORD	IO_DSAR14;
#define	_dsar14		(IO_DSAR14)
#define	DSAR14	(_dsar14)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDAR14,attr=IO,locate=0xCEC
#endif

__IO_EXTENDED	__WORD	IO_DDAR14;
#define	_ddar14		(IO_DDAR14)
#define	DDAR14	(_ddar14)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCCR15,attr=IO,locate=0xCF0
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	CE:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AIE:1;
        __WORD	SIE:1;
        __WORD	NIE:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RS:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	TM:2;
        __WORD	ST:1;
        __WORD	SAR:1;
        __WORD	SAC:2;
        __WORD	DT:1;
        __WORD	DAR:1;
        __WORD	DAC:2;
        __WORD	TCR:1;
        __WORD	RESV21:1;
        __WORD	TS:2;
        __WORD	BLK:4;
    } bit;
} DCCR15STR;

__IO_EXTENDED	  DCCR15STR	IO_DCCR15;
#define	_dccr15		(IO_DCCR15)
#define	DCCR15		(IO_DCCR15.word)
#define	DCCR15_CE  	(IO_DCCR15.bit.CE)
#define	DCCR15_AIE  	(IO_DCCR15.bit.AIE)
#define	DCCR15_SIE  	(IO_DCCR15.bit.SIE)
#define	DCCR15_NIE  	(IO_DCCR15.bit.NIE)
#define	DCCR15_RS  	(IO_DCCR15.bit.RS)
#define	DCCR15_TM  	(IO_DCCR15.bit.TM)
#define	DCCR15_ST  	(IO_DCCR15.bit.ST)
#define	DCCR15_SAR  	(IO_DCCR15.bit.SAR)
#define	DCCR15_SAC  	(IO_DCCR15.bit.SAC)
#define	DCCR15_DT  	(IO_DCCR15.bit.DT)
#define	DCCR15_DAR  	(IO_DCCR15.bit.DAR)
#define	DCCR15_DAC  	(IO_DCCR15.bit.DAC)
#define	DCCR15_TCR  	(IO_DCCR15.bit.TCR)
#define	DCCR15_TS  	(IO_DCCR15.bit.TS)
#define	DCCR15_BLK  	(IO_DCCR15.bit.BLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DCSR15,attr=IO,locate=0xCF4
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	CA:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	AC:1;
        __HWORD	SP:1;
        __HWORD	NC:1;
    } bit;
} DCSR15STR;

__IO_EXTENDED	  DCSR15STR	IO_DCSR15;
#define	_dcsr15		(IO_DCSR15)
#define	DCSR15		(IO_DCSR15.hword)
#define	DCSR15_CA  	(IO_DCSR15.bit.CA)
#define	DCSR15_AC  	(IO_DCSR15.bit.AC)
#define	DCSR15_SP  	(IO_DCSR15.bit.SP)
#define	DCSR15_NC  	(IO_DCSR15.bit.NC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTCR15,attr=IO,locate=0xCF6
#endif

__IO_EXTENDED	__HWORD	IO_DTCR15;
#define	_dtcr15		(IO_DTCR15)
#define	DTCR15	(_dtcr15)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSAR15,attr=IO,locate=0xCF8
#endif

__IO_EXTENDED	__WORD	IO_DSAR15;
#define	_dsar15		(IO_DSAR15)
#define	DSAR15	(_dsar15)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDAR15,attr=IO,locate=0xCFC
#endif

__IO_EXTENDED	__WORD	IO_DDAR15;
#define	_ddar15		(IO_DDAR15)
#define	DDAR15	(_ddar15)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DNMIR,attr=IO,locate=0xDF6
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	NMIH:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	NMIHD:1;
    } bit;
} DNMIRSTR;

__IO_EXTENDED	  DNMIRSTR	IO_DNMIR;
#define	_dnmir		(IO_DNMIR)
#define	DNMIR		(IO_DNMIR.byte)
#define	DNMIR_NMIH  	(IO_DNMIR.bit.NMIH)
#define	DNMIR_NMIHD  	(IO_DNMIR.bit.NMIHD)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DILVR,attr=IO,locate=0xDF7
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	LVL:5;
    } bit;
} DILVRSTR;

__IO_EXTENDED	  DILVRSTR	IO_DILVR;
#define	_dilvr		(IO_DILVR)
#define	DILVR		(IO_DILVR.byte)
#define	DILVR_LVL  	(IO_DILVR.bit.LVL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DMACR,attr=IO,locate=0xDF8
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	DME:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	RESV14:1;
        __WORD	RESV15:1;
        __WORD	AT:1;
        __WORD	RESV17:1;
        __WORD	RESV18:1;
        __WORD	RESV19:1;
        __WORD	RESV20:1;
        __WORD	RESV21:1;
        __WORD	RESV22:1;
        __WORD	RESV23:1;
        __WORD	RESV24:1;
        __WORD	RESV25:1;
        __WORD	RESV26:1;
        __WORD	RESV27:1;
        __WORD	RESV28:1;
        __WORD	RESV29:1;
        __WORD	RESV30:1;
        __WORD	RESV31:1;
    } bit;
} DMACRSTR;

__IO_EXTENDED	  DMACRSTR	IO_DMACR;
#define	_dmacr		(IO_DMACR)
#define	DMACR		(IO_DMACR.word)
#define	DMACR_DME  	(IO_DMACR.bit.DME)
#define	DMACR_AT  	(IO_DMACR.bit.AT)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR00,attr=IO,locate=0xE00
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR00STR;

__IO_EXTENDED	  DDR00STR	IO_DDR00;
#define	_ddr00		(IO_DDR00)
#define	DDR00		(IO_DDR00.byte)
#define	DDR00_P7  	(IO_DDR00.bit.P7)
#define	DDR00_P6  	(IO_DDR00.bit.P6)
#define	DDR00_P5  	(IO_DDR00.bit.P5)
#define	DDR00_P4  	(IO_DDR00.bit.P4)
#define	DDR00_P3  	(IO_DDR00.bit.P3)
#define	DDR00_P2  	(IO_DDR00.bit.P2)
#define	DDR00_P1  	(IO_DDR00.bit.P1)
#define	DDR00_P0  	(IO_DDR00.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR01,attr=IO,locate=0xE01
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR01STR;

__IO_EXTENDED	  DDR01STR	IO_DDR01;
#define	_ddr01		(IO_DDR01)
#define	DDR01		(IO_DDR01.byte)
#define	DDR01_P7  	(IO_DDR01.bit.P7)
#define	DDR01_P6  	(IO_DDR01.bit.P6)
#define	DDR01_P5  	(IO_DDR01.bit.P5)
#define	DDR01_P4  	(IO_DDR01.bit.P4)
#define	DDR01_P3  	(IO_DDR01.bit.P3)
#define	DDR01_P2  	(IO_DDR01.bit.P2)
#define	DDR01_P1  	(IO_DDR01.bit.P1)
#define	DDR01_P0  	(IO_DDR01.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR02,attr=IO,locate=0xE02
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR02STR;

__IO_EXTENDED	  DDR02STR	IO_DDR02;
#define	_ddr02		(IO_DDR02)
#define	DDR02		(IO_DDR02.byte)
#define	DDR02_P7  	(IO_DDR02.bit.P7)
#define	DDR02_P6  	(IO_DDR02.bit.P6)
#define	DDR02_P5  	(IO_DDR02.bit.P5)
#define	DDR02_P4  	(IO_DDR02.bit.P4)
#define	DDR02_P3  	(IO_DDR02.bit.P3)
#define	DDR02_P2  	(IO_DDR02.bit.P2)
#define	DDR02_P1  	(IO_DDR02.bit.P1)
#define	DDR02_P0  	(IO_DDR02.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR03,attr=IO,locate=0xE03
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR03STR;

__IO_EXTENDED	  DDR03STR	IO_DDR03;
#define	_ddr03		(IO_DDR03)
#define	DDR03		(IO_DDR03.byte)
#define	DDR03_P7  	(IO_DDR03.bit.P7)
#define	DDR03_P6  	(IO_DDR03.bit.P6)
#define	DDR03_P5  	(IO_DDR03.bit.P5)
#define	DDR03_P4  	(IO_DDR03.bit.P4)
#define	DDR03_P3  	(IO_DDR03.bit.P3)
#define	DDR03_P2  	(IO_DDR03.bit.P2)
#define	DDR03_P1  	(IO_DDR03.bit.P1)
#define	DDR03_P0  	(IO_DDR03.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR04,attr=IO,locate=0xE04
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR04STR;

__IO_EXTENDED	  DDR04STR	IO_DDR04;
#define	_ddr04		(IO_DDR04)
#define	DDR04		(IO_DDR04.byte)
#define	DDR04_P7  	(IO_DDR04.bit.P7)
#define	DDR04_P6  	(IO_DDR04.bit.P6)
#define	DDR04_P5  	(IO_DDR04.bit.P5)
#define	DDR04_P4  	(IO_DDR04.bit.P4)
#define	DDR04_P3  	(IO_DDR04.bit.P3)
#define	DDR04_P2  	(IO_DDR04.bit.P2)
#define	DDR04_P1  	(IO_DDR04.bit.P1)
#define	DDR04_P0  	(IO_DDR04.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR05,attr=IO,locate=0xE05
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR05STR;

__IO_EXTENDED	  DDR05STR	IO_DDR05;
#define	_ddr05		(IO_DDR05)
#define	DDR05		(IO_DDR05.byte)
#define	DDR05_P7  	(IO_DDR05.bit.P7)
#define	DDR05_P6  	(IO_DDR05.bit.P6)
#define	DDR05_P5  	(IO_DDR05.bit.P5)
#define	DDR05_P4  	(IO_DDR05.bit.P4)
#define	DDR05_P3  	(IO_DDR05.bit.P3)
#define	DDR05_P2  	(IO_DDR05.bit.P2)
#define	DDR05_P1  	(IO_DDR05.bit.P1)
#define	DDR05_P0  	(IO_DDR05.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR06,attr=IO,locate=0xE06
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR06STR;

__IO_EXTENDED	  DDR06STR	IO_DDR06;
#define	_ddr06		(IO_DDR06)
#define	DDR06		(IO_DDR06.byte)
#define	DDR06_P7  	(IO_DDR06.bit.P7)
#define	DDR06_P6  	(IO_DDR06.bit.P6)
#define	DDR06_P5  	(IO_DDR06.bit.P5)
#define	DDR06_P4  	(IO_DDR06.bit.P4)
#define	DDR06_P3  	(IO_DDR06.bit.P3)
#define	DDR06_P2  	(IO_DDR06.bit.P2)
#define	DDR06_P1  	(IO_DDR06.bit.P1)
#define	DDR06_P0  	(IO_DDR06.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR07,attr=IO,locate=0xE07
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR07STR;

__IO_EXTENDED	  DDR07STR	IO_DDR07;
#define	_ddr07		(IO_DDR07)
#define	DDR07		(IO_DDR07.byte)
#define	DDR07_P7  	(IO_DDR07.bit.P7)
#define	DDR07_P6  	(IO_DDR07.bit.P6)
#define	DDR07_P5  	(IO_DDR07.bit.P5)
#define	DDR07_P4  	(IO_DDR07.bit.P4)
#define	DDR07_P3  	(IO_DDR07.bit.P3)
#define	DDR07_P2  	(IO_DDR07.bit.P2)
#define	DDR07_P1  	(IO_DDR07.bit.P1)
#define	DDR07_P0  	(IO_DDR07.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR08,attr=IO,locate=0xE08
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR08STR;

__IO_EXTENDED	  DDR08STR	IO_DDR08;
#define	_ddr08		(IO_DDR08)
#define	DDR08		(IO_DDR08.byte)
#define	DDR08_P7  	(IO_DDR08.bit.P7)
#define	DDR08_P6  	(IO_DDR08.bit.P6)
#define	DDR08_P5  	(IO_DDR08.bit.P5)
#define	DDR08_P4  	(IO_DDR08.bit.P4)
#define	DDR08_P3  	(IO_DDR08.bit.P3)
#define	DDR08_P2  	(IO_DDR08.bit.P2)
#define	DDR08_P1  	(IO_DDR08.bit.P1)
#define	DDR08_P0  	(IO_DDR08.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR09,attr=IO,locate=0xE09
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR09STR;

__IO_EXTENDED	  DDR09STR	IO_DDR09;
#define	_ddr09		(IO_DDR09)
#define	DDR09		(IO_DDR09.byte)
#define	DDR09_P7  	(IO_DDR09.bit.P7)
#define	DDR09_P6  	(IO_DDR09.bit.P6)
#define	DDR09_P5  	(IO_DDR09.bit.P5)
#define	DDR09_P4  	(IO_DDR09.bit.P4)
#define	DDR09_P3  	(IO_DDR09.bit.P3)
#define	DDR09_P2  	(IO_DDR09.bit.P2)
#define	DDR09_P1  	(IO_DDR09.bit.P1)
#define	DDR09_P0  	(IO_DDR09.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR10,attr=IO,locate=0xE0A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR10STR;

__IO_EXTENDED	  DDR10STR	IO_DDR10;
#define	_ddr10		(IO_DDR10)
#define	DDR10		(IO_DDR10.byte)
#define	DDR10_P7  	(IO_DDR10.bit.P7)
#define	DDR10_P6  	(IO_DDR10.bit.P6)
#define	DDR10_P5  	(IO_DDR10.bit.P5)
#define	DDR10_P4  	(IO_DDR10.bit.P4)
#define	DDR10_P3  	(IO_DDR10.bit.P3)
#define	DDR10_P2  	(IO_DDR10.bit.P2)
#define	DDR10_P1  	(IO_DDR10.bit.P1)
#define	DDR10_P0  	(IO_DDR10.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR11,attr=IO,locate=0xE0B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR11STR;

__IO_EXTENDED	  DDR11STR	IO_DDR11;
#define	_ddr11		(IO_DDR11)
#define	DDR11		(IO_DDR11.byte)
#define	DDR11_P7  	(IO_DDR11.bit.P7)
#define	DDR11_P6  	(IO_DDR11.bit.P6)
#define	DDR11_P5  	(IO_DDR11.bit.P5)
#define	DDR11_P4  	(IO_DDR11.bit.P4)
#define	DDR11_P3  	(IO_DDR11.bit.P3)
#define	DDR11_P2  	(IO_DDR11.bit.P2)
#define	DDR11_P1  	(IO_DDR11.bit.P1)
#define	DDR11_P0  	(IO_DDR11.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR12,attr=IO,locate=0xE0C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR12STR;

__IO_EXTENDED	  DDR12STR	IO_DDR12;
#define	_ddr12		(IO_DDR12)
#define	DDR12		(IO_DDR12.byte)
#define	DDR12_P7  	(IO_DDR12.bit.P7)
#define	DDR12_P6  	(IO_DDR12.bit.P6)
#define	DDR12_P5  	(IO_DDR12.bit.P5)
#define	DDR12_P4  	(IO_DDR12.bit.P4)
#define	DDR12_P3  	(IO_DDR12.bit.P3)
#define	DDR12_P2  	(IO_DDR12.bit.P2)
#define	DDR12_P1  	(IO_DDR12.bit.P1)
#define	DDR12_P0  	(IO_DDR12.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR13,attr=IO,locate=0xE0D
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR13STR;

__IO_EXTENDED	  DDR13STR	IO_DDR13;
#define	_ddr13		(IO_DDR13)
#define	DDR13		(IO_DDR13.byte)
#define	DDR13_P7  	(IO_DDR13.bit.P7)
#define	DDR13_P6  	(IO_DDR13.bit.P6)
#define	DDR13_P5  	(IO_DDR13.bit.P5)
#define	DDR13_P4  	(IO_DDR13.bit.P4)
#define	DDR13_P3  	(IO_DDR13.bit.P3)
#define	DDR13_P2  	(IO_DDR13.bit.P2)
#define	DDR13_P1  	(IO_DDR13.bit.P1)
#define	DDR13_P0  	(IO_DDR13.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR14,attr=IO,locate=0xE0E
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR14STR;

__IO_EXTENDED	  DDR14STR	IO_DDR14;
#define	_ddr14		(IO_DDR14)
#define	DDR14		(IO_DDR14.byte)
#define	DDR14_P7  	(IO_DDR14.bit.P7)
#define	DDR14_P6  	(IO_DDR14.bit.P6)
#define	DDR14_P5  	(IO_DDR14.bit.P5)
#define	DDR14_P4  	(IO_DDR14.bit.P4)
#define	DDR14_P3  	(IO_DDR14.bit.P3)
#define	DDR14_P2  	(IO_DDR14.bit.P2)
#define	DDR14_P1  	(IO_DDR14.bit.P1)
#define	DDR14_P0  	(IO_DDR14.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR15,attr=IO,locate=0xE0F
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR15STR;

__IO_EXTENDED	  DDR15STR	IO_DDR15;
#define	_ddr15		(IO_DDR15)
#define	DDR15		(IO_DDR15.byte)
#define	DDR15_P7  	(IO_DDR15.bit.P7)
#define	DDR15_P6  	(IO_DDR15.bit.P6)
#define	DDR15_P5  	(IO_DDR15.bit.P5)
#define	DDR15_P4  	(IO_DDR15.bit.P4)
#define	DDR15_P3  	(IO_DDR15.bit.P3)
#define	DDR15_P2  	(IO_DDR15.bit.P2)
#define	DDR15_P1  	(IO_DDR15.bit.P1)
#define	DDR15_P0  	(IO_DDR15.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR16,attr=IO,locate=0xE18
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR16STR;

__IO_EXTENDED	  DDR16STR	IO_DDR16;
#define	_ddr16		(IO_DDR16)
#define	DDR16		(IO_DDR16.byte)
#define	DDR16_P7  	(IO_DDR16.bit.P7)
#define	DDR16_P6  	(IO_DDR16.bit.P6)
#define	DDR16_P5  	(IO_DDR16.bit.P5)
#define	DDR16_P4  	(IO_DDR16.bit.P4)
#define	DDR16_P3  	(IO_DDR16.bit.P3)
#define	DDR16_P2  	(IO_DDR16.bit.P2)
#define	DDR16_P1  	(IO_DDR16.bit.P1)
#define	DDR16_P0  	(IO_DDR16.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR17,attr=IO,locate=0xE19
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR17STR;

__IO_EXTENDED	  DDR17STR	IO_DDR17;
#define	_ddr17		(IO_DDR17)
#define	DDR17		(IO_DDR17.byte)
#define	DDR17_P7  	(IO_DDR17.bit.P7)
#define	DDR17_P6  	(IO_DDR17.bit.P6)
#define	DDR17_P5  	(IO_DDR17.bit.P5)
#define	DDR17_P4  	(IO_DDR17.bit.P4)
#define	DDR17_P3  	(IO_DDR17.bit.P3)
#define	DDR17_P2  	(IO_DDR17.bit.P2)
#define	DDR17_P1  	(IO_DDR17.bit.P1)
#define	DDR17_P0  	(IO_DDR17.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR18,attr=IO,locate=0xE1A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR18STR;

__IO_EXTENDED	  DDR18STR	IO_DDR18;
#define	_ddr18		(IO_DDR18)
#define	DDR18		(IO_DDR18.byte)
#define	DDR18_P7  	(IO_DDR18.bit.P7)
#define	DDR18_P6  	(IO_DDR18.bit.P6)
#define	DDR18_P5  	(IO_DDR18.bit.P5)
#define	DDR18_P4  	(IO_DDR18.bit.P4)
#define	DDR18_P3  	(IO_DDR18.bit.P3)
#define	DDR18_P2  	(IO_DDR18.bit.P2)
#define	DDR18_P1  	(IO_DDR18.bit.P1)
#define	DDR18_P0  	(IO_DDR18.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DDR19,attr=IO,locate=0xE1B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} DDR19STR;

__IO_EXTENDED	  DDR19STR	IO_DDR19;
#define	_ddr19		(IO_DDR19)
#define	DDR19		(IO_DDR19.byte)
#define	DDR19_P7  	(IO_DDR19.bit.P7)
#define	DDR19_P6  	(IO_DDR19.bit.P6)
#define	DDR19_P5  	(IO_DDR19.bit.P5)
#define	DDR19_P4  	(IO_DDR19.bit.P4)
#define	DDR19_P3  	(IO_DDR19.bit.P3)
#define	DDR19_P2  	(IO_DDR19.bit.P2)
#define	DDR19_P1  	(IO_DDR19.bit.P1)
#define	DDR19_P0  	(IO_DDR19.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR00,attr=IO,locate=0xE20
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR00STR;

__IO_EXTENDED	  PFR00STR	IO_PFR00;
#define	_pfr00		(IO_PFR00)
#define	PFR00		(IO_PFR00.byte)
#define	PFR00_P7  	(IO_PFR00.bit.P7)
#define	PFR00_P6  	(IO_PFR00.bit.P6)
#define	PFR00_P5  	(IO_PFR00.bit.P5)
#define	PFR00_P4  	(IO_PFR00.bit.P4)
#define	PFR00_P3  	(IO_PFR00.bit.P3)
#define	PFR00_P2  	(IO_PFR00.bit.P2)
#define	PFR00_P1  	(IO_PFR00.bit.P1)
#define	PFR00_P0  	(IO_PFR00.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR01,attr=IO,locate=0xE21
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR01STR;

__IO_EXTENDED	  PFR01STR	IO_PFR01;
#define	_pfr01		(IO_PFR01)
#define	PFR01		(IO_PFR01.byte)
#define	PFR01_P7  	(IO_PFR01.bit.P7)
#define	PFR01_P6  	(IO_PFR01.bit.P6)
#define	PFR01_P5  	(IO_PFR01.bit.P5)
#define	PFR01_P4  	(IO_PFR01.bit.P4)
#define	PFR01_P3  	(IO_PFR01.bit.P3)
#define	PFR01_P2  	(IO_PFR01.bit.P2)
#define	PFR01_P1  	(IO_PFR01.bit.P1)
#define	PFR01_P0  	(IO_PFR01.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR02,attr=IO,locate=0xE22
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR02STR;

__IO_EXTENDED	  PFR02STR	IO_PFR02;
#define	_pfr02		(IO_PFR02)
#define	PFR02		(IO_PFR02.byte)
#define	PFR02_P7  	(IO_PFR02.bit.P7)
#define	PFR02_P6  	(IO_PFR02.bit.P6)
#define	PFR02_P5  	(IO_PFR02.bit.P5)
#define	PFR02_P4  	(IO_PFR02.bit.P4)
#define	PFR02_P3  	(IO_PFR02.bit.P3)
#define	PFR02_P2  	(IO_PFR02.bit.P2)
#define	PFR02_P1  	(IO_PFR02.bit.P1)
#define	PFR02_P0  	(IO_PFR02.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR03,attr=IO,locate=0xE23
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR03STR;

__IO_EXTENDED	  PFR03STR	IO_PFR03;
#define	_pfr03		(IO_PFR03)
#define	PFR03		(IO_PFR03.byte)
#define	PFR03_P7  	(IO_PFR03.bit.P7)
#define	PFR03_P6  	(IO_PFR03.bit.P6)
#define	PFR03_P5  	(IO_PFR03.bit.P5)
#define	PFR03_P4  	(IO_PFR03.bit.P4)
#define	PFR03_P3  	(IO_PFR03.bit.P3)
#define	PFR03_P2  	(IO_PFR03.bit.P2)
#define	PFR03_P1  	(IO_PFR03.bit.P1)
#define	PFR03_P0  	(IO_PFR03.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR04,attr=IO,locate=0xE24
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR04STR;

__IO_EXTENDED	  PFR04STR	IO_PFR04;
#define	_pfr04		(IO_PFR04)
#define	PFR04		(IO_PFR04.byte)
#define	PFR04_P7  	(IO_PFR04.bit.P7)
#define	PFR04_P6  	(IO_PFR04.bit.P6)
#define	PFR04_P5  	(IO_PFR04.bit.P5)
#define	PFR04_P4  	(IO_PFR04.bit.P4)
#define	PFR04_P3  	(IO_PFR04.bit.P3)
#define	PFR04_P2  	(IO_PFR04.bit.P2)
#define	PFR04_P1  	(IO_PFR04.bit.P1)
#define	PFR04_P0  	(IO_PFR04.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR05,attr=IO,locate=0xE25
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR05STR;

__IO_EXTENDED	  PFR05STR	IO_PFR05;
#define	_pfr05		(IO_PFR05)
#define	PFR05		(IO_PFR05.byte)
#define	PFR05_P7  	(IO_PFR05.bit.P7)
#define	PFR05_P6  	(IO_PFR05.bit.P6)
#define	PFR05_P5  	(IO_PFR05.bit.P5)
#define	PFR05_P4  	(IO_PFR05.bit.P4)
#define	PFR05_P3  	(IO_PFR05.bit.P3)
#define	PFR05_P2  	(IO_PFR05.bit.P2)
#define	PFR05_P1  	(IO_PFR05.bit.P1)
#define	PFR05_P0  	(IO_PFR05.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR06,attr=IO,locate=0xE26
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR06STR;

__IO_EXTENDED	  PFR06STR	IO_PFR06;
#define	_pfr06		(IO_PFR06)
#define	PFR06		(IO_PFR06.byte)
#define	PFR06_P7  	(IO_PFR06.bit.P7)
#define	PFR06_P6  	(IO_PFR06.bit.P6)
#define	PFR06_P5  	(IO_PFR06.bit.P5)
#define	PFR06_P4  	(IO_PFR06.bit.P4)
#define	PFR06_P3  	(IO_PFR06.bit.P3)
#define	PFR06_P2  	(IO_PFR06.bit.P2)
#define	PFR06_P1  	(IO_PFR06.bit.P1)
#define	PFR06_P0  	(IO_PFR06.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR07,attr=IO,locate=0xE27
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR07STR;

__IO_EXTENDED	  PFR07STR	IO_PFR07;
#define	_pfr07		(IO_PFR07)
#define	PFR07		(IO_PFR07.byte)
#define	PFR07_P7  	(IO_PFR07.bit.P7)
#define	PFR07_P6  	(IO_PFR07.bit.P6)
#define	PFR07_P5  	(IO_PFR07.bit.P5)
#define	PFR07_P4  	(IO_PFR07.bit.P4)
#define	PFR07_P3  	(IO_PFR07.bit.P3)
#define	PFR07_P2  	(IO_PFR07.bit.P2)
#define	PFR07_P1  	(IO_PFR07.bit.P1)
#define	PFR07_P0  	(IO_PFR07.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR08,attr=IO,locate=0xE28
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR08STR;

__IO_EXTENDED	  PFR08STR	IO_PFR08;
#define	_pfr08		(IO_PFR08)
#define	PFR08		(IO_PFR08.byte)
#define	PFR08_P7  	(IO_PFR08.bit.P7)
#define	PFR08_P6  	(IO_PFR08.bit.P6)
#define	PFR08_P5  	(IO_PFR08.bit.P5)
#define	PFR08_P4  	(IO_PFR08.bit.P4)
#define	PFR08_P3  	(IO_PFR08.bit.P3)
#define	PFR08_P2  	(IO_PFR08.bit.P2)
#define	PFR08_P1  	(IO_PFR08.bit.P1)
#define	PFR08_P0  	(IO_PFR08.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR09,attr=IO,locate=0xE29
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR09STR;

__IO_EXTENDED	  PFR09STR	IO_PFR09;
#define	_pfr09		(IO_PFR09)
#define	PFR09		(IO_PFR09.byte)
#define	PFR09_P7  	(IO_PFR09.bit.P7)
#define	PFR09_P6  	(IO_PFR09.bit.P6)
#define	PFR09_P5  	(IO_PFR09.bit.P5)
#define	PFR09_P4  	(IO_PFR09.bit.P4)
#define	PFR09_P3  	(IO_PFR09.bit.P3)
#define	PFR09_P2  	(IO_PFR09.bit.P2)
#define	PFR09_P1  	(IO_PFR09.bit.P1)
#define	PFR09_P0  	(IO_PFR09.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR10,attr=IO,locate=0xE2A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR10STR;

__IO_EXTENDED	  PFR10STR	IO_PFR10;
#define	_pfr10		(IO_PFR10)
#define	PFR10		(IO_PFR10.byte)
#define	PFR10_P7  	(IO_PFR10.bit.P7)
#define	PFR10_P6  	(IO_PFR10.bit.P6)
#define	PFR10_P5  	(IO_PFR10.bit.P5)
#define	PFR10_P4  	(IO_PFR10.bit.P4)
#define	PFR10_P3  	(IO_PFR10.bit.P3)
#define	PFR10_P2  	(IO_PFR10.bit.P2)
#define	PFR10_P1  	(IO_PFR10.bit.P1)
#define	PFR10_P0  	(IO_PFR10.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR11,attr=IO,locate=0xE2B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR11STR;

__IO_EXTENDED	  PFR11STR	IO_PFR11;
#define	_pfr11		(IO_PFR11)
#define	PFR11		(IO_PFR11.byte)
#define	PFR11_P7  	(IO_PFR11.bit.P7)
#define	PFR11_P6  	(IO_PFR11.bit.P6)
#define	PFR11_P5  	(IO_PFR11.bit.P5)
#define	PFR11_P4  	(IO_PFR11.bit.P4)
#define	PFR11_P3  	(IO_PFR11.bit.P3)
#define	PFR11_P2  	(IO_PFR11.bit.P2)
#define	PFR11_P1  	(IO_PFR11.bit.P1)
#define	PFR11_P0  	(IO_PFR11.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR12,attr=IO,locate=0xE2C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR12STR;

__IO_EXTENDED	  PFR12STR	IO_PFR12;
#define	_pfr12		(IO_PFR12)
#define	PFR12		(IO_PFR12.byte)
#define	PFR12_P7  	(IO_PFR12.bit.P7)
#define	PFR12_P6  	(IO_PFR12.bit.P6)
#define	PFR12_P5  	(IO_PFR12.bit.P5)
#define	PFR12_P4  	(IO_PFR12.bit.P4)
#define	PFR12_P3  	(IO_PFR12.bit.P3)
#define	PFR12_P2  	(IO_PFR12.bit.P2)
#define	PFR12_P1  	(IO_PFR12.bit.P1)
#define	PFR12_P0  	(IO_PFR12.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR13,attr=IO,locate=0xE2D
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR13STR;

__IO_EXTENDED	  PFR13STR	IO_PFR13;
#define	_pfr13		(IO_PFR13)
#define	PFR13		(IO_PFR13.byte)
#define	PFR13_P7  	(IO_PFR13.bit.P7)
#define	PFR13_P6  	(IO_PFR13.bit.P6)
#define	PFR13_P5  	(IO_PFR13.bit.P5)
#define	PFR13_P4  	(IO_PFR13.bit.P4)
#define	PFR13_P3  	(IO_PFR13.bit.P3)
#define	PFR13_P2  	(IO_PFR13.bit.P2)
#define	PFR13_P1  	(IO_PFR13.bit.P1)
#define	PFR13_P0  	(IO_PFR13.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR14,attr=IO,locate=0xE2E
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR14STR;

__IO_EXTENDED	  PFR14STR	IO_PFR14;
#define	_pfr14		(IO_PFR14)
#define	PFR14		(IO_PFR14.byte)
#define	PFR14_P7  	(IO_PFR14.bit.P7)
#define	PFR14_P6  	(IO_PFR14.bit.P6)
#define	PFR14_P5  	(IO_PFR14.bit.P5)
#define	PFR14_P4  	(IO_PFR14.bit.P4)
#define	PFR14_P3  	(IO_PFR14.bit.P3)
#define	PFR14_P2  	(IO_PFR14.bit.P2)
#define	PFR14_P1  	(IO_PFR14.bit.P1)
#define	PFR14_P0  	(IO_PFR14.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR15,attr=IO,locate=0xE2F
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR15STR;

__IO_EXTENDED	  PFR15STR	IO_PFR15;
#define	_pfr15		(IO_PFR15)
#define	PFR15		(IO_PFR15.byte)
#define	PFR15_P7  	(IO_PFR15.bit.P7)
#define	PFR15_P6  	(IO_PFR15.bit.P6)
#define	PFR15_P5  	(IO_PFR15.bit.P5)
#define	PFR15_P4  	(IO_PFR15.bit.P4)
#define	PFR15_P3  	(IO_PFR15.bit.P3)
#define	PFR15_P2  	(IO_PFR15.bit.P2)
#define	PFR15_P1  	(IO_PFR15.bit.P1)
#define	PFR15_P0  	(IO_PFR15.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR16,attr=IO,locate=0xE38
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR16STR;

__IO_EXTENDED	  PFR16STR	IO_PFR16;
#define	_pfr16		(IO_PFR16)
#define	PFR16		(IO_PFR16.byte)
#define	PFR16_P7  	(IO_PFR16.bit.P7)
#define	PFR16_P6  	(IO_PFR16.bit.P6)
#define	PFR16_P5  	(IO_PFR16.bit.P5)
#define	PFR16_P4  	(IO_PFR16.bit.P4)
#define	PFR16_P3  	(IO_PFR16.bit.P3)
#define	PFR16_P2  	(IO_PFR16.bit.P2)
#define	PFR16_P1  	(IO_PFR16.bit.P1)
#define	PFR16_P0  	(IO_PFR16.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR17,attr=IO,locate=0xE39
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR17STR;

__IO_EXTENDED	  PFR17STR	IO_PFR17;
#define	_pfr17		(IO_PFR17)
#define	PFR17		(IO_PFR17.byte)
#define	PFR17_P7  	(IO_PFR17.bit.P7)
#define	PFR17_P6  	(IO_PFR17.bit.P6)
#define	PFR17_P5  	(IO_PFR17.bit.P5)
#define	PFR17_P4  	(IO_PFR17.bit.P4)
#define	PFR17_P3  	(IO_PFR17.bit.P3)
#define	PFR17_P2  	(IO_PFR17.bit.P2)
#define	PFR17_P1  	(IO_PFR17.bit.P1)
#define	PFR17_P0  	(IO_PFR17.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR18,attr=IO,locate=0xE3A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR18STR;

__IO_EXTENDED	  PFR18STR	IO_PFR18;
#define	_pfr18		(IO_PFR18)
#define	PFR18		(IO_PFR18.byte)
#define	PFR18_P7  	(IO_PFR18.bit.P7)
#define	PFR18_P6  	(IO_PFR18.bit.P6)
#define	PFR18_P5  	(IO_PFR18.bit.P5)
#define	PFR18_P4  	(IO_PFR18.bit.P4)
#define	PFR18_P3  	(IO_PFR18.bit.P3)
#define	PFR18_P2  	(IO_PFR18.bit.P2)
#define	PFR18_P1  	(IO_PFR18.bit.P1)
#define	PFR18_P0  	(IO_PFR18.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PFR19,attr=IO,locate=0xE3B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PFR19STR;

__IO_EXTENDED	  PFR19STR	IO_PFR19;
#define	_pfr19		(IO_PFR19)
#define	PFR19		(IO_PFR19.byte)
#define	PFR19_P7  	(IO_PFR19.bit.P7)
#define	PFR19_P6  	(IO_PFR19.bit.P6)
#define	PFR19_P5  	(IO_PFR19.bit.P5)
#define	PFR19_P4  	(IO_PFR19.bit.P4)
#define	PFR19_P3  	(IO_PFR19.bit.P3)
#define	PFR19_P2  	(IO_PFR19.bit.P2)
#define	PFR19_P1  	(IO_PFR19.bit.P1)
#define	PFR19_P0  	(IO_PFR19.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR00,attr=IO,locate=0xE40
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR00STR;

__IO_EXTENDED	 const  PDDR00STR	IO_PDDR00;
#define	_pddr00		(IO_PDDR00)
#define	PDDR00		(IO_PDDR00.byte)
#define	PDDR00_P7  	(IO_PDDR00.bit.P7)
#define	PDDR00_P6  	(IO_PDDR00.bit.P6)
#define	PDDR00_P5  	(IO_PDDR00.bit.P5)
#define	PDDR00_P4  	(IO_PDDR00.bit.P4)
#define	PDDR00_P3  	(IO_PDDR00.bit.P3)
#define	PDDR00_P2  	(IO_PDDR00.bit.P2)
#define	PDDR00_P1  	(IO_PDDR00.bit.P1)
#define	PDDR00_P0  	(IO_PDDR00.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR01,attr=IO,locate=0xE41
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR01STR;

__IO_EXTENDED	 const  PDDR01STR	IO_PDDR01;
#define	_pddr01		(IO_PDDR01)
#define	PDDR01		(IO_PDDR01.byte)
#define	PDDR01_P7  	(IO_PDDR01.bit.P7)
#define	PDDR01_P6  	(IO_PDDR01.bit.P6)
#define	PDDR01_P5  	(IO_PDDR01.bit.P5)
#define	PDDR01_P4  	(IO_PDDR01.bit.P4)
#define	PDDR01_P3  	(IO_PDDR01.bit.P3)
#define	PDDR01_P2  	(IO_PDDR01.bit.P2)
#define	PDDR01_P1  	(IO_PDDR01.bit.P1)
#define	PDDR01_P0  	(IO_PDDR01.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR02,attr=IO,locate=0xE42
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR02STR;

__IO_EXTENDED	 const  PDDR02STR	IO_PDDR02;
#define	_pddr02		(IO_PDDR02)
#define	PDDR02		(IO_PDDR02.byte)
#define	PDDR02_P7  	(IO_PDDR02.bit.P7)
#define	PDDR02_P6  	(IO_PDDR02.bit.P6)
#define	PDDR02_P5  	(IO_PDDR02.bit.P5)
#define	PDDR02_P4  	(IO_PDDR02.bit.P4)
#define	PDDR02_P3  	(IO_PDDR02.bit.P3)
#define	PDDR02_P2  	(IO_PDDR02.bit.P2)
#define	PDDR02_P1  	(IO_PDDR02.bit.P1)
#define	PDDR02_P0  	(IO_PDDR02.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR03,attr=IO,locate=0xE43
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR03STR;

__IO_EXTENDED	 const  PDDR03STR	IO_PDDR03;
#define	_pddr03		(IO_PDDR03)
#define	PDDR03		(IO_PDDR03.byte)
#define	PDDR03_P7  	(IO_PDDR03.bit.P7)
#define	PDDR03_P6  	(IO_PDDR03.bit.P6)
#define	PDDR03_P5  	(IO_PDDR03.bit.P5)
#define	PDDR03_P4  	(IO_PDDR03.bit.P4)
#define	PDDR03_P3  	(IO_PDDR03.bit.P3)
#define	PDDR03_P2  	(IO_PDDR03.bit.P2)
#define	PDDR03_P1  	(IO_PDDR03.bit.P1)
#define	PDDR03_P0  	(IO_PDDR03.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR04,attr=IO,locate=0xE44
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR04STR;

__IO_EXTENDED	 const  PDDR04STR	IO_PDDR04;
#define	_pddr04		(IO_PDDR04)
#define	PDDR04		(IO_PDDR04.byte)
#define	PDDR04_P7  	(IO_PDDR04.bit.P7)
#define	PDDR04_P6  	(IO_PDDR04.bit.P6)
#define	PDDR04_P5  	(IO_PDDR04.bit.P5)
#define	PDDR04_P4  	(IO_PDDR04.bit.P4)
#define	PDDR04_P3  	(IO_PDDR04.bit.P3)
#define	PDDR04_P2  	(IO_PDDR04.bit.P2)
#define	PDDR04_P1  	(IO_PDDR04.bit.P1)
#define	PDDR04_P0  	(IO_PDDR04.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR05,attr=IO,locate=0xE45
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR05STR;

__IO_EXTENDED	 const  PDDR05STR	IO_PDDR05;
#define	_pddr05		(IO_PDDR05)
#define	PDDR05		(IO_PDDR05.byte)
#define	PDDR05_P7  	(IO_PDDR05.bit.P7)
#define	PDDR05_P6  	(IO_PDDR05.bit.P6)
#define	PDDR05_P5  	(IO_PDDR05.bit.P5)
#define	PDDR05_P4  	(IO_PDDR05.bit.P4)
#define	PDDR05_P3  	(IO_PDDR05.bit.P3)
#define	PDDR05_P2  	(IO_PDDR05.bit.P2)
#define	PDDR05_P1  	(IO_PDDR05.bit.P1)
#define	PDDR05_P0  	(IO_PDDR05.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR06,attr=IO,locate=0xE46
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR06STR;

__IO_EXTENDED	 const  PDDR06STR	IO_PDDR06;
#define	_pddr06		(IO_PDDR06)
#define	PDDR06		(IO_PDDR06.byte)
#define	PDDR06_P7  	(IO_PDDR06.bit.P7)
#define	PDDR06_P6  	(IO_PDDR06.bit.P6)
#define	PDDR06_P5  	(IO_PDDR06.bit.P5)
#define	PDDR06_P4  	(IO_PDDR06.bit.P4)
#define	PDDR06_P3  	(IO_PDDR06.bit.P3)
#define	PDDR06_P2  	(IO_PDDR06.bit.P2)
#define	PDDR06_P1  	(IO_PDDR06.bit.P1)
#define	PDDR06_P0  	(IO_PDDR06.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR07,attr=IO,locate=0xE47
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR07STR;

__IO_EXTENDED	 const  PDDR07STR	IO_PDDR07;
#define	_pddr07		(IO_PDDR07)
#define	PDDR07		(IO_PDDR07.byte)
#define	PDDR07_P7  	(IO_PDDR07.bit.P7)
#define	PDDR07_P6  	(IO_PDDR07.bit.P6)
#define	PDDR07_P5  	(IO_PDDR07.bit.P5)
#define	PDDR07_P4  	(IO_PDDR07.bit.P4)
#define	PDDR07_P3  	(IO_PDDR07.bit.P3)
#define	PDDR07_P2  	(IO_PDDR07.bit.P2)
#define	PDDR07_P1  	(IO_PDDR07.bit.P1)
#define	PDDR07_P0  	(IO_PDDR07.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR08,attr=IO,locate=0xE48
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR08STR;

__IO_EXTENDED	 const  PDDR08STR	IO_PDDR08;
#define	_pddr08		(IO_PDDR08)
#define	PDDR08		(IO_PDDR08.byte)
#define	PDDR08_P7  	(IO_PDDR08.bit.P7)
#define	PDDR08_P6  	(IO_PDDR08.bit.P6)
#define	PDDR08_P5  	(IO_PDDR08.bit.P5)
#define	PDDR08_P4  	(IO_PDDR08.bit.P4)
#define	PDDR08_P3  	(IO_PDDR08.bit.P3)
#define	PDDR08_P2  	(IO_PDDR08.bit.P2)
#define	PDDR08_P1  	(IO_PDDR08.bit.P1)
#define	PDDR08_P0  	(IO_PDDR08.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR09,attr=IO,locate=0xE49
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR09STR;

__IO_EXTENDED	 const  PDDR09STR	IO_PDDR09;
#define	_pddr09		(IO_PDDR09)
#define	PDDR09		(IO_PDDR09.byte)
#define	PDDR09_P7  	(IO_PDDR09.bit.P7)
#define	PDDR09_P6  	(IO_PDDR09.bit.P6)
#define	PDDR09_P5  	(IO_PDDR09.bit.P5)
#define	PDDR09_P4  	(IO_PDDR09.bit.P4)
#define	PDDR09_P3  	(IO_PDDR09.bit.P3)
#define	PDDR09_P2  	(IO_PDDR09.bit.P2)
#define	PDDR09_P1  	(IO_PDDR09.bit.P1)
#define	PDDR09_P0  	(IO_PDDR09.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR10,attr=IO,locate=0xE4A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR10STR;

__IO_EXTENDED	 const  PDDR10STR	IO_PDDR10;
#define	_pddr10		(IO_PDDR10)
#define	PDDR10		(IO_PDDR10.byte)
#define	PDDR10_P7  	(IO_PDDR10.bit.P7)
#define	PDDR10_P6  	(IO_PDDR10.bit.P6)
#define	PDDR10_P5  	(IO_PDDR10.bit.P5)
#define	PDDR10_P4  	(IO_PDDR10.bit.P4)
#define	PDDR10_P3  	(IO_PDDR10.bit.P3)
#define	PDDR10_P2  	(IO_PDDR10.bit.P2)
#define	PDDR10_P1  	(IO_PDDR10.bit.P1)
#define	PDDR10_P0  	(IO_PDDR10.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR11,attr=IO,locate=0xE4B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR11STR;

__IO_EXTENDED	 const  PDDR11STR	IO_PDDR11;
#define	_pddr11		(IO_PDDR11)
#define	PDDR11		(IO_PDDR11.byte)
#define	PDDR11_P7  	(IO_PDDR11.bit.P7)
#define	PDDR11_P6  	(IO_PDDR11.bit.P6)
#define	PDDR11_P5  	(IO_PDDR11.bit.P5)
#define	PDDR11_P4  	(IO_PDDR11.bit.P4)
#define	PDDR11_P3  	(IO_PDDR11.bit.P3)
#define	PDDR11_P2  	(IO_PDDR11.bit.P2)
#define	PDDR11_P1  	(IO_PDDR11.bit.P1)
#define	PDDR11_P0  	(IO_PDDR11.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR12,attr=IO,locate=0xE4C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR12STR;

__IO_EXTENDED	 const  PDDR12STR	IO_PDDR12;
#define	_pddr12		(IO_PDDR12)
#define	PDDR12		(IO_PDDR12.byte)
#define	PDDR12_P7  	(IO_PDDR12.bit.P7)
#define	PDDR12_P6  	(IO_PDDR12.bit.P6)
#define	PDDR12_P5  	(IO_PDDR12.bit.P5)
#define	PDDR12_P4  	(IO_PDDR12.bit.P4)
#define	PDDR12_P3  	(IO_PDDR12.bit.P3)
#define	PDDR12_P2  	(IO_PDDR12.bit.P2)
#define	PDDR12_P1  	(IO_PDDR12.bit.P1)
#define	PDDR12_P0  	(IO_PDDR12.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR13,attr=IO,locate=0xE4D
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR13STR;

__IO_EXTENDED	 const  PDDR13STR	IO_PDDR13;
#define	_pddr13		(IO_PDDR13)
#define	PDDR13		(IO_PDDR13.byte)
#define	PDDR13_P7  	(IO_PDDR13.bit.P7)
#define	PDDR13_P6  	(IO_PDDR13.bit.P6)
#define	PDDR13_P5  	(IO_PDDR13.bit.P5)
#define	PDDR13_P4  	(IO_PDDR13.bit.P4)
#define	PDDR13_P3  	(IO_PDDR13.bit.P3)
#define	PDDR13_P2  	(IO_PDDR13.bit.P2)
#define	PDDR13_P1  	(IO_PDDR13.bit.P1)
#define	PDDR13_P0  	(IO_PDDR13.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR14,attr=IO,locate=0xE4E
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR14STR;

__IO_EXTENDED	 const  PDDR14STR	IO_PDDR14;
#define	_pddr14		(IO_PDDR14)
#define	PDDR14		(IO_PDDR14.byte)
#define	PDDR14_P7  	(IO_PDDR14.bit.P7)
#define	PDDR14_P6  	(IO_PDDR14.bit.P6)
#define	PDDR14_P5  	(IO_PDDR14.bit.P5)
#define	PDDR14_P4  	(IO_PDDR14.bit.P4)
#define	PDDR14_P3  	(IO_PDDR14.bit.P3)
#define	PDDR14_P2  	(IO_PDDR14.bit.P2)
#define	PDDR14_P1  	(IO_PDDR14.bit.P1)
#define	PDDR14_P0  	(IO_PDDR14.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR15,attr=IO,locate=0xE4F
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR15STR;

__IO_EXTENDED	 const  PDDR15STR	IO_PDDR15;
#define	_pddr15		(IO_PDDR15)
#define	PDDR15		(IO_PDDR15.byte)
#define	PDDR15_P7  	(IO_PDDR15.bit.P7)
#define	PDDR15_P6  	(IO_PDDR15.bit.P6)
#define	PDDR15_P5  	(IO_PDDR15.bit.P5)
#define	PDDR15_P4  	(IO_PDDR15.bit.P4)
#define	PDDR15_P3  	(IO_PDDR15.bit.P3)
#define	PDDR15_P2  	(IO_PDDR15.bit.P2)
#define	PDDR15_P1  	(IO_PDDR15.bit.P1)
#define	PDDR15_P0  	(IO_PDDR15.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR16,attr=IO,locate=0xE58
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR16STR;

__IO_EXTENDED	 const  PDDR16STR	IO_PDDR16;
#define	_pddr16		(IO_PDDR16)
#define	PDDR16		(IO_PDDR16.byte)
#define	PDDR16_P7  	(IO_PDDR16.bit.P7)
#define	PDDR16_P6  	(IO_PDDR16.bit.P6)
#define	PDDR16_P5  	(IO_PDDR16.bit.P5)
#define	PDDR16_P4  	(IO_PDDR16.bit.P4)
#define	PDDR16_P3  	(IO_PDDR16.bit.P3)
#define	PDDR16_P2  	(IO_PDDR16.bit.P2)
#define	PDDR16_P1  	(IO_PDDR16.bit.P1)
#define	PDDR16_P0  	(IO_PDDR16.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR17,attr=IO,locate=0xE59
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR17STR;

__IO_EXTENDED	 const  PDDR17STR	IO_PDDR17;
#define	_pddr17		(IO_PDDR17)
#define	PDDR17		(IO_PDDR17.byte)
#define	PDDR17_P7  	(IO_PDDR17.bit.P7)
#define	PDDR17_P6  	(IO_PDDR17.bit.P6)
#define	PDDR17_P5  	(IO_PDDR17.bit.P5)
#define	PDDR17_P4  	(IO_PDDR17.bit.P4)
#define	PDDR17_P3  	(IO_PDDR17.bit.P3)
#define	PDDR17_P2  	(IO_PDDR17.bit.P2)
#define	PDDR17_P1  	(IO_PDDR17.bit.P1)
#define	PDDR17_P0  	(IO_PDDR17.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR18,attr=IO,locate=0xE5A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR18STR;

__IO_EXTENDED	 const  PDDR18STR	IO_PDDR18;
#define	_pddr18		(IO_PDDR18)
#define	PDDR18		(IO_PDDR18.byte)
#define	PDDR18_P7  	(IO_PDDR18.bit.P7)
#define	PDDR18_P6  	(IO_PDDR18.bit.P6)
#define	PDDR18_P5  	(IO_PDDR18.bit.P5)
#define	PDDR18_P4  	(IO_PDDR18.bit.P4)
#define	PDDR18_P3  	(IO_PDDR18.bit.P3)
#define	PDDR18_P2  	(IO_PDDR18.bit.P2)
#define	PDDR18_P1  	(IO_PDDR18.bit.P1)
#define	PDDR18_P0  	(IO_PDDR18.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PDDR19,attr=IO,locate=0xE5B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PDDR19STR;

__IO_EXTENDED	 const  PDDR19STR	IO_PDDR19;
#define	_pddr19		(IO_PDDR19)
#define	PDDR19		(IO_PDDR19.byte)
#define	PDDR19_P7  	(IO_PDDR19.bit.P7)
#define	PDDR19_P6  	(IO_PDDR19.bit.P6)
#define	PDDR19_P5  	(IO_PDDR19.bit.P5)
#define	PDDR19_P4  	(IO_PDDR19.bit.P4)
#define	PDDR19_P3  	(IO_PDDR19.bit.P3)
#define	PDDR19_P2  	(IO_PDDR19.bit.P2)
#define	PDDR19_P1  	(IO_PDDR19.bit.P1)
#define	PDDR19_P0  	(IO_PDDR19.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR00,attr=IO,locate=0xE60
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	ICU3E:2;
        __BYTE	ICU2E:2;
        __BYTE	ICU1E:2;
        __BYTE	ICU0E:2;
    } bit;
} EPFR00STR;

__IO_EXTENDED	  EPFR00STR	IO_EPFR00;
#define	_epfr00		(IO_EPFR00)
#define	EPFR00		(IO_EPFR00.byte)
#define	EPFR00_ICU3E  	(IO_EPFR00.bit.ICU3E)
#define	EPFR00_ICU2E  	(IO_EPFR00.bit.ICU2E)
#define	EPFR00_ICU1E  	(IO_EPFR00.bit.ICU1E)
#define	EPFR00_ICU0E  	(IO_EPFR00.bit.ICU0E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR01,attr=IO,locate=0xE61
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	ICU7E:1;
        __BYTE	RESV2:1;
        __BYTE	ICU6E:1;
        __BYTE	RESV4:1;
        __BYTE	ICU5E:1;
        __BYTE	ICU4E:2;
    } bit;
} EPFR01STR;

__IO_EXTENDED	  EPFR01STR	IO_EPFR01;
#define	_epfr01		(IO_EPFR01)
#define	EPFR01		(IO_EPFR01.byte)
#define	EPFR01_ICU7E  	(IO_EPFR01.bit.ICU7E)
#define	EPFR01_ICU6E  	(IO_EPFR01.bit.ICU6E)
#define	EPFR01_ICU5E  	(IO_EPFR01.bit.ICU5E)
#define	EPFR01_ICU4E  	(IO_EPFR01.bit.ICU4E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR02,attr=IO,locate=0xE62
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	TOT0E:2;
        __BYTE	TIN0E:2;
    } bit;
} EPFR02STR;

__IO_EXTENDED	  EPFR02STR	IO_EPFR02;
#define	_epfr02		(IO_EPFR02)
#define	EPFR02		(IO_EPFR02.byte)
#define	EPFR02_TOT0E  	(IO_EPFR02.bit.TOT0E)
#define	EPFR02_TIN0E  	(IO_EPFR02.bit.TIN0E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR03,attr=IO,locate=0xE63
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	TOT1E:3;
        __BYTE	RESV4:1;
        __BYTE	TIN1E:1;
    } bit;
} EPFR03STR;

__IO_EXTENDED	  EPFR03STR	IO_EPFR03;
#define	_epfr03		(IO_EPFR03)
#define	EPFR03		(IO_EPFR03.byte)
#define	EPFR03_TOT1E  	(IO_EPFR03.bit.TOT1E)
#define	EPFR03_TIN1E  	(IO_EPFR03.bit.TIN1E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR04,attr=IO,locate=0xE64
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	TOT2E:2;
        __BYTE	RESV5:1;
        __BYTE	TIN2E:1;
    } bit;
} EPFR04STR;

__IO_EXTENDED	  EPFR04STR	IO_EPFR04;
#define	_epfr04		(IO_EPFR04)
#define	EPFR04		(IO_EPFR04.byte)
#define	EPFR04_TOT2E  	(IO_EPFR04.bit.TOT2E)
#define	EPFR04_TIN2E  	(IO_EPFR04.bit.TIN2E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR05,attr=IO,locate=0xE65
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	TOT3E:2;
        __BYTE	TIN3E:2;
    } bit;
} EPFR05STR;

__IO_EXTENDED	  EPFR05STR	IO_EPFR05;
#define	_epfr05		(IO_EPFR05)
#define	EPFR05		(IO_EPFR05.byte)
#define	EPFR05_TOT3E  	(IO_EPFR05.bit.TOT3E)
#define	EPFR05_TIN3E  	(IO_EPFR05.bit.TIN3E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR06,attr=IO,locate=0xE66
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	SOT2E:2;
        __BYTE	SCK2E:1;
        __BYTE	RESV6:1;
    } bit;
} EPFR06STR;

__IO_EXTENDED	  EPFR06STR	IO_EPFR06;
#define	_epfr06		(IO_EPFR06)
#define	EPFR06		(IO_EPFR06.byte)
#define	EPFR06_SOT2E  	(IO_EPFR06.bit.SOT2E)
#define	EPFR06_SCK2E  	(IO_EPFR06.bit.SCK2E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR07,attr=IO,locate=0xE67
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	SOT3E:2;
        __BYTE	SCK3E:2;
        __BYTE	SIN3E:1;
    } bit;
} EPFR07STR;

__IO_EXTENDED	  EPFR07STR	IO_EPFR07;
#define	_epfr07		(IO_EPFR07)
#define	EPFR07		(IO_EPFR07.byte)
#define	EPFR07_SOT3E  	(IO_EPFR07.bit.SOT3E)
#define	EPFR07_SCK3E  	(IO_EPFR07.bit.SCK3E)
#define	EPFR07_SIN3E  	(IO_EPFR07.bit.SIN3E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR08,attr=IO,locate=0xE68
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	SOT4E:2;
        __BYTE	SCK4E:2;
        __BYTE	SIN4E:1;
    } bit;
} EPFR08STR;

__IO_EXTENDED	  EPFR08STR	IO_EPFR08;
#define	_epfr08		(IO_EPFR08)
#define	EPFR08		(IO_EPFR08.byte)
#define	EPFR08_SOT4E  	(IO_EPFR08.bit.SOT4E)
#define	EPFR08_SCK4E  	(IO_EPFR08.bit.SCK4E)
#define	EPFR08_SIN4E  	(IO_EPFR08.bit.SIN4E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR09,attr=IO,locate=0xE69
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	SOT5E:1;
        __BYTE	SCK5E:1;
        __BYTE	RESV7:1;
    } bit;
} EPFR09STR;

__IO_EXTENDED	  EPFR09STR	IO_EPFR09;
#define	_epfr09		(IO_EPFR09)
#define	EPFR09		(IO_EPFR09.byte)
#define	EPFR09_SOT5E  	(IO_EPFR09.bit.SOT5E)
#define	EPFR09_SCK5E  	(IO_EPFR09.bit.SCK5E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR10,attr=IO,locate=0xE6A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	PPG1E:2;
        __BYTE	PPG0E:2;
    } bit;
} EPFR10STR;

__IO_EXTENDED	  EPFR10STR	IO_EPFR10;
#define	_epfr10		(IO_EPFR10)
#define	EPFR10		(IO_EPFR10.byte)
#define	EPFR10_PPG1E  	(IO_EPFR10.bit.PPG1E)
#define	EPFR10_PPG0E  	(IO_EPFR10.bit.PPG0E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR11,attr=IO,locate=0xE6B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	PPG3E:2;
        __BYTE	PPG2E:2;
    } bit;
} EPFR11STR;

__IO_EXTENDED	  EPFR11STR	IO_EPFR11;
#define	_epfr11		(IO_EPFR11)
#define	EPFR11		(IO_EPFR11.byte)
#define	EPFR11_PPG3E  	(IO_EPFR11.bit.PPG3E)
#define	EPFR11_PPG2E  	(IO_EPFR11.bit.PPG2E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR12,attr=IO,locate=0xE6C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	PPG5E:2;
        __BYTE	PPG4E:2;
    } bit;
} EPFR12STR;

__IO_EXTENDED	  EPFR12STR	IO_EPFR12;
#define	_epfr12		(IO_EPFR12)
#define	EPFR12		(IO_EPFR12.byte)
#define	EPFR12_PPG5E  	(IO_EPFR12.bit.PPG5E)
#define	EPFR12_PPG4E  	(IO_EPFR12.bit.PPG4E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR13,attr=IO,locate=0xE6D
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	PPG7E:1;
        __BYTE	PPG6E:1;
    } bit;
} EPFR13STR;

__IO_EXTENDED	  EPFR13STR	IO_EPFR13;
#define	_epfr13		(IO_EPFR13)
#define	EPFR13		(IO_EPFR13.byte)
#define	EPFR13_PPG7E  	(IO_EPFR13.bit.PPG7E)
#define	EPFR13_PPG6E  	(IO_EPFR13.bit.PPG6E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR14,attr=IO,locate=0xE6E
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	PPG9E:1;
        __BYTE	PPG8E:1;
    } bit;
} EPFR14STR;

__IO_EXTENDED	  EPFR14STR	IO_EPFR14;
#define	_epfr14		(IO_EPFR14)
#define	EPFR14		(IO_EPFR14.byte)
#define	EPFR14_PPG9E  	(IO_EPFR14.bit.PPG9E)
#define	EPFR14_PPG8E  	(IO_EPFR14.bit.PPG8E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR15,attr=IO,locate=0xE6F
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	PPG12E:1;
        __BYTE	PPG11E:1;
        __BYTE	PPG10E:1;
    } bit;
} EPFR15STR;

__IO_EXTENDED	  EPFR15STR	IO_EPFR15;
#define	_epfr15		(IO_EPFR15)
#define	EPFR15		(IO_EPFR15.byte)
#define	EPFR15_PPG12E  	(IO_EPFR15.bit.PPG12E)
#define	EPFR15_PPG11E  	(IO_EPFR15.bit.PPG11E)
#define	EPFR15_PPG10E  	(IO_EPFR15.bit.PPG10E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR26,attr=IO,locate=0xE7A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	TIB1E:2;
        __BYTE	TIB0E:2;
        __BYTE	TIA1E:2;
        __BYTE	TIA0E:2;
    } bit;
} EPFR26STR;

__IO_EXTENDED	  EPFR26STR	IO_EPFR26;
#define	_epfr26		(IO_EPFR26)
#define	EPFR26		(IO_EPFR26.byte)
#define	EPFR26_TIB1E  	(IO_EPFR26.bit.TIB1E)
#define	EPFR26_TIB0E  	(IO_EPFR26.bit.TIB0E)
#define	EPFR26_TIA1E  	(IO_EPFR26.bit.TIA1E)
#define	EPFR26_TIA0E  	(IO_EPFR26.bit.TIA0E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR27,attr=IO,locate=0xE7B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	WOTE:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} EPFR27STR;

__IO_EXTENDED	  EPFR27STR	IO_EPFR27;
#define	_epfr27		(IO_EPFR27)
#define	EPFR27		(IO_EPFR27.byte)
#define	EPFR27_WOTE  	(IO_EPFR27.bit.WOTE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR28,attr=IO,locate=0xE7C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	FRCK5E:1;
        __BYTE	FRCK4E:1;
        __BYTE	FRCK3E:1;
        __BYTE	RESV5:1;
        __BYTE	FRCK1E:1;
        __BYTE	RESV7:1;
    } bit;
} EPFR28STR;

__IO_EXTENDED	  EPFR28STR	IO_EPFR28;
#define	_epfr28		(IO_EPFR28)
#define	EPFR28		(IO_EPFR28.byte)
#define	EPFR28_FRCK5E  	(IO_EPFR28.bit.FRCK5E)
#define	EPFR28_FRCK4E  	(IO_EPFR28.bit.FRCK4E)
#define	EPFR28_FRCK3E  	(IO_EPFR28.bit.FRCK3E)
#define	EPFR28_FRCK1E  	(IO_EPFR28.bit.FRCK1E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR29,attr=IO,locate=0xE7D
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	OCU3E:2;
        __BYTE	OCU2E:2;
        __BYTE	OCU1E:2;
        __BYTE	OCU0E:2;
    } bit;
} EPFR29STR;

__IO_EXTENDED	  EPFR29STR	IO_EPFR29;
#define	_epfr29		(IO_EPFR29)
#define	EPFR29		(IO_EPFR29.byte)
#define	EPFR29_OCU3E  	(IO_EPFR29.bit.OCU3E)
#define	EPFR29_OCU2E  	(IO_EPFR29.bit.OCU2E)
#define	EPFR29_OCU1E  	(IO_EPFR29.bit.OCU1E)
#define	EPFR29_OCU0E  	(IO_EPFR29.bit.OCU0E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR33,attr=IO,locate=0xE81
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	SOT6E:1;
        __BYTE	SCK6E:1;
        __BYTE	RESV7:1;
    } bit;
} EPFR33STR;

__IO_EXTENDED	  EPFR33STR	IO_EPFR33;
#define	_epfr33		(IO_EPFR33)
#define	EPFR33		(IO_EPFR33.byte)
#define	EPFR33_SOT6E  	(IO_EPFR33.bit.SOT6E)
#define	EPFR33_SCK6E  	(IO_EPFR33.bit.SCK6E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR34,attr=IO,locate=0xE82
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	SOT7E:1;
        __BYTE	SCK7E:1;
        __BYTE	RESV7:1;
    } bit;
} EPFR34STR;

__IO_EXTENDED	  EPFR34STR	IO_EPFR34;
#define	_epfr34		(IO_EPFR34)
#define	EPFR34		(IO_EPFR34.byte)
#define	EPFR34_SOT7E  	(IO_EPFR34.bit.SOT7E)
#define	EPFR34_SCK7E  	(IO_EPFR34.bit.SCK7E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR35,attr=IO,locate=0xE83
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	SOT0E:2;
        __BYTE	SCK0E:2;
        __BYTE	SIN0E:1;
    } bit;
} EPFR35STR;

__IO_EXTENDED	  EPFR35STR	IO_EPFR35;
#define	_epfr35		(IO_EPFR35)
#define	EPFR35		(IO_EPFR35.byte)
#define	EPFR35_SOT0E  	(IO_EPFR35.bit.SOT0E)
#define	EPFR35_SCK0E  	(IO_EPFR35.bit.SCK0E)
#define	EPFR35_SIN0E  	(IO_EPFR35.bit.SIN0E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR36,attr=IO,locate=0xE84
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	SOT1E:1;
        __BYTE	SCK1E:2;
        __BYTE	RESV6:1;
    } bit;
} EPFR36STR;

__IO_EXTENDED	  EPFR36STR	IO_EPFR36;
#define	_epfr36		(IO_EPFR36)
#define	EPFR36		(IO_EPFR36.byte)
#define	EPFR36_SOT1E  	(IO_EPFR36.bit.SOT1E)
#define	EPFR36_SCK1E  	(IO_EPFR36.bit.SCK1E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR42,attr=IO,locate=0xE8A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	DAS1:1;
        __BYTE	DAS0:1;
    } bit;
} EPFR42STR;

__IO_EXTENDED	  EPFR42STR	IO_EPFR42;
#define	_epfr42		(IO_EPFR42)
#define	EPFR42		(IO_EPFR42.byte)
#define	EPFR42_DAS1  	(IO_EPFR42.bit.DAS1)
#define	EPFR42_DAS0  	(IO_EPFR42.bit.DAS0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR43,attr=IO,locate=0xE8B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	INT7E:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	INT4E:1;
        __BYTE	INT3E:1;
        __BYTE	INT2E:1;
        __BYTE	INT1E:1;
        __BYTE	RESV7:1;
    } bit;
} EPFR43STR;

__IO_EXTENDED	  EPFR43STR	IO_EPFR43;
#define	_epfr43		(IO_EPFR43)
#define	EPFR43		(IO_EPFR43.byte)
#define	EPFR43_INT7E  	(IO_EPFR43.bit.INT7E)
#define	EPFR43_INT4E  	(IO_EPFR43.bit.INT4E)
#define	EPFR43_INT3E  	(IO_EPFR43.bit.INT3E)
#define	EPFR43_INT2E  	(IO_EPFR43.bit.INT2E)
#define	EPFR43_INT1E  	(IO_EPFR43.bit.INT1E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR44,attr=IO,locate=0xE8C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	INT14E:1;
        __BYTE	INT13E:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	INT9E:1;
        __BYTE	RESV7:1;
    } bit;
} EPFR44STR;

__IO_EXTENDED	  EPFR44STR	IO_EPFR44;
#define	_epfr44		(IO_EPFR44)
#define	EPFR44		(IO_EPFR44.byte)
#define	EPFR44_INT14E  	(IO_EPFR44.bit.INT14E)
#define	EPFR44_INT13E  	(IO_EPFR44.bit.INT13E)
#define	EPFR44_INT9E  	(IO_EPFR44.bit.INT9E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR45,attr=IO,locate=0xE8D
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	PPG17E:2;
        __BYTE	PPG16E:2;
        __BYTE	PPG15E:1;
        __BYTE	PPG14E:1;
        __BYTE	PPG13E:1;
    } bit;
} EPFR45STR;

__IO_EXTENDED	  EPFR45STR	IO_EPFR45;
#define	_epfr45		(IO_EPFR45)
#define	EPFR45		(IO_EPFR45.byte)
#define	EPFR45_PPG17E  	(IO_EPFR45.bit.PPG17E)
#define	EPFR45_PPG16E  	(IO_EPFR45.bit.PPG16E)
#define	EPFR45_PPG15E  	(IO_EPFR45.bit.PPG15E)
#define	EPFR45_PPG14E  	(IO_EPFR45.bit.PPG14E)
#define	EPFR45_PPG13E  	(IO_EPFR45.bit.PPG13E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR56,attr=IO,locate=0xE98
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	ICU9E:1;
        __BYTE	RESV6:1;
        __BYTE	ICU8E:1;
    } bit;
} EPFR56STR;

__IO_EXTENDED	  EPFR56STR	IO_EPFR56;
#define	_epfr56		(IO_EPFR56)
#define	EPFR56		(IO_EPFR56.byte)
#define	EPFR56_ICU9E  	(IO_EPFR56.bit.ICU9E)
#define	EPFR56_ICU8E  	(IO_EPFR56.bit.ICU8E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR57,attr=IO,locate=0xE99
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	TOT4E:2;
        __BYTE	RESV5:1;
        __BYTE	TIN4E:1;
    } bit;
} EPFR57STR;

__IO_EXTENDED	  EPFR57STR	IO_EPFR57;
#define	_epfr57		(IO_EPFR57)
#define	EPFR57		(IO_EPFR57.byte)
#define	EPFR57_TOT4E  	(IO_EPFR57.bit.TOT4E)
#define	EPFR57_TIN4E  	(IO_EPFR57.bit.TIN4E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR58,attr=IO,locate=0xE9A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	TOT5E:2;
        __BYTE	RESV5:1;
        __BYTE	TIN5E:1;
    } bit;
} EPFR58STR;

__IO_EXTENDED	  EPFR58STR	IO_EPFR58;
#define	_epfr58		(IO_EPFR58)
#define	EPFR58		(IO_EPFR58.byte)
#define	EPFR58_TOT5E  	(IO_EPFR58.bit.TOT5E)
#define	EPFR58_TIN5E  	(IO_EPFR58.bit.TIN5E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR59,attr=IO,locate=0xE9B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	TOT6E:2;
        __BYTE	RESV5:1;
        __BYTE	TIN6E:1;
    } bit;
} EPFR59STR;

__IO_EXTENDED	  EPFR59STR	IO_EPFR59;
#define	_epfr59		(IO_EPFR59)
#define	EPFR59		(IO_EPFR59.byte)
#define	EPFR59_TOT6E  	(IO_EPFR59.bit.TOT6E)
#define	EPFR59_TIN6E  	(IO_EPFR59.bit.TIN6E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR60,attr=IO,locate=0xE9C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	TOT7E:2;
        __BYTE	RESV5:1;
        __BYTE	TIN7E:1;
    } bit;
} EPFR60STR;

__IO_EXTENDED	  EPFR60STR	IO_EPFR60;
#define	_epfr60		(IO_EPFR60)
#define	EPFR60		(IO_EPFR60.byte)
#define	EPFR60_TOT7E  	(IO_EPFR60.bit.TOT7E)
#define	EPFR60_TIN7E  	(IO_EPFR60.bit.TIN7E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR61,attr=IO,locate=0xE9D
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	SOT8E:1;
        __BYTE	SCK8E:1;
        __BYTE	RESV7:1;
    } bit;
} EPFR61STR;

__IO_EXTENDED	  EPFR61STR	IO_EPFR61;
#define	_epfr61		(IO_EPFR61)
#define	EPFR61		(IO_EPFR61.byte)
#define	EPFR61_SOT8E  	(IO_EPFR61.bit.SOT8E)
#define	EPFR61_SCK8E  	(IO_EPFR61.bit.SCK8E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR62,attr=IO,locate=0xE9E
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	SOT9E:1;
        __BYTE	SCK9E:1;
        __BYTE	RESV7:1;
    } bit;
} EPFR62STR;

__IO_EXTENDED	  EPFR62STR	IO_EPFR62;
#define	_epfr62		(IO_EPFR62)
#define	EPFR62		(IO_EPFR62.byte)
#define	EPFR62_SOT9E  	(IO_EPFR62.bit.SOT9E)
#define	EPFR62_SCK9E  	(IO_EPFR62.bit.SCK9E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EPFR63,attr=IO,locate=0xE9F
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	SOT10E:2;
        __BYTE	SCK10E:2;
        __BYTE	RESV5:1;
    } bit;
} EPFR63STR;

__IO_EXTENDED	  EPFR63STR	IO_EPFR63;
#define	_epfr63		(IO_EPFR63)
#define	EPFR63		(IO_EPFR63.byte)
#define	EPFR63_SOT10E  	(IO_EPFR63.bit.SOT10E)
#define	EPFR63_SCK10E  	(IO_EPFR63.bit.SCK10E)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER00,attr=IO,locate=0xEC0
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER00STR;

__IO_EXTENDED	  PPER00STR	IO_PPER00;
#define	_pper00		(IO_PPER00)
#define	PPER00		(IO_PPER00.byte)
#define	PPER00_P7  	(IO_PPER00.bit.P7)
#define	PPER00_P6  	(IO_PPER00.bit.P6)
#define	PPER00_P5  	(IO_PPER00.bit.P5)
#define	PPER00_P4  	(IO_PPER00.bit.P4)
#define	PPER00_P3  	(IO_PPER00.bit.P3)
#define	PPER00_P2  	(IO_PPER00.bit.P2)
#define	PPER00_P1  	(IO_PPER00.bit.P1)
#define	PPER00_P0  	(IO_PPER00.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER01,attr=IO,locate=0xEC1
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER01STR;

__IO_EXTENDED	  PPER01STR	IO_PPER01;
#define	_pper01		(IO_PPER01)
#define	PPER01		(IO_PPER01.byte)
#define	PPER01_P7  	(IO_PPER01.bit.P7)
#define	PPER01_P6  	(IO_PPER01.bit.P6)
#define	PPER01_P5  	(IO_PPER01.bit.P5)
#define	PPER01_P4  	(IO_PPER01.bit.P4)
#define	PPER01_P3  	(IO_PPER01.bit.P3)
#define	PPER01_P2  	(IO_PPER01.bit.P2)
#define	PPER01_P1  	(IO_PPER01.bit.P1)
#define	PPER01_P0  	(IO_PPER01.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER02,attr=IO,locate=0xEC2
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER02STR;

__IO_EXTENDED	  PPER02STR	IO_PPER02;
#define	_pper02		(IO_PPER02)
#define	PPER02		(IO_PPER02.byte)
#define	PPER02_P7  	(IO_PPER02.bit.P7)
#define	PPER02_P6  	(IO_PPER02.bit.P6)
#define	PPER02_P5  	(IO_PPER02.bit.P5)
#define	PPER02_P4  	(IO_PPER02.bit.P4)
#define	PPER02_P3  	(IO_PPER02.bit.P3)
#define	PPER02_P2  	(IO_PPER02.bit.P2)
#define	PPER02_P1  	(IO_PPER02.bit.P1)
#define	PPER02_P0  	(IO_PPER02.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER03,attr=IO,locate=0xEC3
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER03STR;

__IO_EXTENDED	  PPER03STR	IO_PPER03;
#define	_pper03		(IO_PPER03)
#define	PPER03		(IO_PPER03.byte)
#define	PPER03_P7  	(IO_PPER03.bit.P7)
#define	PPER03_P6  	(IO_PPER03.bit.P6)
#define	PPER03_P5  	(IO_PPER03.bit.P5)
#define	PPER03_P4  	(IO_PPER03.bit.P4)
#define	PPER03_P3  	(IO_PPER03.bit.P3)
#define	PPER03_P2  	(IO_PPER03.bit.P2)
#define	PPER03_P1  	(IO_PPER03.bit.P1)
#define	PPER03_P0  	(IO_PPER03.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER04,attr=IO,locate=0xEC4
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER04STR;

__IO_EXTENDED	  PPER04STR	IO_PPER04;
#define	_pper04		(IO_PPER04)
#define	PPER04		(IO_PPER04.byte)
#define	PPER04_P7  	(IO_PPER04.bit.P7)
#define	PPER04_P6  	(IO_PPER04.bit.P6)
#define	PPER04_P5  	(IO_PPER04.bit.P5)
#define	PPER04_P4  	(IO_PPER04.bit.P4)
#define	PPER04_P3  	(IO_PPER04.bit.P3)
#define	PPER04_P2  	(IO_PPER04.bit.P2)
#define	PPER04_P1  	(IO_PPER04.bit.P1)
#define	PPER04_P0  	(IO_PPER04.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER05,attr=IO,locate=0xEC5
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER05STR;

__IO_EXTENDED	  PPER05STR	IO_PPER05;
#define	_pper05		(IO_PPER05)
#define	PPER05		(IO_PPER05.byte)
#define	PPER05_P7  	(IO_PPER05.bit.P7)
#define	PPER05_P6  	(IO_PPER05.bit.P6)
#define	PPER05_P5  	(IO_PPER05.bit.P5)
#define	PPER05_P4  	(IO_PPER05.bit.P4)
#define	PPER05_P3  	(IO_PPER05.bit.P3)
#define	PPER05_P2  	(IO_PPER05.bit.P2)
#define	PPER05_P1  	(IO_PPER05.bit.P1)
#define	PPER05_P0  	(IO_PPER05.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER06,attr=IO,locate=0xEC6
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER06STR;

__IO_EXTENDED	  PPER06STR	IO_PPER06;
#define	_pper06		(IO_PPER06)
#define	PPER06		(IO_PPER06.byte)
#define	PPER06_P7  	(IO_PPER06.bit.P7)
#define	PPER06_P6  	(IO_PPER06.bit.P6)
#define	PPER06_P5  	(IO_PPER06.bit.P5)
#define	PPER06_P4  	(IO_PPER06.bit.P4)
#define	PPER06_P3  	(IO_PPER06.bit.P3)
#define	PPER06_P2  	(IO_PPER06.bit.P2)
#define	PPER06_P1  	(IO_PPER06.bit.P1)
#define	PPER06_P0  	(IO_PPER06.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER07,attr=IO,locate=0xEC7
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER07STR;

__IO_EXTENDED	  PPER07STR	IO_PPER07;
#define	_pper07		(IO_PPER07)
#define	PPER07		(IO_PPER07.byte)
#define	PPER07_P7  	(IO_PPER07.bit.P7)
#define	PPER07_P6  	(IO_PPER07.bit.P6)
#define	PPER07_P5  	(IO_PPER07.bit.P5)
#define	PPER07_P4  	(IO_PPER07.bit.P4)
#define	PPER07_P3  	(IO_PPER07.bit.P3)
#define	PPER07_P2  	(IO_PPER07.bit.P2)
#define	PPER07_P1  	(IO_PPER07.bit.P1)
#define	PPER07_P0  	(IO_PPER07.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER08,attr=IO,locate=0xEC8
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER08STR;

__IO_EXTENDED	  PPER08STR	IO_PPER08;
#define	_pper08		(IO_PPER08)
#define	PPER08		(IO_PPER08.byte)
#define	PPER08_P7  	(IO_PPER08.bit.P7)
#define	PPER08_P6  	(IO_PPER08.bit.P6)
#define	PPER08_P5  	(IO_PPER08.bit.P5)
#define	PPER08_P4  	(IO_PPER08.bit.P4)
#define	PPER08_P3  	(IO_PPER08.bit.P3)
#define	PPER08_P2  	(IO_PPER08.bit.P2)
#define	PPER08_P1  	(IO_PPER08.bit.P1)
#define	PPER08_P0  	(IO_PPER08.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER09,attr=IO,locate=0xEC9
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER09STR;

__IO_EXTENDED	  PPER09STR	IO_PPER09;
#define	_pper09		(IO_PPER09)
#define	PPER09		(IO_PPER09.byte)
#define	PPER09_P7  	(IO_PPER09.bit.P7)
#define	PPER09_P6  	(IO_PPER09.bit.P6)
#define	PPER09_P5  	(IO_PPER09.bit.P5)
#define	PPER09_P4  	(IO_PPER09.bit.P4)
#define	PPER09_P3  	(IO_PPER09.bit.P3)
#define	PPER09_P2  	(IO_PPER09.bit.P2)
#define	PPER09_P1  	(IO_PPER09.bit.P1)
#define	PPER09_P0  	(IO_PPER09.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER10,attr=IO,locate=0xECA
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER10STR;

__IO_EXTENDED	  PPER10STR	IO_PPER10;
#define	_pper10		(IO_PPER10)
#define	PPER10		(IO_PPER10.byte)
#define	PPER10_P7  	(IO_PPER10.bit.P7)
#define	PPER10_P6  	(IO_PPER10.bit.P6)
#define	PPER10_P5  	(IO_PPER10.bit.P5)
#define	PPER10_P4  	(IO_PPER10.bit.P4)
#define	PPER10_P3  	(IO_PPER10.bit.P3)
#define	PPER10_P2  	(IO_PPER10.bit.P2)
#define	PPER10_P1  	(IO_PPER10.bit.P1)
#define	PPER10_P0  	(IO_PPER10.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER11,attr=IO,locate=0xECB
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER11STR;

__IO_EXTENDED	  PPER11STR	IO_PPER11;
#define	_pper11		(IO_PPER11)
#define	PPER11		(IO_PPER11.byte)
#define	PPER11_P7  	(IO_PPER11.bit.P7)
#define	PPER11_P6  	(IO_PPER11.bit.P6)
#define	PPER11_P5  	(IO_PPER11.bit.P5)
#define	PPER11_P4  	(IO_PPER11.bit.P4)
#define	PPER11_P3  	(IO_PPER11.bit.P3)
#define	PPER11_P2  	(IO_PPER11.bit.P2)
#define	PPER11_P1  	(IO_PPER11.bit.P1)
#define	PPER11_P0  	(IO_PPER11.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER12,attr=IO,locate=0xECC
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER12STR;

__IO_EXTENDED	  PPER12STR	IO_PPER12;
#define	_pper12		(IO_PPER12)
#define	PPER12		(IO_PPER12.byte)
#define	PPER12_P7  	(IO_PPER12.bit.P7)
#define	PPER12_P6  	(IO_PPER12.bit.P6)
#define	PPER12_P5  	(IO_PPER12.bit.P5)
#define	PPER12_P4  	(IO_PPER12.bit.P4)
#define	PPER12_P3  	(IO_PPER12.bit.P3)
#define	PPER12_P2  	(IO_PPER12.bit.P2)
#define	PPER12_P1  	(IO_PPER12.bit.P1)
#define	PPER12_P0  	(IO_PPER12.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER13,attr=IO,locate=0xECD
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER13STR;

__IO_EXTENDED	  PPER13STR	IO_PPER13;
#define	_pper13		(IO_PPER13)
#define	PPER13		(IO_PPER13.byte)
#define	PPER13_P7  	(IO_PPER13.bit.P7)
#define	PPER13_P6  	(IO_PPER13.bit.P6)
#define	PPER13_P5  	(IO_PPER13.bit.P5)
#define	PPER13_P4  	(IO_PPER13.bit.P4)
#define	PPER13_P3  	(IO_PPER13.bit.P3)
#define	PPER13_P2  	(IO_PPER13.bit.P2)
#define	PPER13_P1  	(IO_PPER13.bit.P1)
#define	PPER13_P0  	(IO_PPER13.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER14,attr=IO,locate=0xECE
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER14STR;

__IO_EXTENDED	  PPER14STR	IO_PPER14;
#define	_pper14		(IO_PPER14)
#define	PPER14		(IO_PPER14.byte)
#define	PPER14_P7  	(IO_PPER14.bit.P7)
#define	PPER14_P6  	(IO_PPER14.bit.P6)
#define	PPER14_P5  	(IO_PPER14.bit.P5)
#define	PPER14_P4  	(IO_PPER14.bit.P4)
#define	PPER14_P3  	(IO_PPER14.bit.P3)
#define	PPER14_P2  	(IO_PPER14.bit.P2)
#define	PPER14_P1  	(IO_PPER14.bit.P1)
#define	PPER14_P0  	(IO_PPER14.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER15,attr=IO,locate=0xECF
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER15STR;

__IO_EXTENDED	  PPER15STR	IO_PPER15;
#define	_pper15		(IO_PPER15)
#define	PPER15		(IO_PPER15.byte)
#define	PPER15_P7  	(IO_PPER15.bit.P7)
#define	PPER15_P6  	(IO_PPER15.bit.P6)
#define	PPER15_P5  	(IO_PPER15.bit.P5)
#define	PPER15_P4  	(IO_PPER15.bit.P4)
#define	PPER15_P3  	(IO_PPER15.bit.P3)
#define	PPER15_P2  	(IO_PPER15.bit.P2)
#define	PPER15_P1  	(IO_PPER15.bit.P1)
#define	PPER15_P0  	(IO_PPER15.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER16,attr=IO,locate=0xED8
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER16STR;

__IO_EXTENDED	  PPER16STR	IO_PPER16;
#define	_pper16		(IO_PPER16)
#define	PPER16		(IO_PPER16.byte)
#define	PPER16_P7  	(IO_PPER16.bit.P7)
#define	PPER16_P6  	(IO_PPER16.bit.P6)
#define	PPER16_P5  	(IO_PPER16.bit.P5)
#define	PPER16_P4  	(IO_PPER16.bit.P4)
#define	PPER16_P3  	(IO_PPER16.bit.P3)
#define	PPER16_P2  	(IO_PPER16.bit.P2)
#define	PPER16_P1  	(IO_PPER16.bit.P1)
#define	PPER16_P0  	(IO_PPER16.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER17,attr=IO,locate=0xED9
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER17STR;

__IO_EXTENDED	  PPER17STR	IO_PPER17;
#define	_pper17		(IO_PPER17)
#define	PPER17		(IO_PPER17.byte)
#define	PPER17_P7  	(IO_PPER17.bit.P7)
#define	PPER17_P6  	(IO_PPER17.bit.P6)
#define	PPER17_P5  	(IO_PPER17.bit.P5)
#define	PPER17_P4  	(IO_PPER17.bit.P4)
#define	PPER17_P3  	(IO_PPER17.bit.P3)
#define	PPER17_P2  	(IO_PPER17.bit.P2)
#define	PPER17_P1  	(IO_PPER17.bit.P1)
#define	PPER17_P0  	(IO_PPER17.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER18,attr=IO,locate=0xEDA
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER18STR;

__IO_EXTENDED	  PPER18STR	IO_PPER18;
#define	_pper18		(IO_PPER18)
#define	PPER18		(IO_PPER18.byte)
#define	PPER18_P7  	(IO_PPER18.bit.P7)
#define	PPER18_P6  	(IO_PPER18.bit.P6)
#define	PPER18_P5  	(IO_PPER18.bit.P5)
#define	PPER18_P4  	(IO_PPER18.bit.P4)
#define	PPER18_P3  	(IO_PPER18.bit.P3)
#define	PPER18_P2  	(IO_PPER18.bit.P2)
#define	PPER18_P1  	(IO_PPER18.bit.P1)
#define	PPER18_P0  	(IO_PPER18.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPER19,attr=IO,locate=0xEDB
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	P7:1;
        __BYTE	P6:1;
        __BYTE	P5:1;
        __BYTE	P4:1;
        __BYTE	P3:1;
        __BYTE	P2:1;
        __BYTE	P1:1;
        __BYTE	P0:1;
    } bit;
} PPER19STR;

__IO_EXTENDED	  PPER19STR	IO_PPER19;
#define	_pper19		(IO_PPER19)
#define	PPER19		(IO_PPER19.byte)
#define	PPER19_P7  	(IO_PPER19.bit.P7)
#define	PPER19_P6  	(IO_PPER19.bit.P6)
#define	PPER19_P5  	(IO_PPER19.bit.P5)
#define	PPER19_P4  	(IO_PPER19.bit.P4)
#define	PPER19_P3  	(IO_PPER19.bit.P3)
#define	PPER19_P2  	(IO_PPER19.bit.P2)
#define	PPER19_P1  	(IO_PPER19.bit.P1)
#define	PPER19_P0  	(IO_PPER19.bit.P0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PORTEN,attr=IO,locate=0xF40
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	GPORTEN:1;
    } bit;
} PORTENSTR;

__IO_EXTENDED	  PORTENSTR	IO_PORTEN;
#define	_porten		(IO_PORTEN)
#define	PORTEN		(IO_PORTEN.byte)
#define	PORTEN_GPORTEN  	(IO_PORTEN.bit.GPORTEN)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_KEYCDR,attr=IO,locate=0xF44
#endif

__IO_EXTENDED	__HWORD	IO_KEYCDR;
#define	_keycdr		(IO_KEYCDR)
#define	KEYCDR	(_keycdr)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MSCY6,attr=IO,locate=0xF68
#endif

__IO_EXTENDED	const __WORD	IO_MSCY6;
#define	_mscy6		(IO_MSCY6)
#define	MSCY6	(_mscy6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MSCY7,attr=IO,locate=0xF6C
#endif

__IO_EXTENDED	const __WORD	IO_MSCY7;
#define	_mscy7		(IO_MSCY7)
#define	MSCY7	(_mscy7)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_RCR0,attr=IO,locate=0xF70
#endif

__IO_EXTENDED	union
{
    __HWORD	hword;
    struct
    {
        __BYTE	RCRH0;
        __BYTE	RCRL0;
    } byte;
} IO_RCR0;

#define	RCR0		(IO_RCR0.hword)
#define	RCR0_RCRH0	(IO_RCR0.byte.RCRH0)
#define	RCR0_RCRL0	(IO_RCR0.byte.RCRL0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_UDCR0,attr=IO,locate=0xF72
#endif

__IO_EXTENDED	const	union
{
    __HWORD	hword;
    struct
    {
        __BYTE	UDCRH0;
        __BYTE	UDCRL0;
    } byte;
} IO_UDCR0;

#define	UDCR0		(IO_UDCR0.hword)
#define	UDCR0_UDCRH0	(IO_UDCR0.byte.UDCRH0)
#define	UDCR0_UDCRL0	(IO_UDCR0.byte.UDCRL0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CCR0,attr=IO,locate=0xF74
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	M16E:1;
        __HWORD	CDCF:1;
        __HWORD	CFIE:1;
        __HWORD	CLKS:1;
        __HWORD	CMS:2;
        __HWORD	CES:2;
        __HWORD	RESV6:1;
        __HWORD	CTUT:1;
        __HWORD	UCRE:1;
        __HWORD	RLDE:1;
        __HWORD	UDCC:1;
        __HWORD	CGSC:1;
        __HWORD	CGE:2;
    } bit;
} CCR0STR;

__IO_EXTENDED	  CCR0STR	IO_CCR0;
#define	_ccr0		(IO_CCR0)
#define	CCR0		(IO_CCR0.hword)
#define	CCR0_M16E  	(IO_CCR0.bit.M16E)
#define	CCR0_CDCF  	(IO_CCR0.bit.CDCF)
#define	CCR0_CFIE  	(IO_CCR0.bit.CFIE)
#define	CCR0_CLKS  	(IO_CCR0.bit.CLKS)
#define	CCR0_CMS  	(IO_CCR0.bit.CMS)
#define	CCR0_CES  	(IO_CCR0.bit.CES)
#define	CCR0_CTUT  	(IO_CCR0.bit.CTUT)
#define	CCR0_UCRE  	(IO_CCR0.bit.UCRE)
#define	CCR0_RLDE  	(IO_CCR0.bit.RLDE)
#define	CCR0_UDCC  	(IO_CCR0.bit.UDCC)
#define	CCR0_CGSC  	(IO_CCR0.bit.CGSC)
#define	CCR0_CGE  	(IO_CCR0.bit.CGE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CSR0,attr=IO,locate=0xF77
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CSTR:1;
        __BYTE	CITE:1;
        __BYTE	UDIE:1;
        __BYTE	CMPF:1;
        __BYTE	OVFF:1;
        __BYTE	UDFF:1;
        __BYTE	UDF:2;
    } bit;
} CSR0STR;

__IO_EXTENDED	  CSR0STR	IO_CSR0;
#define	_csr0		(IO_CSR0)
#define	CSR0		(IO_CSR0.byte)
#define	CSR0_CSTR  	(IO_CSR0.bit.CSTR)
#define	CSR0_CITE  	(IO_CSR0.bit.CITE)
#define	CSR0_UDIE  	(IO_CSR0.bit.UDIE)
#define	CSR0_CMPF  	(IO_CSR0.bit.CMPF)
#define	CSR0_OVFF  	(IO_CSR0.bit.OVFF)
#define	CSR0_UDFF  	(IO_CSR0.bit.UDFF)
#define	CSR0_UDF  	(IO_CSR0.bit.UDF)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_RCR1,attr=IO,locate=0xF80
#endif

__IO_EXTENDED	union
{
    __HWORD	hword;
    struct
    {
        __BYTE	RCRH1;
        __BYTE	RCRL1;
    } byte;
} IO_RCR1;

#define	RCR1		(IO_RCR1.hword)
#define	RCR1_RCRH1	(IO_RCR1.byte.RCRH1)
#define	RCR1_RCRL1	(IO_RCR1.byte.RCRL1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_UDCR1,attr=IO,locate=0xF82
#endif

__IO_EXTENDED	const	union
{
    __HWORD	hword;
    struct
    {
        __BYTE	UDCRH1;
        __BYTE	UDCRL1;
    } byte;
} IO_UDCR1;

#define	UDCR1		(IO_UDCR1.hword)
#define	UDCR1_UDCRH1	(IO_UDCR1.byte.UDCRH1)
#define	UDCR1_UDCRL1	(IO_UDCR1.byte.UDCRL1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CCR1,attr=IO,locate=0xF84
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	M16E:1;
        __HWORD	CDCF:1;
        __HWORD	CFIE:1;
        __HWORD	CLKS:1;
        __HWORD	CMS:2;
        __HWORD	CES:2;
        __HWORD	RESV6:1;
        __HWORD	CTUT:1;
        __HWORD	UCRE:1;
        __HWORD	RLDE:1;
        __HWORD	UDCC:1;
        __HWORD	CGSC:1;
        __HWORD	CGE:2;
    } bit;
} CCR1STR;

__IO_EXTENDED	  CCR1STR	IO_CCR1;
#define	_ccr1		(IO_CCR1)
#define	CCR1		(IO_CCR1.hword)
#define	CCR1_M16E  	(IO_CCR1.bit.M16E)
#define	CCR1_CDCF  	(IO_CCR1.bit.CDCF)
#define	CCR1_CFIE  	(IO_CCR1.bit.CFIE)
#define	CCR1_CLKS  	(IO_CCR1.bit.CLKS)
#define	CCR1_CMS  	(IO_CCR1.bit.CMS)
#define	CCR1_CES  	(IO_CCR1.bit.CES)
#define	CCR1_CTUT  	(IO_CCR1.bit.CTUT)
#define	CCR1_UCRE  	(IO_CCR1.bit.UCRE)
#define	CCR1_RLDE  	(IO_CCR1.bit.RLDE)
#define	CCR1_UDCC  	(IO_CCR1.bit.UDCC)
#define	CCR1_CGSC  	(IO_CCR1.bit.CGSC)
#define	CCR1_CGE  	(IO_CCR1.bit.CGE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CSR1,attr=IO,locate=0xF87
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CSTR:1;
        __BYTE	CITE:1;
        __BYTE	UDIE:1;
        __BYTE	CMPF:1;
        __BYTE	OVFF:1;
        __BYTE	UDFF:1;
        __BYTE	UDF:2;
    } bit;
} CSR1STR;

__IO_EXTENDED	  CSR1STR	IO_CSR1;
#define	_csr1		(IO_CSR1)
#define	CSR1		(IO_CSR1.byte)
#define	CSR1_CSTR  	(IO_CSR1.bit.CSTR)
#define	CSR1_CITE  	(IO_CSR1.bit.CITE)
#define	CSR1_UDIE  	(IO_CSR1.bit.UDIE)
#define	CSR1_CMPF  	(IO_CSR1.bit.CMPF)
#define	CSR1_OVFF  	(IO_CSR1.bit.OVFF)
#define	CSR1_UDFF  	(IO_CSR1.bit.UDFF)
#define	CSR1_UDF  	(IO_CSR1.bit.UDF)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MSCH45,attr=IO,locate=0xF8A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CYC5:1;
        __BYTE	CYC4:1;
        __BYTE	PLS5:1;
        __BYTE	PLS4:1;
        __BYTE	OVC5:1;
        __BYTE	OVC4:1;
        __BYTE	OVP5:1;
        __BYTE	OVP4:1;
    } bit;
} MSCH45STR;

__IO_EXTENDED	 const  MSCH45STR	IO_MSCH45;
#define	_msch45		(IO_MSCH45)
#define	MSCH45		(IO_MSCH45.byte)
#define	MSCH45_CYC5  	(IO_MSCH45.bit.CYC5)
#define	MSCH45_CYC4  	(IO_MSCH45.bit.CYC4)
#define	MSCH45_PLS5  	(IO_MSCH45.bit.PLS5)
#define	MSCH45_PLS4  	(IO_MSCH45.bit.PLS4)
#define	MSCH45_OVC5  	(IO_MSCH45.bit.OVC5)
#define	MSCH45_OVC4  	(IO_MSCH45.bit.OVC4)
#define	MSCH45_OVP5  	(IO_MSCH45.bit.OVP5)
#define	MSCH45_OVP4  	(IO_MSCH45.bit.OVP4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MSCL45,attr=IO,locate=0xF8B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	MSC5:1;
        __BYTE	MSC4:1;
    } bit;
} MSCL45STR;

__IO_EXTENDED	  MSCL45STR	IO_MSCL45;
#define	_mscl45		(IO_MSCL45)
#define	MSCL45		(IO_MSCL45.byte)
#define	MSCL45_MSC5  	(IO_MSCL45.bit.MSC5)
#define	MSCL45_MSC4  	(IO_MSCL45.bit.MSC4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MSCH67,attr=IO,locate=0xF8E
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CYC7:1;
        __BYTE	CYC6:1;
        __BYTE	PLS7:1;
        __BYTE	PLS6:1;
        __BYTE	OVC7:1;
        __BYTE	OVC6:1;
        __BYTE	OVP7:1;
        __BYTE	OVP6:1;
    } bit;
} MSCH67STR;

__IO_EXTENDED	 const  MSCH67STR	IO_MSCH67;
#define	_msch67		(IO_MSCH67)
#define	MSCH67		(IO_MSCH67.byte)
#define	MSCH67_CYC7  	(IO_MSCH67.bit.CYC7)
#define	MSCH67_CYC6  	(IO_MSCH67.bit.CYC6)
#define	MSCH67_PLS7  	(IO_MSCH67.bit.PLS7)
#define	MSCH67_PLS6  	(IO_MSCH67.bit.PLS6)
#define	MSCH67_OVC7  	(IO_MSCH67.bit.OVC7)
#define	MSCH67_OVC6  	(IO_MSCH67.bit.OVC6)
#define	MSCH67_OVP7  	(IO_MSCH67.bit.OVP7)
#define	MSCH67_OVP6  	(IO_MSCH67.bit.OVP6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MSCL67,attr=IO,locate=0xF8F
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	MSC7:1;
        __BYTE	MSC6:1;
    } bit;
} MSCL67STR;

__IO_EXTENDED	  MSCL67STR	IO_MSCL67;
#define	_mscl67		(IO_MSCL67)
#define	MSCL67		(IO_MSCL67.byte)
#define	MSCL67_MSC7  	(IO_MSCL67.bit.MSC7)
#define	MSCL67_MSC6  	(IO_MSCL67.bit.MSC6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCCP10,attr=IO,locate=0xF90
#endif

__IO_EXTENDED	__WORD	IO_OCCP10;
#define	_occp10		(IO_OCCP10)
#define	OCCP10	(_occp10)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCCP11,attr=IO,locate=0xF94
#endif

__IO_EXTENDED	__WORD	IO_OCCP11;
#define	_occp11		(IO_OCCP11)
#define	OCCP11	(_occp11)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCS1011,attr=IO,locate=0xF9A
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __BYTE	OCSH1011;
        __BYTE	OCSL1011;
    } byte;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	CMOD:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	OTD11:1;
        __HWORD	OTD10:1;
        __HWORD	IOP11:1;
        __HWORD	IOP10:1;
        __HWORD	IOE11:1;
        __HWORD	IOE10:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
        __HWORD	CST11:1;
        __HWORD	CST10:1;
    } bit;
} OCS1011STR;

__IO_EXTENDED	  OCS1011STR	IO_OCS1011;
#define	_ocs1011		(IO_OCS1011)
#define	OCS1011		(IO_OCS1011.hword)
#define	OCS1011_OCSH1011	(IO_OCS1011.byte.OCSH1011)
#define	OCS1011_OCSL1011	(IO_OCS1011.byte.OCSL1011)
#define	OCS1011_CMOD  	(IO_OCS1011.bit.CMOD)
#define	OCS1011_OTD11  	(IO_OCS1011.bit.OTD11)
#define	OCS1011_OTD10  	(IO_OCS1011.bit.OTD10)
#define	OCS1011_IOP11  	(IO_OCS1011.bit.IOP11)
#define	OCS1011_IOP10  	(IO_OCS1011.bit.IOP10)
#define	OCS1011_IOE11  	(IO_OCS1011.bit.IOE11)
#define	OCS1011_IOE10  	(IO_OCS1011.bit.IOE10)
#define	OCS1011_CST11  	(IO_OCS1011.bit.CST11)
#define	OCS1011_CST10  	(IO_OCS1011.bit.CST10)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCLS1011,attr=IO,locate=0xF9F
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	OLS11:1;
        __BYTE	OLS10:1;
        __BYTE	OMS11:1;
        __BYTE	OMS10:1;
    } bit;
} OCLS1011STR;

__IO_EXTENDED	  OCLS1011STR	IO_OCLS1011;
#define	_ocls1011		(IO_OCLS1011)
#define	OCLS1011		(IO_OCLS1011.byte)
#define	OCLS1011_OLS11  	(IO_OCLS1011.bit.OLS11)
#define	OCLS1011_OLS10  	(IO_OCLS1011.bit.OLS10)
#define	OCLS1011_OMS11  	(IO_OCLS1011.bit.OMS11)
#define	OCLS1011_OMS10  	(IO_OCLS1011.bit.OMS10)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FT5,attr=IO,locate=0xFA0
#endif

__IO_EXTENDED	struct
{
    __WORD	IO_CPCLR5;
    __WORD	IO_TCDT5;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	TCCSH5;
            __BYTE	TCCSL5;
        } byte;
        struct
        {
            __HWORD	ECKE:1;
            __HWORD	RESV81:1;
            __HWORD	RESV82:1;
            __HWORD	RESV83:1;
            __HWORD	RESV84:1;
            __HWORD	RESV85:1;
            __HWORD	ICLR:1;
            __HWORD	ICRE:1;
            __HWORD	RESV88:1;
            __HWORD	STOP:1;
            __HWORD	RESV810:1;
            __HWORD	SCLR:1;
            __HWORD	CLK:4;
        } bit;
    } IO_TCCS5;
} IO_FT5;

#define	FT5_CPCLR5	(IO_FT5.IO_CPCLR5)
#define	FT5_TCDT5	(IO_FT5.IO_TCDT5)
#define	FT5_TCCS5			(IO_FT5.IO_TCCS5.hword)
#define	FT5_TCCS5_TCCSH5    	(IO_FT5.IO_TCCS5.byte.TCCSH5)
#define	FT5_TCCS5_TCCSL5    	(IO_FT5.IO_TCCS5.byte.TCCSL5)
#define	FT5_TCCS5_ECKE    	(IO_FT5.IO_TCCS5.bit.ECKE)
#define	FT5_TCCS5_ICLR    	(IO_FT5.IO_TCCS5.bit.ICLR)
#define	FT5_TCCS5_ICRE    	(IO_FT5.IO_TCCS5.bit.ICRE)
#define	FT5_TCCS5_STOP    	(IO_FT5.IO_TCCS5.bit.STOP)
#define	FT5_TCCS5_SCLR    	(IO_FT5.IO_TCCS5.bit.SCLR)
#define	FT5_TCCS5_CLK    	(IO_FT5.IO_TCCS5.bit.CLK)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IPCP4,attr=IO,locate=0xFD0
#endif

__IO_EXTENDED	const __WORD	IO_IPCP4;
#define	_ipcp4		(IO_IPCP4)
#define	IPCP4	(_ipcp4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IPCP5,attr=IO,locate=0xFD4
#endif

__IO_EXTENDED	const __WORD	IO_IPCP5;
#define	_ipcp5		(IO_IPCP5)
#define	IPCP5	(_ipcp5)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_LSYNS1,attr=IO,locate=0xFDA
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	LSYN9:2;
        __BYTE	LSYN8:2;
        __BYTE	LSYN7:1;
        __BYTE	LSYN6:1;
        __BYTE	LSYN5:1;
        __BYTE	LSYN4:1;
    } bit;
} LSYNS1STR;

__IO_EXTENDED	  LSYNS1STR	IO_LSYNS1;
#define	_lsyns1		(IO_LSYNS1)
#define	LSYNS1		(IO_LSYNS1.byte)
#define	LSYNS1_LSYN9  	(IO_LSYNS1.bit.LSYN9)
#define	LSYNS1_LSYN8  	(IO_LSYNS1.bit.LSYN8)
#define	LSYNS1_LSYN7  	(IO_LSYNS1.bit.LSYN7)
#define	LSYNS1_LSYN6  	(IO_LSYNS1.bit.LSYN6)
#define	LSYNS1_LSYN5  	(IO_LSYNS1.bit.LSYN5)
#define	LSYNS1_LSYN4  	(IO_LSYNS1.bit.LSYN4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICS45,attr=IO,locate=0xFDB
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	ICP5:1;
        __BYTE	ICP4:1;
        __BYTE	ICE5:1;
        __BYTE	ICE4:1;
        __BYTE	EG5:2;
        __BYTE	EG4:2;
    } bit;
} ICS45STR;

__IO_EXTENDED	  ICS45STR	IO_ICS45;
#define	_ics45		(IO_ICS45)
#define	ICS45		(IO_ICS45.byte)
#define	ICS45_ICP5  	(IO_ICS45.bit.ICP5)
#define	ICS45_ICP4  	(IO_ICS45.bit.ICP4)
#define	ICS45_ICE5  	(IO_ICS45.bit.ICE5)
#define	ICS45_ICE4  	(IO_ICS45.bit.ICE4)
#define	ICS45_EG5  	(IO_ICS45.bit.EG5)
#define	ICS45_EG4  	(IO_ICS45.bit.EG4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IPCP6,attr=IO,locate=0xFDC
#endif

__IO_EXTENDED	const __WORD	IO_IPCP6;
#define	_ipcp6		(IO_IPCP6)
#define	IPCP6	(_ipcp6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IPCP7,attr=IO,locate=0xFE0
#endif

__IO_EXTENDED	const __WORD	IO_IPCP7;
#define	_ipcp7		(IO_IPCP7)
#define	IPCP7	(_ipcp7)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICS67,attr=IO,locate=0xFE7
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	ICP7:1;
        __BYTE	ICP6:1;
        __BYTE	ICE7:1;
        __BYTE	ICE6:1;
        __BYTE	EG7:2;
        __BYTE	EG6:2;
    } bit;
} ICS67STR;

__IO_EXTENDED	  ICS67STR	IO_ICS67;
#define	_ics67		(IO_ICS67)
#define	ICS67		(IO_ICS67.byte)
#define	ICS67_ICP7  	(IO_ICS67.bit.ICP7)
#define	ICS67_ICP6  	(IO_ICS67.bit.ICP6)
#define	ICS67_ICE7  	(IO_ICS67.bit.ICE7)
#define	ICS67_ICE6  	(IO_ICS67.bit.ICE6)
#define	ICS67_EG7  	(IO_ICS67.bit.EG7)
#define	ICS67_EG6  	(IO_ICS67.bit.EG6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IPCP8,attr=IO,locate=0xFE8
#endif

__IO_EXTENDED	const __WORD	IO_IPCP8;
#define	_ipcp8		(IO_IPCP8)
#define	IPCP8	(_ipcp8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IPCP9,attr=IO,locate=0xFEC
#endif

__IO_EXTENDED	const __WORD	IO_IPCP9;
#define	_ipcp9		(IO_IPCP9)
#define	IPCP9	(_ipcp9)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICS89,attr=IO,locate=0xFF3
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	ICP9:1;
        __BYTE	ICP8:1;
        __BYTE	ICE9:1;
        __BYTE	ICE8:1;
        __BYTE	EG9:2;
        __BYTE	EG8:2;
    } bit;
} ICS89STR;

__IO_EXTENDED	  ICS89STR	IO_ICS89;
#define	_ics89		(IO_ICS89)
#define	ICS89		(IO_ICS89.byte)
#define	ICS89_ICP9  	(IO_ICS89.bit.ICP9)
#define	ICS89_ICP8  	(IO_ICS89.bit.ICP8)
#define	ICS89_ICE9  	(IO_ICS89.bit.ICE9)
#define	ICS89_ICE8  	(IO_ICS89.bit.ICE8)
#define	ICS89_EG9  	(IO_ICS89.bit.EG9)
#define	ICS89_EG8  	(IO_ICS89.bit.EG8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MSCY8,attr=IO,locate=0xFF4
#endif

__IO_EXTENDED	const __WORD	IO_MSCY8;
#define	_mscy8		(IO_MSCY8)
#define	MSCY8	(_mscy8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MSCY9,attr=IO,locate=0xFF8
#endif

__IO_EXTENDED	const __WORD	IO_MSCY9;
#define	_mscy9		(IO_MSCY9)
#define	MSCY9	(_mscy9)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MSCH89,attr=IO,locate=0xFFE
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CYC9:1;
        __BYTE	CYC8:1;
        __BYTE	PLS9:1;
        __BYTE	PLS8:1;
        __BYTE	OVC9:1;
        __BYTE	OVC8:1;
        __BYTE	OVP9:1;
        __BYTE	OVP8:1;
    } bit;
} MSCH89STR;

__IO_EXTENDED	 const  MSCH89STR	IO_MSCH89;
#define	_msch89		(IO_MSCH89)
#define	MSCH89		(IO_MSCH89.byte)
#define	MSCH89_CYC9  	(IO_MSCH89.bit.CYC9)
#define	MSCH89_CYC8  	(IO_MSCH89.bit.CYC8)
#define	MSCH89_PLS9  	(IO_MSCH89.bit.PLS9)
#define	MSCH89_PLS8  	(IO_MSCH89.bit.PLS8)
#define	MSCH89_OVC9  	(IO_MSCH89.bit.OVC9)
#define	MSCH89_OVC8  	(IO_MSCH89.bit.OVC8)
#define	MSCH89_OVP9  	(IO_MSCH89.bit.OVP9)
#define	MSCH89_OVP8  	(IO_MSCH89.bit.OVP8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MSCL89,attr=IO,locate=0xFFF
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	MSC9:1;
        __BYTE	MSC8:1;
    } bit;
} MSCL89STR;

__IO_EXTENDED	  MSCL89STR	IO_MSCL89;
#define	_mscl89		(IO_MSCL89)
#define	MSCL89		(IO_MSCL89.byte)
#define	MSCL89_MSC9  	(IO_MSCL89.bit.MSC9)
#define	MSCL89_MSC8  	(IO_MSCL89.bit.MSC8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_SACR,attr=IO,locate=0x1000
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	M:1;
    } bit;
} SACRSTR;

__IO_EXTENDED	  SACRSTR	IO_SACR;
#define	_sacr		(IO_SACR)
#define	SACR		(IO_SACR.byte)
#define	SACR_M  	(IO_SACR.bit.M)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PICD,attr=IO,locate=0x1001
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	PDIV:4;
    } bit;
} PICDSTR;

__IO_EXTENDED	  PICDSTR	IO_PICD;
#define	_picd		(IO_PICD)
#define	PICD		(IO_PICD.byte)
#define	PICD_PDIV  	(IO_PICD.bit.PDIV)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CRCCR,attr=IO,locate=0x1133
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	FXOR:1;
        __BYTE	CRCLSF:1;
        __BYTE	CRCLTE:1;
        __BYTE	LSBFST:1;
        __BYTE	LTLEND:1;
        __BYTE	CRC32:1;
        __BYTE	INIT:1;
    } bit;
} CRCCRSTR;

__IO_EXTENDED	  CRCCRSTR	IO_CRCCR;
#define	_crccr		(IO_CRCCR)
#define	CRCCR		(IO_CRCCR.byte)
#define	CRCCR_FXOR  	(IO_CRCCR.bit.FXOR)
#define	CRCCR_CRCLSF  	(IO_CRCCR.bit.CRCLSF)
#define	CRCCR_CRCLTE  	(IO_CRCCR.bit.CRCLTE)
#define	CRCCR_LSBFST  	(IO_CRCCR.bit.LSBFST)
#define	CRCCR_LTLEND  	(IO_CRCCR.bit.LTLEND)
#define	CRCCR_CRC32  	(IO_CRCCR.bit.CRC32)
#define	CRCCR_INIT  	(IO_CRCCR.bit.INIT)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CRCINIT,attr=IO,locate=0x1134
#endif

__IO_EXTENDED	union
{
    __WORD	word;
    struct
    {
        __HWORD	CRCINITH;
        __HWORD	CRCINITL;
    } hword;
    struct
    {
        __BYTE	CRCINITHH;
        __BYTE	CRCINITHL;
        __BYTE	CRCINITLH;
        __BYTE	CRCINITLL;
    } byte;
} IO_CRCINIT;

#define	CRCINIT		(IO_CRCINIT.word)
#define	CRCINIT_CRCINITH	(IO_CRCINIT.hword.CRCINITH)
#define	CRCINIT_CRCINITL	(IO_CRCINIT.hword.CRCINITL)
#define	CRCINIT_CRCINITHH	(IO_CRCINIT.byte.CRCINITHH)
#define	CRCINIT_CRCINITHL	(IO_CRCINIT.byte.CRCINITHL)
#define	CRCINIT_CRCINITLH	(IO_CRCINIT.byte.CRCINITLH)
#define	CRCINIT_CRCINITLL	(IO_CRCINIT.byte.CRCINITLL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CRCIN,attr=IO,locate=0x1138
#endif

__IO_EXTENDED	union
{
    __WORD	word;
    struct
    {
        __HWORD	CRCINH;
        __HWORD	CRCINL;
    } hword;
    struct
    {
        __BYTE	CRCINHH;
        __BYTE	CRCINHL;
        __BYTE	CRCINLH;
        __BYTE	CRCINLL;
    } byte;
} IO_CRCIN;

#define	CRCIN		(IO_CRCIN.word)
#define	CRCIN_CRCINH	(IO_CRCIN.hword.CRCINH)
#define	CRCIN_CRCINL	(IO_CRCIN.hword.CRCINL)
#define	CRCIN_CRCINHH	(IO_CRCIN.byte.CRCINHH)
#define	CRCIN_CRCINHL	(IO_CRCIN.byte.CRCINHL)
#define	CRCIN_CRCINLH	(IO_CRCIN.byte.CRCINLH)
#define	CRCIN_CRCINLL	(IO_CRCIN.byte.CRCINLL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CRCR,attr=IO,locate=0x113C
#endif

__IO_EXTENDED	const	union
{
    __WORD	word;
    struct
    {
        __HWORD	CRCRH;
        __HWORD	CRCRL;
    } hword;
    struct
    {
        __BYTE	CRCRHH;
        __BYTE	CRCRHL;
        __BYTE	CRCRLH;
        __BYTE	CRCRLL;
    } byte;
} IO_CRCR;

#define	CRCR		(IO_CRCR.word)
#define	CRCR_CRCRH	(IO_CRCR.hword.CRCRH)
#define	CRCR_CRCRL	(IO_CRCR.hword.CRCRL)
#define	CRCR_CRCRHH	(IO_CRCR.byte.CRCRHH)
#define	CRCR_CRCRHL	(IO_CRCR.byte.CRCRHL)
#define	CRCR_CRCRLH	(IO_CRCR.byte.CRCRLH)
#define	CRCR_CRCRLL	(IO_CRCR.byte.CRCRLL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TCGS,attr=IO,locate=0x1200
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	GSTOP:1;
        __BYTE	GSCLR:1;
    } bit;
} TCGSSTR;

__IO_EXTENDED	  TCGSSTR	IO_TCGS;
#define	_tcgs		(IO_TCGS)
#define	TCGS		(IO_TCGS.byte)
#define	TCGS_GSTOP  	(IO_TCGS.bit.GSTOP)
#define	TCGS_GSCLR  	(IO_TCGS.bit.GSCLR)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TCGSE,attr=IO,locate=0x1203
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	FRT2:1;
        __BYTE	FRT1:1;
        __BYTE	FRT0:1;
    } bit;
} TCGSESTR;

__IO_EXTENDED	  TCGSESTR	IO_TCGSE;
#define	_tcgse		(IO_TCGSE)
#define	TCGSE		(IO_TCGSE.byte)
#define	TCGSE_FRT2  	(IO_TCGSE.bit.FRT2)
#define	TCGSE_FRT1  	(IO_TCGSE.bit.FRT1)
#define	TCGSE_FRT0  	(IO_TCGSE.bit.FRT0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FT0,attr=IO,locate=0x1204
#endif


typedef struct
{
    __HWORD	IO_CPCLR0;
    __HWORD	IO_TCDT0;
    union
    {
        __WORD	word;
        struct
        {
            __WORD	ECKE:1;
            __WORD	IRQZF:1;
            __WORD	IRQZE:1;
            __WORD	MSI:3;
            __WORD	ICLR:1;
            __WORD	ICRE:1;
            __WORD	BFE:1;
            __WORD	STOP:1;
            __WORD	MODE:1;
            __WORD	SCLR:1;
            __WORD	CLK:4;
            __WORD	RESV411:1;
            __WORD	RESV412:1;
            __WORD	RESV413:1;
            __WORD	RESV414:1;
            __WORD	MODE2:1;
            __WORD	MSI_:3;
            __WORD	RESV417:1;
            __WORD	RESV418:1;
            __WORD	RESV419:1;
            __WORD	RESV420:1;
            __WORD	RESV421:1;
            __WORD	RESV422:1;
            __WORD	RESV423:1;
            __WORD	RESV424:1;
        } bit;
    } IO_TCCS0;
} IO_FT0_STR;

__IO_EXTENDED  IO_FT0_STR   IO_FT0;
#define	FT0_CPCLR0	(IO_FT0.IO_CPCLR0)
#define	FT0_TCDT0	(IO_FT0.IO_TCDT0)
#define	FT0_TCCS0			(IO_FT0.IO_TCCS0.word)
#define	FT0_TCCS0_ECKE    	(IO_FT0.IO_TCCS0.bit.ECKE)
#define	FT0_TCCS0_IRQZF    	(IO_FT0.IO_TCCS0.bit.IRQZF)
#define	FT0_TCCS0_IRQZE    	(IO_FT0.IO_TCCS0.bit.IRQZE)
#define	FT0_TCCS0_MSI    	(IO_FT0.IO_TCCS0.bit.MSI)
#define	FT0_TCCS0_ICLR    	(IO_FT0.IO_TCCS0.bit.ICLR)
#define	FT0_TCCS0_ICRE    	(IO_FT0.IO_TCCS0.bit.ICRE)
#define	FT0_TCCS0_BFE    	(IO_FT0.IO_TCCS0.bit.BFE)
#define	FT0_TCCS0_STOP    	(IO_FT0.IO_TCCS0.bit.STOP)
#define	FT0_TCCS0_MODE    	(IO_FT0.IO_TCCS0.bit.MODE)
#define	FT0_TCCS0_SCLR    	(IO_FT0.IO_TCCS0.bit.SCLR)
#define	FT0_TCCS0_CLK    	(IO_FT0.IO_TCCS0.bit.CLK)
#define	FT0_TCCS0_MODE2    	(IO_FT0.IO_TCCS0.bit.MODE2)
#define	FT0_TCCS0_MSI_    	(IO_FT0.IO_TCCS0.bit.MSI_)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FT1,attr=IO,locate=0x120C
#endif


typedef struct
{
    __HWORD	IO_CPCLR1;
    __HWORD	IO_TCDT1;
    union
    {
        __WORD	word;
        struct
        {
            __WORD	ECKE:1;
            __WORD	IRQZF:1;
            __WORD	IRQZE:1;
            __WORD	MSI:3;
            __WORD	ICLR:1;
            __WORD	ICRE:1;
            __WORD	BFE:1;
            __WORD	STOP:1;
            __WORD	MODE:1;
            __WORD	SCLR:1;
            __WORD	CLK:4;
            __WORD	RESV411:1;
            __WORD	RESV412:1;
            __WORD	RESV413:1;
            __WORD	RESV414:1;
            __WORD	MODE2:1;
            __WORD	MSI_:3;
            __WORD	RESV417:1;
            __WORD	RESV418:1;
            __WORD	RESV419:1;
            __WORD	RESV420:1;
            __WORD	RESV421:1;
            __WORD	RESV422:1;
            __WORD	RESV423:1;
            __WORD	RESV424:1;
        } bit;
    } IO_TCCS1;
} IO_FT1_STR;

__IO_EXTENDED IO_FT1_STR  IO_FT1;
#define	FT1_CPCLR1	(IO_FT1.IO_CPCLR1)
#define	FT1_TCDT1	(IO_FT1.IO_TCDT1)
#define	FT1_TCCS1			(IO_FT1.IO_TCCS1.word)
#define	FT1_TCCS1_ECKE    	(IO_FT1.IO_TCCS1.bit.ECKE)
#define	FT1_TCCS1_IRQZF    	(IO_FT1.IO_TCCS1.bit.IRQZF)
#define	FT1_TCCS1_IRQZE    	(IO_FT1.IO_TCCS1.bit.IRQZE)
#define	FT1_TCCS1_MSI    	(IO_FT1.IO_TCCS1.bit.MSI)
#define	FT1_TCCS1_ICLR    	(IO_FT1.IO_TCCS1.bit.ICLR)
#define	FT1_TCCS1_ICRE    	(IO_FT1.IO_TCCS1.bit.ICRE)
#define	FT1_TCCS1_BFE    	(IO_FT1.IO_TCCS1.bit.BFE)
#define	FT1_TCCS1_STOP    	(IO_FT1.IO_TCCS1.bit.STOP)
#define	FT1_TCCS1_MODE    	(IO_FT1.IO_TCCS1.bit.MODE)
#define	FT1_TCCS1_SCLR    	(IO_FT1.IO_TCCS1.bit.SCLR)
#define	FT1_TCCS1_CLK    	(IO_FT1.IO_TCCS1.bit.CLK)
#define	FT1_TCCS1_MODE2    	(IO_FT1.IO_TCCS1.bit.MODE2)
#define	FT1_TCCS1_MSI_    	(IO_FT1.IO_TCCS1.bit.MSI_)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FT2,attr=IO,locate=0x1214
#endif


typedef struct
{
    __HWORD	IO_CPCLR2;
    __HWORD	IO_TCDT2;
    union
    {
        __WORD	word;
        struct
        {
            __WORD	ECKE:1;
            __WORD	IRQZF:1;
            __WORD	IRQZE:1;
            __WORD	MSI:3;
            __WORD	ICLR:1;
            __WORD	ICRE:1;
            __WORD	BFE:1;
            __WORD	STOP:1;
            __WORD	MODE:1;
            __WORD	SCLR:1;
            __WORD	CLK:4;
            __WORD	RESV411:1;
            __WORD	RESV412:1;
            __WORD	RESV413:1;
            __WORD	RESV414:1;
            __WORD	MODE2:1;
            __WORD	MSI_:3;
            __WORD	RESV417:1;
            __WORD	RESV418:1;
            __WORD	RESV419:1;
            __WORD	RESV420:1;
            __WORD	RESV421:1;
            __WORD	RESV422:1;
            __WORD	RESV423:1;
            __WORD	RESV424:1;
        } bit;
    } IO_TCCS2;
} IO_FT2_STR;
__IO_EXTENDED  	IO_FT2_STR	IO_FT2;
#define	FT2_CPCLR2	(IO_FT2.IO_CPCLR2)
#define	FT2_TCDT2	(IO_FT2.IO_TCDT2)
#define	FT2_TCCS2			(IO_FT2.IO_TCCS2.word)
#define	FT2_TCCS2_ECKE    	(IO_FT2.IO_TCCS2.bit.ECKE)
#define	FT2_TCCS2_IRQZF    	(IO_FT2.IO_TCCS2.bit.IRQZF)
#define	FT2_TCCS2_IRQZE    	(IO_FT2.IO_TCCS2.bit.IRQZE)
#define	FT2_TCCS2_MSI    	(IO_FT2.IO_TCCS2.bit.MSI)
#define	FT2_TCCS2_ICLR    	(IO_FT2.IO_TCCS2.bit.ICLR)
#define	FT2_TCCS2_ICRE    	(IO_FT2.IO_TCCS2.bit.ICRE)
#define	FT2_TCCS2_BFE    	(IO_FT2.IO_TCCS2.bit.BFE)
#define	FT2_TCCS2_STOP    	(IO_FT2.IO_TCCS2.bit.STOP)
#define	FT2_TCCS2_MODE    	(IO_FT2.IO_TCCS2.bit.MODE)
#define	FT2_TCCS2_SCLR    	(IO_FT2.IO_TCCS2.bit.SCLR)
#define	FT2_TCCS2_CLK    	(IO_FT2.IO_TCCS2.bit.CLK)
#define	FT2_TCCS2_MODE2    	(IO_FT2.IO_TCCS2.bit.MODE2)
#define	FT2_TCCS2_MSI_    	(IO_FT2.IO_TCCS2.bit.MSI_)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FRS0,attr=IO,locate=0x1234
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	OS5:2;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	OS4:2;
        __WORD	RESV14:1;
        __WORD	RESV15:1;
        __WORD	OS3:2;
        __WORD	RESV17:1;
        __WORD	RESV18:1;
        __WORD	OS2:2;
        __WORD	RESV20:1;
        __WORD	RESV21:1;
        __WORD	OS1:2;
        __WORD	RESV23:1;
        __WORD	RESV24:1;
        __WORD	OS0:2;
    } bit;
} FRS0STR;

__IO_EXTENDED	  FRS0STR	IO_FRS0;
#define	_frs0		(IO_FRS0)
#define	FRS0		(IO_FRS0.word)
#define	FRS0_OS5  	(IO_FRS0.bit.OS5)
#define	FRS0_OS4  	(IO_FRS0.bit.OS4)
#define	FRS0_OS3  	(IO_FRS0.bit.OS3)
#define	FRS0_OS2  	(IO_FRS0.bit.OS2)
#define	FRS0_OS1  	(IO_FRS0.bit.OS1)
#define	FRS0_OS0  	(IO_FRS0.bit.OS0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FRS1,attr=IO,locate=0x1238
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	RESV14:1;
        __WORD	RESV15:1;
        __WORD	RESV16:1;
        __WORD	RESV17:1;
        __WORD	IS3:2;
        __WORD	RESV19:1;
        __WORD	RESV20:1;
        __WORD	IS2:2;
        __WORD	RESV22:1;
        __WORD	RESV23:1;
        __WORD	IS1:2;
        __WORD	RESV25:1;
        __WORD	RESV26:1;
        __WORD	IS0:2;
    } bit;
} FRS1STR;

__IO_EXTENDED	  FRS1STR	IO_FRS1;
#define	_frs1		(IO_FRS1)
#define	FRS1		(IO_FRS1.word)
#define	FRS1_IS3  	(IO_FRS1.bit.IS3)
#define	FRS1_IS2  	(IO_FRS1.bit.IS2)
#define	FRS1_IS1  	(IO_FRS1.bit.IS1)
#define	FRS1_IS0  	(IO_FRS1.bit.IS0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FRS2,attr=IO,locate=0x123C
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	AS7:2;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AS6:2;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	AS5:2;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	AS4:2;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	AS3:2;
        __WORD	RESV15:1;
        __WORD	RESV16:1;
        __WORD	AS2:2;
        __WORD	RESV18:1;
        __WORD	RESV19:1;
        __WORD	AS1:2;
        __WORD	RESV21:1;
        __WORD	RESV22:1;
        __WORD	AS0:2;
    } bit;
} FRS2STR;

__IO_EXTENDED	  FRS2STR	IO_FRS2;
#define	_frs2		(IO_FRS2)
#define	FRS2		(IO_FRS2.word)
#define	FRS2_AS7  	(IO_FRS2.bit.AS7)
#define	FRS2_AS6  	(IO_FRS2.bit.AS6)
#define	FRS2_AS5  	(IO_FRS2.bit.AS5)
#define	FRS2_AS4  	(IO_FRS2.bit.AS4)
#define	FRS2_AS3  	(IO_FRS2.bit.AS3)
#define	FRS2_AS2  	(IO_FRS2.bit.AS2)
#define	FRS2_AS1  	(IO_FRS2.bit.AS1)
#define	FRS2_AS0  	(IO_FRS2.bit.AS0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FRS3,attr=IO,locate=0x1240
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	AS15:2;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AS14:2;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	AS13:2;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	AS12:2;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	AS11:2;
        __WORD	RESV15:1;
        __WORD	RESV16:1;
        __WORD	AS10:2;
        __WORD	RESV18:1;
        __WORD	RESV19:1;
        __WORD	AS9:2;
        __WORD	RESV21:1;
        __WORD	RESV22:1;
        __WORD	AS8:2;
    } bit;
} FRS3STR;

__IO_EXTENDED	  FRS3STR	IO_FRS3;
#define	_frs3		(IO_FRS3)
#define	FRS3		(IO_FRS3.word)
#define	FRS3_AS15  	(IO_FRS3.bit.AS15)
#define	FRS3_AS14  	(IO_FRS3.bit.AS14)
#define	FRS3_AS13  	(IO_FRS3.bit.AS13)
#define	FRS3_AS12  	(IO_FRS3.bit.AS12)
#define	FRS3_AS11  	(IO_FRS3.bit.AS11)
#define	FRS3_AS10  	(IO_FRS3.bit.AS10)
#define	FRS3_AS9  	(IO_FRS3.bit.AS9)
#define	FRS3_AS8  	(IO_FRS3.bit.AS8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FRS4,attr=IO,locate=0x1244
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	AS23:2;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AS22:2;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	AS21:2;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	AS20:2;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	AS19:2;
        __WORD	RESV15:1;
        __WORD	RESV16:1;
        __WORD	AS18:2;
        __WORD	RESV18:1;
        __WORD	RESV19:1;
        __WORD	AS17:2;
        __WORD	RESV21:1;
        __WORD	RESV22:1;
        __WORD	AS16:2;
    } bit;
} FRS4STR;

__IO_EXTENDED	  FRS4STR	IO_FRS4;
#define	_frs4		(IO_FRS4)
#define	FRS4		(IO_FRS4.word)
#define	FRS4_AS23  	(IO_FRS4.bit.AS23)
#define	FRS4_AS22  	(IO_FRS4.bit.AS22)
#define	FRS4_AS21  	(IO_FRS4.bit.AS21)
#define	FRS4_AS20  	(IO_FRS4.bit.AS20)
#define	FRS4_AS19  	(IO_FRS4.bit.AS19)
#define	FRS4_AS18  	(IO_FRS4.bit.AS18)
#define	FRS4_AS17  	(IO_FRS4.bit.AS17)
#define	FRS4_AS16  	(IO_FRS4.bit.AS16)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCCP0,attr=IO,locate=0x124C
#endif

__IO_EXTENDED	__HWORD	IO_OCCP0;
#define	_occp0		(IO_OCCP0)
#define	OCCP0	(_occp0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCCP1,attr=IO,locate=0x124E
#endif

__IO_EXTENDED	__HWORD	IO_OCCP1;
#define	_occp1		(IO_OCCP1)
#define	OCCP1	(_occp1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCS01,attr=IO,locate=0x1250
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	BTS1:1;
        __HWORD	BTS0:1;
        __HWORD	CMOD:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	OTD1:1;
        __HWORD	OTD0:1;
        __HWORD	IOP1:1;
        __HWORD	IOP0:1;
        __HWORD	IOE1:1;
        __HWORD	IOE0:1;
        __HWORD	BUF1:1;
        __HWORD	BUF0:1;
        __HWORD	CST1:1;
        __HWORD	CST0:1;
    } bit;
} OCS01STR;

__IO_EXTENDED	  OCS01STR	IO_OCS01;
#define	_ocs01		(IO_OCS01)
#define	OCS01		(IO_OCS01.hword)
#define	OCS01_BTS1  	(IO_OCS01.bit.BTS1)
#define	OCS01_BTS0  	(IO_OCS01.bit.BTS0)
#define	OCS01_CMOD  	(IO_OCS01.bit.CMOD)
#define	OCS01_OTD1  	(IO_OCS01.bit.OTD1)
#define	OCS01_OTD0  	(IO_OCS01.bit.OTD0)
#define	OCS01_IOP1  	(IO_OCS01.bit.IOP1)
#define	OCS01_IOP0  	(IO_OCS01.bit.IOP0)
#define	OCS01_IOE1  	(IO_OCS01.bit.IOE1)
#define	OCS01_IOE0  	(IO_OCS01.bit.IOE0)
#define	OCS01_BUF1  	(IO_OCS01.bit.BUF1)
#define	OCS01_BUF0  	(IO_OCS01.bit.BUF0)
#define	OCS01_CST1  	(IO_OCS01.bit.CST1)
#define	OCS01_CST0  	(IO_OCS01.bit.CST0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCMOD01,attr=IO,locate=0x1253
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	MOD1:1;
        __BYTE	MOD0:1;
    } bit;
} OCMOD01STR;

__IO_EXTENDED	  OCMOD01STR	IO_OCMOD01;
#define	_ocmod01		(IO_OCMOD01)
#define	OCMOD01		(IO_OCMOD01.byte)
#define	OCMOD01_MOD1  	(IO_OCMOD01.bit.MOD1)
#define	OCMOD01_MOD0  	(IO_OCMOD01.bit.MOD0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCCP2,attr=IO,locate=0x1254
#endif

__IO_EXTENDED	__HWORD	IO_OCCP2;
#define	_occp2		(IO_OCCP2)
#define	OCCP2	(_occp2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCCP3,attr=IO,locate=0x1256
#endif

__IO_EXTENDED	__HWORD	IO_OCCP3;
#define	_occp3		(IO_OCCP3)
#define	OCCP3	(_occp3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCS23,attr=IO,locate=0x1258
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	BTS1:1;
        __HWORD	BTS0:1;
        __HWORD	CMOD:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	OTD1:1;
        __HWORD	OTD0:1;
        __HWORD	IOP1:1;
        __HWORD	IOP0:1;
        __HWORD	IOE1:1;
        __HWORD	IOE0:1;
        __HWORD	BUF1:1;
        __HWORD	BUF0:1;
        __HWORD	CST1:1;
        __HWORD	CST0:1;
    } bit;
} OCS23STR;

__IO_EXTENDED	  OCS23STR	IO_OCS23;
#define	_ocs23		(IO_OCS23)
#define	OCS23		(IO_OCS23.hword)
#define	OCS23_BTS1  	(IO_OCS23.bit.BTS1)
#define	OCS23_BTS0  	(IO_OCS23.bit.BTS0)
#define	OCS23_CMOD  	(IO_OCS23.bit.CMOD)
#define	OCS23_OTD1  	(IO_OCS23.bit.OTD1)
#define	OCS23_OTD0  	(IO_OCS23.bit.OTD0)
#define	OCS23_IOP1  	(IO_OCS23.bit.IOP1)
#define	OCS23_IOP0  	(IO_OCS23.bit.IOP0)
#define	OCS23_IOE1  	(IO_OCS23.bit.IOE1)
#define	OCS23_IOE0  	(IO_OCS23.bit.IOE0)
#define	OCS23_BUF1  	(IO_OCS23.bit.BUF1)
#define	OCS23_BUF0  	(IO_OCS23.bit.BUF0)
#define	OCS23_CST1  	(IO_OCS23.bit.CST1)
#define	OCS23_CST0  	(IO_OCS23.bit.CST0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCMOD23,attr=IO,locate=0x125B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	MOD1:1;
        __BYTE	MOD0:1;
    } bit;
} OCMOD23STR;

__IO_EXTENDED	  OCMOD23STR	IO_OCMOD23;
#define	_ocmod23		(IO_OCMOD23)
#define	OCMOD23		(IO_OCMOD23.byte)
#define	OCMOD23_MOD1  	(IO_OCMOD23.bit.MOD1)
#define	OCMOD23_MOD0  	(IO_OCMOD23.bit.MOD0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCCP4,attr=IO,locate=0x125C
#endif

__IO_EXTENDED	__HWORD	IO_OCCP4;
#define	_occp4		(IO_OCCP4)
#define	OCCP4	(_occp4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCCP5,attr=IO,locate=0x125E
#endif

__IO_EXTENDED	__HWORD	IO_OCCP5;
#define	_occp5		(IO_OCCP5)
#define	OCCP5	(_occp5)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCS45,attr=IO,locate=0x1260
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	BTS1:1;
        __HWORD	BTS0:1;
        __HWORD	CMOD:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	OTD1:1;
        __HWORD	OTD0:1;
        __HWORD	IOP1:1;
        __HWORD	IOP0:1;
        __HWORD	IOE1:1;
        __HWORD	IOE0:1;
        __HWORD	BUF1:1;
        __HWORD	BUF0:1;
        __HWORD	CST1:1;
        __HWORD	CST0:1;
    } bit;
} OCS45STR;

__IO_EXTENDED	  OCS45STR	IO_OCS45;
#define	_ocs45		(IO_OCS45)
#define	OCS45		(IO_OCS45.hword)
#define	OCS45_BTS1  	(IO_OCS45.bit.BTS1)
#define	OCS45_BTS0  	(IO_OCS45.bit.BTS0)
#define	OCS45_CMOD  	(IO_OCS45.bit.CMOD)
#define	OCS45_OTD1  	(IO_OCS45.bit.OTD1)
#define	OCS45_OTD0  	(IO_OCS45.bit.OTD0)
#define	OCS45_IOP1  	(IO_OCS45.bit.IOP1)
#define	OCS45_IOP0  	(IO_OCS45.bit.IOP0)
#define	OCS45_IOE1  	(IO_OCS45.bit.IOE1)
#define	OCS45_IOE0  	(IO_OCS45.bit.IOE0)
#define	OCS45_BUF1  	(IO_OCS45.bit.BUF1)
#define	OCS45_BUF0  	(IO_OCS45.bit.BUF0)
#define	OCS45_CST1  	(IO_OCS45.bit.CST1)
#define	OCS45_CST0  	(IO_OCS45.bit.CST0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_OCMOD45,attr=IO,locate=0x1263
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	MOD1:1;
        __BYTE	MOD0:1;
    } bit;
} OCMOD45STR;

__IO_EXTENDED	  OCMOD45STR	IO_OCMOD45;
#define	_ocmod45		(IO_OCMOD45)
#define	OCMOD45		(IO_OCMOD45.byte)
#define	OCMOD45_MOD1  	(IO_OCMOD45.bit.MOD1)
#define	OCMOD45_MOD0  	(IO_OCMOD45.bit.MOD0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IPCP0,attr=IO,locate=0x127C
#endif

__IO_EXTENDED	const __HWORD	IO_IPCP0;
#define	_ipcp0		(IO_IPCP0)
#define	IPCP0	(_ipcp0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IPCP1,attr=IO,locate=0x127E
#endif

__IO_EXTENDED	const __HWORD	IO_IPCP1;
#define	_ipcp1		(IO_IPCP1)
#define	IPCP1	(_ipcp1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICS01,attr=IO,locate=0x1280
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	IEI1:1;
        __HWORD	IEI0:1;
        __HWORD	ICP1:1;
        __HWORD	ICP0:1;
        __HWORD	ICE1:1;
        __HWORD	ICE0:1;
        __HWORD	EG1:2;
        __HWORD	EG0:2;
    } bit;
} ICS01STR;

__IO_EXTENDED	  ICS01STR	IO_ICS01;
#define	_ics01		(IO_ICS01)
#define	ICS01		(IO_ICS01.hword)
#define	ICS01_IEI1  	(IO_ICS01.bit.IEI1)
#define	ICS01_IEI0  	(IO_ICS01.bit.IEI0)
#define	ICS01_ICP1  	(IO_ICS01.bit.ICP1)
#define	ICS01_ICP0  	(IO_ICS01.bit.ICP0)
#define	ICS01_ICE1  	(IO_ICS01.bit.ICE1)
#define	ICS01_ICE0  	(IO_ICS01.bit.ICE0)
#define	ICS01_EG1  	(IO_ICS01.bit.EG1)
#define	ICS01_EG0  	(IO_ICS01.bit.EG0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_LSYNS,attr=IO,locate=0x1283
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	LSYN3:1;
        __BYTE	LSYN2:1;
        __BYTE	LSYN1:1;
        __BYTE	LSYN0:1;
    } bit;
} LSYNSSTR;

__IO_EXTENDED	  LSYNSSTR	IO_LSYNS;
#define	_lsyns		(IO_LSYNS)
#define	LSYNS		(IO_LSYNS.byte)
#define	LSYNS_LSYN3  	(IO_LSYNS.bit.LSYN3)
#define	LSYNS_LSYN2  	(IO_LSYNS.bit.LSYN2)
#define	LSYNS_LSYN1  	(IO_LSYNS.bit.LSYN1)
#define	LSYNS_LSYN0  	(IO_LSYNS.bit.LSYN0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IPCP2,attr=IO,locate=0x1284
#endif

__IO_EXTENDED	const __HWORD	IO_IPCP2;
#define	_ipcp2		(IO_IPCP2)
#define	IPCP2	(_ipcp2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_IPCP3,attr=IO,locate=0x1286
#endif

__IO_EXTENDED	const __HWORD	IO_IPCP3;
#define	_ipcp3		(IO_IPCP3)
#define	IPCP3	(_ipcp3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ICS23,attr=IO,locate=0x1288
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	IEI1:1;
        __HWORD	IEI0:1;
        __HWORD	ICP1:1;
        __HWORD	ICP0:1;
        __HWORD	ICE1:1;
        __HWORD	ICE0:1;
        __HWORD	EG1:2;
        __HWORD	EG0:2;
    } bit;
} ICS23STR;

__IO_EXTENDED	  ICS23STR	IO_ICS23;
#define	_ics23		(IO_ICS23)
#define	ICS23		(IO_ICS23.hword)
#define	ICS23_IEI1  	(IO_ICS23.bit.IEI1)
#define	ICS23_IEI0  	(IO_ICS23.bit.IEI0)
#define	ICS23_ICP1  	(IO_ICS23.bit.ICP1)
#define	ICS23_ICP0  	(IO_ICS23.bit.ICP0)
#define	ICS23_ICE1  	(IO_ICS23.bit.ICE1)
#define	ICS23_ICE0  	(IO_ICS23.bit.ICE0)
#define	ICS23_EG1  	(IO_ICS23.bit.EG1)
#define	ICS23_EG0  	(IO_ICS23.bit.EG0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMRR0,attr=IO,locate=0x12A0
#endif

__IO_EXTENDED	__HWORD	IO_TMRR0;
#define	_tmrr0		(IO_TMRR0)
#define	TMRR0	(_tmrr0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMRR1,attr=IO,locate=0x12A2
#endif

__IO_EXTENDED	__HWORD	IO_TMRR1;
#define	_tmrr1		(IO_TMRR1)
#define	TMRR1	(_tmrr1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TMRR2,attr=IO,locate=0x12A4
#endif

__IO_EXTENDED	__HWORD	IO_TMRR2;
#define	_tmrr2		(IO_TMRR2)
#define	TMRR2	(_tmrr2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTSCR0,attr=IO,locate=0x12A8
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	DMOD0:1;
        __BYTE	GTEN1:1;
        __BYTE	GTEN0:1;
        __BYTE	TMIF0:1;
        __BYTE	TMIE0:1;
        __BYTE	TMD:3;
    } bit;
} DTSCR0STR;

__IO_EXTENDED	  DTSCR0STR	IO_DTSCR0;
#define	_dtscr0		(IO_DTSCR0)
#define	DTSCR0		(IO_DTSCR0.byte)
#define	DTSCR0_DMOD0  	(IO_DTSCR0.bit.DMOD0)
#define	DTSCR0_GTEN1  	(IO_DTSCR0.bit.GTEN1)
#define	DTSCR0_GTEN0  	(IO_DTSCR0.bit.GTEN0)
#define	DTSCR0_TMIF0  	(IO_DTSCR0.bit.TMIF0)
#define	DTSCR0_TMIE0  	(IO_DTSCR0.bit.TMIE0)
#define	DTSCR0_TMD  	(IO_DTSCR0.bit.TMD)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTSCR1,attr=IO,locate=0x12A9
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	DMOD1:1;
        __BYTE	GTEN3:1;
        __BYTE	GTEN2:1;
        __BYTE	TMIF1:1;
        __BYTE	TMIE1:1;
        __BYTE	TMD:3;
    } bit;
} DTSCR1STR;

__IO_EXTENDED	  DTSCR1STR	IO_DTSCR1;
#define	_dtscr1		(IO_DTSCR1)
#define	DTSCR1		(IO_DTSCR1.byte)
#define	DTSCR1_DMOD1  	(IO_DTSCR1.bit.DMOD1)
#define	DTSCR1_GTEN3  	(IO_DTSCR1.bit.GTEN3)
#define	DTSCR1_GTEN2  	(IO_DTSCR1.bit.GTEN2)
#define	DTSCR1_TMIF1  	(IO_DTSCR1.bit.TMIF1)
#define	DTSCR1_TMIE1  	(IO_DTSCR1.bit.TMIE1)
#define	DTSCR1_TMD  	(IO_DTSCR1.bit.TMD)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTSCR2,attr=IO,locate=0x12AA
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	DMOD2:1;
        __BYTE	GTEN5:1;
        __BYTE	GTEN4:1;
        __BYTE	TMIF2:1;
        __BYTE	TMIE2:1;
        __BYTE	TMD:3;
    } bit;
} DTSCR2STR;

__IO_EXTENDED	  DTSCR2STR	IO_DTSCR2;
#define	_dtscr2		(IO_DTSCR2)
#define	DTSCR2		(IO_DTSCR2.byte)
#define	DTSCR2_DMOD2  	(IO_DTSCR2.bit.DMOD2)
#define	DTSCR2_GTEN5  	(IO_DTSCR2.bit.GTEN5)
#define	DTSCR2_GTEN4  	(IO_DTSCR2.bit.GTEN4)
#define	DTSCR2_TMIF2  	(IO_DTSCR2.bit.TMIF2)
#define	DTSCR2_TMIE2  	(IO_DTSCR2.bit.TMIE2)
#define	DTSCR2_TMD  	(IO_DTSCR2.bit.TMD)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTIR0,attr=IO,locate=0x12AD
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	DTRIF2:1;
        __BYTE	DTRIE2:1;
        __BYTE	DTRIF1:1;
        __BYTE	DTRIE1:1;
        __BYTE	DTRIF0:1;
        __BYTE	DTRIE0:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} DTIR0STR;

__IO_EXTENDED	  DTIR0STR	IO_DTIR0;
#define	_dtir0		(IO_DTIR0)
#define	DTIR0		(IO_DTIR0.byte)
#define	DTIR0_DTRIF2  	(IO_DTIR0.bit.DTRIF2)
#define	DTIR0_DTRIE2  	(IO_DTIR0.bit.DTRIE2)
#define	DTIR0_DTRIF1  	(IO_DTIR0.bit.DTRIF1)
#define	DTIR0_DTRIE1  	(IO_DTIR0.bit.DTRIE1)
#define	DTIR0_DTRIF0  	(IO_DTIR0.bit.DTRIF0)
#define	DTIR0_DTRIE0  	(IO_DTIR0.bit.DTRIE0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DTMNS0,attr=IO,locate=0x12AF
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	KEY:2;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	MNS2:1;
        __BYTE	MNS1:1;
        __BYTE	MNS0:1;
    } bit;
} DTMNS0STR;

__IO_EXTENDED	  DTMNS0STR	IO_DTMNS0;
#define	_dtmns0		(IO_DTMNS0)
#define	DTMNS0		(IO_DTMNS0.byte)
#define	DTMNS0_KEY  	(IO_DTMNS0.bit.KEY)
#define	DTMNS0_MNS2  	(IO_DTMNS0.bit.MNS2)
#define	DTMNS0_MNS1  	(IO_DTMNS0.bit.MNS1)
#define	DTMNS0_MNS0  	(IO_DTMNS0.bit.MNS0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_SIGCR10,attr=IO,locate=0x12B1
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	DTIE:1;
        __BYTE	DTIF:1;
        __BYTE	NRSL:1;
        __BYTE	DCK:3;
        __BYTE	NWS:2;
    } bit;
} SIGCR10STR;

__IO_EXTENDED	  SIGCR10STR	IO_SIGCR10;
#define	_sigcr10		(IO_SIGCR10)
#define	SIGCR10		(IO_SIGCR10.byte)
#define	SIGCR10_DTIE  	(IO_SIGCR10.bit.DTIE)
#define	SIGCR10_DTIF  	(IO_SIGCR10.bit.DTIF)
#define	SIGCR10_NRSL  	(IO_SIGCR10.bit.NRSL)
#define	SIGCR10_DCK  	(IO_SIGCR10.bit.DCK)
#define	SIGCR10_NWS  	(IO_SIGCR10.bit.NWS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_SIGCR20,attr=IO,locate=0x12B3
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	PSEL2:2;
        __BYTE	PSEL1:2;
        __BYTE	PSEL0:2;
        __BYTE	RESV3:1;
        __BYTE	DTTI:1;
    } bit;
} SIGCR20STR;

__IO_EXTENDED	  SIGCR20STR	IO_SIGCR20;
#define	_sigcr20		(IO_SIGCR20)
#define	SIGCR20		(IO_SIGCR20.byte)
#define	SIGCR20_PSEL2  	(IO_SIGCR20.bit.PSEL2)
#define	SIGCR20_PSEL1  	(IO_SIGCR20.bit.PSEL1)
#define	SIGCR20_PSEL0  	(IO_SIGCR20.bit.PSEL0)
#define	SIGCR20_DTTI  	(IO_SIGCR20.bit.DTTI)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PICS0,attr=IO,locate=0x12B4
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	PGEN:6;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
    } bit;
} PICS0STR;

__IO_EXTENDED	  PICS0STR	IO_PICS0;
#define	_pics0		(IO_PICS0)
#define	PICS0		(IO_PICS0.byte)
#define	PICS0_PGEN  	(IO_PICS0.bit.PGEN)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FRS5,attr=IO,locate=0x12D0
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	AS31:2;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AS30:2;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	AS29:2;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	AS28:2;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	AS27:2;
        __WORD	RESV15:1;
        __WORD	RESV16:1;
        __WORD	AS26:2;
        __WORD	RESV18:1;
        __WORD	RESV19:1;
        __WORD	AS25:2;
        __WORD	RESV21:1;
        __WORD	RESV22:1;
        __WORD	AS24:2;
    } bit;
} FRS5STR;

__IO_EXTENDED	  FRS5STR	IO_FRS5;
#define	_frs5		(IO_FRS5)
#define	FRS5		(IO_FRS5.word)
#define	FRS5_AS31  	(IO_FRS5.bit.AS31)
#define	FRS5_AS30  	(IO_FRS5.bit.AS30)
#define	FRS5_AS29  	(IO_FRS5.bit.AS29)
#define	FRS5_AS28  	(IO_FRS5.bit.AS28)
#define	FRS5_AS27  	(IO_FRS5.bit.AS27)
#define	FRS5_AS26  	(IO_FRS5.bit.AS26)
#define	FRS5_AS25  	(IO_FRS5.bit.AS25)
#define	FRS5_AS24  	(IO_FRS5.bit.AS24)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FRS6,attr=IO,locate=0x12D4
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	AS39:2;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AS38:2;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	AS37:2;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	AS36:2;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	AS35:2;
        __WORD	RESV15:1;
        __WORD	RESV16:1;
        __WORD	AS34:2;
        __WORD	RESV18:1;
        __WORD	RESV19:1;
        __WORD	AS33:2;
        __WORD	RESV21:1;
        __WORD	RESV22:1;
        __WORD	AS32:2;
    } bit;
} FRS6STR;

__IO_EXTENDED	  FRS6STR	IO_FRS6;
#define	_frs6		(IO_FRS6)
#define	FRS6		(IO_FRS6.word)
#define	FRS6_AS39  	(IO_FRS6.bit.AS39)
#define	FRS6_AS38  	(IO_FRS6.bit.AS38)
#define	FRS6_AS37  	(IO_FRS6.bit.AS37)
#define	FRS6_AS36  	(IO_FRS6.bit.AS36)
#define	FRS6_AS35  	(IO_FRS6.bit.AS35)
#define	FRS6_AS34  	(IO_FRS6.bit.AS34)
#define	FRS6_AS33  	(IO_FRS6.bit.AS33)
#define	FRS6_AS32  	(IO_FRS6.bit.AS32)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FRS7,attr=IO,locate=0x12D8
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	AS47:2;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	AS46:2;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	AS45:2;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	AS44:2;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	AS43:2;
        __WORD	RESV15:1;
        __WORD	RESV16:1;
        __WORD	AS42:2;
        __WORD	RESV18:1;
        __WORD	RESV19:1;
        __WORD	AS41:2;
        __WORD	RESV21:1;
        __WORD	RESV22:1;
        __WORD	AS40:2;
    } bit;
} FRS7STR;

__IO_EXTENDED	  FRS7STR	IO_FRS7;
#define	_frs7		(IO_FRS7)
#define	FRS7		(IO_FRS7.word)
#define	FRS7_AS47  	(IO_FRS7.bit.AS47)
#define	FRS7_AS46  	(IO_FRS7.bit.AS46)
#define	FRS7_AS45  	(IO_FRS7.bit.AS45)
#define	FRS7_AS44  	(IO_FRS7.bit.AS44)
#define	FRS7_AS43  	(IO_FRS7.bit.AS43)
#define	FRS7_AS42  	(IO_FRS7.bit.AS42)
#define	FRS7_AS41  	(IO_FRS7.bit.AS41)
#define	FRS7_AS40  	(IO_FRS7.bit.AS40)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTSS0,attr=IO,locate=0x1304
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	START:1;
    } bit;
} ADTSS0STR;

__IO_EXTENDED	  ADTSS0STR	IO_ADTSS0;
#define	_adtss0		(IO_ADTSS0)
#define	ADTSS0		(IO_ADTSS0.byte)
#define	ADTSS0_START  	(IO_ADTSS0.bit.START)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTSE0,attr=IO,locate=0x1308
#endif

__IO_EXTENDED	__WORD	IO_ADTSE0;
#define	_adtse0		(IO_ADTSE0)
#define	ADTSE0	(_adtse0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP0,attr=IO,locate=0x130C
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP0;
#define	_adcomp0		(IO_ADCOMP0)
#define	ADCOMP0	(_adcomp0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP1,attr=IO,locate=0x130E
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP1;
#define	_adcomp1		(IO_ADCOMP1)
#define	ADCOMP1	(_adcomp1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP2,attr=IO,locate=0x1310
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP2;
#define	_adcomp2		(IO_ADCOMP2)
#define	ADCOMP2	(_adcomp2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP3,attr=IO,locate=0x1312
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP3;
#define	_adcomp3		(IO_ADCOMP3)
#define	ADCOMP3	(_adcomp3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP4,attr=IO,locate=0x1314
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP4;
#define	_adcomp4		(IO_ADCOMP4)
#define	ADCOMP4	(_adcomp4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP5,attr=IO,locate=0x1316
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP5;
#define	_adcomp5		(IO_ADCOMP5)
#define	ADCOMP5	(_adcomp5)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP6,attr=IO,locate=0x1318
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP6;
#define	_adcomp6		(IO_ADCOMP6)
#define	ADCOMP6	(_adcomp6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP7,attr=IO,locate=0x131A
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP7;
#define	_adcomp7		(IO_ADCOMP7)
#define	ADCOMP7	(_adcomp7)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP8,attr=IO,locate=0x131C
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP8;
#define	_adcomp8		(IO_ADCOMP8)
#define	ADCOMP8	(_adcomp8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP9,attr=IO,locate=0x131E
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP9;
#define	_adcomp9		(IO_ADCOMP9)
#define	ADCOMP9	(_adcomp9)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP10,attr=IO,locate=0x1320
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP10;
#define	_adcomp10		(IO_ADCOMP10)
#define	ADCOMP10	(_adcomp10)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP11,attr=IO,locate=0x1322
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP11;
#define	_adcomp11		(IO_ADCOMP11)
#define	ADCOMP11	(_adcomp11)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP12,attr=IO,locate=0x1324
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP12;
#define	_adcomp12		(IO_ADCOMP12)
#define	ADCOMP12	(_adcomp12)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP13,attr=IO,locate=0x1326
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP13;
#define	_adcomp13		(IO_ADCOMP13)
#define	ADCOMP13	(_adcomp13)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP14,attr=IO,locate=0x1328
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP14;
#define	_adcomp14		(IO_ADCOMP14)
#define	ADCOMP14	(_adcomp14)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP15,attr=IO,locate=0x132A
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP15;
#define	_adcomp15		(IO_ADCOMP15)
#define	ADCOMP15	(_adcomp15)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP16,attr=IO,locate=0x132C
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP16;
#define	_adcomp16		(IO_ADCOMP16)
#define	ADCOMP16	(_adcomp16)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP17,attr=IO,locate=0x132E
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP17;
#define	_adcomp17		(IO_ADCOMP17)
#define	ADCOMP17	(_adcomp17)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP18,attr=IO,locate=0x1330
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP18;
#define	_adcomp18		(IO_ADCOMP18)
#define	ADCOMP18	(_adcomp18)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP19,attr=IO,locate=0x1332
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP19;
#define	_adcomp19		(IO_ADCOMP19)
#define	ADCOMP19	(_adcomp19)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP20,attr=IO,locate=0x1334
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP20;
#define	_adcomp20		(IO_ADCOMP20)
#define	ADCOMP20	(_adcomp20)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP21,attr=IO,locate=0x1336
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP21;
#define	_adcomp21		(IO_ADCOMP21)
#define	ADCOMP21	(_adcomp21)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP22,attr=IO,locate=0x1338
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP22;
#define	_adcomp22		(IO_ADCOMP22)
#define	ADCOMP22	(_adcomp22)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP23,attr=IO,locate=0x133A
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP23;
#define	_adcomp23		(IO_ADCOMP23)
#define	ADCOMP23	(_adcomp23)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP24,attr=IO,locate=0x133C
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP24;
#define	_adcomp24		(IO_ADCOMP24)
#define	ADCOMP24	(_adcomp24)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP25,attr=IO,locate=0x133E
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP25;
#define	_adcomp25		(IO_ADCOMP25)
#define	ADCOMP25	(_adcomp25)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP26,attr=IO,locate=0x1340
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP26;
#define	_adcomp26		(IO_ADCOMP26)
#define	ADCOMP26	(_adcomp26)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP27,attr=IO,locate=0x1342
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP27;
#define	_adcomp27		(IO_ADCOMP27)
#define	ADCOMP27	(_adcomp27)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP28,attr=IO,locate=0x1344
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP28;
#define	_adcomp28		(IO_ADCOMP28)
#define	ADCOMP28	(_adcomp28)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP29,attr=IO,locate=0x1346
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP29;
#define	_adcomp29		(IO_ADCOMP29)
#define	ADCOMP29	(_adcomp29)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP30,attr=IO,locate=0x1348
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP30;
#define	_adcomp30		(IO_ADCOMP30)
#define	ADCOMP30	(_adcomp30)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP31,attr=IO,locate=0x134A
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP31;
#define	_adcomp31		(IO_ADCOMP31)
#define	ADCOMP31	(_adcomp31)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS0,attr=IO,locate=0x134C
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS0STR;

__IO_EXTENDED	  ADTCS0STR	IO_ADTCS0;
#define	_adtcs0		(IO_ADTCS0)
#define	ADTCS0		(IO_ADTCS0.hword)
#define	ADTCS0_BUSY  	(IO_ADTCS0.bit.BUSY)
#define	ADTCS0_INT  	(IO_ADTCS0.bit.INT)
#define	ADTCS0_INTE  	(IO_ADTCS0.bit.INTE)
#define	ADTCS0_STS  	(IO_ADTCS0.bit.STS)
#define	ADTCS0_RPT  	(IO_ADTCS0.bit.RPT)
#define	ADTCS0_PRT  	(IO_ADTCS0.bit.PRT)
#define	ADTCS0_PRTS  	(IO_ADTCS0.bit.PRTS)
#define	ADTCS0_SEL  	(IO_ADTCS0.bit.SEL)
#define	ADTCS0_BUFX  	(IO_ADTCS0.bit.BUFX)
#define	ADTCS0_BTS  	(IO_ADTCS0.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS1,attr=IO,locate=0x134E
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS1STR;

__IO_EXTENDED	  ADTCS1STR	IO_ADTCS1;
#define	_adtcs1		(IO_ADTCS1)
#define	ADTCS1		(IO_ADTCS1.hword)
#define	ADTCS1_BUSY  	(IO_ADTCS1.bit.BUSY)
#define	ADTCS1_INT  	(IO_ADTCS1.bit.INT)
#define	ADTCS1_INTE  	(IO_ADTCS1.bit.INTE)
#define	ADTCS1_STS  	(IO_ADTCS1.bit.STS)
#define	ADTCS1_RPT  	(IO_ADTCS1.bit.RPT)
#define	ADTCS1_PRT  	(IO_ADTCS1.bit.PRT)
#define	ADTCS1_PRTS  	(IO_ADTCS1.bit.PRTS)
#define	ADTCS1_SEL  	(IO_ADTCS1.bit.SEL)
#define	ADTCS1_BUFX  	(IO_ADTCS1.bit.BUFX)
#define	ADTCS1_BTS  	(IO_ADTCS1.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS2,attr=IO,locate=0x1350
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS2STR;

__IO_EXTENDED	  ADTCS2STR	IO_ADTCS2;
#define	_adtcs2		(IO_ADTCS2)
#define	ADTCS2		(IO_ADTCS2.hword)
#define	ADTCS2_BUSY  	(IO_ADTCS2.bit.BUSY)
#define	ADTCS2_INT  	(IO_ADTCS2.bit.INT)
#define	ADTCS2_INTE  	(IO_ADTCS2.bit.INTE)
#define	ADTCS2_STS  	(IO_ADTCS2.bit.STS)
#define	ADTCS2_RPT  	(IO_ADTCS2.bit.RPT)
#define	ADTCS2_PRT  	(IO_ADTCS2.bit.PRT)
#define	ADTCS2_PRTS  	(IO_ADTCS2.bit.PRTS)
#define	ADTCS2_SEL  	(IO_ADTCS2.bit.SEL)
#define	ADTCS2_BUFX  	(IO_ADTCS2.bit.BUFX)
#define	ADTCS2_BTS  	(IO_ADTCS2.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS3,attr=IO,locate=0x1352
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS3STR;

__IO_EXTENDED	  ADTCS3STR	IO_ADTCS3;
#define	_adtcs3		(IO_ADTCS3)
#define	ADTCS3		(IO_ADTCS3.hword)
#define	ADTCS3_BUSY  	(IO_ADTCS3.bit.BUSY)
#define	ADTCS3_INT  	(IO_ADTCS3.bit.INT)
#define	ADTCS3_INTE  	(IO_ADTCS3.bit.INTE)
#define	ADTCS3_STS  	(IO_ADTCS3.bit.STS)
#define	ADTCS3_RPT  	(IO_ADTCS3.bit.RPT)
#define	ADTCS3_PRT  	(IO_ADTCS3.bit.PRT)
#define	ADTCS3_PRTS  	(IO_ADTCS3.bit.PRTS)
#define	ADTCS3_SEL  	(IO_ADTCS3.bit.SEL)
#define	ADTCS3_BUFX  	(IO_ADTCS3.bit.BUFX)
#define	ADTCS3_BTS  	(IO_ADTCS3.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS4,attr=IO,locate=0x1354
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS4STR;

__IO_EXTENDED	  ADTCS4STR	IO_ADTCS4;
#define	_adtcs4		(IO_ADTCS4)
#define	ADTCS4		(IO_ADTCS4.hword)
#define	ADTCS4_BUSY  	(IO_ADTCS4.bit.BUSY)
#define	ADTCS4_INT  	(IO_ADTCS4.bit.INT)
#define	ADTCS4_INTE  	(IO_ADTCS4.bit.INTE)
#define	ADTCS4_STS  	(IO_ADTCS4.bit.STS)
#define	ADTCS4_RPT  	(IO_ADTCS4.bit.RPT)
#define	ADTCS4_PRT  	(IO_ADTCS4.bit.PRT)
#define	ADTCS4_PRTS  	(IO_ADTCS4.bit.PRTS)
#define	ADTCS4_SEL  	(IO_ADTCS4.bit.SEL)
#define	ADTCS4_BUFX  	(IO_ADTCS4.bit.BUFX)
#define	ADTCS4_BTS  	(IO_ADTCS4.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS5,attr=IO,locate=0x1356
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS5STR;

__IO_EXTENDED	  ADTCS5STR	IO_ADTCS5;
#define	_adtcs5		(IO_ADTCS5)
#define	ADTCS5		(IO_ADTCS5.hword)
#define	ADTCS5_BUSY  	(IO_ADTCS5.bit.BUSY)
#define	ADTCS5_INT  	(IO_ADTCS5.bit.INT)
#define	ADTCS5_INTE  	(IO_ADTCS5.bit.INTE)
#define	ADTCS5_STS  	(IO_ADTCS5.bit.STS)
#define	ADTCS5_RPT  	(IO_ADTCS5.bit.RPT)
#define	ADTCS5_PRT  	(IO_ADTCS5.bit.PRT)
#define	ADTCS5_PRTS  	(IO_ADTCS5.bit.PRTS)
#define	ADTCS5_SEL  	(IO_ADTCS5.bit.SEL)
#define	ADTCS5_BUFX  	(IO_ADTCS5.bit.BUFX)
#define	ADTCS5_BTS  	(IO_ADTCS5.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS6,attr=IO,locate=0x1358
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS6STR;

__IO_EXTENDED	  ADTCS6STR	IO_ADTCS6;
#define	_adtcs6		(IO_ADTCS6)
#define	ADTCS6		(IO_ADTCS6.hword)
#define	ADTCS6_BUSY  	(IO_ADTCS6.bit.BUSY)
#define	ADTCS6_INT  	(IO_ADTCS6.bit.INT)
#define	ADTCS6_INTE  	(IO_ADTCS6.bit.INTE)
#define	ADTCS6_STS  	(IO_ADTCS6.bit.STS)
#define	ADTCS6_RPT  	(IO_ADTCS6.bit.RPT)
#define	ADTCS6_PRT  	(IO_ADTCS6.bit.PRT)
#define	ADTCS6_PRTS  	(IO_ADTCS6.bit.PRTS)
#define	ADTCS6_SEL  	(IO_ADTCS6.bit.SEL)
#define	ADTCS6_BUFX  	(IO_ADTCS6.bit.BUFX)
#define	ADTCS6_BTS  	(IO_ADTCS6.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS7,attr=IO,locate=0x135A
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS7STR;

__IO_EXTENDED	  ADTCS7STR	IO_ADTCS7;
#define	_adtcs7		(IO_ADTCS7)
#define	ADTCS7		(IO_ADTCS7.hword)
#define	ADTCS7_BUSY  	(IO_ADTCS7.bit.BUSY)
#define	ADTCS7_INT  	(IO_ADTCS7.bit.INT)
#define	ADTCS7_INTE  	(IO_ADTCS7.bit.INTE)
#define	ADTCS7_STS  	(IO_ADTCS7.bit.STS)
#define	ADTCS7_RPT  	(IO_ADTCS7.bit.RPT)
#define	ADTCS7_PRT  	(IO_ADTCS7.bit.PRT)
#define	ADTCS7_PRTS  	(IO_ADTCS7.bit.PRTS)
#define	ADTCS7_SEL  	(IO_ADTCS7.bit.SEL)
#define	ADTCS7_BUFX  	(IO_ADTCS7.bit.BUFX)
#define	ADTCS7_BTS  	(IO_ADTCS7.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS8,attr=IO,locate=0x135C
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS8STR;

__IO_EXTENDED	  ADTCS8STR	IO_ADTCS8;
#define	_adtcs8		(IO_ADTCS8)
#define	ADTCS8		(IO_ADTCS8.hword)
#define	ADTCS8_BUSY  	(IO_ADTCS8.bit.BUSY)
#define	ADTCS8_INT  	(IO_ADTCS8.bit.INT)
#define	ADTCS8_INTE  	(IO_ADTCS8.bit.INTE)
#define	ADTCS8_STS  	(IO_ADTCS8.bit.STS)
#define	ADTCS8_RPT  	(IO_ADTCS8.bit.RPT)
#define	ADTCS8_PRT  	(IO_ADTCS8.bit.PRT)
#define	ADTCS8_PRTS  	(IO_ADTCS8.bit.PRTS)
#define	ADTCS8_SEL  	(IO_ADTCS8.bit.SEL)
#define	ADTCS8_BUFX  	(IO_ADTCS8.bit.BUFX)
#define	ADTCS8_BTS  	(IO_ADTCS8.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS9,attr=IO,locate=0x135E
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS9STR;

__IO_EXTENDED	  ADTCS9STR	IO_ADTCS9;
#define	_adtcs9		(IO_ADTCS9)
#define	ADTCS9		(IO_ADTCS9.hword)
#define	ADTCS9_BUSY  	(IO_ADTCS9.bit.BUSY)
#define	ADTCS9_INT  	(IO_ADTCS9.bit.INT)
#define	ADTCS9_INTE  	(IO_ADTCS9.bit.INTE)
#define	ADTCS9_STS  	(IO_ADTCS9.bit.STS)
#define	ADTCS9_RPT  	(IO_ADTCS9.bit.RPT)
#define	ADTCS9_PRT  	(IO_ADTCS9.bit.PRT)
#define	ADTCS9_PRTS  	(IO_ADTCS9.bit.PRTS)
#define	ADTCS9_SEL  	(IO_ADTCS9.bit.SEL)
#define	ADTCS9_BUFX  	(IO_ADTCS9.bit.BUFX)
#define	ADTCS9_BTS  	(IO_ADTCS9.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS10,attr=IO,locate=0x1360
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS10STR;

__IO_EXTENDED	  ADTCS10STR	IO_ADTCS10;
#define	_adtcs10		(IO_ADTCS10)
#define	ADTCS10		(IO_ADTCS10.hword)
#define	ADTCS10_BUSY  	(IO_ADTCS10.bit.BUSY)
#define	ADTCS10_INT  	(IO_ADTCS10.bit.INT)
#define	ADTCS10_INTE  	(IO_ADTCS10.bit.INTE)
#define	ADTCS10_STS  	(IO_ADTCS10.bit.STS)
#define	ADTCS10_RPT  	(IO_ADTCS10.bit.RPT)
#define	ADTCS10_PRT  	(IO_ADTCS10.bit.PRT)
#define	ADTCS10_PRTS  	(IO_ADTCS10.bit.PRTS)
#define	ADTCS10_SEL  	(IO_ADTCS10.bit.SEL)
#define	ADTCS10_BUFX  	(IO_ADTCS10.bit.BUFX)
#define	ADTCS10_BTS  	(IO_ADTCS10.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS11,attr=IO,locate=0x1362
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS11STR;

__IO_EXTENDED	  ADTCS11STR	IO_ADTCS11;
#define	_adtcs11		(IO_ADTCS11)
#define	ADTCS11		(IO_ADTCS11.hword)
#define	ADTCS11_BUSY  	(IO_ADTCS11.bit.BUSY)
#define	ADTCS11_INT  	(IO_ADTCS11.bit.INT)
#define	ADTCS11_INTE  	(IO_ADTCS11.bit.INTE)
#define	ADTCS11_STS  	(IO_ADTCS11.bit.STS)
#define	ADTCS11_RPT  	(IO_ADTCS11.bit.RPT)
#define	ADTCS11_PRT  	(IO_ADTCS11.bit.PRT)
#define	ADTCS11_PRTS  	(IO_ADTCS11.bit.PRTS)
#define	ADTCS11_SEL  	(IO_ADTCS11.bit.SEL)
#define	ADTCS11_BUFX  	(IO_ADTCS11.bit.BUFX)
#define	ADTCS11_BTS  	(IO_ADTCS11.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS12,attr=IO,locate=0x1364
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS12STR;

__IO_EXTENDED	  ADTCS12STR	IO_ADTCS12;
#define	_adtcs12		(IO_ADTCS12)
#define	ADTCS12		(IO_ADTCS12.hword)
#define	ADTCS12_BUSY  	(IO_ADTCS12.bit.BUSY)
#define	ADTCS12_INT  	(IO_ADTCS12.bit.INT)
#define	ADTCS12_INTE  	(IO_ADTCS12.bit.INTE)
#define	ADTCS12_STS  	(IO_ADTCS12.bit.STS)
#define	ADTCS12_RPT  	(IO_ADTCS12.bit.RPT)
#define	ADTCS12_PRT  	(IO_ADTCS12.bit.PRT)
#define	ADTCS12_PRTS  	(IO_ADTCS12.bit.PRTS)
#define	ADTCS12_SEL  	(IO_ADTCS12.bit.SEL)
#define	ADTCS12_BUFX  	(IO_ADTCS12.bit.BUFX)
#define	ADTCS12_BTS  	(IO_ADTCS12.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS13,attr=IO,locate=0x1366
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS13STR;

__IO_EXTENDED	  ADTCS13STR	IO_ADTCS13;
#define	_adtcs13		(IO_ADTCS13)
#define	ADTCS13		(IO_ADTCS13.hword)
#define	ADTCS13_BUSY  	(IO_ADTCS13.bit.BUSY)
#define	ADTCS13_INT  	(IO_ADTCS13.bit.INT)
#define	ADTCS13_INTE  	(IO_ADTCS13.bit.INTE)
#define	ADTCS13_STS  	(IO_ADTCS13.bit.STS)
#define	ADTCS13_RPT  	(IO_ADTCS13.bit.RPT)
#define	ADTCS13_PRT  	(IO_ADTCS13.bit.PRT)
#define	ADTCS13_PRTS  	(IO_ADTCS13.bit.PRTS)
#define	ADTCS13_SEL  	(IO_ADTCS13.bit.SEL)
#define	ADTCS13_BUFX  	(IO_ADTCS13.bit.BUFX)
#define	ADTCS13_BTS  	(IO_ADTCS13.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS14,attr=IO,locate=0x1368
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS14STR;

__IO_EXTENDED	  ADTCS14STR	IO_ADTCS14;
#define	_adtcs14		(IO_ADTCS14)
#define	ADTCS14		(IO_ADTCS14.hword)
#define	ADTCS14_BUSY  	(IO_ADTCS14.bit.BUSY)
#define	ADTCS14_INT  	(IO_ADTCS14.bit.INT)
#define	ADTCS14_INTE  	(IO_ADTCS14.bit.INTE)
#define	ADTCS14_STS  	(IO_ADTCS14.bit.STS)
#define	ADTCS14_RPT  	(IO_ADTCS14.bit.RPT)
#define	ADTCS14_PRT  	(IO_ADTCS14.bit.PRT)
#define	ADTCS14_PRTS  	(IO_ADTCS14.bit.PRTS)
#define	ADTCS14_SEL  	(IO_ADTCS14.bit.SEL)
#define	ADTCS14_BUFX  	(IO_ADTCS14.bit.BUFX)
#define	ADTCS14_BTS  	(IO_ADTCS14.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS15,attr=IO,locate=0x136A
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS15STR;

__IO_EXTENDED	  ADTCS15STR	IO_ADTCS15;
#define	_adtcs15		(IO_ADTCS15)
#define	ADTCS15		(IO_ADTCS15.hword)
#define	ADTCS15_BUSY  	(IO_ADTCS15.bit.BUSY)
#define	ADTCS15_INT  	(IO_ADTCS15.bit.INT)
#define	ADTCS15_INTE  	(IO_ADTCS15.bit.INTE)
#define	ADTCS15_STS  	(IO_ADTCS15.bit.STS)
#define	ADTCS15_RPT  	(IO_ADTCS15.bit.RPT)
#define	ADTCS15_PRT  	(IO_ADTCS15.bit.PRT)
#define	ADTCS15_PRTS  	(IO_ADTCS15.bit.PRTS)
#define	ADTCS15_SEL  	(IO_ADTCS15.bit.SEL)
#define	ADTCS15_BUFX  	(IO_ADTCS15.bit.BUFX)
#define	ADTCS15_BTS  	(IO_ADTCS15.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS16,attr=IO,locate=0x136C
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS16STR;

__IO_EXTENDED	  ADTCS16STR	IO_ADTCS16;
#define	_adtcs16		(IO_ADTCS16)
#define	ADTCS16		(IO_ADTCS16.hword)
#define	ADTCS16_BUSY  	(IO_ADTCS16.bit.BUSY)
#define	ADTCS16_INT  	(IO_ADTCS16.bit.INT)
#define	ADTCS16_INTE  	(IO_ADTCS16.bit.INTE)
#define	ADTCS16_STS  	(IO_ADTCS16.bit.STS)
#define	ADTCS16_RPT  	(IO_ADTCS16.bit.RPT)
#define	ADTCS16_PRT  	(IO_ADTCS16.bit.PRT)
#define	ADTCS16_PRTS  	(IO_ADTCS16.bit.PRTS)
#define	ADTCS16_SEL  	(IO_ADTCS16.bit.SEL)
#define	ADTCS16_BUFX  	(IO_ADTCS16.bit.BUFX)
#define	ADTCS16_BTS  	(IO_ADTCS16.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS17,attr=IO,locate=0x136E
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS17STR;

__IO_EXTENDED	  ADTCS17STR	IO_ADTCS17;
#define	_adtcs17		(IO_ADTCS17)
#define	ADTCS17		(IO_ADTCS17.hword)
#define	ADTCS17_BUSY  	(IO_ADTCS17.bit.BUSY)
#define	ADTCS17_INT  	(IO_ADTCS17.bit.INT)
#define	ADTCS17_INTE  	(IO_ADTCS17.bit.INTE)
#define	ADTCS17_STS  	(IO_ADTCS17.bit.STS)
#define	ADTCS17_RPT  	(IO_ADTCS17.bit.RPT)
#define	ADTCS17_PRT  	(IO_ADTCS17.bit.PRT)
#define	ADTCS17_PRTS  	(IO_ADTCS17.bit.PRTS)
#define	ADTCS17_SEL  	(IO_ADTCS17.bit.SEL)
#define	ADTCS17_BUFX  	(IO_ADTCS17.bit.BUFX)
#define	ADTCS17_BTS  	(IO_ADTCS17.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS18,attr=IO,locate=0x1370
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS18STR;

__IO_EXTENDED	  ADTCS18STR	IO_ADTCS18;
#define	_adtcs18		(IO_ADTCS18)
#define	ADTCS18		(IO_ADTCS18.hword)
#define	ADTCS18_BUSY  	(IO_ADTCS18.bit.BUSY)
#define	ADTCS18_INT  	(IO_ADTCS18.bit.INT)
#define	ADTCS18_INTE  	(IO_ADTCS18.bit.INTE)
#define	ADTCS18_STS  	(IO_ADTCS18.bit.STS)
#define	ADTCS18_RPT  	(IO_ADTCS18.bit.RPT)
#define	ADTCS18_PRT  	(IO_ADTCS18.bit.PRT)
#define	ADTCS18_PRTS  	(IO_ADTCS18.bit.PRTS)
#define	ADTCS18_SEL  	(IO_ADTCS18.bit.SEL)
#define	ADTCS18_BUFX  	(IO_ADTCS18.bit.BUFX)
#define	ADTCS18_BTS  	(IO_ADTCS18.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS19,attr=IO,locate=0x1372
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS19STR;

__IO_EXTENDED	  ADTCS19STR	IO_ADTCS19;
#define	_adtcs19		(IO_ADTCS19)
#define	ADTCS19		(IO_ADTCS19.hword)
#define	ADTCS19_BUSY  	(IO_ADTCS19.bit.BUSY)
#define	ADTCS19_INT  	(IO_ADTCS19.bit.INT)
#define	ADTCS19_INTE  	(IO_ADTCS19.bit.INTE)
#define	ADTCS19_STS  	(IO_ADTCS19.bit.STS)
#define	ADTCS19_RPT  	(IO_ADTCS19.bit.RPT)
#define	ADTCS19_PRT  	(IO_ADTCS19.bit.PRT)
#define	ADTCS19_PRTS  	(IO_ADTCS19.bit.PRTS)
#define	ADTCS19_SEL  	(IO_ADTCS19.bit.SEL)
#define	ADTCS19_BUFX  	(IO_ADTCS19.bit.BUFX)
#define	ADTCS19_BTS  	(IO_ADTCS19.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS20,attr=IO,locate=0x1374
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS20STR;

__IO_EXTENDED	  ADTCS20STR	IO_ADTCS20;
#define	_adtcs20		(IO_ADTCS20)
#define	ADTCS20		(IO_ADTCS20.hword)
#define	ADTCS20_BUSY  	(IO_ADTCS20.bit.BUSY)
#define	ADTCS20_INT  	(IO_ADTCS20.bit.INT)
#define	ADTCS20_INTE  	(IO_ADTCS20.bit.INTE)
#define	ADTCS20_STS  	(IO_ADTCS20.bit.STS)
#define	ADTCS20_RPT  	(IO_ADTCS20.bit.RPT)
#define	ADTCS20_PRT  	(IO_ADTCS20.bit.PRT)
#define	ADTCS20_PRTS  	(IO_ADTCS20.bit.PRTS)
#define	ADTCS20_SEL  	(IO_ADTCS20.bit.SEL)
#define	ADTCS20_BUFX  	(IO_ADTCS20.bit.BUFX)
#define	ADTCS20_BTS  	(IO_ADTCS20.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS21,attr=IO,locate=0x1376
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS21STR;

__IO_EXTENDED	  ADTCS21STR	IO_ADTCS21;
#define	_adtcs21		(IO_ADTCS21)
#define	ADTCS21		(IO_ADTCS21.hword)
#define	ADTCS21_BUSY  	(IO_ADTCS21.bit.BUSY)
#define	ADTCS21_INT  	(IO_ADTCS21.bit.INT)
#define	ADTCS21_INTE  	(IO_ADTCS21.bit.INTE)
#define	ADTCS21_STS  	(IO_ADTCS21.bit.STS)
#define	ADTCS21_RPT  	(IO_ADTCS21.bit.RPT)
#define	ADTCS21_PRT  	(IO_ADTCS21.bit.PRT)
#define	ADTCS21_PRTS  	(IO_ADTCS21.bit.PRTS)
#define	ADTCS21_SEL  	(IO_ADTCS21.bit.SEL)
#define	ADTCS21_BUFX  	(IO_ADTCS21.bit.BUFX)
#define	ADTCS21_BTS  	(IO_ADTCS21.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS22,attr=IO,locate=0x1378
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS22STR;

__IO_EXTENDED	  ADTCS22STR	IO_ADTCS22;
#define	_adtcs22		(IO_ADTCS22)
#define	ADTCS22		(IO_ADTCS22.hword)
#define	ADTCS22_BUSY  	(IO_ADTCS22.bit.BUSY)
#define	ADTCS22_INT  	(IO_ADTCS22.bit.INT)
#define	ADTCS22_INTE  	(IO_ADTCS22.bit.INTE)
#define	ADTCS22_STS  	(IO_ADTCS22.bit.STS)
#define	ADTCS22_RPT  	(IO_ADTCS22.bit.RPT)
#define	ADTCS22_PRT  	(IO_ADTCS22.bit.PRT)
#define	ADTCS22_PRTS  	(IO_ADTCS22.bit.PRTS)
#define	ADTCS22_SEL  	(IO_ADTCS22.bit.SEL)
#define	ADTCS22_BUFX  	(IO_ADTCS22.bit.BUFX)
#define	ADTCS22_BTS  	(IO_ADTCS22.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS23,attr=IO,locate=0x137A
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS23STR;

__IO_EXTENDED	  ADTCS23STR	IO_ADTCS23;
#define	_adtcs23		(IO_ADTCS23)
#define	ADTCS23		(IO_ADTCS23.hword)
#define	ADTCS23_BUSY  	(IO_ADTCS23.bit.BUSY)
#define	ADTCS23_INT  	(IO_ADTCS23.bit.INT)
#define	ADTCS23_INTE  	(IO_ADTCS23.bit.INTE)
#define	ADTCS23_STS  	(IO_ADTCS23.bit.STS)
#define	ADTCS23_RPT  	(IO_ADTCS23.bit.RPT)
#define	ADTCS23_PRT  	(IO_ADTCS23.bit.PRT)
#define	ADTCS23_PRTS  	(IO_ADTCS23.bit.PRTS)
#define	ADTCS23_SEL  	(IO_ADTCS23.bit.SEL)
#define	ADTCS23_BUFX  	(IO_ADTCS23.bit.BUFX)
#define	ADTCS23_BTS  	(IO_ADTCS23.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS24,attr=IO,locate=0x137C
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS24STR;

__IO_EXTENDED	  ADTCS24STR	IO_ADTCS24;
#define	_adtcs24		(IO_ADTCS24)
#define	ADTCS24		(IO_ADTCS24.hword)
#define	ADTCS24_BUSY  	(IO_ADTCS24.bit.BUSY)
#define	ADTCS24_INT  	(IO_ADTCS24.bit.INT)
#define	ADTCS24_INTE  	(IO_ADTCS24.bit.INTE)
#define	ADTCS24_STS  	(IO_ADTCS24.bit.STS)
#define	ADTCS24_RPT  	(IO_ADTCS24.bit.RPT)
#define	ADTCS24_PRT  	(IO_ADTCS24.bit.PRT)
#define	ADTCS24_PRTS  	(IO_ADTCS24.bit.PRTS)
#define	ADTCS24_SEL  	(IO_ADTCS24.bit.SEL)
#define	ADTCS24_BUFX  	(IO_ADTCS24.bit.BUFX)
#define	ADTCS24_BTS  	(IO_ADTCS24.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS25,attr=IO,locate=0x137E
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS25STR;

__IO_EXTENDED	  ADTCS25STR	IO_ADTCS25;
#define	_adtcs25		(IO_ADTCS25)
#define	ADTCS25		(IO_ADTCS25.hword)
#define	ADTCS25_BUSY  	(IO_ADTCS25.bit.BUSY)
#define	ADTCS25_INT  	(IO_ADTCS25.bit.INT)
#define	ADTCS25_INTE  	(IO_ADTCS25.bit.INTE)
#define	ADTCS25_STS  	(IO_ADTCS25.bit.STS)
#define	ADTCS25_RPT  	(IO_ADTCS25.bit.RPT)
#define	ADTCS25_PRT  	(IO_ADTCS25.bit.PRT)
#define	ADTCS25_PRTS  	(IO_ADTCS25.bit.PRTS)
#define	ADTCS25_SEL  	(IO_ADTCS25.bit.SEL)
#define	ADTCS25_BUFX  	(IO_ADTCS25.bit.BUFX)
#define	ADTCS25_BTS  	(IO_ADTCS25.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS26,attr=IO,locate=0x1380
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS26STR;

__IO_EXTENDED	  ADTCS26STR	IO_ADTCS26;
#define	_adtcs26		(IO_ADTCS26)
#define	ADTCS26		(IO_ADTCS26.hword)
#define	ADTCS26_BUSY  	(IO_ADTCS26.bit.BUSY)
#define	ADTCS26_INT  	(IO_ADTCS26.bit.INT)
#define	ADTCS26_INTE  	(IO_ADTCS26.bit.INTE)
#define	ADTCS26_STS  	(IO_ADTCS26.bit.STS)
#define	ADTCS26_RPT  	(IO_ADTCS26.bit.RPT)
#define	ADTCS26_PRT  	(IO_ADTCS26.bit.PRT)
#define	ADTCS26_PRTS  	(IO_ADTCS26.bit.PRTS)
#define	ADTCS26_SEL  	(IO_ADTCS26.bit.SEL)
#define	ADTCS26_BUFX  	(IO_ADTCS26.bit.BUFX)
#define	ADTCS26_BTS  	(IO_ADTCS26.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS27,attr=IO,locate=0x1382
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS27STR;

__IO_EXTENDED	  ADTCS27STR	IO_ADTCS27;
#define	_adtcs27		(IO_ADTCS27)
#define	ADTCS27		(IO_ADTCS27.hword)
#define	ADTCS27_BUSY  	(IO_ADTCS27.bit.BUSY)
#define	ADTCS27_INT  	(IO_ADTCS27.bit.INT)
#define	ADTCS27_INTE  	(IO_ADTCS27.bit.INTE)
#define	ADTCS27_STS  	(IO_ADTCS27.bit.STS)
#define	ADTCS27_RPT  	(IO_ADTCS27.bit.RPT)
#define	ADTCS27_PRT  	(IO_ADTCS27.bit.PRT)
#define	ADTCS27_PRTS  	(IO_ADTCS27.bit.PRTS)
#define	ADTCS27_SEL  	(IO_ADTCS27.bit.SEL)
#define	ADTCS27_BUFX  	(IO_ADTCS27.bit.BUFX)
#define	ADTCS27_BTS  	(IO_ADTCS27.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS28,attr=IO,locate=0x1384
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS28STR;

__IO_EXTENDED	  ADTCS28STR	IO_ADTCS28;
#define	_adtcs28		(IO_ADTCS28)
#define	ADTCS28		(IO_ADTCS28.hword)
#define	ADTCS28_BUSY  	(IO_ADTCS28.bit.BUSY)
#define	ADTCS28_INT  	(IO_ADTCS28.bit.INT)
#define	ADTCS28_INTE  	(IO_ADTCS28.bit.INTE)
#define	ADTCS28_STS  	(IO_ADTCS28.bit.STS)
#define	ADTCS28_RPT  	(IO_ADTCS28.bit.RPT)
#define	ADTCS28_PRT  	(IO_ADTCS28.bit.PRT)
#define	ADTCS28_PRTS  	(IO_ADTCS28.bit.PRTS)
#define	ADTCS28_SEL  	(IO_ADTCS28.bit.SEL)
#define	ADTCS28_BUFX  	(IO_ADTCS28.bit.BUFX)
#define	ADTCS28_BTS  	(IO_ADTCS28.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS29,attr=IO,locate=0x1386
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS29STR;

__IO_EXTENDED	  ADTCS29STR	IO_ADTCS29;
#define	_adtcs29		(IO_ADTCS29)
#define	ADTCS29		(IO_ADTCS29.hword)
#define	ADTCS29_BUSY  	(IO_ADTCS29.bit.BUSY)
#define	ADTCS29_INT  	(IO_ADTCS29.bit.INT)
#define	ADTCS29_INTE  	(IO_ADTCS29.bit.INTE)
#define	ADTCS29_STS  	(IO_ADTCS29.bit.STS)
#define	ADTCS29_RPT  	(IO_ADTCS29.bit.RPT)
#define	ADTCS29_PRT  	(IO_ADTCS29.bit.PRT)
#define	ADTCS29_PRTS  	(IO_ADTCS29.bit.PRTS)
#define	ADTCS29_SEL  	(IO_ADTCS29.bit.SEL)
#define	ADTCS29_BUFX  	(IO_ADTCS29.bit.BUFX)
#define	ADTCS29_BTS  	(IO_ADTCS29.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS30,attr=IO,locate=0x1388
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS30STR;

__IO_EXTENDED	  ADTCS30STR	IO_ADTCS30;
#define	_adtcs30		(IO_ADTCS30)
#define	ADTCS30		(IO_ADTCS30.hword)
#define	ADTCS30_BUSY  	(IO_ADTCS30.bit.BUSY)
#define	ADTCS30_INT  	(IO_ADTCS30.bit.INT)
#define	ADTCS30_INTE  	(IO_ADTCS30.bit.INTE)
#define	ADTCS30_STS  	(IO_ADTCS30.bit.STS)
#define	ADTCS30_RPT  	(IO_ADTCS30.bit.RPT)
#define	ADTCS30_PRT  	(IO_ADTCS30.bit.PRT)
#define	ADTCS30_PRTS  	(IO_ADTCS30.bit.PRTS)
#define	ADTCS30_SEL  	(IO_ADTCS30.bit.SEL)
#define	ADTCS30_BUFX  	(IO_ADTCS30.bit.BUFX)
#define	ADTCS30_BTS  	(IO_ADTCS30.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS31,attr=IO,locate=0x138A
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS31STR;

__IO_EXTENDED	  ADTCS31STR	IO_ADTCS31;
#define	_adtcs31		(IO_ADTCS31)
#define	ADTCS31		(IO_ADTCS31.hword)
#define	ADTCS31_BUSY  	(IO_ADTCS31.bit.BUSY)
#define	ADTCS31_INT  	(IO_ADTCS31.bit.INT)
#define	ADTCS31_INTE  	(IO_ADTCS31.bit.INTE)
#define	ADTCS31_STS  	(IO_ADTCS31.bit.STS)
#define	ADTCS31_RPT  	(IO_ADTCS31.bit.RPT)
#define	ADTCS31_PRT  	(IO_ADTCS31.bit.PRT)
#define	ADTCS31_PRTS  	(IO_ADTCS31.bit.PRTS)
#define	ADTCS31_SEL  	(IO_ADTCS31.bit.SEL)
#define	ADTCS31_BUFX  	(IO_ADTCS31.bit.BUFX)
#define	ADTCS31_BTS  	(IO_ADTCS31.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD0,attr=IO,locate=0x138C
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD0STR;

__IO_EXTENDED	 const  ADTCD0STR	IO_ADTCD0;
#define	_adtcd0		(IO_ADTCD0)
#define	ADTCD0		(IO_ADTCD0.hword)
#define	ADTCD0_ERR  	(IO_ADTCD0.bit.ERR)
#define	ADTCD0_ERRST  	(IO_ADTCD0.bit.ERRST)
#define	ADTCD0_D  	(IO_ADTCD0.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD1,attr=IO,locate=0x138E
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD1STR;

__IO_EXTENDED	 const  ADTCD1STR	IO_ADTCD1;
#define	_adtcd1		(IO_ADTCD1)
#define	ADTCD1		(IO_ADTCD1.hword)
#define	ADTCD1_ERR  	(IO_ADTCD1.bit.ERR)
#define	ADTCD1_ERRST  	(IO_ADTCD1.bit.ERRST)
#define	ADTCD1_D  	(IO_ADTCD1.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD2,attr=IO,locate=0x1390
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD2STR;

__IO_EXTENDED	 const  ADTCD2STR	IO_ADTCD2;
#define	_adtcd2		(IO_ADTCD2)
#define	ADTCD2		(IO_ADTCD2.hword)
#define	ADTCD2_ERR  	(IO_ADTCD2.bit.ERR)
#define	ADTCD2_ERRST  	(IO_ADTCD2.bit.ERRST)
#define	ADTCD2_D  	(IO_ADTCD2.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD3,attr=IO,locate=0x1392
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD3STR;

__IO_EXTENDED	 const  ADTCD3STR	IO_ADTCD3;
#define	_adtcd3		(IO_ADTCD3)
#define	ADTCD3		(IO_ADTCD3.hword)
#define	ADTCD3_ERR  	(IO_ADTCD3.bit.ERR)
#define	ADTCD3_ERRST  	(IO_ADTCD3.bit.ERRST)
#define	ADTCD3_D  	(IO_ADTCD3.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD4,attr=IO,locate=0x1394
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD4STR;

__IO_EXTENDED	 const  ADTCD4STR	IO_ADTCD4;
#define	_adtcd4		(IO_ADTCD4)
#define	ADTCD4		(IO_ADTCD4.hword)
#define	ADTCD4_ERR  	(IO_ADTCD4.bit.ERR)
#define	ADTCD4_ERRST  	(IO_ADTCD4.bit.ERRST)
#define	ADTCD4_D  	(IO_ADTCD4.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD5,attr=IO,locate=0x1396
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD5STR;

__IO_EXTENDED	 const  ADTCD5STR	IO_ADTCD5;
#define	_adtcd5		(IO_ADTCD5)
#define	ADTCD5		(IO_ADTCD5.hword)
#define	ADTCD5_ERR  	(IO_ADTCD5.bit.ERR)
#define	ADTCD5_ERRST  	(IO_ADTCD5.bit.ERRST)
#define	ADTCD5_D  	(IO_ADTCD5.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD6,attr=IO,locate=0x1398
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD6STR;

__IO_EXTENDED	 const  ADTCD6STR	IO_ADTCD6;
#define	_adtcd6		(IO_ADTCD6)
#define	ADTCD6		(IO_ADTCD6.hword)
#define	ADTCD6_ERR  	(IO_ADTCD6.bit.ERR)
#define	ADTCD6_ERRST  	(IO_ADTCD6.bit.ERRST)
#define	ADTCD6_D  	(IO_ADTCD6.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD7,attr=IO,locate=0x139A
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD7STR;

__IO_EXTENDED	 const  ADTCD7STR	IO_ADTCD7;
#define	_adtcd7		(IO_ADTCD7)
#define	ADTCD7		(IO_ADTCD7.hword)
#define	ADTCD7_ERR  	(IO_ADTCD7.bit.ERR)
#define	ADTCD7_ERRST  	(IO_ADTCD7.bit.ERRST)
#define	ADTCD7_D  	(IO_ADTCD7.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD8,attr=IO,locate=0x139C
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD8STR;

__IO_EXTENDED	 const  ADTCD8STR	IO_ADTCD8;
#define	_adtcd8		(IO_ADTCD8)
#define	ADTCD8		(IO_ADTCD8.hword)
#define	ADTCD8_ERR  	(IO_ADTCD8.bit.ERR)
#define	ADTCD8_ERRST  	(IO_ADTCD8.bit.ERRST)
#define	ADTCD8_D  	(IO_ADTCD8.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD9,attr=IO,locate=0x139E
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD9STR;

__IO_EXTENDED	 const  ADTCD9STR	IO_ADTCD9;
#define	_adtcd9		(IO_ADTCD9)
#define	ADTCD9		(IO_ADTCD9.hword)
#define	ADTCD9_ERR  	(IO_ADTCD9.bit.ERR)
#define	ADTCD9_ERRST  	(IO_ADTCD9.bit.ERRST)
#define	ADTCD9_D  	(IO_ADTCD9.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD10,attr=IO,locate=0x13A0
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD10STR;

__IO_EXTENDED	 const  ADTCD10STR	IO_ADTCD10;
#define	_adtcd10		(IO_ADTCD10)
#define	ADTCD10		(IO_ADTCD10.hword)
#define	ADTCD10_ERR  	(IO_ADTCD10.bit.ERR)
#define	ADTCD10_ERRST  	(IO_ADTCD10.bit.ERRST)
#define	ADTCD10_D  	(IO_ADTCD10.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD11,attr=IO,locate=0x13A2
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD11STR;

__IO_EXTENDED	 const  ADTCD11STR	IO_ADTCD11;
#define	_adtcd11		(IO_ADTCD11)
#define	ADTCD11		(IO_ADTCD11.hword)
#define	ADTCD11_ERR  	(IO_ADTCD11.bit.ERR)
#define	ADTCD11_ERRST  	(IO_ADTCD11.bit.ERRST)
#define	ADTCD11_D  	(IO_ADTCD11.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD12,attr=IO,locate=0x13A4
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD12STR;

__IO_EXTENDED	 const  ADTCD12STR	IO_ADTCD12;
#define	_adtcd12		(IO_ADTCD12)
#define	ADTCD12		(IO_ADTCD12.hword)
#define	ADTCD12_ERR  	(IO_ADTCD12.bit.ERR)
#define	ADTCD12_ERRST  	(IO_ADTCD12.bit.ERRST)
#define	ADTCD12_D  	(IO_ADTCD12.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD13,attr=IO,locate=0x13A6
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD13STR;

__IO_EXTENDED	 const  ADTCD13STR	IO_ADTCD13;
#define	_adtcd13		(IO_ADTCD13)
#define	ADTCD13		(IO_ADTCD13.hword)
#define	ADTCD13_ERR  	(IO_ADTCD13.bit.ERR)
#define	ADTCD13_ERRST  	(IO_ADTCD13.bit.ERRST)
#define	ADTCD13_D  	(IO_ADTCD13.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD14,attr=IO,locate=0x13A8
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD14STR;

__IO_EXTENDED	 const  ADTCD14STR	IO_ADTCD14;
#define	_adtcd14		(IO_ADTCD14)
#define	ADTCD14		(IO_ADTCD14.hword)
#define	ADTCD14_ERR  	(IO_ADTCD14.bit.ERR)
#define	ADTCD14_ERRST  	(IO_ADTCD14.bit.ERRST)
#define	ADTCD14_D  	(IO_ADTCD14.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD15,attr=IO,locate=0x13AA
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD15STR;

__IO_EXTENDED	 const  ADTCD15STR	IO_ADTCD15;
#define	_adtcd15		(IO_ADTCD15)
#define	ADTCD15		(IO_ADTCD15.hword)
#define	ADTCD15_ERR  	(IO_ADTCD15.bit.ERR)
#define	ADTCD15_ERRST  	(IO_ADTCD15.bit.ERRST)
#define	ADTCD15_D  	(IO_ADTCD15.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD16,attr=IO,locate=0x13AC
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD16STR;

__IO_EXTENDED	 const  ADTCD16STR	IO_ADTCD16;
#define	_adtcd16		(IO_ADTCD16)
#define	ADTCD16		(IO_ADTCD16.hword)
#define	ADTCD16_ERR  	(IO_ADTCD16.bit.ERR)
#define	ADTCD16_ERRST  	(IO_ADTCD16.bit.ERRST)
#define	ADTCD16_D  	(IO_ADTCD16.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD17,attr=IO,locate=0x13AE
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD17STR;

__IO_EXTENDED	 const  ADTCD17STR	IO_ADTCD17;
#define	_adtcd17		(IO_ADTCD17)
#define	ADTCD17		(IO_ADTCD17.hword)
#define	ADTCD17_ERR  	(IO_ADTCD17.bit.ERR)
#define	ADTCD17_ERRST  	(IO_ADTCD17.bit.ERRST)
#define	ADTCD17_D  	(IO_ADTCD17.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD18,attr=IO,locate=0x13B0
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD18STR;

__IO_EXTENDED	 const  ADTCD18STR	IO_ADTCD18;
#define	_adtcd18		(IO_ADTCD18)
#define	ADTCD18		(IO_ADTCD18.hword)
#define	ADTCD18_ERR  	(IO_ADTCD18.bit.ERR)
#define	ADTCD18_ERRST  	(IO_ADTCD18.bit.ERRST)
#define	ADTCD18_D  	(IO_ADTCD18.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD19,attr=IO,locate=0x13B2
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD19STR;

__IO_EXTENDED	 const  ADTCD19STR	IO_ADTCD19;
#define	_adtcd19		(IO_ADTCD19)
#define	ADTCD19		(IO_ADTCD19.hword)
#define	ADTCD19_ERR  	(IO_ADTCD19.bit.ERR)
#define	ADTCD19_ERRST  	(IO_ADTCD19.bit.ERRST)
#define	ADTCD19_D  	(IO_ADTCD19.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD20,attr=IO,locate=0x13B4
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD20STR;

__IO_EXTENDED	 const  ADTCD20STR	IO_ADTCD20;
#define	_adtcd20		(IO_ADTCD20)
#define	ADTCD20		(IO_ADTCD20.hword)
#define	ADTCD20_ERR  	(IO_ADTCD20.bit.ERR)
#define	ADTCD20_ERRST  	(IO_ADTCD20.bit.ERRST)
#define	ADTCD20_D  	(IO_ADTCD20.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD21,attr=IO,locate=0x13B6
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD21STR;

__IO_EXTENDED	 const  ADTCD21STR	IO_ADTCD21;
#define	_adtcd21		(IO_ADTCD21)
#define	ADTCD21		(IO_ADTCD21.hword)
#define	ADTCD21_ERR  	(IO_ADTCD21.bit.ERR)
#define	ADTCD21_ERRST  	(IO_ADTCD21.bit.ERRST)
#define	ADTCD21_D  	(IO_ADTCD21.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD22,attr=IO,locate=0x13B8
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD22STR;

__IO_EXTENDED	 const  ADTCD22STR	IO_ADTCD22;
#define	_adtcd22		(IO_ADTCD22)
#define	ADTCD22		(IO_ADTCD22.hword)
#define	ADTCD22_ERR  	(IO_ADTCD22.bit.ERR)
#define	ADTCD22_ERRST  	(IO_ADTCD22.bit.ERRST)
#define	ADTCD22_D  	(IO_ADTCD22.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD23,attr=IO,locate=0x13BA
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD23STR;

__IO_EXTENDED	 const  ADTCD23STR	IO_ADTCD23;
#define	_adtcd23		(IO_ADTCD23)
#define	ADTCD23		(IO_ADTCD23.hword)
#define	ADTCD23_ERR  	(IO_ADTCD23.bit.ERR)
#define	ADTCD23_ERRST  	(IO_ADTCD23.bit.ERRST)
#define	ADTCD23_D  	(IO_ADTCD23.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD24,attr=IO,locate=0x13BC
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD24STR;

__IO_EXTENDED	 const  ADTCD24STR	IO_ADTCD24;
#define	_adtcd24		(IO_ADTCD24)
#define	ADTCD24		(IO_ADTCD24.hword)
#define	ADTCD24_ERR  	(IO_ADTCD24.bit.ERR)
#define	ADTCD24_ERRST  	(IO_ADTCD24.bit.ERRST)
#define	ADTCD24_D  	(IO_ADTCD24.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD25,attr=IO,locate=0x13BE
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD25STR;

__IO_EXTENDED	 const  ADTCD25STR	IO_ADTCD25;
#define	_adtcd25		(IO_ADTCD25)
#define	ADTCD25		(IO_ADTCD25.hword)
#define	ADTCD25_ERR  	(IO_ADTCD25.bit.ERR)
#define	ADTCD25_ERRST  	(IO_ADTCD25.bit.ERRST)
#define	ADTCD25_D  	(IO_ADTCD25.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD26,attr=IO,locate=0x13C0
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD26STR;

__IO_EXTENDED	 const  ADTCD26STR	IO_ADTCD26;
#define	_adtcd26		(IO_ADTCD26)
#define	ADTCD26		(IO_ADTCD26.hword)
#define	ADTCD26_ERR  	(IO_ADTCD26.bit.ERR)
#define	ADTCD26_ERRST  	(IO_ADTCD26.bit.ERRST)
#define	ADTCD26_D  	(IO_ADTCD26.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD27,attr=IO,locate=0x13C2
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD27STR;

__IO_EXTENDED	 const  ADTCD27STR	IO_ADTCD27;
#define	_adtcd27		(IO_ADTCD27)
#define	ADTCD27		(IO_ADTCD27.hword)
#define	ADTCD27_ERR  	(IO_ADTCD27.bit.ERR)
#define	ADTCD27_ERRST  	(IO_ADTCD27.bit.ERRST)
#define	ADTCD27_D  	(IO_ADTCD27.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD28,attr=IO,locate=0x13C4
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD28STR;

__IO_EXTENDED	 const  ADTCD28STR	IO_ADTCD28;
#define	_adtcd28		(IO_ADTCD28)
#define	ADTCD28		(IO_ADTCD28.hword)
#define	ADTCD28_ERR  	(IO_ADTCD28.bit.ERR)
#define	ADTCD28_ERRST  	(IO_ADTCD28.bit.ERRST)
#define	ADTCD28_D  	(IO_ADTCD28.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD29,attr=IO,locate=0x13C6
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD29STR;

__IO_EXTENDED	 const  ADTCD29STR	IO_ADTCD29;
#define	_adtcd29		(IO_ADTCD29)
#define	ADTCD29		(IO_ADTCD29.hword)
#define	ADTCD29_ERR  	(IO_ADTCD29.bit.ERR)
#define	ADTCD29_ERRST  	(IO_ADTCD29.bit.ERRST)
#define	ADTCD29_D  	(IO_ADTCD29.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD30,attr=IO,locate=0x13C8
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD30STR;

__IO_EXTENDED	 const  ADTCD30STR	IO_ADTCD30;
#define	_adtcd30		(IO_ADTCD30)
#define	ADTCD30		(IO_ADTCD30.hword)
#define	ADTCD30_ERR  	(IO_ADTCD30.bit.ERR)
#define	ADTCD30_ERRST  	(IO_ADTCD30.bit.ERRST)
#define	ADTCD30_D  	(IO_ADTCD30.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD31,attr=IO,locate=0x13CA
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD31STR;

__IO_EXTENDED	 const  ADTCD31STR	IO_ADTCD31;
#define	_adtcd31		(IO_ADTCD31)
#define	ADTCD31		(IO_ADTCD31.hword)
#define	ADTCD31_ERR  	(IO_ADTCD31.bit.ERR)
#define	ADTCD31_ERRST  	(IO_ADTCD31.bit.ERRST)
#define	ADTCD31_D  	(IO_ADTCD31.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS0,attr=IO,locate=0x13CC
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS0STR;

__IO_EXTENDED	  ADTECS0STR	IO_ADTECS0;
#define	_adtecs0		(IO_ADTECS0)
#define	ADTECS0		(IO_ADTECS0.hword)
#define	ADTECS0_STS2  	(IO_ADTECS0.bit.STS2)
#define	ADTECS0_CHSEL  	(IO_ADTECS0.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS1,attr=IO,locate=0x13CE
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS1STR;

__IO_EXTENDED	  ADTECS1STR	IO_ADTECS1;
#define	_adtecs1		(IO_ADTECS1)
#define	ADTECS1		(IO_ADTECS1.hword)
#define	ADTECS1_STS2  	(IO_ADTECS1.bit.STS2)
#define	ADTECS1_CHSEL  	(IO_ADTECS1.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS2,attr=IO,locate=0x13D0
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS2STR;

__IO_EXTENDED	  ADTECS2STR	IO_ADTECS2;
#define	_adtecs2		(IO_ADTECS2)
#define	ADTECS2		(IO_ADTECS2.hword)
#define	ADTECS2_STS2  	(IO_ADTECS2.bit.STS2)
#define	ADTECS2_CHSEL  	(IO_ADTECS2.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS3,attr=IO,locate=0x13D2
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS3STR;

__IO_EXTENDED	  ADTECS3STR	IO_ADTECS3;
#define	_adtecs3		(IO_ADTECS3)
#define	ADTECS3		(IO_ADTECS3.hword)
#define	ADTECS3_STS2  	(IO_ADTECS3.bit.STS2)
#define	ADTECS3_CHSEL  	(IO_ADTECS3.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS4,attr=IO,locate=0x13D4
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS4STR;

__IO_EXTENDED	  ADTECS4STR	IO_ADTECS4;
#define	_adtecs4		(IO_ADTECS4)
#define	ADTECS4		(IO_ADTECS4.hword)
#define	ADTECS4_STS2  	(IO_ADTECS4.bit.STS2)
#define	ADTECS4_CHSEL  	(IO_ADTECS4.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS5,attr=IO,locate=0x13D6
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS5STR;

__IO_EXTENDED	  ADTECS5STR	IO_ADTECS5;
#define	_adtecs5		(IO_ADTECS5)
#define	ADTECS5			(IO_ADTECS5.hword)
#define	ADTECS5_STS2  	(IO_ADTECS5.bit.STS2)
#define	ADTECS5_CHSEL  	(IO_ADTECS5.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS6,attr=IO,locate=0x13D8
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS6STR;

__IO_EXTENDED	  ADTECS6STR	IO_ADTECS6;
#define	_adtecs6		(IO_ADTECS6)
#define	ADTECS6		(IO_ADTECS6.hword)
#define	ADTECS6_STS2  	(IO_ADTECS6.bit.STS2)
#define	ADTECS6_CHSEL  	(IO_ADTECS6.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS7,attr=IO,locate=0x13DA
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS7STR;

__IO_EXTENDED	  ADTECS7STR	IO_ADTECS7;
#define	_adtecs7		(IO_ADTECS7)
#define	ADTECS7		(IO_ADTECS7.hword)
#define	ADTECS7_STS2  	(IO_ADTECS7.bit.STS2)
#define	ADTECS7_CHSEL  	(IO_ADTECS7.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS8,attr=IO,locate=0x13DC
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS8STR;

__IO_EXTENDED	  ADTECS8STR	IO_ADTECS8;
#define	_adtecs8		(IO_ADTECS8)
#define	ADTECS8		(IO_ADTECS8.hword)
#define	ADTECS8_STS2  	(IO_ADTECS8.bit.STS2)
#define	ADTECS8_CHSEL  	(IO_ADTECS8.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS9,attr=IO,locate=0x13DE
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS9STR;

__IO_EXTENDED	  ADTECS9STR	IO_ADTECS9;
#define	_adtecs9		(IO_ADTECS9)
#define	ADTECS9		(IO_ADTECS9.hword)
#define	ADTECS9_STS2  	(IO_ADTECS9.bit.STS2)
#define	ADTECS9_CHSEL  	(IO_ADTECS9.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS10,attr=IO,locate=0x13E0
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS10STR;

__IO_EXTENDED	  ADTECS10STR	IO_ADTECS10;
#define	_adtecs10		(IO_ADTECS10)
#define	ADTECS10		(IO_ADTECS10.hword)
#define	ADTECS10_STS2  	(IO_ADTECS10.bit.STS2)
#define	ADTECS10_CHSEL  	(IO_ADTECS10.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS11,attr=IO,locate=0x13E2
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS11STR;

__IO_EXTENDED	  ADTECS11STR	IO_ADTECS11;
#define	_adtecs11		(IO_ADTECS11)
#define	ADTECS11		(IO_ADTECS11.hword)
#define	ADTECS11_STS2  	(IO_ADTECS11.bit.STS2)
#define	ADTECS11_CHSEL  	(IO_ADTECS11.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS12,attr=IO,locate=0x13E4
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS12STR;

__IO_EXTENDED	  ADTECS12STR	IO_ADTECS12;
#define	_adtecs12		(IO_ADTECS12)
#define	ADTECS12		(IO_ADTECS12.hword)
#define	ADTECS12_STS2  	(IO_ADTECS12.bit.STS2)
#define	ADTECS12_CHSEL  	(IO_ADTECS12.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS13,attr=IO,locate=0x13E6
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS13STR;

__IO_EXTENDED	  ADTECS13STR	IO_ADTECS13;
#define	_adtecs13		(IO_ADTECS13)
#define	ADTECS13		(IO_ADTECS13.hword)
#define	ADTECS13_STS2  	(IO_ADTECS13.bit.STS2)
#define	ADTECS13_CHSEL  	(IO_ADTECS13.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS14,attr=IO,locate=0x13E8
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS14STR;

__IO_EXTENDED	  ADTECS14STR	IO_ADTECS14;
#define	_adtecs14		(IO_ADTECS14)
#define	ADTECS14		(IO_ADTECS14.hword)
#define	ADTECS14_STS2  	(IO_ADTECS14.bit.STS2)
#define	ADTECS14_CHSEL  	(IO_ADTECS14.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS15,attr=IO,locate=0x13EA
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS15STR;

__IO_EXTENDED	  ADTECS15STR	IO_ADTECS15;
#define	_adtecs15		(IO_ADTECS15)
#define	ADTECS15		(IO_ADTECS15.hword)
#define	ADTECS15_STS2  	(IO_ADTECS15.bit.STS2)
#define	ADTECS15_CHSEL  	(IO_ADTECS15.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS16,attr=IO,locate=0x13EC
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS16STR;

__IO_EXTENDED	  ADTECS16STR	IO_ADTECS16;
#define	_adtecs16		(IO_ADTECS16)
#define	ADTECS16		(IO_ADTECS16.hword)
#define	ADTECS16_STS2  	(IO_ADTECS16.bit.STS2)
#define	ADTECS16_CHSEL  	(IO_ADTECS16.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS17,attr=IO,locate=0x13EE
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS17STR;

__IO_EXTENDED	  ADTECS17STR	IO_ADTECS17;
#define	_adtecs17		(IO_ADTECS17)
#define	ADTECS17		(IO_ADTECS17.hword)
#define	ADTECS17_STS2  	(IO_ADTECS17.bit.STS2)
#define	ADTECS17_CHSEL  	(IO_ADTECS17.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS18,attr=IO,locate=0x13F0
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS18STR;

__IO_EXTENDED	  ADTECS18STR	IO_ADTECS18;
#define	_adtecs18		(IO_ADTECS18)
#define	ADTECS18		(IO_ADTECS18.hword)
#define	ADTECS18_STS2  	(IO_ADTECS18.bit.STS2)
#define	ADTECS18_CHSEL  	(IO_ADTECS18.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS19,attr=IO,locate=0x13F2
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS19STR;

__IO_EXTENDED	  ADTECS19STR	IO_ADTECS19;
#define	_adtecs19		(IO_ADTECS19)
#define	ADTECS19		(IO_ADTECS19.hword)
#define	ADTECS19_STS2  	(IO_ADTECS19.bit.STS2)
#define	ADTECS19_CHSEL  	(IO_ADTECS19.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS20,attr=IO,locate=0x13F4
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS20STR;

__IO_EXTENDED	  ADTECS20STR	IO_ADTECS20;
#define	_adtecs20		(IO_ADTECS20)
#define	ADTECS20		(IO_ADTECS20.hword)
#define	ADTECS20_STS2  	(IO_ADTECS20.bit.STS2)
#define	ADTECS20_CHSEL  	(IO_ADTECS20.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS21,attr=IO,locate=0x13F6
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS21STR;

__IO_EXTENDED	  ADTECS21STR	IO_ADTECS21;
#define	_adtecs21		(IO_ADTECS21)
#define	ADTECS21		(IO_ADTECS21.hword)
#define	ADTECS21_STS2  	(IO_ADTECS21.bit.STS2)
#define	ADTECS21_CHSEL  	(IO_ADTECS21.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS22,attr=IO,locate=0x13F8
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS22STR;

__IO_EXTENDED	  ADTECS22STR	IO_ADTECS22;
#define	_adtecs22		(IO_ADTECS22)
#define	ADTECS22		(IO_ADTECS22.hword)
#define	ADTECS22_STS2  	(IO_ADTECS22.bit.STS2)
#define	ADTECS22_CHSEL  	(IO_ADTECS22.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS23,attr=IO,locate=0x13FA
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS23STR;

__IO_EXTENDED	  ADTECS23STR	IO_ADTECS23;
#define	_adtecs23		(IO_ADTECS23)
#define	ADTECS23		(IO_ADTECS23.hword)
#define	ADTECS23_STS2  	(IO_ADTECS23.bit.STS2)
#define	ADTECS23_CHSEL  	(IO_ADTECS23.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS24,attr=IO,locate=0x13FC
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS24STR;

__IO_EXTENDED	  ADTECS24STR	IO_ADTECS24;
#define	_adtecs24		(IO_ADTECS24)
#define	ADTECS24		(IO_ADTECS24.hword)
#define	ADTECS24_STS2  	(IO_ADTECS24.bit.STS2)
#define	ADTECS24_CHSEL  	(IO_ADTECS24.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS25,attr=IO,locate=0x13FE
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS25STR;

__IO_EXTENDED	  ADTECS25STR	IO_ADTECS25;
#define	_adtecs25		(IO_ADTECS25)
#define	ADTECS25		(IO_ADTECS25.hword)
#define	ADTECS25_STS2  	(IO_ADTECS25.bit.STS2)
#define	ADTECS25_CHSEL  	(IO_ADTECS25.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS26,attr=IO,locate=0x1400
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS26STR;

__IO_EXTENDED	  ADTECS26STR	IO_ADTECS26;
#define	_adtecs26		(IO_ADTECS26)
#define	ADTECS26		(IO_ADTECS26.hword)
#define	ADTECS26_STS2  	(IO_ADTECS26.bit.STS2)
#define	ADTECS26_CHSEL  	(IO_ADTECS26.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS27,attr=IO,locate=0x1402
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS27STR;

__IO_EXTENDED	  ADTECS27STR	IO_ADTECS27;
#define	_adtecs27		(IO_ADTECS27)
#define	ADTECS27		(IO_ADTECS27.hword)
#define	ADTECS27_STS2  	(IO_ADTECS27.bit.STS2)
#define	ADTECS27_CHSEL  	(IO_ADTECS27.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS28,attr=IO,locate=0x1404
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS28STR;

__IO_EXTENDED	  ADTECS28STR	IO_ADTECS28;
#define	_adtecs28		(IO_ADTECS28)
#define	ADTECS28		(IO_ADTECS28.hword)
#define	ADTECS28_STS2  	(IO_ADTECS28.bit.STS2)
#define	ADTECS28_CHSEL  	(IO_ADTECS28.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS29,attr=IO,locate=0x1406
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS29STR;

__IO_EXTENDED	  ADTECS29STR	IO_ADTECS29;
#define	_adtecs29		(IO_ADTECS29)
#define	ADTECS29		(IO_ADTECS29.hword)
#define	ADTECS29_STS2  	(IO_ADTECS29.bit.STS2)
#define	ADTECS29_CHSEL  	(IO_ADTECS29.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS30,attr=IO,locate=0x1408
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS30STR;

__IO_EXTENDED	  ADTECS30STR	IO_ADTECS30;
#define	_adtecs30		(IO_ADTECS30)
#define	ADTECS30		(IO_ADTECS30.hword)
#define	ADTECS30_STS2  	(IO_ADTECS30.bit.STS2)
#define	ADTECS30_CHSEL  	(IO_ADTECS30.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS31,attr=IO,locate=0x140A
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	CHSEL:5;
    } bit;
} ADTECS31STR;

__IO_EXTENDED	  ADTECS31STR	IO_ADTECS31;
#define	_adtecs31		(IO_ADTECS31)
#define	ADTECS31		(IO_ADTECS31.hword)
#define	ADTECS31_STS2  	(IO_ADTECS31.bit.STS2)
#define	ADTECS31_CHSEL  	(IO_ADTECS31.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCUT0,attr=IO,locate=0x140C
#endif

__IO_EXTENDED	__HWORD	IO_ADRCUT0;
#define	_adrcut0		(IO_ADRCUT0)
#define	ADRCUT0	(_adrcut0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCLT0,attr=IO,locate=0x140E
#endif

__IO_EXTENDED	__HWORD	IO_ADRCLT0;
#define	_adrclt0		(IO_ADRCLT0)
#define	ADRCLT0	(_adrclt0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCUT1,attr=IO,locate=0x1410
#endif

__IO_EXTENDED	__HWORD	IO_ADRCUT1;
#define	_adrcut1		(IO_ADRCUT1)
#define	ADRCUT1	(_adrcut1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCLT1,attr=IO,locate=0x1412
#endif

__IO_EXTENDED	__HWORD	IO_ADRCLT1;
#define	_adrclt1		(IO_ADRCLT1)
#define	ADRCLT1	(_adrclt1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCUT2,attr=IO,locate=0x1414
#endif

__IO_EXTENDED	__HWORD	IO_ADRCUT2;
#define	_adrcut2		(IO_ADRCUT2)
#define	ADRCUT2	(_adrcut2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCLT2,attr=IO,locate=0x1416
#endif

__IO_EXTENDED	__HWORD	IO_ADRCLT2;
#define	_adrclt2		(IO_ADRCLT2)
#define	ADRCLT2	(_adrclt2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCUT3,attr=IO,locate=0x1418
#endif

__IO_EXTENDED	__HWORD	IO_ADRCUT3;
#define	_adrcut3		(IO_ADRCUT3)
#define	ADRCUT3	(_adrcut3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCLT3,attr=IO,locate=0x141A
#endif

__IO_EXTENDED	__HWORD	IO_ADRCLT3;
#define	_adrclt3		(IO_ADRCLT3)
#define	ADRCLT3	(_adrclt3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS0,attr=IO,locate=0x141C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS0STR;

__IO_EXTENDED	  ADRCCS0STR	IO_ADRCCS0;
#define	_adrccs0		(IO_ADRCCS0)
#define	ADRCCS0		(IO_ADRCCS0.byte)
#define	ADRCCS0_RCOCD  	(IO_ADRCCS0.bit.RCOCD)
#define	ADRCCS0_RCOIRS  	(IO_ADRCCS0.bit.RCOIRS)
#define	ADRCCS0_RCOIE  	(IO_ADRCCS0.bit.RCOIE)
#define	ADRCCS0_RCOE  	(IO_ADRCCS0.bit.RCOE)
#define	ADRCCS0_RCOTS  	(IO_ADRCCS0.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS1,attr=IO,locate=0x141D
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS1STR;

__IO_EXTENDED	  ADRCCS1STR	IO_ADRCCS1;
#define	_adrccs1		(IO_ADRCCS1)
#define	ADRCCS1		(IO_ADRCCS1.byte)
#define	ADRCCS1_RCOCD  	(IO_ADRCCS1.bit.RCOCD)
#define	ADRCCS1_RCOIRS  	(IO_ADRCCS1.bit.RCOIRS)
#define	ADRCCS1_RCOIE  	(IO_ADRCCS1.bit.RCOIE)
#define	ADRCCS1_RCOE  	(IO_ADRCCS1.bit.RCOE)
#define	ADRCCS1_RCOTS  	(IO_ADRCCS1.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS2,attr=IO,locate=0x141E
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS2STR;

__IO_EXTENDED	  ADRCCS2STR	IO_ADRCCS2;
#define	_adrccs2		(IO_ADRCCS2)
#define	ADRCCS2		(IO_ADRCCS2.byte)
#define	ADRCCS2_RCOCD  	(IO_ADRCCS2.bit.RCOCD)
#define	ADRCCS2_RCOIRS  	(IO_ADRCCS2.bit.RCOIRS)
#define	ADRCCS2_RCOIE  	(IO_ADRCCS2.bit.RCOIE)
#define	ADRCCS2_RCOE  	(IO_ADRCCS2.bit.RCOE)
#define	ADRCCS2_RCOTS  	(IO_ADRCCS2.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS3,attr=IO,locate=0x141F
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS3STR;

__IO_EXTENDED	  ADRCCS3STR	IO_ADRCCS3;
#define	_adrccs3		(IO_ADRCCS3)
#define	ADRCCS3		(IO_ADRCCS3.byte)
#define	ADRCCS3_RCOCD  	(IO_ADRCCS3.bit.RCOCD)
#define	ADRCCS3_RCOIRS  	(IO_ADRCCS3.bit.RCOIRS)
#define	ADRCCS3_RCOIE  	(IO_ADRCCS3.bit.RCOIE)
#define	ADRCCS3_RCOE  	(IO_ADRCCS3.bit.RCOE)
#define	ADRCCS3_RCOTS  	(IO_ADRCCS3.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS4,attr=IO,locate=0x1420
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS4STR;

__IO_EXTENDED	  ADRCCS4STR	IO_ADRCCS4;
#define	_adrccs4		(IO_ADRCCS4)
#define	ADRCCS4		(IO_ADRCCS4.byte)
#define	ADRCCS4_RCOCD  	(IO_ADRCCS4.bit.RCOCD)
#define	ADRCCS4_RCOIRS  	(IO_ADRCCS4.bit.RCOIRS)
#define	ADRCCS4_RCOIE  	(IO_ADRCCS4.bit.RCOIE)
#define	ADRCCS4_RCOE  	(IO_ADRCCS4.bit.RCOE)
#define	ADRCCS4_RCOTS  	(IO_ADRCCS4.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS5,attr=IO,locate=0x1421
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS5STR;

__IO_EXTENDED	  ADRCCS5STR	IO_ADRCCS5;
#define	_adrccs5		(IO_ADRCCS5)
#define	ADRCCS5		(IO_ADRCCS5.byte)
#define	ADRCCS5_RCOCD  	(IO_ADRCCS5.bit.RCOCD)
#define	ADRCCS5_RCOIRS  	(IO_ADRCCS5.bit.RCOIRS)
#define	ADRCCS5_RCOIE  	(IO_ADRCCS5.bit.RCOIE)
#define	ADRCCS5_RCOE  	(IO_ADRCCS5.bit.RCOE)
#define	ADRCCS5_RCOTS  	(IO_ADRCCS5.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS6,attr=IO,locate=0x1422
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS6STR;

__IO_EXTENDED	  ADRCCS6STR	IO_ADRCCS6;
#define	_adrccs6		(IO_ADRCCS6)
#define	ADRCCS6		(IO_ADRCCS6.byte)
#define	ADRCCS6_RCOCD  	(IO_ADRCCS6.bit.RCOCD)
#define	ADRCCS6_RCOIRS  	(IO_ADRCCS6.bit.RCOIRS)
#define	ADRCCS6_RCOIE  	(IO_ADRCCS6.bit.RCOIE)
#define	ADRCCS6_RCOE  	(IO_ADRCCS6.bit.RCOE)
#define	ADRCCS6_RCOTS  	(IO_ADRCCS6.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS7,attr=IO,locate=0x1423
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS7STR;

__IO_EXTENDED	  ADRCCS7STR	IO_ADRCCS7;
#define	_adrccs7		(IO_ADRCCS7)
#define	ADRCCS7		(IO_ADRCCS7.byte)
#define	ADRCCS7_RCOCD  	(IO_ADRCCS7.bit.RCOCD)
#define	ADRCCS7_RCOIRS  	(IO_ADRCCS7.bit.RCOIRS)
#define	ADRCCS7_RCOIE  	(IO_ADRCCS7.bit.RCOIE)
#define	ADRCCS7_RCOE  	(IO_ADRCCS7.bit.RCOE)
#define	ADRCCS7_RCOTS  	(IO_ADRCCS7.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS8,attr=IO,locate=0x1424
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS8STR;

__IO_EXTENDED	  ADRCCS8STR	IO_ADRCCS8;
#define	_adrccs8		(IO_ADRCCS8)
#define	ADRCCS8		(IO_ADRCCS8.byte)
#define	ADRCCS8_RCOCD  	(IO_ADRCCS8.bit.RCOCD)
#define	ADRCCS8_RCOIRS  	(IO_ADRCCS8.bit.RCOIRS)
#define	ADRCCS8_RCOIE  	(IO_ADRCCS8.bit.RCOIE)
#define	ADRCCS8_RCOE  	(IO_ADRCCS8.bit.RCOE)
#define	ADRCCS8_RCOTS  	(IO_ADRCCS8.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS9,attr=IO,locate=0x1425
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS9STR;

__IO_EXTENDED	  ADRCCS9STR	IO_ADRCCS9;
#define	_adrccs9		(IO_ADRCCS9)
#define	ADRCCS9		(IO_ADRCCS9.byte)
#define	ADRCCS9_RCOCD  	(IO_ADRCCS9.bit.RCOCD)
#define	ADRCCS9_RCOIRS  	(IO_ADRCCS9.bit.RCOIRS)
#define	ADRCCS9_RCOIE  	(IO_ADRCCS9.bit.RCOIE)
#define	ADRCCS9_RCOE  	(IO_ADRCCS9.bit.RCOE)
#define	ADRCCS9_RCOTS  	(IO_ADRCCS9.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS10,attr=IO,locate=0x1426
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS10STR;

__IO_EXTENDED	  ADRCCS10STR	IO_ADRCCS10;
#define	_adrccs10		(IO_ADRCCS10)
#define	ADRCCS10		(IO_ADRCCS10.byte)
#define	ADRCCS10_RCOCD  	(IO_ADRCCS10.bit.RCOCD)
#define	ADRCCS10_RCOIRS  	(IO_ADRCCS10.bit.RCOIRS)
#define	ADRCCS10_RCOIE  	(IO_ADRCCS10.bit.RCOIE)
#define	ADRCCS10_RCOE  	(IO_ADRCCS10.bit.RCOE)
#define	ADRCCS10_RCOTS  	(IO_ADRCCS10.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS11,attr=IO,locate=0x1427
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS11STR;

__IO_EXTENDED	  ADRCCS11STR	IO_ADRCCS11;
#define	_adrccs11		(IO_ADRCCS11)
#define	ADRCCS11		(IO_ADRCCS11.byte)
#define	ADRCCS11_RCOCD  	(IO_ADRCCS11.bit.RCOCD)
#define	ADRCCS11_RCOIRS  	(IO_ADRCCS11.bit.RCOIRS)
#define	ADRCCS11_RCOIE  	(IO_ADRCCS11.bit.RCOIE)
#define	ADRCCS11_RCOE  	(IO_ADRCCS11.bit.RCOE)
#define	ADRCCS11_RCOTS  	(IO_ADRCCS11.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS12,attr=IO,locate=0x1428
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS12STR;

__IO_EXTENDED	  ADRCCS12STR	IO_ADRCCS12;
#define	_adrccs12		(IO_ADRCCS12)
#define	ADRCCS12		(IO_ADRCCS12.byte)
#define	ADRCCS12_RCOCD  	(IO_ADRCCS12.bit.RCOCD)
#define	ADRCCS12_RCOIRS  	(IO_ADRCCS12.bit.RCOIRS)
#define	ADRCCS12_RCOIE  	(IO_ADRCCS12.bit.RCOIE)
#define	ADRCCS12_RCOE  	(IO_ADRCCS12.bit.RCOE)
#define	ADRCCS12_RCOTS  	(IO_ADRCCS12.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS13,attr=IO,locate=0x1429
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS13STR;

__IO_EXTENDED	  ADRCCS13STR	IO_ADRCCS13;
#define	_adrccs13		(IO_ADRCCS13)
#define	ADRCCS13		(IO_ADRCCS13.byte)
#define	ADRCCS13_RCOCD  	(IO_ADRCCS13.bit.RCOCD)
#define	ADRCCS13_RCOIRS  	(IO_ADRCCS13.bit.RCOIRS)
#define	ADRCCS13_RCOIE  	(IO_ADRCCS13.bit.RCOIE)
#define	ADRCCS13_RCOE  	(IO_ADRCCS13.bit.RCOE)
#define	ADRCCS13_RCOTS  	(IO_ADRCCS13.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS14,attr=IO,locate=0x142A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS14STR;

__IO_EXTENDED	  ADRCCS14STR	IO_ADRCCS14;
#define	_adrccs14		(IO_ADRCCS14)
#define	ADRCCS14		(IO_ADRCCS14.byte)
#define	ADRCCS14_RCOCD  	(IO_ADRCCS14.bit.RCOCD)
#define	ADRCCS14_RCOIRS  	(IO_ADRCCS14.bit.RCOIRS)
#define	ADRCCS14_RCOIE  	(IO_ADRCCS14.bit.RCOIE)
#define	ADRCCS14_RCOE  	(IO_ADRCCS14.bit.RCOE)
#define	ADRCCS14_RCOTS  	(IO_ADRCCS14.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS15,attr=IO,locate=0x142B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS15STR;

__IO_EXTENDED	  ADRCCS15STR	IO_ADRCCS15;
#define	_adrccs15		(IO_ADRCCS15)
#define	ADRCCS15		(IO_ADRCCS15.byte)
#define	ADRCCS15_RCOCD  	(IO_ADRCCS15.bit.RCOCD)
#define	ADRCCS15_RCOIRS  	(IO_ADRCCS15.bit.RCOIRS)
#define	ADRCCS15_RCOIE  	(IO_ADRCCS15.bit.RCOIE)
#define	ADRCCS15_RCOE  	(IO_ADRCCS15.bit.RCOE)
#define	ADRCCS15_RCOTS  	(IO_ADRCCS15.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS16,attr=IO,locate=0x142C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS16STR;

__IO_EXTENDED	  ADRCCS16STR	IO_ADRCCS16;
#define	_adrccs16		(IO_ADRCCS16)
#define	ADRCCS16		(IO_ADRCCS16.byte)
#define	ADRCCS16_RCOCD  	(IO_ADRCCS16.bit.RCOCD)
#define	ADRCCS16_RCOIRS  	(IO_ADRCCS16.bit.RCOIRS)
#define	ADRCCS16_RCOIE  	(IO_ADRCCS16.bit.RCOIE)
#define	ADRCCS16_RCOE  	(IO_ADRCCS16.bit.RCOE)
#define	ADRCCS16_RCOTS  	(IO_ADRCCS16.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS17,attr=IO,locate=0x142D
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS17STR;

__IO_EXTENDED	  ADRCCS17STR	IO_ADRCCS17;
#define	_adrccs17		(IO_ADRCCS17)
#define	ADRCCS17		(IO_ADRCCS17.byte)
#define	ADRCCS17_RCOCD  	(IO_ADRCCS17.bit.RCOCD)
#define	ADRCCS17_RCOIRS  	(IO_ADRCCS17.bit.RCOIRS)
#define	ADRCCS17_RCOIE  	(IO_ADRCCS17.bit.RCOIE)
#define	ADRCCS17_RCOE  	(IO_ADRCCS17.bit.RCOE)
#define	ADRCCS17_RCOTS  	(IO_ADRCCS17.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS18,attr=IO,locate=0x142E
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS18STR;

__IO_EXTENDED	  ADRCCS18STR	IO_ADRCCS18;
#define	_adrccs18		(IO_ADRCCS18)
#define	ADRCCS18		(IO_ADRCCS18.byte)
#define	ADRCCS18_RCOCD  	(IO_ADRCCS18.bit.RCOCD)
#define	ADRCCS18_RCOIRS  	(IO_ADRCCS18.bit.RCOIRS)
#define	ADRCCS18_RCOIE  	(IO_ADRCCS18.bit.RCOIE)
#define	ADRCCS18_RCOE  	(IO_ADRCCS18.bit.RCOE)
#define	ADRCCS18_RCOTS  	(IO_ADRCCS18.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS19,attr=IO,locate=0x142F
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS19STR;

__IO_EXTENDED	  ADRCCS19STR	IO_ADRCCS19;
#define	_adrccs19		(IO_ADRCCS19)
#define	ADRCCS19		(IO_ADRCCS19.byte)
#define	ADRCCS19_RCOCD  	(IO_ADRCCS19.bit.RCOCD)
#define	ADRCCS19_RCOIRS  	(IO_ADRCCS19.bit.RCOIRS)
#define	ADRCCS19_RCOIE  	(IO_ADRCCS19.bit.RCOIE)
#define	ADRCCS19_RCOE  	(IO_ADRCCS19.bit.RCOE)
#define	ADRCCS19_RCOTS  	(IO_ADRCCS19.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS20,attr=IO,locate=0x1430
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS20STR;

__IO_EXTENDED	  ADRCCS20STR	IO_ADRCCS20;
#define	_adrccs20		(IO_ADRCCS20)
#define	ADRCCS20		(IO_ADRCCS20.byte)
#define	ADRCCS20_RCOCD  	(IO_ADRCCS20.bit.RCOCD)
#define	ADRCCS20_RCOIRS  	(IO_ADRCCS20.bit.RCOIRS)
#define	ADRCCS20_RCOIE  	(IO_ADRCCS20.bit.RCOIE)
#define	ADRCCS20_RCOE  	(IO_ADRCCS20.bit.RCOE)
#define	ADRCCS20_RCOTS  	(IO_ADRCCS20.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS21,attr=IO,locate=0x1431
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS21STR;

__IO_EXTENDED	  ADRCCS21STR	IO_ADRCCS21;
#define	_adrccs21		(IO_ADRCCS21)
#define	ADRCCS21		(IO_ADRCCS21.byte)
#define	ADRCCS21_RCOCD  	(IO_ADRCCS21.bit.RCOCD)
#define	ADRCCS21_RCOIRS  	(IO_ADRCCS21.bit.RCOIRS)
#define	ADRCCS21_RCOIE  	(IO_ADRCCS21.bit.RCOIE)
#define	ADRCCS21_RCOE  	(IO_ADRCCS21.bit.RCOE)
#define	ADRCCS21_RCOTS  	(IO_ADRCCS21.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS22,attr=IO,locate=0x1432
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS22STR;

__IO_EXTENDED	  ADRCCS22STR	IO_ADRCCS22;
#define	_adrccs22		(IO_ADRCCS22)
#define	ADRCCS22		(IO_ADRCCS22.byte)
#define	ADRCCS22_RCOCD  	(IO_ADRCCS22.bit.RCOCD)
#define	ADRCCS22_RCOIRS  	(IO_ADRCCS22.bit.RCOIRS)
#define	ADRCCS22_RCOIE  	(IO_ADRCCS22.bit.RCOIE)
#define	ADRCCS22_RCOE  	(IO_ADRCCS22.bit.RCOE)
#define	ADRCCS22_RCOTS  	(IO_ADRCCS22.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS23,attr=IO,locate=0x1433
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS23STR;

__IO_EXTENDED	  ADRCCS23STR	IO_ADRCCS23;
#define	_adrccs23		(IO_ADRCCS23)
#define	ADRCCS23		(IO_ADRCCS23.byte)
#define	ADRCCS23_RCOCD  	(IO_ADRCCS23.bit.RCOCD)
#define	ADRCCS23_RCOIRS  	(IO_ADRCCS23.bit.RCOIRS)
#define	ADRCCS23_RCOIE  	(IO_ADRCCS23.bit.RCOIE)
#define	ADRCCS23_RCOE  	(IO_ADRCCS23.bit.RCOE)
#define	ADRCCS23_RCOTS  	(IO_ADRCCS23.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS24,attr=IO,locate=0x1434
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS24STR;

__IO_EXTENDED	  ADRCCS24STR	IO_ADRCCS24;
#define	_adrccs24		(IO_ADRCCS24)
#define	ADRCCS24		(IO_ADRCCS24.byte)
#define	ADRCCS24_RCOCD  	(IO_ADRCCS24.bit.RCOCD)
#define	ADRCCS24_RCOIRS  	(IO_ADRCCS24.bit.RCOIRS)
#define	ADRCCS24_RCOIE  	(IO_ADRCCS24.bit.RCOIE)
#define	ADRCCS24_RCOE  	(IO_ADRCCS24.bit.RCOE)
#define	ADRCCS24_RCOTS  	(IO_ADRCCS24.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS25,attr=IO,locate=0x1435
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS25STR;

__IO_EXTENDED	  ADRCCS25STR	IO_ADRCCS25;
#define	_adrccs25		(IO_ADRCCS25)
#define	ADRCCS25		(IO_ADRCCS25.byte)
#define	ADRCCS25_RCOCD  	(IO_ADRCCS25.bit.RCOCD)
#define	ADRCCS25_RCOIRS  	(IO_ADRCCS25.bit.RCOIRS)
#define	ADRCCS25_RCOIE  	(IO_ADRCCS25.bit.RCOIE)
#define	ADRCCS25_RCOE  	(IO_ADRCCS25.bit.RCOE)
#define	ADRCCS25_RCOTS  	(IO_ADRCCS25.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS26,attr=IO,locate=0x1436
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS26STR;

__IO_EXTENDED	  ADRCCS26STR	IO_ADRCCS26;
#define	_adrccs26		(IO_ADRCCS26)
#define	ADRCCS26		(IO_ADRCCS26.byte)
#define	ADRCCS26_RCOCD  	(IO_ADRCCS26.bit.RCOCD)
#define	ADRCCS26_RCOIRS  	(IO_ADRCCS26.bit.RCOIRS)
#define	ADRCCS26_RCOIE  	(IO_ADRCCS26.bit.RCOIE)
#define	ADRCCS26_RCOE  	(IO_ADRCCS26.bit.RCOE)
#define	ADRCCS26_RCOTS  	(IO_ADRCCS26.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS27,attr=IO,locate=0x1437
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS27STR;

__IO_EXTENDED	  ADRCCS27STR	IO_ADRCCS27;
#define	_adrccs27		(IO_ADRCCS27)
#define	ADRCCS27		(IO_ADRCCS27.byte)
#define	ADRCCS27_RCOCD  	(IO_ADRCCS27.bit.RCOCD)
#define	ADRCCS27_RCOIRS  	(IO_ADRCCS27.bit.RCOIRS)
#define	ADRCCS27_RCOIE  	(IO_ADRCCS27.bit.RCOIE)
#define	ADRCCS27_RCOE  	(IO_ADRCCS27.bit.RCOE)
#define	ADRCCS27_RCOTS  	(IO_ADRCCS27.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS28,attr=IO,locate=0x1438
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS28STR;

__IO_EXTENDED	  ADRCCS28STR	IO_ADRCCS28;
#define	_adrccs28		(IO_ADRCCS28)
#define	ADRCCS28		(IO_ADRCCS28.byte)
#define	ADRCCS28_RCOCD  	(IO_ADRCCS28.bit.RCOCD)
#define	ADRCCS28_RCOIRS  	(IO_ADRCCS28.bit.RCOIRS)
#define	ADRCCS28_RCOIE  	(IO_ADRCCS28.bit.RCOIE)
#define	ADRCCS28_RCOE  	(IO_ADRCCS28.bit.RCOE)
#define	ADRCCS28_RCOTS  	(IO_ADRCCS28.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS29,attr=IO,locate=0x1439
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS29STR;

__IO_EXTENDED	  ADRCCS29STR	IO_ADRCCS29;
#define	_adrccs29		(IO_ADRCCS29)
#define	ADRCCS29		(IO_ADRCCS29.byte)
#define	ADRCCS29_RCOCD  	(IO_ADRCCS29.bit.RCOCD)
#define	ADRCCS29_RCOIRS  	(IO_ADRCCS29.bit.RCOIRS)
#define	ADRCCS29_RCOIE  	(IO_ADRCCS29.bit.RCOIE)
#define	ADRCCS29_RCOE  	(IO_ADRCCS29.bit.RCOE)
#define	ADRCCS29_RCOTS  	(IO_ADRCCS29.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS30,attr=IO,locate=0x143A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS30STR;

__IO_EXTENDED	  ADRCCS30STR	IO_ADRCCS30;
#define	_adrccs30		(IO_ADRCCS30)
#define	ADRCCS30		(IO_ADRCCS30.byte)
#define	ADRCCS30_RCOCD  	(IO_ADRCCS30.bit.RCOCD)
#define	ADRCCS30_RCOIRS  	(IO_ADRCCS30.bit.RCOIRS)
#define	ADRCCS30_RCOIE  	(IO_ADRCCS30.bit.RCOIE)
#define	ADRCCS30_RCOE  	(IO_ADRCCS30.bit.RCOE)
#define	ADRCCS30_RCOTS  	(IO_ADRCCS30.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS31,attr=IO,locate=0x143B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS31STR;

__IO_EXTENDED	  ADRCCS31STR	IO_ADRCCS31;
#define	_adrccs31		(IO_ADRCCS31)
#define	ADRCCS31		(IO_ADRCCS31.byte)
#define	ADRCCS31_RCOCD  	(IO_ADRCCS31.bit.RCOCD)
#define	ADRCCS31_RCOIRS  	(IO_ADRCCS31.bit.RCOIRS)
#define	ADRCCS31_RCOIE  	(IO_ADRCCS31.bit.RCOIE)
#define	ADRCCS31_RCOE  	(IO_ADRCCS31.bit.RCOE)
#define	ADRCCS31_RCOTS  	(IO_ADRCCS31.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCOT0,attr=IO,locate=0x143C
#endif

__IO_EXTENDED	const __WORD	IO_ADRCOT0;
#define	_adrcot0		(IO_ADRCOT0)
#define	ADRCOT0	(_adrcot0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCIF0,attr=IO,locate=0x1440
#endif

__IO_EXTENDED	__WORD	IO_ADRCIF0;
#define	_adrcif0		(IO_ADRCIF0)
#define	ADRCIF0	(_adrcif0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADSCANS0,attr=IO,locate=0x1444
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	SCINT:1;
        __BYTE	SCIE:1;
        __BYTE	SCMD:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} ADSCANS0STR;

__IO_EXTENDED	  ADSCANS0STR	IO_ADSCANS0;
#define	_adscans0		(IO_ADSCANS0)
#define	ADSCANS0		(IO_ADSCANS0.byte)
#define	ADSCANS0_SCINT  	(IO_ADSCANS0.bit.SCINT)
#define	ADSCANS0_SCIE  	(IO_ADSCANS0.bit.SCIE)
#define	ADSCANS0_SCMD  	(IO_ADSCANS0.bit.SCMD)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS0,attr=IO,locate=0x1448
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN1:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT1:2;
        __BYTE	CNTEN0:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT0:2;
    } bit;
} ADNCS0STR;

__IO_EXTENDED	  ADNCS0STR	IO_ADNCS0;
#define	_adncs0		(IO_ADNCS0)
#define	ADNCS0		(IO_ADNCS0.byte)
#define	ADNCS0_CNTEN1  	(IO_ADNCS0.bit.CNTEN1)
#define	ADNCS0_CCNT1  	(IO_ADNCS0.bit.CCNT1)
#define	ADNCS0_CNTEN0  	(IO_ADNCS0.bit.CNTEN0)
#define	ADNCS0_CCNT0  	(IO_ADNCS0.bit.CCNT0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS1,attr=IO,locate=0x1449
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN3:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT3:2;
        __BYTE	CNTEN2:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT2:2;
    } bit;
} ADNCS1STR;

__IO_EXTENDED	  ADNCS1STR	IO_ADNCS1;
#define	_adncs1		(IO_ADNCS1)
#define	ADNCS1		(IO_ADNCS1.byte)
#define	ADNCS1_CNTEN3  	(IO_ADNCS1.bit.CNTEN3)
#define	ADNCS1_CCNT3  	(IO_ADNCS1.bit.CCNT3)
#define	ADNCS1_CNTEN2  	(IO_ADNCS1.bit.CNTEN2)
#define	ADNCS1_CCNT2  	(IO_ADNCS1.bit.CCNT2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS2,attr=IO,locate=0x144A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN5:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT5:2;
        __BYTE	CNTEN4:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT4:2;
    } bit;
} ADNCS2STR;

__IO_EXTENDED	  ADNCS2STR	IO_ADNCS2;
#define	_adncs2		(IO_ADNCS2)
#define	ADNCS2		(IO_ADNCS2.byte)
#define	ADNCS2_CNTEN5  	(IO_ADNCS2.bit.CNTEN5)
#define	ADNCS2_CCNT5  	(IO_ADNCS2.bit.CCNT5)
#define	ADNCS2_CNTEN4  	(IO_ADNCS2.bit.CNTEN4)
#define	ADNCS2_CCNT4  	(IO_ADNCS2.bit.CCNT4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS3,attr=IO,locate=0x144B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN7:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT7:2;
        __BYTE	CNTEN6:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT6:2;
    } bit;
} ADNCS3STR;

__IO_EXTENDED	  ADNCS3STR	IO_ADNCS3;
#define	_adncs3		(IO_ADNCS3)
#define	ADNCS3		(IO_ADNCS3.byte)
#define	ADNCS3_CNTEN7  	(IO_ADNCS3.bit.CNTEN7)
#define	ADNCS3_CCNT7  	(IO_ADNCS3.bit.CCNT7)
#define	ADNCS3_CNTEN6  	(IO_ADNCS3.bit.CNTEN6)
#define	ADNCS3_CCNT6  	(IO_ADNCS3.bit.CCNT6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS4,attr=IO,locate=0x144C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN9:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT9:2;
        __BYTE	CNTEN8:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT8:2;
    } bit;
} ADNCS4STR;

__IO_EXTENDED	  ADNCS4STR	IO_ADNCS4;
#define	_adncs4		(IO_ADNCS4)
#define	ADNCS4		(IO_ADNCS4.byte)
#define	ADNCS4_CNTEN9  	(IO_ADNCS4.bit.CNTEN9)
#define	ADNCS4_CCNT9  	(IO_ADNCS4.bit.CCNT9)
#define	ADNCS4_CNTEN8  	(IO_ADNCS4.bit.CNTEN8)
#define	ADNCS4_CCNT8  	(IO_ADNCS4.bit.CCNT8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS5,attr=IO,locate=0x144D
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN11:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT11:2;
        __BYTE	CNTEN10:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT10:2;
    } bit;
} ADNCS5STR;

__IO_EXTENDED	  ADNCS5STR	IO_ADNCS5;
#define	_adncs5		(IO_ADNCS5)
#define	ADNCS5		(IO_ADNCS5.byte)
#define	ADNCS5_CNTEN11  	(IO_ADNCS5.bit.CNTEN11)
#define	ADNCS5_CCNT11  	(IO_ADNCS5.bit.CCNT11)
#define	ADNCS5_CNTEN10  	(IO_ADNCS5.bit.CNTEN10)
#define	ADNCS5_CCNT10  	(IO_ADNCS5.bit.CCNT10)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS6,attr=IO,locate=0x144E
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN13:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT13:2;
        __BYTE	CNTEN12:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT12:2;
    } bit;
} ADNCS6STR;

__IO_EXTENDED	  ADNCS6STR	IO_ADNCS6;
#define	_adncs6		(IO_ADNCS6)
#define	ADNCS6		(IO_ADNCS6.byte)
#define	ADNCS6_CNTEN13  	(IO_ADNCS6.bit.CNTEN13)
#define	ADNCS6_CCNT13  	(IO_ADNCS6.bit.CCNT13)
#define	ADNCS6_CNTEN12  	(IO_ADNCS6.bit.CNTEN12)
#define	ADNCS6_CCNT12  	(IO_ADNCS6.bit.CCNT12)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS7,attr=IO,locate=0x144F
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN15:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT15:2;
        __BYTE	CNTEN14:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT14:2;
    } bit;
} ADNCS7STR;

__IO_EXTENDED	  ADNCS7STR	IO_ADNCS7;
#define	_adncs7		(IO_ADNCS7)
#define	ADNCS7		(IO_ADNCS7.byte)
#define	ADNCS7_CNTEN15  	(IO_ADNCS7.bit.CNTEN15)
#define	ADNCS7_CCNT15  	(IO_ADNCS7.bit.CCNT15)
#define	ADNCS7_CNTEN14  	(IO_ADNCS7.bit.CNTEN14)
#define	ADNCS7_CCNT14  	(IO_ADNCS7.bit.CCNT14)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS8,attr=IO,locate=0x1450
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN17:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT17:2;
        __BYTE	CNTEN16:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT16:2;
    } bit;
} ADNCS8STR;

__IO_EXTENDED	  ADNCS8STR	IO_ADNCS8;
#define	_adncs8		(IO_ADNCS8)
#define	ADNCS8		(IO_ADNCS8.byte)
#define	ADNCS8_CNTEN17  	(IO_ADNCS8.bit.CNTEN17)
#define	ADNCS8_CCNT17  	(IO_ADNCS8.bit.CCNT17)
#define	ADNCS8_CNTEN16  	(IO_ADNCS8.bit.CNTEN16)
#define	ADNCS8_CCNT16  	(IO_ADNCS8.bit.CCNT16)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS9,attr=IO,locate=0x1451
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN19:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT19:2;
        __BYTE	CNTEN18:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT18:2;
    } bit;
} ADNCS9STR;

__IO_EXTENDED	  ADNCS9STR	IO_ADNCS9;
#define	_adncs9		(IO_ADNCS9)
#define	ADNCS9		(IO_ADNCS9.byte)
#define	ADNCS9_CNTEN19  	(IO_ADNCS9.bit.CNTEN19)
#define	ADNCS9_CCNT19  	(IO_ADNCS9.bit.CCNT19)
#define	ADNCS9_CNTEN18  	(IO_ADNCS9.bit.CNTEN18)
#define	ADNCS9_CCNT18  	(IO_ADNCS9.bit.CCNT18)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS10,attr=IO,locate=0x1452
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN21:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT21:2;
        __BYTE	CNTEN20:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT20:2;
    } bit;
} ADNCS10STR;

__IO_EXTENDED	  ADNCS10STR	IO_ADNCS10;
#define	_adncs10		(IO_ADNCS10)
#define	ADNCS10		(IO_ADNCS10.byte)
#define	ADNCS10_CNTEN21  	(IO_ADNCS10.bit.CNTEN21)
#define	ADNCS10_CCNT21  	(IO_ADNCS10.bit.CCNT21)
#define	ADNCS10_CNTEN20  	(IO_ADNCS10.bit.CNTEN20)
#define	ADNCS10_CCNT20  	(IO_ADNCS10.bit.CCNT20)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS11,attr=IO,locate=0x1453
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN23:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT23:2;
        __BYTE	CNTEN22:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT22:2;
    } bit;
} ADNCS11STR;

__IO_EXTENDED	  ADNCS11STR	IO_ADNCS11;
#define	_adncs11		(IO_ADNCS11)
#define	ADNCS11		(IO_ADNCS11.byte)
#define	ADNCS11_CNTEN23  	(IO_ADNCS11.bit.CNTEN23)
#define	ADNCS11_CCNT23  	(IO_ADNCS11.bit.CCNT23)
#define	ADNCS11_CNTEN22  	(IO_ADNCS11.bit.CNTEN22)
#define	ADNCS11_CCNT22  	(IO_ADNCS11.bit.CCNT22)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS12,attr=IO,locate=0x1454
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN25:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT25:2;
        __BYTE	CNTEN24:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT24:2;
    } bit;
} ADNCS12STR;

__IO_EXTENDED	  ADNCS12STR	IO_ADNCS12;
#define	_adncs12		(IO_ADNCS12)
#define	ADNCS12		(IO_ADNCS12.byte)
#define	ADNCS12_CNTEN25  	(IO_ADNCS12.bit.CNTEN25)
#define	ADNCS12_CCNT25  	(IO_ADNCS12.bit.CCNT25)
#define	ADNCS12_CNTEN24  	(IO_ADNCS12.bit.CNTEN24)
#define	ADNCS12_CCNT24  	(IO_ADNCS12.bit.CCNT24)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS13,attr=IO,locate=0x1455
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN27:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT27:2;
        __BYTE	CNTEN26:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT26:2;
    } bit;
} ADNCS13STR;

__IO_EXTENDED	  ADNCS13STR	IO_ADNCS13;
#define	_adncs13		(IO_ADNCS13)
#define	ADNCS13		(IO_ADNCS13.byte)
#define	ADNCS13_CNTEN27  	(IO_ADNCS13.bit.CNTEN27)
#define	ADNCS13_CCNT27  	(IO_ADNCS13.bit.CCNT27)
#define	ADNCS13_CNTEN26  	(IO_ADNCS13.bit.CNTEN26)
#define	ADNCS13_CCNT26  	(IO_ADNCS13.bit.CCNT26)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS14,attr=IO,locate=0x1456
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN29:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT29:2;
        __BYTE	CNTEN28:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT28:2;
    } bit;
} ADNCS14STR;

__IO_EXTENDED	  ADNCS14STR	IO_ADNCS14;
#define	_adncs14		(IO_ADNCS14)
#define	ADNCS14		(IO_ADNCS14.byte)
#define	ADNCS14_CNTEN29  	(IO_ADNCS14.bit.CNTEN29)
#define	ADNCS14_CCNT29  	(IO_ADNCS14.bit.CCNT29)
#define	ADNCS14_CNTEN28  	(IO_ADNCS14.bit.CNTEN28)
#define	ADNCS14_CCNT28  	(IO_ADNCS14.bit.CCNT28)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS15,attr=IO,locate=0x1457
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN31:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT31:2;
        __BYTE	CNTEN30:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT30:2;
    } bit;
} ADNCS15STR;

__IO_EXTENDED	  ADNCS15STR	IO_ADNCS15;
#define	_adncs15		(IO_ADNCS15)
#define	ADNCS15		(IO_ADNCS15.byte)
#define	ADNCS15_CNTEN31  	(IO_ADNCS15.bit.CNTEN31)
#define	ADNCS15_CCNT31  	(IO_ADNCS15.bit.CCNT31)
#define	ADNCS15_CNTEN30  	(IO_ADNCS15.bit.CNTEN30)
#define	ADNCS15_CCNT30  	(IO_ADNCS15.bit.CCNT30)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADPRTF0,attr=IO,locate=0x1458
#endif

__IO_EXTENDED	const __WORD	IO_ADPRTF0;
#define	_adprtf0		(IO_ADPRTF0)
#define	ADPRTF0	(_adprtf0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADEOCF0,attr=IO,locate=0x145C
#endif

__IO_EXTENDED	 const __WORD	IO_ADEOCF0;
#define	_adeocf0		(IO_ADEOCF0)
#define	ADEOCF0	(_adeocf0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCS0,attr=IO,locate=0x1460
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
        __HWORD	RESV14:1;
        __HWORD	RESV15:1;
    } bit;
} ADCS0STR;

__IO_EXTENDED	 const  ADCS0STR	IO_ADCS0;
#define	_adcs0		(IO_ADCS0)
#define	ADCS0		(IO_ADCS0.hword)
#define	ADCS0_BUSY  	(IO_ADCS0.bit.BUSY)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCH0,attr=IO,locate=0x1462
#endif

__IO_EXTENDED	const __BYTE	IO_ADCH0;
#define	_adch0		(IO_ADCH0)
#define	ADCH0	(_adch0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADMD0,attr=IO,locate=0x1463
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	STPCEN:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	CT:2;
        __BYTE	ST:2;
    } bit;
} ADMD0STR;

__IO_EXTENDED	  ADMD0STR	IO_ADMD0;
#define	_admd0		(IO_ADMD0)
#define	ADMD0		(IO_ADMD0.byte)
#define	ADMD0_STPCEN  	(IO_ADMD0.bit.STPCEN)
#define	ADMD0_CT  	(IO_ADMD0.bit.CT)
#define	ADMD0_ST  	(IO_ADMD0.bit.ST)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADSTPCS0,attr=IO,locate=0x1464
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	STCH3:2;
        __BYTE	STCH2:2;
        __BYTE	STCH1:2;
        __BYTE	STCH0:2;
    } bit;
} ADSTPCS0STR;

__IO_EXTENDED	  ADSTPCS0STR	IO_ADSTPCS0;
#define	_adstpcs0		(IO_ADSTPCS0)
#define	ADSTPCS0		(IO_ADSTPCS0.byte)
#define	ADSTPCS0_STCH3  	(IO_ADSTPCS0.bit.STCH3)
#define	ADSTPCS0_STCH2  	(IO_ADSTPCS0.bit.STCH2)
#define	ADSTPCS0_STCH1  	(IO_ADSTPCS0.bit.STCH1)
#define	ADSTPCS0_STCH0  	(IO_ADSTPCS0.bit.STCH0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADSTPCS1,attr=IO,locate=0x1465
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	STCH7:2;
        __BYTE	STCH6:2;
        __BYTE	STCH5:2;
        __BYTE	STCH4:2;
    } bit;
} ADSTPCS1STR;

__IO_EXTENDED	  ADSTPCS1STR	IO_ADSTPCS1;
#define	_adstpcs1		(IO_ADSTPCS1)
#define	ADSTPCS1		(IO_ADSTPCS1.byte)
#define	ADSTPCS1_STCH7  	(IO_ADSTPCS1.bit.STCH7)
#define	ADSTPCS1_STCH6  	(IO_ADSTPCS1.bit.STCH6)
#define	ADSTPCS1_STCH5  	(IO_ADSTPCS1.bit.STCH5)
#define	ADSTPCS1_STCH4  	(IO_ADSTPCS1.bit.STCH4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADSTPCS2,attr=IO,locate=0x1466
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	STCH11:2;
        __BYTE	STCH10:2;
        __BYTE	STCH9:2;
        __BYTE	STCH8:2;
    } bit;
} ADSTPCS2STR;

__IO_EXTENDED	  ADSTPCS2STR	IO_ADSTPCS2;
#define	_adstpcs2		(IO_ADSTPCS2)
#define	ADSTPCS2		(IO_ADSTPCS2.byte)
#define	ADSTPCS2_STCH11  	(IO_ADSTPCS2.bit.STCH11)
#define	ADSTPCS2_STCH10  	(IO_ADSTPCS2.bit.STCH10)
#define	ADSTPCS2_STCH9  	(IO_ADSTPCS2.bit.STCH9)
#define	ADSTPCS2_STCH8  	(IO_ADSTPCS2.bit.STCH8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADSTPCS3,attr=IO,locate=0x1467
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	STCH15:2;
        __BYTE	STCH14:2;
        __BYTE	STCH13:2;
        __BYTE	STCH12:2;
    } bit;
} ADSTPCS3STR;

__IO_EXTENDED	  ADSTPCS3STR	IO_ADSTPCS3;
#define	_adstpcs3		(IO_ADSTPCS3)
#define	ADSTPCS3		(IO_ADSTPCS3.byte)
#define	ADSTPCS3_STCH15  	(IO_ADSTPCS3.bit.STCH15)
#define	ADSTPCS3_STCH14  	(IO_ADSTPCS3.bit.STCH14)
#define	ADSTPCS3_STCH13  	(IO_ADSTPCS3.bit.STCH13)
#define	ADSTPCS3_STCH12  	(IO_ADSTPCS3.bit.STCH12)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADSTPCS4,attr=IO,locate=0x1468
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	STCH19:2;
        __BYTE	STCH18:2;
        __BYTE	STCH17:2;
        __BYTE	STCH16:2;
    } bit;
} ADSTPCS4STR;

__IO_EXTENDED	  ADSTPCS4STR	IO_ADSTPCS4;
#define	_adstpcs4		(IO_ADSTPCS4)
#define	ADSTPCS4		(IO_ADSTPCS4.byte)
#define	ADSTPCS4_STCH19  	(IO_ADSTPCS4.bit.STCH19)
#define	ADSTPCS4_STCH18  	(IO_ADSTPCS4.bit.STCH18)
#define	ADSTPCS4_STCH17  	(IO_ADSTPCS4.bit.STCH17)
#define	ADSTPCS4_STCH16  	(IO_ADSTPCS4.bit.STCH16)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADSTPCS5,attr=IO,locate=0x1469
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	STCH23:2;
        __BYTE	STCH22:2;
        __BYTE	STCH21:2;
        __BYTE	STCH20:2;
    } bit;
} ADSTPCS5STR;

__IO_EXTENDED	  ADSTPCS5STR	IO_ADSTPCS5;
#define	_adstpcs5		(IO_ADSTPCS5)
#define	ADSTPCS5		(IO_ADSTPCS5.byte)
#define	ADSTPCS5_STCH23  	(IO_ADSTPCS5.bit.STCH23)
#define	ADSTPCS5_STCH22  	(IO_ADSTPCS5.bit.STCH22)
#define	ADSTPCS5_STCH21  	(IO_ADSTPCS5.bit.STCH21)
#define	ADSTPCS5_STCH20  	(IO_ADSTPCS5.bit.STCH20)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADSTPCS6,attr=IO,locate=0x146A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	STCH27:2;
        __BYTE	STCH26:2;
        __BYTE	STCH25:2;
        __BYTE	STCH24:2;
    } bit;
} ADSTPCS6STR;

__IO_EXTENDED	  ADSTPCS6STR	IO_ADSTPCS6;
#define	_adstpcs6		(IO_ADSTPCS6)
#define	ADSTPCS6		(IO_ADSTPCS6.byte)
#define	ADSTPCS6_STCH27  	(IO_ADSTPCS6.bit.STCH27)
#define	ADSTPCS6_STCH26  	(IO_ADSTPCS6.bit.STCH26)
#define	ADSTPCS6_STCH25  	(IO_ADSTPCS6.bit.STCH25)
#define	ADSTPCS6_STCH24  	(IO_ADSTPCS6.bit.STCH24)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADSTPCS7,attr=IO,locate=0x146B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	STCH31:2;
        __BYTE	STCH30:2;
        __BYTE	STCH29:2;
        __BYTE	STCH28:2;
    } bit;
} ADSTPCS7STR;

__IO_EXTENDED	  ADSTPCS7STR	IO_ADSTPCS7;
#define	_adstpcs7		(IO_ADSTPCS7)
#define	ADSTPCS7		(IO_ADSTPCS7.byte)
#define	ADSTPCS7_STCH31  	(IO_ADSTPCS7.bit.STCH31)
#define	ADSTPCS7_STCH30  	(IO_ADSTPCS7.bit.STCH30)
#define	ADSTPCS7_STCH29  	(IO_ADSTPCS7.bit.STCH29)
#define	ADSTPCS7_STCH28  	(IO_ADSTPCS7.bit.STCH28)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTSS1,attr=IO,locate=0x1470
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	START:1;
    } bit;
} ADTSS1STR;

__IO_EXTENDED	  ADTSS1STR	IO_ADTSS1;
#define	_adtss1		(IO_ADTSS1)
#define	ADTSS1		(IO_ADTSS1.byte)
#define	ADTSS1_START  	(IO_ADTSS1.bit.START)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTSE1,attr=IO,locate=0x1474
#endif

__IO_EXTENDED	__WORD	IO_ADTSE1;
#define	_adtse1		(IO_ADTSE1)
#define	ADTSE1	(_adtse1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP32,attr=IO,locate=0x1478
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP32;
#define	_adcomp32		(IO_ADCOMP32)
#define	ADCOMP32	(_adcomp32)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP33,attr=IO,locate=0x147A
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP33;
#define	_adcomp33		(IO_ADCOMP33)
#define	ADCOMP33	(_adcomp33)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP34,attr=IO,locate=0x147C
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP34;
#define	_adcomp34		(IO_ADCOMP34)
#define	ADCOMP34	(_adcomp34)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP35,attr=IO,locate=0x147E
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP35;
#define	_adcomp35		(IO_ADCOMP35)
#define	ADCOMP35	(_adcomp35)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP36,attr=IO,locate=0x1480
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP36;
#define	_adcomp36		(IO_ADCOMP36)
#define	ADCOMP36	(_adcomp36)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP37,attr=IO,locate=0x1482
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP37;
#define	_adcomp37		(IO_ADCOMP37)
#define	ADCOMP37	(_adcomp37)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP38,attr=IO,locate=0x1484
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP38;
#define	_adcomp38		(IO_ADCOMP38)
#define	ADCOMP38	(_adcomp38)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP39,attr=IO,locate=0x1486
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP39;
#define	_adcomp39		(IO_ADCOMP39)
#define	ADCOMP39	(_adcomp39)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP40,attr=IO,locate=0x1488
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP40;
#define	_adcomp40		(IO_ADCOMP40)
#define	ADCOMP40	(_adcomp40)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP41,attr=IO,locate=0x148A
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP41;
#define	_adcomp41		(IO_ADCOMP41)
#define	ADCOMP41	(_adcomp41)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP42,attr=IO,locate=0x148C
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP42;
#define	_adcomp42		(IO_ADCOMP42)
#define	ADCOMP42	(_adcomp42)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP43,attr=IO,locate=0x148E
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP43;
#define	_adcomp43		(IO_ADCOMP43)
#define	ADCOMP43	(_adcomp43)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP44,attr=IO,locate=0x1490
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP44;
#define	_adcomp44		(IO_ADCOMP44)
#define	ADCOMP44	(_adcomp44)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP45,attr=IO,locate=0x1492
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP45;
#define	_adcomp45		(IO_ADCOMP45)
#define	ADCOMP45	(_adcomp45)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP46,attr=IO,locate=0x1494
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP46;
#define	_adcomp46		(IO_ADCOMP46)
#define	ADCOMP46	(_adcomp46)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCOMP47,attr=IO,locate=0x1496
#endif

__IO_EXTENDED	__HWORD	IO_ADCOMP47;
#define	_adcomp47		(IO_ADCOMP47)
#define	ADCOMP47	(_adcomp47)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS32,attr=IO,locate=0x14B8
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS32STR;

__IO_EXTENDED	  ADTCS32STR	IO_ADTCS32;
#define	_adtcs32		(IO_ADTCS32)
#define	ADTCS32		(IO_ADTCS32.hword)
#define	ADTCS32_BUSY  	(IO_ADTCS32.bit.BUSY)
#define	ADTCS32_INT  	(IO_ADTCS32.bit.INT)
#define	ADTCS32_INTE  	(IO_ADTCS32.bit.INTE)
#define	ADTCS32_STS  	(IO_ADTCS32.bit.STS)
#define	ADTCS32_RPT  	(IO_ADTCS32.bit.RPT)
#define	ADTCS32_PRT  	(IO_ADTCS32.bit.PRT)
#define	ADTCS32_PRTS  	(IO_ADTCS32.bit.PRTS)
#define	ADTCS32_SEL  	(IO_ADTCS32.bit.SEL)
#define	ADTCS32_BUFX  	(IO_ADTCS32.bit.BUFX)
#define	ADTCS32_BTS  	(IO_ADTCS32.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS33,attr=IO,locate=0x14BA
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS33STR;

__IO_EXTENDED	  ADTCS33STR	IO_ADTCS33;
#define	_adtcs33		(IO_ADTCS33)
#define	ADTCS33		(IO_ADTCS33.hword)
#define	ADTCS33_BUSY  	(IO_ADTCS33.bit.BUSY)
#define	ADTCS33_INT  	(IO_ADTCS33.bit.INT)
#define	ADTCS33_INTE  	(IO_ADTCS33.bit.INTE)
#define	ADTCS33_STS  	(IO_ADTCS33.bit.STS)
#define	ADTCS33_RPT  	(IO_ADTCS33.bit.RPT)
#define	ADTCS33_PRT  	(IO_ADTCS33.bit.PRT)
#define	ADTCS33_PRTS  	(IO_ADTCS33.bit.PRTS)
#define	ADTCS33_SEL  	(IO_ADTCS33.bit.SEL)
#define	ADTCS33_BUFX  	(IO_ADTCS33.bit.BUFX)
#define	ADTCS33_BTS  	(IO_ADTCS33.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS34,attr=IO,locate=0x14BC
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS34STR;

__IO_EXTENDED	  ADTCS34STR	IO_ADTCS34;
#define	_adtcs34		(IO_ADTCS34)
#define	ADTCS34		(IO_ADTCS34.hword)
#define	ADTCS34_BUSY  	(IO_ADTCS34.bit.BUSY)
#define	ADTCS34_INT  	(IO_ADTCS34.bit.INT)
#define	ADTCS34_INTE  	(IO_ADTCS34.bit.INTE)
#define	ADTCS34_STS  	(IO_ADTCS34.bit.STS)
#define	ADTCS34_RPT  	(IO_ADTCS34.bit.RPT)
#define	ADTCS34_PRT  	(IO_ADTCS34.bit.PRT)
#define	ADTCS34_PRTS  	(IO_ADTCS34.bit.PRTS)
#define	ADTCS34_SEL  	(IO_ADTCS34.bit.SEL)
#define	ADTCS34_BUFX  	(IO_ADTCS34.bit.BUFX)
#define	ADTCS34_BTS  	(IO_ADTCS34.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS35,attr=IO,locate=0x14BE
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS35STR;

__IO_EXTENDED	  ADTCS35STR	IO_ADTCS35;
#define	_adtcs35		(IO_ADTCS35)
#define	ADTCS35		(IO_ADTCS35.hword)
#define	ADTCS35_BUSY  	(IO_ADTCS35.bit.BUSY)
#define	ADTCS35_INT  	(IO_ADTCS35.bit.INT)
#define	ADTCS35_INTE  	(IO_ADTCS35.bit.INTE)
#define	ADTCS35_STS  	(IO_ADTCS35.bit.STS)
#define	ADTCS35_RPT  	(IO_ADTCS35.bit.RPT)
#define	ADTCS35_PRT  	(IO_ADTCS35.bit.PRT)
#define	ADTCS35_PRTS  	(IO_ADTCS35.bit.PRTS)
#define	ADTCS35_SEL  	(IO_ADTCS35.bit.SEL)
#define	ADTCS35_BUFX  	(IO_ADTCS35.bit.BUFX)
#define	ADTCS35_BTS  	(IO_ADTCS35.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS36,attr=IO,locate=0x14C0
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS36STR;

__IO_EXTENDED	  ADTCS36STR	IO_ADTCS36;
#define	_adtcs36		(IO_ADTCS36)
#define	ADTCS36		(IO_ADTCS36.hword)
#define	ADTCS36_BUSY  	(IO_ADTCS36.bit.BUSY)
#define	ADTCS36_INT  	(IO_ADTCS36.bit.INT)
#define	ADTCS36_INTE  	(IO_ADTCS36.bit.INTE)
#define	ADTCS36_STS  	(IO_ADTCS36.bit.STS)
#define	ADTCS36_RPT  	(IO_ADTCS36.bit.RPT)
#define	ADTCS36_PRT  	(IO_ADTCS36.bit.PRT)
#define	ADTCS36_PRTS  	(IO_ADTCS36.bit.PRTS)
#define	ADTCS36_SEL  	(IO_ADTCS36.bit.SEL)
#define	ADTCS36_BUFX  	(IO_ADTCS36.bit.BUFX)
#define	ADTCS36_BTS  	(IO_ADTCS36.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS37,attr=IO,locate=0x14C2
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS37STR;

__IO_EXTENDED	  ADTCS37STR	IO_ADTCS37;
#define	_adtcs37		(IO_ADTCS37)
#define	ADTCS37		(IO_ADTCS37.hword)
#define	ADTCS37_BUSY  	(IO_ADTCS37.bit.BUSY)
#define	ADTCS37_INT  	(IO_ADTCS37.bit.INT)
#define	ADTCS37_INTE  	(IO_ADTCS37.bit.INTE)
#define	ADTCS37_STS  	(IO_ADTCS37.bit.STS)
#define	ADTCS37_RPT  	(IO_ADTCS37.bit.RPT)
#define	ADTCS37_PRT  	(IO_ADTCS37.bit.PRT)
#define	ADTCS37_PRTS  	(IO_ADTCS37.bit.PRTS)
#define	ADTCS37_SEL  	(IO_ADTCS37.bit.SEL)
#define	ADTCS37_BUFX  	(IO_ADTCS37.bit.BUFX)
#define	ADTCS37_BTS  	(IO_ADTCS37.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS38,attr=IO,locate=0x14C4
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS38STR;

__IO_EXTENDED	  ADTCS38STR	IO_ADTCS38;
#define	_adtcs38		(IO_ADTCS38)
#define	ADTCS38		(IO_ADTCS38.hword)
#define	ADTCS38_BUSY  	(IO_ADTCS38.bit.BUSY)
#define	ADTCS38_INT  	(IO_ADTCS38.bit.INT)
#define	ADTCS38_INTE  	(IO_ADTCS38.bit.INTE)
#define	ADTCS38_STS  	(IO_ADTCS38.bit.STS)
#define	ADTCS38_RPT  	(IO_ADTCS38.bit.RPT)
#define	ADTCS38_PRT  	(IO_ADTCS38.bit.PRT)
#define	ADTCS38_PRTS  	(IO_ADTCS38.bit.PRTS)
#define	ADTCS38_SEL  	(IO_ADTCS38.bit.SEL)
#define	ADTCS38_BUFX  	(IO_ADTCS38.bit.BUFX)
#define	ADTCS38_BTS  	(IO_ADTCS38.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS39,attr=IO,locate=0x14C6
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS39STR;

__IO_EXTENDED	  ADTCS39STR	IO_ADTCS39;
#define	_adtcs39		(IO_ADTCS39)
#define	ADTCS39		(IO_ADTCS39.hword)
#define	ADTCS39_BUSY  	(IO_ADTCS39.bit.BUSY)
#define	ADTCS39_INT  	(IO_ADTCS39.bit.INT)
#define	ADTCS39_INTE  	(IO_ADTCS39.bit.INTE)
#define	ADTCS39_STS  	(IO_ADTCS39.bit.STS)
#define	ADTCS39_RPT  	(IO_ADTCS39.bit.RPT)
#define	ADTCS39_PRT  	(IO_ADTCS39.bit.PRT)
#define	ADTCS39_PRTS  	(IO_ADTCS39.bit.PRTS)
#define	ADTCS39_SEL  	(IO_ADTCS39.bit.SEL)
#define	ADTCS39_BUFX  	(IO_ADTCS39.bit.BUFX)
#define	ADTCS39_BTS  	(IO_ADTCS39.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS40,attr=IO,locate=0x14C8
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS40STR;

__IO_EXTENDED	  ADTCS40STR	IO_ADTCS40;
#define	_adtcs40		(IO_ADTCS40)
#define	ADTCS40		(IO_ADTCS40.hword)
#define	ADTCS40_BUSY  	(IO_ADTCS40.bit.BUSY)
#define	ADTCS40_INT  	(IO_ADTCS40.bit.INT)
#define	ADTCS40_INTE  	(IO_ADTCS40.bit.INTE)
#define	ADTCS40_STS  	(IO_ADTCS40.bit.STS)
#define	ADTCS40_RPT  	(IO_ADTCS40.bit.RPT)
#define	ADTCS40_PRT  	(IO_ADTCS40.bit.PRT)
#define	ADTCS40_PRTS  	(IO_ADTCS40.bit.PRTS)
#define	ADTCS40_SEL  	(IO_ADTCS40.bit.SEL)
#define	ADTCS40_BUFX  	(IO_ADTCS40.bit.BUFX)
#define	ADTCS40_BTS  	(IO_ADTCS40.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS41,attr=IO,locate=0x14CA
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS41STR;

__IO_EXTENDED	  ADTCS41STR	IO_ADTCS41;
#define	_adtcs41		(IO_ADTCS41)
#define	ADTCS41		(IO_ADTCS41.hword)
#define	ADTCS41_BUSY  	(IO_ADTCS41.bit.BUSY)
#define	ADTCS41_INT  	(IO_ADTCS41.bit.INT)
#define	ADTCS41_INTE  	(IO_ADTCS41.bit.INTE)
#define	ADTCS41_STS  	(IO_ADTCS41.bit.STS)
#define	ADTCS41_RPT  	(IO_ADTCS41.bit.RPT)
#define	ADTCS41_PRT  	(IO_ADTCS41.bit.PRT)
#define	ADTCS41_PRTS  	(IO_ADTCS41.bit.PRTS)
#define	ADTCS41_SEL  	(IO_ADTCS41.bit.SEL)
#define	ADTCS41_BUFX  	(IO_ADTCS41.bit.BUFX)
#define	ADTCS41_BTS  	(IO_ADTCS41.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS42,attr=IO,locate=0x14CC
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS42STR;

__IO_EXTENDED	  ADTCS42STR	IO_ADTCS42;
#define	_adtcs42		(IO_ADTCS42)
#define	ADTCS42		(IO_ADTCS42.hword)
#define	ADTCS42_BUSY  	(IO_ADTCS42.bit.BUSY)
#define	ADTCS42_INT  	(IO_ADTCS42.bit.INT)
#define	ADTCS42_INTE  	(IO_ADTCS42.bit.INTE)
#define	ADTCS42_STS  	(IO_ADTCS42.bit.STS)
#define	ADTCS42_RPT  	(IO_ADTCS42.bit.RPT)
#define	ADTCS42_PRT  	(IO_ADTCS42.bit.PRT)
#define	ADTCS42_PRTS  	(IO_ADTCS42.bit.PRTS)
#define	ADTCS42_SEL  	(IO_ADTCS42.bit.SEL)
#define	ADTCS42_BUFX  	(IO_ADTCS42.bit.BUFX)
#define	ADTCS42_BTS  	(IO_ADTCS42.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS43,attr=IO,locate=0x14CE
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS43STR;

__IO_EXTENDED	  ADTCS43STR	IO_ADTCS43;
#define	_adtcs43		(IO_ADTCS43)
#define	ADTCS43		(IO_ADTCS43.hword)
#define	ADTCS43_BUSY  	(IO_ADTCS43.bit.BUSY)
#define	ADTCS43_INT  	(IO_ADTCS43.bit.INT)
#define	ADTCS43_INTE  	(IO_ADTCS43.bit.INTE)
#define	ADTCS43_STS  	(IO_ADTCS43.bit.STS)
#define	ADTCS43_RPT  	(IO_ADTCS43.bit.RPT)
#define	ADTCS43_PRT  	(IO_ADTCS43.bit.PRT)
#define	ADTCS43_PRTS  	(IO_ADTCS43.bit.PRTS)
#define	ADTCS43_SEL  	(IO_ADTCS43.bit.SEL)
#define	ADTCS43_BUFX  	(IO_ADTCS43.bit.BUFX)
#define	ADTCS43_BTS  	(IO_ADTCS43.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS44,attr=IO,locate=0x14D0
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS44STR;

__IO_EXTENDED	  ADTCS44STR	IO_ADTCS44;
#define	_adtcs44		(IO_ADTCS44)
#define	ADTCS44		(IO_ADTCS44.hword)
#define	ADTCS44_BUSY  	(IO_ADTCS44.bit.BUSY)
#define	ADTCS44_INT  	(IO_ADTCS44.bit.INT)
#define	ADTCS44_INTE  	(IO_ADTCS44.bit.INTE)
#define	ADTCS44_STS  	(IO_ADTCS44.bit.STS)
#define	ADTCS44_RPT  	(IO_ADTCS44.bit.RPT)
#define	ADTCS44_PRT  	(IO_ADTCS44.bit.PRT)
#define	ADTCS44_PRTS  	(IO_ADTCS44.bit.PRTS)
#define	ADTCS44_SEL  	(IO_ADTCS44.bit.SEL)
#define	ADTCS44_BUFX  	(IO_ADTCS44.bit.BUFX)
#define	ADTCS44_BTS  	(IO_ADTCS44.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS45,attr=IO,locate=0x14D2
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS45STR;

__IO_EXTENDED	  ADTCS45STR	IO_ADTCS45;
#define	_adtcs45		(IO_ADTCS45)
#define	ADTCS45		(IO_ADTCS45.hword)
#define	ADTCS45_BUSY  	(IO_ADTCS45.bit.BUSY)
#define	ADTCS45_INT  	(IO_ADTCS45.bit.INT)
#define	ADTCS45_INTE  	(IO_ADTCS45.bit.INTE)
#define	ADTCS45_STS  	(IO_ADTCS45.bit.STS)
#define	ADTCS45_RPT  	(IO_ADTCS45.bit.RPT)
#define	ADTCS45_PRT  	(IO_ADTCS45.bit.PRT)
#define	ADTCS45_PRTS  	(IO_ADTCS45.bit.PRTS)
#define	ADTCS45_SEL  	(IO_ADTCS45.bit.SEL)
#define	ADTCS45_BUFX  	(IO_ADTCS45.bit.BUFX)
#define	ADTCS45_BTS  	(IO_ADTCS45.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS46,attr=IO,locate=0x14D4
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS46STR;

__IO_EXTENDED	  ADTCS46STR	IO_ADTCS46;
#define	_adtcs46		(IO_ADTCS46)
#define	ADTCS46		(IO_ADTCS46.hword)
#define	ADTCS46_BUSY  	(IO_ADTCS46.bit.BUSY)
#define	ADTCS46_INT  	(IO_ADTCS46.bit.INT)
#define	ADTCS46_INTE  	(IO_ADTCS46.bit.INTE)
#define	ADTCS46_STS  	(IO_ADTCS46.bit.STS)
#define	ADTCS46_RPT  	(IO_ADTCS46.bit.RPT)
#define	ADTCS46_PRT  	(IO_ADTCS46.bit.PRT)
#define	ADTCS46_PRTS  	(IO_ADTCS46.bit.PRTS)
#define	ADTCS46_SEL  	(IO_ADTCS46.bit.SEL)
#define	ADTCS46_BUFX  	(IO_ADTCS46.bit.BUFX)
#define	ADTCS46_BTS  	(IO_ADTCS46.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCS47,attr=IO,locate=0x14D6
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	INT:1;
        __HWORD	INTE:1;
        __HWORD	STS:2;
        __HWORD	RPT:1;
        __HWORD	PRT:1;
        __HWORD	PRTS:1;
        __HWORD	SEL:2;
        __HWORD	BUFX:1;
        __HWORD	BTS:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
    } bit;
} ADTCS47STR;

__IO_EXTENDED	  ADTCS47STR	IO_ADTCS47;
#define	_adtcs47		(IO_ADTCS47)
#define	ADTCS47		(IO_ADTCS47.hword)
#define	ADTCS47_BUSY  	(IO_ADTCS47.bit.BUSY)
#define	ADTCS47_INT  	(IO_ADTCS47.bit.INT)
#define	ADTCS47_INTE  	(IO_ADTCS47.bit.INTE)
#define	ADTCS47_STS  	(IO_ADTCS47.bit.STS)
#define	ADTCS47_RPT  	(IO_ADTCS47.bit.RPT)
#define	ADTCS47_PRT  	(IO_ADTCS47.bit.PRT)
#define	ADTCS47_PRTS  	(IO_ADTCS47.bit.PRTS)
#define	ADTCS47_SEL  	(IO_ADTCS47.bit.SEL)
#define	ADTCS47_BUFX  	(IO_ADTCS47.bit.BUFX)
#define	ADTCS47_BTS  	(IO_ADTCS47.bit.BTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD32,attr=IO,locate=0x14F8
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD32STR;

__IO_EXTENDED	 const  ADTCD32STR	IO_ADTCD32;
#define	_adtcd32		(IO_ADTCD32)
#define	ADTCD32		(IO_ADTCD32.hword)
#define	ADTCD32_ERR  	(IO_ADTCD32.bit.ERR)
#define	ADTCD32_ERRST  	(IO_ADTCD32.bit.ERRST)
#define	ADTCD32_D  	(IO_ADTCD32.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD33,attr=IO,locate=0x14FA
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD33STR;

__IO_EXTENDED	 const  ADTCD33STR	IO_ADTCD33;
#define	_adtcd33		(IO_ADTCD33)
#define	ADTCD33		(IO_ADTCD33.hword)
#define	ADTCD33_ERR  	(IO_ADTCD33.bit.ERR)
#define	ADTCD33_ERRST  	(IO_ADTCD33.bit.ERRST)
#define	ADTCD33_D  	(IO_ADTCD33.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD34,attr=IO,locate=0x14FC
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD34STR;

__IO_EXTENDED	 const  ADTCD34STR	IO_ADTCD34;
#define	_adtcd34		(IO_ADTCD34)
#define	ADTCD34		(IO_ADTCD34.hword)
#define	ADTCD34_ERR  	(IO_ADTCD34.bit.ERR)
#define	ADTCD34_ERRST  	(IO_ADTCD34.bit.ERRST)
#define	ADTCD34_D  	(IO_ADTCD34.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD35,attr=IO,locate=0x14FE
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD35STR;

__IO_EXTENDED	 const  ADTCD35STR	IO_ADTCD35;
#define	_adtcd35		(IO_ADTCD35)
#define	ADTCD35		(IO_ADTCD35.hword)
#define	ADTCD35_ERR  	(IO_ADTCD35.bit.ERR)
#define	ADTCD35_ERRST  	(IO_ADTCD35.bit.ERRST)
#define	ADTCD35_D  	(IO_ADTCD35.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD36,attr=IO,locate=0x1500
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD36STR;

__IO_EXTENDED	 const  ADTCD36STR	IO_ADTCD36;
#define	_adtcd36		(IO_ADTCD36)
#define	ADTCD36		(IO_ADTCD36.hword)
#define	ADTCD36_ERR  	(IO_ADTCD36.bit.ERR)
#define	ADTCD36_ERRST  	(IO_ADTCD36.bit.ERRST)
#define	ADTCD36_D  	(IO_ADTCD36.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD37,attr=IO,locate=0x1502
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD37STR;

__IO_EXTENDED	 const  ADTCD37STR	IO_ADTCD37;
#define	_adtcd37		(IO_ADTCD37)
#define	ADTCD37		(IO_ADTCD37.hword)
#define	ADTCD37_ERR  	(IO_ADTCD37.bit.ERR)
#define	ADTCD37_ERRST  	(IO_ADTCD37.bit.ERRST)
#define	ADTCD37_D  	(IO_ADTCD37.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD38,attr=IO,locate=0x1504
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD38STR;

__IO_EXTENDED	 const  ADTCD38STR	IO_ADTCD38;
#define	_adtcd38		(IO_ADTCD38)
#define	ADTCD38		(IO_ADTCD38.hword)
#define	ADTCD38_ERR  	(IO_ADTCD38.bit.ERR)
#define	ADTCD38_ERRST  	(IO_ADTCD38.bit.ERRST)
#define	ADTCD38_D  	(IO_ADTCD38.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD39,attr=IO,locate=0x1506
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD39STR;

__IO_EXTENDED	 const  ADTCD39STR	IO_ADTCD39;
#define	_adtcd39		(IO_ADTCD39)
#define	ADTCD39		(IO_ADTCD39.hword)
#define	ADTCD39_ERR  	(IO_ADTCD39.bit.ERR)
#define	ADTCD39_ERRST  	(IO_ADTCD39.bit.ERRST)
#define	ADTCD39_D  	(IO_ADTCD39.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD40,attr=IO,locate=0x1508
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD40STR;

__IO_EXTENDED	 const  ADTCD40STR	IO_ADTCD40;
#define	_adtcd40		(IO_ADTCD40)
#define	ADTCD40		(IO_ADTCD40.hword)
#define	ADTCD40_ERR  	(IO_ADTCD40.bit.ERR)
#define	ADTCD40_ERRST  	(IO_ADTCD40.bit.ERRST)
#define	ADTCD40_D  	(IO_ADTCD40.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD41,attr=IO,locate=0x150A
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD41STR;

__IO_EXTENDED	 const  ADTCD41STR	IO_ADTCD41;
#define	_adtcd41		(IO_ADTCD41)
#define	ADTCD41		(IO_ADTCD41.hword)
#define	ADTCD41_ERR  	(IO_ADTCD41.bit.ERR)
#define	ADTCD41_ERRST  	(IO_ADTCD41.bit.ERRST)
#define	ADTCD41_D  	(IO_ADTCD41.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD42,attr=IO,locate=0x150C
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD42STR;

__IO_EXTENDED	 const  ADTCD42STR	IO_ADTCD42;
#define	_adtcd42		(IO_ADTCD42)
#define	ADTCD42		(IO_ADTCD42.hword)
#define	ADTCD42_ERR  	(IO_ADTCD42.bit.ERR)
#define	ADTCD42_ERRST  	(IO_ADTCD42.bit.ERRST)
#define	ADTCD42_D  	(IO_ADTCD42.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD43,attr=IO,locate=0x150E
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD43STR;

__IO_EXTENDED	 const  ADTCD43STR	IO_ADTCD43;
#define	_adtcd43		(IO_ADTCD43)
#define	ADTCD43		(IO_ADTCD43.hword)
#define	ADTCD43_ERR  	(IO_ADTCD43.bit.ERR)
#define	ADTCD43_ERRST  	(IO_ADTCD43.bit.ERRST)
#define	ADTCD43_D  	(IO_ADTCD43.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD44,attr=IO,locate=0x1510
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD44STR;

__IO_EXTENDED	 const  ADTCD44STR	IO_ADTCD44;
#define	_adtcd44		(IO_ADTCD44)
#define	ADTCD44		(IO_ADTCD44.hword)
#define	ADTCD44_ERR  	(IO_ADTCD44.bit.ERR)
#define	ADTCD44_ERRST  	(IO_ADTCD44.bit.ERRST)
#define	ADTCD44_D  	(IO_ADTCD44.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD45,attr=IO,locate=0x1512
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD45STR;

__IO_EXTENDED	 const  ADTCD45STR	IO_ADTCD45;
#define	_adtcd45		(IO_ADTCD45)
#define	ADTCD45		(IO_ADTCD45.hword)
#define	ADTCD45_ERR  	(IO_ADTCD45.bit.ERR)
#define	ADTCD45_ERRST  	(IO_ADTCD45.bit.ERRST)
#define	ADTCD45_D  	(IO_ADTCD45.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD46,attr=IO,locate=0x1514
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD46STR;

__IO_EXTENDED	 const  ADTCD46STR	IO_ADTCD46;
#define	_adtcd46		(IO_ADTCD46)
#define	ADTCD46		(IO_ADTCD46.hword)
#define	ADTCD46_ERR  	(IO_ADTCD46.bit.ERR)
#define	ADTCD46_ERRST  	(IO_ADTCD46.bit.ERRST)
#define	ADTCD46_D  	(IO_ADTCD46.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTCD47,attr=IO,locate=0x1516
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	SERR:1;
        __HWORD	ERRST:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	D:12;
    } bit;
} ADTCD47STR;

__IO_EXTENDED	 const  ADTCD47STR	IO_ADTCD47;
#define	_adtcd47		(IO_ADTCD47)
#define	ADTCD47		(IO_ADTCD47.hword)
#define	ADTCD47_ERR  	(IO_ADTCD47.bit.ERR)
#define	ADTCD47_ERRST  	(IO_ADTCD47.bit.ERRST)
#define	ADTCD47_D  	(IO_ADTCD47.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS32,attr=IO,locate=0x1538
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	CHSEL:4;
    } bit;
} ADTECS32STR;

__IO_EXTENDED	  ADTECS32STR	IO_ADTECS32;
#define	_adtecs32		(IO_ADTECS32)
#define	ADTECS32		(IO_ADTECS32.hword)
#define	ADTECS32_STS2  	(IO_ADTECS32.bit.STS2)
#define	ADTECS32_CHSEL  	(IO_ADTECS32.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS33,attr=IO,locate=0x153A
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	CHSEL:4;
    } bit;
} ADTECS33STR;

__IO_EXTENDED	  ADTECS33STR	IO_ADTECS33;
#define	_adtecs33		(IO_ADTECS33)
#define	ADTECS33		(IO_ADTECS33.hword)
#define	ADTECS33_STS2  	(IO_ADTECS33.bit.STS2)
#define	ADTECS33_CHSEL  	(IO_ADTECS33.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS34,attr=IO,locate=0x153C
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	CHSEL:4;
    } bit;
} ADTECS34STR;

__IO_EXTENDED	  ADTECS34STR	IO_ADTECS34;
#define	_adtecs34		(IO_ADTECS34)
#define	ADTECS34		(IO_ADTECS34.hword)
#define	ADTECS34_STS2  	(IO_ADTECS34.bit.STS2)
#define	ADTECS34_CHSEL  	(IO_ADTECS34.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS35,attr=IO,locate=0x153E
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	CHSEL:4;
    } bit;
} ADTECS35STR;

__IO_EXTENDED	  ADTECS35STR	IO_ADTECS35;
#define	_adtecs35		(IO_ADTECS35)
#define	ADTECS35		(IO_ADTECS35.hword)
#define	ADTECS35_STS2  	(IO_ADTECS35.bit.STS2)
#define	ADTECS35_CHSEL  	(IO_ADTECS35.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS36,attr=IO,locate=0x1540
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	CHSEL:4;
    } bit;
} ADTECS36STR;

__IO_EXTENDED	  ADTECS36STR	IO_ADTECS36;
#define	_adtecs36		(IO_ADTECS36)
#define	ADTECS36		(IO_ADTECS36.hword)
#define	ADTECS36_STS2  	(IO_ADTECS36.bit.STS2)
#define	ADTECS36_CHSEL  	(IO_ADTECS36.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS37,attr=IO,locate=0x1542
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	CHSEL:4;
    } bit;
} ADTECS37STR;

__IO_EXTENDED	  ADTECS37STR	IO_ADTECS37;
#define	_adtecs37		(IO_ADTECS37)
#define	ADTECS37		(IO_ADTECS37.hword)
#define	ADTECS37_STS2  	(IO_ADTECS37.bit.STS2)
#define	ADTECS37_CHSEL  	(IO_ADTECS37.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS38,attr=IO,locate=0x1544
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	CHSEL:4;
    } bit;
} ADTECS38STR;

__IO_EXTENDED	  ADTECS38STR	IO_ADTECS38;
#define	_adtecs38		(IO_ADTECS38)
#define	ADTECS38		(IO_ADTECS38.hword)
#define	ADTECS38_STS2  	(IO_ADTECS38.bit.STS2)
#define	ADTECS38_CHSEL  	(IO_ADTECS38.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS39,attr=IO,locate=0x1546
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	CHSEL:4;
    } bit;
} ADTECS39STR;

__IO_EXTENDED	  ADTECS39STR	IO_ADTECS39;
#define	_adtecs39		(IO_ADTECS39)
#define	ADTECS39		(IO_ADTECS39.hword)
#define	ADTECS39_STS2  	(IO_ADTECS39.bit.STS2)
#define	ADTECS39_CHSEL  	(IO_ADTECS39.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS40,attr=IO,locate=0x1548
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	CHSEL:4;
    } bit;
} ADTECS40STR;

__IO_EXTENDED	  ADTECS40STR	IO_ADTECS40;
#define	_adtecs40		(IO_ADTECS40)
#define	ADTECS40		(IO_ADTECS40.hword)
#define	ADTECS40_STS2  	(IO_ADTECS40.bit.STS2)
#define	ADTECS40_CHSEL  	(IO_ADTECS40.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS41,attr=IO,locate=0x154A
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	CHSEL:4;
    } bit;
} ADTECS41STR;

__IO_EXTENDED	  ADTECS41STR	IO_ADTECS41;
#define	_adtecs41		(IO_ADTECS41)
#define	ADTECS41		(IO_ADTECS41.hword)
#define	ADTECS41_STS2  	(IO_ADTECS41.bit.STS2)
#define	ADTECS41_CHSEL  	(IO_ADTECS41.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS42,attr=IO,locate=0x154C
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	CHSEL:4;
    } bit;
} ADTECS42STR;

__IO_EXTENDED	  ADTECS42STR	IO_ADTECS42;
#define	_adtecs42		(IO_ADTECS42)
#define	ADTECS42		(IO_ADTECS42.hword)
#define	ADTECS42_STS2  	(IO_ADTECS42.bit.STS2)
#define	ADTECS42_CHSEL  	(IO_ADTECS42.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS43,attr=IO,locate=0x154E
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	CHSEL:4;
    } bit;
} ADTECS43STR;

__IO_EXTENDED	  ADTECS43STR	IO_ADTECS43;
#define	_adtecs43		(IO_ADTECS43)
#define	ADTECS43		(IO_ADTECS43.hword)
#define	ADTECS43_STS2  	(IO_ADTECS43.bit.STS2)
#define	ADTECS43_CHSEL  	(IO_ADTECS43.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS44,attr=IO,locate=0x1550
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	CHSEL:4;
    } bit;
} ADTECS44STR;

__IO_EXTENDED	  ADTECS44STR	IO_ADTECS44;
#define	_adtecs44		(IO_ADTECS44)
#define	ADTECS44		(IO_ADTECS44.hword)
#define	ADTECS44_STS2  	(IO_ADTECS44.bit.STS2)
#define	ADTECS44_CHSEL  	(IO_ADTECS44.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS45,attr=IO,locate=0x1552
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	CHSEL:4;
    } bit;
} ADTECS45STR;

__IO_EXTENDED	  ADTECS45STR	IO_ADTECS45;
#define	_adtecs45		(IO_ADTECS45)
#define	ADTECS45		(IO_ADTECS45.hword)
#define	ADTECS45_STS2  	(IO_ADTECS45.bit.STS2)
#define	ADTECS45_CHSEL  	(IO_ADTECS45.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS46,attr=IO,locate=0x1554
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	CHSEL:4;
    } bit;
} ADTECS46STR;

__IO_EXTENDED	  ADTECS46STR	IO_ADTECS46;
#define	_adtecs46		(IO_ADTECS46)
#define	ADTECS46		(IO_ADTECS46.hword)
#define	ADTECS46_STS2  	(IO_ADTECS46.bit.STS2)
#define	ADTECS46_CHSEL  	(IO_ADTECS46.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADTECS47,attr=IO,locate=0x1556
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	STS2:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	CHSEL:4;
    } bit;
} ADTECS47STR;

__IO_EXTENDED	  ADTECS47STR	IO_ADTECS47;
#define	_adtecs47		(IO_ADTECS47)
#define	ADTECS47		(IO_ADTECS47.hword)
#define	ADTECS47_STS2  	(IO_ADTECS47.bit.STS2)
#define	ADTECS47_CHSEL  	(IO_ADTECS47.bit.CHSEL)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCUT4,attr=IO,locate=0x1578
#endif

__IO_EXTENDED	__HWORD	IO_ADRCUT4;
#define	_adrcut4		(IO_ADRCUT4)
#define	ADRCUT4	(_adrcut4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCLT4,attr=IO,locate=0x157A
#endif

__IO_EXTENDED	__HWORD	IO_ADRCLT4;
#define	_adrclt4		(IO_ADRCLT4)
#define	ADRCLT4	(_adrclt4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCUT5,attr=IO,locate=0x157C
#endif

__IO_EXTENDED	__HWORD	IO_ADRCUT5;
#define	_adrcut5		(IO_ADRCUT5)
#define	ADRCUT5	(_adrcut5)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCLT5,attr=IO,locate=0x157E
#endif

__IO_EXTENDED	__HWORD	IO_ADRCLT5;
#define	_adrclt5		(IO_ADRCLT5)
#define	ADRCLT5	(_adrclt5)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCUT6,attr=IO,locate=0x1580
#endif

__IO_EXTENDED	__HWORD	IO_ADRCUT6;
#define	_adrcut6		(IO_ADRCUT6)
#define	ADRCUT6	(_adrcut6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCLT6,attr=IO,locate=0x1582
#endif

__IO_EXTENDED	__HWORD	IO_ADRCLT6;
#define	_adrclt6		(IO_ADRCLT6)
#define	ADRCLT6	(_adrclt6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCUT7,attr=IO,locate=0x1584
#endif

__IO_EXTENDED	__HWORD	IO_ADRCUT7;
#define	_adrcut7		(IO_ADRCUT7)
#define	ADRCUT7	(_adrcut7)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCLT7,attr=IO,locate=0x1586
#endif

__IO_EXTENDED	__HWORD	IO_ADRCLT7;
#define	_adrclt7		(IO_ADRCLT7)
#define	ADRCLT7	(_adrclt7)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS32,attr=IO,locate=0x1588
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS32STR;

__IO_EXTENDED	  ADRCCS32STR	IO_ADRCCS32;
#define	_adrccs32		(IO_ADRCCS32)
#define	ADRCCS32		(IO_ADRCCS32.byte)
#define	ADRCCS32_RCOCD  	(IO_ADRCCS32.bit.RCOCD)
#define	ADRCCS32_RCOIRS  	(IO_ADRCCS32.bit.RCOIRS)
#define	ADRCCS32_RCOIE  	(IO_ADRCCS32.bit.RCOIE)
#define	ADRCCS32_RCOE  	(IO_ADRCCS32.bit.RCOE)
#define	ADRCCS32_RCOTS  	(IO_ADRCCS32.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS33,attr=IO,locate=0x1589
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS33STR;

__IO_EXTENDED	  ADRCCS33STR	IO_ADRCCS33;
#define	_adrccs33		(IO_ADRCCS33)
#define	ADRCCS33		(IO_ADRCCS33.byte)
#define	ADRCCS33_RCOCD  	(IO_ADRCCS33.bit.RCOCD)
#define	ADRCCS33_RCOIRS  	(IO_ADRCCS33.bit.RCOIRS)
#define	ADRCCS33_RCOIE  	(IO_ADRCCS33.bit.RCOIE)
#define	ADRCCS33_RCOE  	(IO_ADRCCS33.bit.RCOE)
#define	ADRCCS33_RCOTS  	(IO_ADRCCS33.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS34,attr=IO,locate=0x158A
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS34STR;

__IO_EXTENDED	  ADRCCS34STR	IO_ADRCCS34;
#define	_adrccs34		(IO_ADRCCS34)
#define	ADRCCS34		(IO_ADRCCS34.byte)
#define	ADRCCS34_RCOCD  	(IO_ADRCCS34.bit.RCOCD)
#define	ADRCCS34_RCOIRS  	(IO_ADRCCS34.bit.RCOIRS)
#define	ADRCCS34_RCOIE  	(IO_ADRCCS34.bit.RCOIE)
#define	ADRCCS34_RCOE  	(IO_ADRCCS34.bit.RCOE)
#define	ADRCCS34_RCOTS  	(IO_ADRCCS34.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS35,attr=IO,locate=0x158B
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS35STR;

__IO_EXTENDED	  ADRCCS35STR	IO_ADRCCS35;
#define	_adrccs35		(IO_ADRCCS35)
#define	ADRCCS35		(IO_ADRCCS35.byte)
#define	ADRCCS35_RCOCD  	(IO_ADRCCS35.bit.RCOCD)
#define	ADRCCS35_RCOIRS  	(IO_ADRCCS35.bit.RCOIRS)
#define	ADRCCS35_RCOIE  	(IO_ADRCCS35.bit.RCOIE)
#define	ADRCCS35_RCOE  	(IO_ADRCCS35.bit.RCOE)
#define	ADRCCS35_RCOTS  	(IO_ADRCCS35.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS36,attr=IO,locate=0x158C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS36STR;

__IO_EXTENDED	  ADRCCS36STR	IO_ADRCCS36;
#define	_adrccs36		(IO_ADRCCS36)
#define	ADRCCS36		(IO_ADRCCS36.byte)
#define	ADRCCS36_RCOCD  	(IO_ADRCCS36.bit.RCOCD)
#define	ADRCCS36_RCOIRS  	(IO_ADRCCS36.bit.RCOIRS)
#define	ADRCCS36_RCOIE  	(IO_ADRCCS36.bit.RCOIE)
#define	ADRCCS36_RCOE  	(IO_ADRCCS36.bit.RCOE)
#define	ADRCCS36_RCOTS  	(IO_ADRCCS36.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS37,attr=IO,locate=0x158D
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS37STR;

__IO_EXTENDED	  ADRCCS37STR	IO_ADRCCS37;
#define	_adrccs37		(IO_ADRCCS37)
#define	ADRCCS37		(IO_ADRCCS37.byte)
#define	ADRCCS37_RCOCD  	(IO_ADRCCS37.bit.RCOCD)
#define	ADRCCS37_RCOIRS  	(IO_ADRCCS37.bit.RCOIRS)
#define	ADRCCS37_RCOIE  	(IO_ADRCCS37.bit.RCOIE)
#define	ADRCCS37_RCOE  	(IO_ADRCCS37.bit.RCOE)
#define	ADRCCS37_RCOTS  	(IO_ADRCCS37.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS38,attr=IO,locate=0x158E
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS38STR;

__IO_EXTENDED	  ADRCCS38STR	IO_ADRCCS38;
#define	_adrccs38		(IO_ADRCCS38)
#define	ADRCCS38		(IO_ADRCCS38.byte)
#define	ADRCCS38_RCOCD  	(IO_ADRCCS38.bit.RCOCD)
#define	ADRCCS38_RCOIRS  	(IO_ADRCCS38.bit.RCOIRS)
#define	ADRCCS38_RCOIE  	(IO_ADRCCS38.bit.RCOIE)
#define	ADRCCS38_RCOE  	(IO_ADRCCS38.bit.RCOE)
#define	ADRCCS38_RCOTS  	(IO_ADRCCS38.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS39,attr=IO,locate=0x158F
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS39STR;

__IO_EXTENDED	  ADRCCS39STR	IO_ADRCCS39;
#define	_adrccs39		(IO_ADRCCS39)
#define	ADRCCS39		(IO_ADRCCS39.byte)
#define	ADRCCS39_RCOCD  	(IO_ADRCCS39.bit.RCOCD)
#define	ADRCCS39_RCOIRS  	(IO_ADRCCS39.bit.RCOIRS)
#define	ADRCCS39_RCOIE  	(IO_ADRCCS39.bit.RCOIE)
#define	ADRCCS39_RCOE  	(IO_ADRCCS39.bit.RCOE)
#define	ADRCCS39_RCOTS  	(IO_ADRCCS39.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS40,attr=IO,locate=0x1590
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS40STR;

__IO_EXTENDED	  ADRCCS40STR	IO_ADRCCS40;
#define	_adrccs40		(IO_ADRCCS40)
#define	ADRCCS40		(IO_ADRCCS40.byte)
#define	ADRCCS40_RCOCD  	(IO_ADRCCS40.bit.RCOCD)
#define	ADRCCS40_RCOIRS  	(IO_ADRCCS40.bit.RCOIRS)
#define	ADRCCS40_RCOIE  	(IO_ADRCCS40.bit.RCOIE)
#define	ADRCCS40_RCOE  	(IO_ADRCCS40.bit.RCOE)
#define	ADRCCS40_RCOTS  	(IO_ADRCCS40.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS41,attr=IO,locate=0x1591
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS41STR;

__IO_EXTENDED	  ADRCCS41STR	IO_ADRCCS41;
#define	_adrccs41		(IO_ADRCCS41)
#define	ADRCCS41		(IO_ADRCCS41.byte)
#define	ADRCCS41_RCOCD  	(IO_ADRCCS41.bit.RCOCD)
#define	ADRCCS41_RCOIRS  	(IO_ADRCCS41.bit.RCOIRS)
#define	ADRCCS41_RCOIE  	(IO_ADRCCS41.bit.RCOIE)
#define	ADRCCS41_RCOE  	(IO_ADRCCS41.bit.RCOE)
#define	ADRCCS41_RCOTS  	(IO_ADRCCS41.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS42,attr=IO,locate=0x1592
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS42STR;

__IO_EXTENDED	  ADRCCS42STR	IO_ADRCCS42;
#define	_adrccs42		(IO_ADRCCS42)
#define	ADRCCS42		(IO_ADRCCS42.byte)
#define	ADRCCS42_RCOCD  	(IO_ADRCCS42.bit.RCOCD)
#define	ADRCCS42_RCOIRS  	(IO_ADRCCS42.bit.RCOIRS)
#define	ADRCCS42_RCOIE  	(IO_ADRCCS42.bit.RCOIE)
#define	ADRCCS42_RCOE  	(IO_ADRCCS42.bit.RCOE)
#define	ADRCCS42_RCOTS  	(IO_ADRCCS42.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS43,attr=IO,locate=0x1593
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS43STR;

__IO_EXTENDED	  ADRCCS43STR	IO_ADRCCS43;
#define	_adrccs43		(IO_ADRCCS43)
#define	ADRCCS43		(IO_ADRCCS43.byte)
#define	ADRCCS43_RCOCD  	(IO_ADRCCS43.bit.RCOCD)
#define	ADRCCS43_RCOIRS  	(IO_ADRCCS43.bit.RCOIRS)
#define	ADRCCS43_RCOIE  	(IO_ADRCCS43.bit.RCOIE)
#define	ADRCCS43_RCOE  	(IO_ADRCCS43.bit.RCOE)
#define	ADRCCS43_RCOTS  	(IO_ADRCCS43.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS44,attr=IO,locate=0x1594
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS44STR;

__IO_EXTENDED	  ADRCCS44STR	IO_ADRCCS44;
#define	_adrccs44		(IO_ADRCCS44)
#define	ADRCCS44		(IO_ADRCCS44.byte)
#define	ADRCCS44_RCOCD  	(IO_ADRCCS44.bit.RCOCD)
#define	ADRCCS44_RCOIRS  	(IO_ADRCCS44.bit.RCOIRS)
#define	ADRCCS44_RCOIE  	(IO_ADRCCS44.bit.RCOIE)
#define	ADRCCS44_RCOE  	(IO_ADRCCS44.bit.RCOE)
#define	ADRCCS44_RCOTS  	(IO_ADRCCS44.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS45,attr=IO,locate=0x1595
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS45STR;

__IO_EXTENDED	  ADRCCS45STR	IO_ADRCCS45;
#define	_adrccs45		(IO_ADRCCS45)
#define	ADRCCS45		(IO_ADRCCS45.byte)
#define	ADRCCS45_RCOCD  	(IO_ADRCCS45.bit.RCOCD)
#define	ADRCCS45_RCOIRS  	(IO_ADRCCS45.bit.RCOIRS)
#define	ADRCCS45_RCOIE  	(IO_ADRCCS45.bit.RCOIE)
#define	ADRCCS45_RCOE  	(IO_ADRCCS45.bit.RCOE)
#define	ADRCCS45_RCOTS  	(IO_ADRCCS45.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS46,attr=IO,locate=0x1596
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS46STR;

__IO_EXTENDED	  ADRCCS46STR	IO_ADRCCS46;
#define	_adrccs46		(IO_ADRCCS46)
#define	ADRCCS46		(IO_ADRCCS46.byte)
#define	ADRCCS46_RCOCD  	(IO_ADRCCS46.bit.RCOCD)
#define	ADRCCS46_RCOIRS  	(IO_ADRCCS46.bit.RCOIRS)
#define	ADRCCS46_RCOIE  	(IO_ADRCCS46.bit.RCOIE)
#define	ADRCCS46_RCOE  	(IO_ADRCCS46.bit.RCOE)
#define	ADRCCS46_RCOTS  	(IO_ADRCCS46.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCCS47,attr=IO,locate=0x1597
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RCOCD:3;
        __BYTE	RCOIRS:1;
        __BYTE	RCOIE:1;
        __BYTE	RCOE:1;
        __BYTE	RCOTS:2;
    } bit;
} ADRCCS47STR;

__IO_EXTENDED	  ADRCCS47STR	IO_ADRCCS47;
#define	_adrccs47		(IO_ADRCCS47)
#define	ADRCCS47		(IO_ADRCCS47.byte)
#define	ADRCCS47_RCOCD  	(IO_ADRCCS47.bit.RCOCD)
#define	ADRCCS47_RCOIRS  	(IO_ADRCCS47.bit.RCOIRS)
#define	ADRCCS47_RCOIE  	(IO_ADRCCS47.bit.RCOIE)
#define	ADRCCS47_RCOE  	(IO_ADRCCS47.bit.RCOE)
#define	ADRCCS47_RCOTS  	(IO_ADRCCS47.bit.RCOTS)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCOT1,attr=IO,locate=0x15A8
#endif

__IO_EXTENDED	const __WORD	IO_ADRCOT1;
#define	_adrcot1		(IO_ADRCOT1)
#define	ADRCOT1	(_adrcot1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADRCIF1,attr=IO,locate=0x15AC
#endif

__IO_EXTENDED	__WORD	IO_ADRCIF1;
#define	_adrcif1		(IO_ADRCIF1)
#define	ADRCIF1	(_adrcif1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADSCANS1,attr=IO,locate=0x15B0
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	SCINT:1;
        __BYTE	SCIE:1;
        __BYTE	SCMD:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} ADSCANS1STR;

__IO_EXTENDED	  ADSCANS1STR	IO_ADSCANS1;
#define	_adscans1		(IO_ADSCANS1)
#define	ADSCANS1		(IO_ADSCANS1.byte)
#define	ADSCANS1_SCINT  	(IO_ADSCANS1.bit.SCINT)
#define	ADSCANS1_SCIE  	(IO_ADSCANS1.bit.SCIE)
#define	ADSCANS1_SCMD  	(IO_ADSCANS1.bit.SCMD)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS16,attr=IO,locate=0x15B4
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN33:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT33:2;
        __BYTE	CNTEN32:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT32:2;
    } bit;
} ADNCS16STR;

__IO_EXTENDED	  ADNCS16STR	IO_ADNCS16;
#define	_adncs16		(IO_ADNCS16)
#define	ADNCS16		(IO_ADNCS16.byte)
#define	ADNCS16_CNTEN33  	(IO_ADNCS16.bit.CNTEN33)
#define	ADNCS16_CCNT33  	(IO_ADNCS16.bit.CCNT33)
#define	ADNCS16_CNTEN32  	(IO_ADNCS16.bit.CNTEN32)
#define	ADNCS16_CCNT32  	(IO_ADNCS16.bit.CCNT32)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS17,attr=IO,locate=0x15B5
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN35:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT35:2;
        __BYTE	CNTEN34:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT34:2;
    } bit;
} ADNCS17STR;

__IO_EXTENDED	  ADNCS17STR	IO_ADNCS17;
#define	_adncs17		(IO_ADNCS17)
#define	ADNCS17		(IO_ADNCS17.byte)
#define	ADNCS17_CNTEN35  	(IO_ADNCS17.bit.CNTEN35)
#define	ADNCS17_CCNT35  	(IO_ADNCS17.bit.CCNT35)
#define	ADNCS17_CNTEN34  	(IO_ADNCS17.bit.CNTEN34)
#define	ADNCS17_CCNT34  	(IO_ADNCS17.bit.CCNT34)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS18,attr=IO,locate=0x15B6
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN37:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT37:2;
        __BYTE	CNTEN36:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT36:2;
    } bit;
} ADNCS18STR;

__IO_EXTENDED	  ADNCS18STR	IO_ADNCS18;
#define	_adncs18		(IO_ADNCS18)
#define	ADNCS18		(IO_ADNCS18.byte)
#define	ADNCS18_CNTEN37  	(IO_ADNCS18.bit.CNTEN37)
#define	ADNCS18_CCNT37  	(IO_ADNCS18.bit.CCNT37)
#define	ADNCS18_CNTEN36  	(IO_ADNCS18.bit.CNTEN36)
#define	ADNCS18_CCNT36  	(IO_ADNCS18.bit.CCNT36)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS19,attr=IO,locate=0x15B7
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN39:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT39:2;
        __BYTE	CNTEN38:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT38:2;
    } bit;
} ADNCS19STR;

__IO_EXTENDED	  ADNCS19STR	IO_ADNCS19;
#define	_adncs19		(IO_ADNCS19)
#define	ADNCS19		(IO_ADNCS19.byte)
#define	ADNCS19_CNTEN39  	(IO_ADNCS19.bit.CNTEN39)
#define	ADNCS19_CCNT39  	(IO_ADNCS19.bit.CCNT39)
#define	ADNCS19_CNTEN38  	(IO_ADNCS19.bit.CNTEN38)
#define	ADNCS19_CCNT38  	(IO_ADNCS19.bit.CCNT38)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS20,attr=IO,locate=0x15B8
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN41:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT41:2;
        __BYTE	CNTEN40:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT40:2;
    } bit;
} ADNCS20STR;

__IO_EXTENDED	  ADNCS20STR	IO_ADNCS20;
#define	_adncs20		(IO_ADNCS20)
#define	ADNCS20		(IO_ADNCS20.byte)
#define	ADNCS20_CNTEN41  	(IO_ADNCS20.bit.CNTEN41)
#define	ADNCS20_CCNT41  	(IO_ADNCS20.bit.CCNT41)
#define	ADNCS20_CNTEN40  	(IO_ADNCS20.bit.CNTEN40)
#define	ADNCS20_CCNT40  	(IO_ADNCS20.bit.CCNT40)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS21,attr=IO,locate=0x15B9
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN43:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT43:2;
        __BYTE	CNTEN42:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT42:2;
    } bit;
} ADNCS21STR;

__IO_EXTENDED	  ADNCS21STR	IO_ADNCS21;
#define	_adncs21		(IO_ADNCS21)
#define	ADNCS21		(IO_ADNCS21.byte)
#define	ADNCS21_CNTEN43  	(IO_ADNCS21.bit.CNTEN43)
#define	ADNCS21_CCNT43  	(IO_ADNCS21.bit.CCNT43)
#define	ADNCS21_CNTEN42  	(IO_ADNCS21.bit.CNTEN42)
#define	ADNCS21_CCNT42  	(IO_ADNCS21.bit.CCNT42)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS22,attr=IO,locate=0x15BA
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN45:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT45:2;
        __BYTE	CNTEN44:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT44:2;
    } bit;
} ADNCS22STR;

__IO_EXTENDED	  ADNCS22STR	IO_ADNCS22;
#define	_adncs22		(IO_ADNCS22)
#define	ADNCS22		(IO_ADNCS22.byte)
#define	ADNCS22_CNTEN45  	(IO_ADNCS22.bit.CNTEN45)
#define	ADNCS22_CCNT45  	(IO_ADNCS22.bit.CCNT45)
#define	ADNCS22_CNTEN44  	(IO_ADNCS22.bit.CNTEN44)
#define	ADNCS22_CCNT44  	(IO_ADNCS22.bit.CCNT44)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADNCS23,attr=IO,locate=0x15BB
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	CNTEN47:1;
        __BYTE	RESV1:1;
        __BYTE	CCNT47:2;
        __BYTE	CNTEN46:1;
        __BYTE	RESV4:1;
        __BYTE	CCNT46:2;
    } bit;
} ADNCS23STR;

__IO_EXTENDED	  ADNCS23STR	IO_ADNCS23;
#define	_adncs23		(IO_ADNCS23)
#define	ADNCS23		(IO_ADNCS23.byte)
#define	ADNCS23_CNTEN47  	(IO_ADNCS23.bit.CNTEN47)
#define	ADNCS23_CCNT47  	(IO_ADNCS23.bit.CCNT47)
#define	ADNCS23_CNTEN46  	(IO_ADNCS23.bit.CNTEN46)
#define	ADNCS23_CCNT46  	(IO_ADNCS23.bit.CCNT46)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADPRTF1,attr=IO,locate=0x15C4
#endif

__IO_EXTENDED	const __WORD	IO_ADPRTF1;
#define	_adprtf1		(IO_ADPRTF1)
#define	ADPRTF1	(_adprtf1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADEOCF1,attr=IO,locate=0x15C8
#endif

__IO_EXTENDED	const __WORD	IO_ADEOCF1;
#define	_adeocf1		(IO_ADEOCF1)
#define	ADEOCF1	(_adeocf1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCS1,attr=IO,locate=0x15CC
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	BUSY:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
        __HWORD	RESV14:1;
        __HWORD	RESV15:1;
    } bit;
} ADCS1STR;

__IO_EXTENDED	 const  ADCS1STR	IO_ADCS1;
#define	_adcs1		(IO_ADCS1)
#define	ADCS1		(IO_ADCS1.hword)
#define	ADCS1_BUSY  	(IO_ADCS1.bit.BUSY)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADCH1,attr=IO,locate=0x15CE
#endif

__IO_EXTENDED	const __BYTE	IO_ADCH1;
#define	_adch1		(IO_ADCH1)
#define	ADCH1	(_adch1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADMD1,attr=IO,locate=0x15CF
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	STPCEN:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	CT:2;
        __BYTE	ST:2;
    } bit;
} ADMD1STR;

__IO_EXTENDED	  ADMD1STR	IO_ADMD1;
#define	_admd1		(IO_ADMD1)
#define	ADMD1		(IO_ADMD1.byte)
#define	ADMD1_STPCEN  	(IO_ADMD1.bit.STPCEN)
#define	ADMD1_CT  	(IO_ADMD1.bit.CT)
#define	ADMD1_ST  	(IO_ADMD1.bit.ST)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADSTPCS8,attr=IO,locate=0x15D0
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	STCH35:2;
        __BYTE	STCH34:2;
        __BYTE	STCH33:2;
        __BYTE	STCH32:2;
    } bit;
} ADSTPCS8STR;

__IO_EXTENDED	  ADSTPCS8STR	IO_ADSTPCS8;
#define	_adstpcs8		(IO_ADSTPCS8)
#define	ADSTPCS8		(IO_ADSTPCS8.byte)
#define	ADSTPCS8_STCH35  	(IO_ADSTPCS8.bit.STCH35)
#define	ADSTPCS8_STCH34  	(IO_ADSTPCS8.bit.STCH34)
#define	ADSTPCS8_STCH33  	(IO_ADSTPCS8.bit.STCH33)
#define	ADSTPCS8_STCH32  	(IO_ADSTPCS8.bit.STCH32)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADSTPCS9,attr=IO,locate=0x15D1
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	STCH39:2;
        __BYTE	STCH38:2;
        __BYTE	STCH37:2;
        __BYTE	STCH36:2;
    } bit;
} ADSTPCS9STR;

__IO_EXTENDED	  ADSTPCS9STR	IO_ADSTPCS9;
#define	_adstpcs9		(IO_ADSTPCS9)
#define	ADSTPCS9		(IO_ADSTPCS9.byte)
#define	ADSTPCS9_STCH39  	(IO_ADSTPCS9.bit.STCH39)
#define	ADSTPCS9_STCH38  	(IO_ADSTPCS9.bit.STCH38)
#define	ADSTPCS9_STCH37  	(IO_ADSTPCS9.bit.STCH37)
#define	ADSTPCS9_STCH36  	(IO_ADSTPCS9.bit.STCH36)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADSTPCS10,attr=IO,locate=0x15D2
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	STCH43:2;
        __BYTE	STCH42:2;
        __BYTE	STCH41:2;
        __BYTE	STCH40:2;
    } bit;
} ADSTPCS10STR;

__IO_EXTENDED	  ADSTPCS10STR	IO_ADSTPCS10;
#define	_adstpcs10		(IO_ADSTPCS10)
#define	ADSTPCS10		(IO_ADSTPCS10.byte)
#define	ADSTPCS10_STCH43  	(IO_ADSTPCS10.bit.STCH43)
#define	ADSTPCS10_STCH42  	(IO_ADSTPCS10.bit.STCH42)
#define	ADSTPCS10_STCH41  	(IO_ADSTPCS10.bit.STCH41)
#define	ADSTPCS10_STCH40  	(IO_ADSTPCS10.bit.STCH40)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_ADSTPCS11,attr=IO,locate=0x15D3
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	STCH47:2;
        __BYTE	STCH46:2;
        __BYTE	STCH45:2;
        __BYTE	STCH44:2;
    } bit;
} ADSTPCS11STR;

__IO_EXTENDED	  ADSTPCS11STR	IO_ADSTPCS11;
#define	_adstpcs11		(IO_ADSTPCS11)
#define	ADSTPCS11		(IO_ADSTPCS11.byte)
#define	ADSTPCS11_STCH47  	(IO_ADSTPCS11.bit.STCH47)
#define	ADSTPCS11_STCH46  	(IO_ADSTPCS11.bit.STCH46)
#define	ADSTPCS11_STCH45  	(IO_ADSTPCS11.bit.STCH45)
#define	ADSTPCS11_STCH44  	(IO_ADSTPCS11.bit.STCH44)

/*Multi Function Serial definition*/
typedef union
{

    struct
    {
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	UPCL:1;
                __BYTE	RESV01:1;
                __BYTE	RESV02:1;
                __BYTE	RIE:1;
                __BYTE	TIE:1;
                __BYTE	TBIE:1;
                __BYTE	RXE:1;
                __BYTE	TXE:1;
            } bit;
        } SCR;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	MD:3;
                __BYTE	RESV11:1;
                __BYTE	SBL:1;
                __BYTE	BDS:1;
                __BYTE	RESV14:1;
                __BYTE	SOE:1;
            } bit;
        } SMR;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	REC:1;
                __BYTE	RESV21:1;
                __BYTE	PE:1;
                __BYTE	FRE:1;
                __BYTE	ORE:1;
                __BYTE	RDRF:1;
                __BYTE	TDRE:1;
                __BYTE	TBI:1;
            } bit;
        } SSR;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	FLWEN:1;
                __BYTE	ESBL:1;
                __BYTE	INV:1;
                __BYTE	PEN:1;
                __BYTE	P:1;
                __BYTE	L:3;
            } bit;
        } ESCR;
        __HWORD	IO_RESV1;
        union
        {
            __HWORD	hword;
            struct
            {
                __BYTE	RESV1;
                __BYTE	RDR0L;
            } byte;
            struct
            {
                __HWORD	RESV1:7;
                __HWORD	D:9;
            } bit9;
            struct
            {
                __HWORD	RESV1:9;
                __HWORD	D:7;
            } bit7;
            struct
            {
                __HWORD	RESV1:10;
                __HWORD	D:6;
            } bit6;
            struct
            {
                __HWORD	RESV1:11;
                __HWORD	D:5;
            } bit5;
        } RDR0;
        union
        {
            __HWORD	hword;
            struct
            {
                __HWORD	STST:1;
                __HWORD	RESV81:1;
                __HWORD	RESV82:1;
                __HWORD	RESV83:1;
                __HWORD	RESV84:1;
                __HWORD	TRG:2;
                __HWORD	TINT:1;
                __HWORD	TINTE:1;
                __HWORD	TSYNE:1;
                __HWORD	TRGE:1;
                __HWORD	TDIV:4;
                __HWORD	TMRE:1;
            } bit;
        } SACSR;
        const __HWORD	STMR;
        __HWORD	STMCR;
        __HWORD	IO_RESV2;
        __BYTE	IO_RESV3;
        __BYTE	IO_RESV4;
        __BYTE	IO_RESV5;
        __BYTE	IO_RESV6;
        __BYTE	IO_RESV7;
        __BYTE	IO_RESV8;
        __BYTE	IO_RESV9;
        __BYTE	IO_RESV10;
        __BYTE	IO_RESV11;
        __BYTE	IO_RESV12;
        __BYTE	IO_RESV13;
        __BYTE	TBYTE0;
        __HWORD	BGR;
        __BYTE	IO_RESV15;
        __BYTE	IO_RESV16;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV320:1;
                __BYTE	RESV321:1;
                __BYTE	RESV322:1;
                __BYTE	FLSTE:1;
                __BYTE	FRIIE:1;
                __BYTE	FDRQ:1;
                __BYTE	FTIE:1;
                __BYTE	FSEL:1;
            } bit;
        } FCR1;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV330:1;
                __BYTE	FLST:1;
                __BYTE	FLD:1;
                __BYTE	FSET:1;
                __BYTE	FCL2:1;
                __BYTE	FCL1:1;
                __BYTE	FE2:1;
                __BYTE	FE1:1;
            } bit;
        } FCR0;
        union
        {
            __HWORD	hword;
            struct
            {
                __BYTE	FBYTE2;
                __BYTE	FBYTE1;
            } byte;
        } FBYTE;
        union
        {
            __HWORD	hword;
            struct
            {
                __BYTE	FTICR2;
                __BYTE	FTICR1;
            } byte;
        } FTICR;
        __HWORD	IO_RESV17;
    } UART;

    struct
    {
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	UPCL:1;
                __BYTE	MS:1;
                __BYTE	SPI:1;
                __BYTE	RIE:1;
                __BYTE	TIE:1;
                __BYTE	TBIE:1;
                __BYTE	RXE:1;
                __BYTE	TXE:1;
            } bit;
        } SCR;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	MD:3;
                __BYTE	RESV11:1;
                __BYTE	SCINV:1;
                __BYTE	BDS:1;
                __BYTE	SCKE:1;
                __BYTE	SOE:1;
            } bit;
        } SMR;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	REC:1;
                __BYTE	RESV21:1;
                __BYTE	ES:1;
                __BYTE	AWC:1;
                __BYTE	ORE:1;
                __BYTE	RDRF:1;
                __BYTE	TDRE:1;
                __BYTE	TBI:1;
            } bit;
        } SSR;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	SOP:1;
                __BYTE	L3:1;
                __BYTE	CSFE:1;
                __BYTE	WT:2;
                __BYTE	L:3;
            } bit;
        } ESCR;
        union
        {
            __WORD	word;
            struct
            {
                __HWORD	RDR1;
                __HWORD	RDR0;
            } hword;
        } RDR;
        union
        {
            __HWORD	hword;
            struct
            {
                __HWORD	STST:1;
                __HWORD	RESV81:1;
                __HWORD	TBEEN:1;
                __HWORD	CSEIE:1;
                __HWORD	CSE:1;
                __HWORD	TRG:2;
                __HWORD	TINT:1;
                __HWORD	TINTE:1;
                __HWORD	TSYNE:1;
                __HWORD	TRGE:1;
                __HWORD	TDIV:4;
                __HWORD	TMRE:1;
            } bit;
        } SACSR;
        const __HWORD	STMR;
        __HWORD	STMCR;
        union
        {
            __HWORD	hword;
            struct
            {
                __HWORD	SST:2;
                __HWORD	SED:2;
                __HWORD	SCD:2;
                __HWORD	SCAM:1;
                __HWORD	CDIV:3;
                __HWORD	CSLVL:1;
                __HWORD	CSEN3:1;
                __HWORD	CSEN2:1;
                __HWORD	CSEN1:1;
                __HWORD	CSEN0:1;
                __HWORD	CSOE:1;
            } bit;
        } SCSCR;
        union
        {
            __WORD	word;
            struct
            {
                __HWORD	SCSTR32;
                __HWORD	SCSTR10;
            } hword;
            struct
            {
                __BYTE	SCSTR3;
                __BYTE	SCSTR2;
                __BYTE	SCSTR1;
                __BYTE	SCSTR0;
            } byte;
        } SCSTR;
        __BYTE	IO_RESV7;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	CSLVL:1;
                __BYTE	SCINV:1;
                __BYTE	SPI:1;
                __BYTE	BDS:1;
                __BYTE	L:4;
            } bit;
        } SCSFR2;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	CSLVL:1;
                __BYTE	SCINV:1;
                __BYTE	SPI:1;
                __BYTE	BDS:1;
                __BYTE	L:4;
            } bit;
        } SCSFR1;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	CSLVL:1;
                __BYTE	SCINV:1;
                __BYTE	SPI:1;
                __BYTE	BDS:1;
                __BYTE	L:4;
            } bit;
        } SCSFR0;
        __BYTE	TBYTE3;
        __BYTE	TBYTE2;
        __BYTE	TBYTE1;
        __BYTE	TBYTE0;
        __HWORD	BGR;
        __BYTE	IO_RESV15;
        __BYTE	IO_RESV16;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV320:1;
                __BYTE	RESV321:1;
                __BYTE	RESV322:1;
                __BYTE	FLSTE:1;
                __BYTE	FRIIE:1;
                __BYTE	FDRQ:1;
                __BYTE	FTIE:1;
                __BYTE	FSEL:1;
            } bit;
        } FCR1;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV330:1;
                __BYTE	FLST:1;
                __BYTE	FLD:1;
                __BYTE	FSET:1;
                __BYTE	FCL2:1;
                __BYTE	FCL1:1;
                __BYTE	FE2:1;
                __BYTE	FE1:1;
            } bit;
        } FCR0;
        union
        {
            __HWORD	hword;
            struct
            {
                __BYTE	FBYTE2;
                __BYTE	FBYTE1;
            } byte;
        } FBYTE;
        union
        {
            __HWORD	hword;
            struct
            {
                __BYTE	FTICR2;
                __BYTE	FTICR1;
            } byte;
        } FTICR;
        __HWORD	IO_RESV17;
    } CSIO;

    struct
    {
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	UPCL:1;
                __BYTE	MS:1;
                __BYTE	LBR:1;
                __BYTE	RIE:1;
                __BYTE	TIE:1;
                __BYTE	TBIE:1;
                __BYTE	RXE:1;
                __BYTE	TXE:1;
            } bit;
        } SCR;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	MD:3;
                __BYTE	RESV11:1;
                __BYTE	SBL:1;
                __BYTE	RESV13:1;
                __BYTE	RESV14:1;
                __BYTE	SOE:1;
            } bit;
        } SMR;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	REC:1;
                __BYTE	RESV21:1;
                __BYTE	LBD:1;
                __BYTE	FRE:1;
                __BYTE	ORE:1;
                __BYTE	RDRF:1;
                __BYTE	TDRE:1;
                __BYTE	TBI:1;
            } bit;
        } SSR;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV30:1;
                __BYTE	ESBL:1;
                __BYTE	RESV32:1;
                __BYTE	LBIE:1;
                __BYTE	LBL:2;
                __BYTE	DEL:2;
            } bit;
        } ESCR;
        __HWORD	IO_RESV1;
        __HWORD	RDR0;
        union
        {
            __HWORD	hword;
            struct
            {
                __HWORD	STST:1;
                __HWORD	BST:1;
                __HWORD	SFD:1;
                __HWORD	SFDE:1;
                __HWORD	AUTE:1;
                __HWORD	TRG:2;
                __HWORD	TINT:1;
                __HWORD	TINTE:1;
                __HWORD	TSYNE:1;
                __HWORD	TRGE:1;
                __HWORD	TDIV:4;
                __HWORD	TMRE:1;
            } bit;
        } SACSR;
        const __HWORD	STMR;
        __HWORD	STMCR;
        __HWORD	SFUR;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	LER:1;
                __BYTE	SER:1;
                __BYTE	RDRF:1;
                __BYTE	TDRE:1;
                __BYTE	TBI:1;
                __BYTE	LCSC:1;
                __BYTE	RESV166:1;
                __BYTE	LAHC:1;
            } bit;
        } LAMSR;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	LDL:4;
                __BYTE	LTDRCL:1;
                __BYTE	LCSTYP:1;
                __BYTE	LIDEN:1;
                __BYTE	LAMEN:1;
            } bit;
        } LAMCR;
        union
        {
            __HWORD	hword;
            struct
            {
                __BYTE	SFLR1;
                __BYTE	SFLR0;
            } byte;
        } SFLR;
        __BYTE	IO_RESV7;
        __BYTE	IO_RESV8;
        __BYTE	IO_RESV9;
        __BYTE	IO_RESV10;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV240:1;
                __BYTE	LCSER:1;
                __BYTE	LPTER:1;
                __BYTE	LSFER:1;
                __BYTE	LBSER:1;
                __BYTE	RESV245:1;
                __BYTE	RESV246:1;
                __BYTE	RESV247:1;
            } bit;
        } LAMESR;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	KEY:2;
                __BYTE	RESV251:1;
                __BYTE	LCSERT:1;
                __BYTE	LPTERT:1;
                __BYTE	LSFERT:1;
                __BYTE	LBSERT:1;
                __BYTE	FRET:1;
            } bit;
        } LAMERT;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV260:1;
                __BYTE	LCSERIE:1;
                __BYTE	LPTERIE:1;
                __BYTE	LSFERIE:1;
                __BYTE	LBSERIE:1;
                __BYTE	LCSCIE:1;
                __BYTE	RESV266:1;
                __BYTE	LAHCIE:1;
            } bit;
        } LAMIER;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	P:2;
                __BYTE	LID:6;
            } bit;
        } LAMID;
        __HWORD	BGR;
        __BYTE	IO_RESV15;
        __BYTE	IO_RESV16;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV320:1;
                __BYTE	RESV321:1;
                __BYTE	RESV322:1;
                __BYTE	FLSTE:1;
                __BYTE	FRIIE:1;
                __BYTE	FDRQ:1;
                __BYTE	FTIE:1;
                __BYTE	FSEL:1;
            } bit;
        } FCR1;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV330:1;
                __BYTE	FLST:1;
                __BYTE	FLD:1;
                __BYTE	FSET:1;
                __BYTE	FCL2:1;
                __BYTE	FCL1:1;
                __BYTE	FE2:1;
                __BYTE	FE1:1;
            } bit;
        } FCR0;
        union
        {
            __HWORD	hword;
            struct
            {
                __BYTE	FBYTE2;
                __BYTE	FBYTE1;
            } byte;
        } FBYTE;
        union
        {
            __HWORD	hword;
            struct
            {
                __BYTE	FTICR2;
                __BYTE	FTICR1;
            } byte;
        } FTICR;
        __HWORD	IO_RESV17;
    } LINUART;

    struct
    {
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	MSS:1;
                __BYTE	ACT_SCC:1;
                __BYTE	ACKE:1;
                __BYTE	WSEL:1;
                __BYTE	CNDE:1;
                __BYTE	INTE:1;
                __BYTE	BER:1;
                __BYTE	INT:1;
            } bit;
        } IBCR;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	MD:3;
                __BYTE	RESV11:1;
                __BYTE	RIE:1;
                __BYTE	TIE:1;
                __BYTE	RESV14:1;
                __BYTE	RESV15:1;
            } bit;
        } SMR;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	REC:1;
                __BYTE	TSET:1;
                __BYTE	DMA:1;
                __BYTE	TBIE:1;
                __BYTE	ORE:1;
                __BYTE	RDRF:1;
                __BYTE	TDRE:1;
                __BYTE	TBI:1;
            } bit;
        } SSR;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	FBT:1;
                __BYTE	RACK:1;
                __BYTE	RSA:1;
                __BYTE	TRX:1;
                __BYTE	AL:1;
                __BYTE	RSC:1;
                __BYTE	SPC:1;
                __BYTE	BB:1;
            } bit;
        } IBSR;
        __HWORD	IO_RESV1;
        __HWORD	RDR0;
        union
        {
            __HWORD	hword;
            struct
            {
                __HWORD	RESV80:1;
                __HWORD	RESV81:1;
                __HWORD	RESV82:1;
                __HWORD	RESV83:1;
                __HWORD	RESV84:1;
                __HWORD	TRG:2;
                __HWORD	TINT:1;
                __HWORD	TINTE:1;
                __HWORD	RESV88:1;
                __HWORD	TRGE:1;
                __HWORD	TDIV:4;
                __HWORD	TMRE:1;
            } bit;
        } SACSR;
        const __HWORD	STMR;
        __HWORD	STMCR;
        __HWORD	IO_RESV2;
        __BYTE	IO_RESV3;
        __BYTE	IO_RESV4;
        __BYTE	IO_RESV5;
        __BYTE	IO_RESV6;
        __BYTE	IO_RESV7;
        __BYTE	IO_RESV8;
        __BYTE	IO_RESV9;
        __BYTE	IO_RESV10;
        __BYTE	IO_RESV11;
        __BYTE	IO_RESV12;
        __BYTE	IO_RESV13;
        __BYTE	IO_RESV14;
        __HWORD	BGR;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	EN:1;
                __BYTE	SM:7;
            } bit;
        } ISMK;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	SAEN:1;
                __BYTE	SA:7;
            } bit;
        } ISBA;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV320:1;
                __BYTE	RESV321:1;
                __BYTE	RESV322:1;
                __BYTE	FLSTE:1;
                __BYTE	FRIIE:1;
                __BYTE	FDRQ:1;
                __BYTE	FTIE:1;
                __BYTE	FSEL:1;
            } bit;
        } FCR1;
        union
        {
            __BYTE	byte;
            struct
            {
                __BYTE	RESV330:1;
                __BYTE	FLST:1;
                __BYTE	FLD:1;
                __BYTE	FSET:1;
                __BYTE	FCL2:1;
                __BYTE	FCL1:1;
                __BYTE	FE2:1;
                __BYTE	FE1:1;
            } bit;
        } FCR0;
        union
        {
            __HWORD	hword;
            struct
            {
                __BYTE	FBYTE2;
                __BYTE	FBYTE1;
            } byte;
        } FBYTE;
        union
        {
            __HWORD	hword;
            struct
            {
                __BYTE	FTICR2;
                __BYTE	FTICR1;
            } byte;
        } FTICR;
        __HWORD	IO_RESV17;
    } I2C;

} MFSSTR;

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MFS0,attr=IO,locate=0x1750
#endif

__IO_EXTENDED	MFSSTR	IO_MFS0;

#define	MFS0_UART_SCR			(IO_MFS0.UART.SCR.byte)
#define	MFS0_UART_SCR_UPCL    	(IO_MFS0.UART.SCR.bit.UPCL)
#define	MFS0_UART_SCR_RIE    	(IO_MFS0.UART.SCR.bit.RIE)
#define	MFS0_UART_SCR_TIE    	(IO_MFS0.UART.SCR.bit.TIE)
#define	MFS0_UART_SCR_TBIE    	(IO_MFS0.UART.SCR.bit.TBIE)
#define	MFS0_UART_SCR_RXE    	(IO_MFS0.UART.SCR.bit.RXE)
#define	MFS0_UART_SCR_TXE    	(IO_MFS0.UART.SCR.bit.TXE)
#define	MFS0_UART_SMR			(IO_MFS0.UART.SMR.byte)
#define	MFS0_UART_SMR_MD    	(IO_MFS0.UART.SMR.bit.MD)
#define	MFS0_UART_SMR_SBL    	(IO_MFS0.UART.SMR.bit.SBL)
#define	MFS0_UART_SMR_BDS    	(IO_MFS0.UART.SMR.bit.BDS)
#define	MFS0_UART_SMR_SOE    	(IO_MFS0.UART.SMR.bit.SOE)
#define	MFS0_UART_SSR			(IO_MFS0.UART.SSR.byte)
#define	MFS0_UART_SSR_REC    	(IO_MFS0.UART.SSR.bit.REC)
#define	MFS0_UART_SSR_PE    	(IO_MFS0.UART.SSR.bit.PE)
#define	MFS0_UART_SSR_FRE    	(IO_MFS0.UART.SSR.bit.FRE)
#define	MFS0_UART_SSR_ORE    	(IO_MFS0.UART.SSR.bit.ORE)
#define	MFS0_UART_SSR_RDRF    	(IO_MFS0.UART.SSR.bit.RDRF)
#define	MFS0_UART_SSR_TDRE    	(IO_MFS0.UART.SSR.bit.TDRE)
#define	MFS0_UART_SSR_TBI    	(IO_MFS0.UART.SSR.bit.TBI)
#define	MFS0_UART_ESCR			(IO_MFS0.UART.ESCR.byte)
#define	MFS0_UART_ESCR_FLWEN    	(IO_MFS0.UART.ESCR.bit.FLWEN)
#define	MFS0_UART_ESCR_ESBL    	(IO_MFS0.UART.ESCR.bit.ESBL)
#define	MFS0_UART_ESCR_INV    	(IO_MFS0.UART.ESCR.bit.INV)
#define	MFS0_UART_ESCR_PEN    	(IO_MFS0.UART.ESCR.bit.PEN)
#define	MFS0_UART_ESCR_P    	(IO_MFS0.UART.ESCR.bit.P)
#define	MFS0_UART_ESCR_L    	(IO_MFS0.UART.ESCR.bit.L)
#define	MFS0_UART_RDR0	(IO_MFS0.UART.RDR0.hword)
#define	MFS0_UART_RDR0_RDR0L	(IO_MFS0.UART.RDR0.byte.RDR0L)
#define	MFS0_UART_RDR0_bit9	(IO_MFS0.UART.RDR0.bit9.D)
#define	MFS0_UART_RDR0_bit7	(IO_MFS0.UART.RDR0.bit7.D)
#define	MFS0_UART_RDR0_bit6	(IO_MFS0.UART.RDR0.bit6.D)
#define	MFS0_UART_RDR0_bit5	(IO_MFS0.UART.RDR0.bit5.D)
#define	MFS0_UART_TDR0	(IO_MFS0.UART.RDR0.hword)
#define	MFS0_UART_TDR0_TDR0L	(IO_MFS0.UART.RDR0.byte.RDR0L)
#define	MFS0_UART_TDR0_bit9	(IO_MFS0.UART.RDR0.bit9.D)
#define	MFS0_UART_TDR0_bit7	(IO_MFS0.UART.RDR0.bit7.D)
#define	MFS0_UART_TDR0_bit6	(IO_MFS0.UART.RDR0.bit6.D)
#define	MFS0_UART_TDR0_bit5	(IO_MFS0.UART.RDR0.bit5.D)
#define	MFS0_UART_SACSR			(IO_MFS0.UART.SACSR.hword)
#define	MFS0_UART_SACSR_STST    	(IO_MFS0.UART.SACSR.bit.STST)
#define	MFS0_UART_SACSR_TRG    	(IO_MFS0.UART.SACSR.bit.TRG)
#define	MFS0_UART_SACSR_TINT    	(IO_MFS0.UART.SACSR.bit.TINT)
#define	MFS0_UART_SACSR_TINTE    	(IO_MFS0.UART.SACSR.bit.TINTE)
#define	MFS0_UART_SACSR_TSYNE    	(IO_MFS0.UART.SACSR.bit.TSYNE)
#define	MFS0_UART_SACSR_TRGE    	(IO_MFS0.UART.SACSR.bit.TRGE)
#define	MFS0_UART_SACSR_TDIV    	(IO_MFS0.UART.SACSR.bit.TDIV)
#define	MFS0_UART_SACSR_TMRE    	(IO_MFS0.UART.SACSR.bit.TMRE)
#define	MFS0_UART_STMR	(IO_MFS0.UART.STMR)
#define	MFS0_UART_STMCR	(IO_MFS0.UART.STMCR)
#define	MFS0_UART_TBYTE0	(IO_MFS0.UART.TBYTE0)
#define	MFS0_UART_BGR			(IO_MFS0.UART.BGR)
#define	MFS0_UART_FCR1			(IO_MFS0.UART.FCR1.byte)
#define	MFS0_UART_FCR1_FLSTE    	(IO_MFS0.UART.FCR1.bit.FLSTE)
#define	MFS0_UART_FCR1_FRIIE    	(IO_MFS0.UART.FCR1.bit.FRIIE)
#define	MFS0_UART_FCR1_FDRQ    	(IO_MFS0.UART.FCR1.bit.FDRQ)
#define	MFS0_UART_FCR1_FTIE    	(IO_MFS0.UART.FCR1.bit.FTIE)
#define	MFS0_UART_FCR1_FSEL    	(IO_MFS0.UART.FCR1.bit.FSEL)
#define	MFS0_UART_FCR0			(IO_MFS0.UART.FCR0.byte)
#define	MFS0_UART_FCR0_FLST    	(IO_MFS0.UART.FCR0.bit.FLST)
#define	MFS0_UART_FCR0_FLD    	(IO_MFS0.UART.FCR0.bit.FLD)
#define	MFS0_UART_FCR0_FSET    	(IO_MFS0.UART.FCR0.bit.FSET)
#define	MFS0_UART_FCR0_FCL2    	(IO_MFS0.UART.FCR0.bit.FCL2)
#define	MFS0_UART_FCR0_FCL1    	(IO_MFS0.UART.FCR0.bit.FCL1)
#define	MFS0_UART_FCR0_FE2    	(IO_MFS0.UART.FCR0.bit.FE2)
#define	MFS0_UART_FCR0_FE1    	(IO_MFS0.UART.FCR0.bit.FE1)
#define	MFS0_UART_FBYTE 	(IO_MFS0.UART.FBYTE.hword)
#define	MFS0_UART_FBYTE2	(IO_MFS0.UART.FBYTE.byte.FBYTE2)
#define	MFS0_UART_FBYTE1	(IO_MFS0.UART.FBYTE.byte.FBYTE1)
#define	MFS0_UART_FTICR 	(IO_MFS0.UART.FTICR.hword)
#define	MFS0_UART_FTICR2	(IO_MFS0.UART.FTICR.byte.FTICR2)
#define	MFS0_UART_FTICR1	(IO_MFS0.UART.FTICR.byte.FTICR1)

#define	MFS0_CSIO_SCR			(IO_MFS0.CSIO.SCR.byte)
#define	MFS0_CSIO_SCR_UPCL    	(IO_MFS0.CSIO.SCR.bit.UPCL)
#define	MFS0_CSIO_SCR_MS    	(IO_MFS0.CSIO.SCR.bit.MS)
#define	MFS0_CSIO_SCR_SPI    	(IO_MFS0.CSIO.SCR.bit.SPI)
#define	MFS0_CSIO_SCR_RIE    	(IO_MFS0.CSIO.SCR.bit.RIE)
#define	MFS0_CSIO_SCR_TIE    	(IO_MFS0.CSIO.SCR.bit.TIE)
#define	MFS0_CSIO_SCR_TBIE    	(IO_MFS0.CSIO.SCR.bit.TBIE)
#define	MFS0_CSIO_SCR_RXE    	(IO_MFS0.CSIO.SCR.bit.RXE)
#define	MFS0_CSIO_SCR_TXE    	(IO_MFS0.CSIO.SCR.bit.TXE)
#define	MFS0_CSIO_SMR			(IO_MFS0.CSIO.SMR.byte)
#define	MFS0_CSIO_SMR_MD    	(IO_MFS0.CSIO.SMR.bit.MD)
#define	MFS0_CSIO_SMR_SCINV    	(IO_MFS0.CSIO.SMR.bit.SCINV)
#define	MFS0_CSIO_SMR_BDS    	(IO_MFS0.CSIO.SMR.bit.BDS)
#define	MFS0_CSIO_SMR_SCKE    	(IO_MFS0.CSIO.SMR.bit.SCKE)
#define	MFS0_CSIO_SMR_SOE    	(IO_MFS0.CSIO.SMR.bit.SOE)
#define	MFS0_CSIO_SSR			(IO_MFS0.CSIO.SSR.byte)
#define	MFS0_CSIO_SSR_REC    	(IO_MFS0.CSIO.SSR.bit.REC)
#define	MFS0_CSIO_SSR_ES    	(IO_MFS0.CSIO.SSR.bit.ES)
#define	MFS0_CSIO_SSR_AWC    	(IO_MFS0.CSIO.SSR.bit.AWC)
#define	MFS0_CSIO_SSR_ORE    	(IO_MFS0.CSIO.SSR.bit.ORE)
#define	MFS0_CSIO_SSR_RDRF    	(IO_MFS0.CSIO.SSR.bit.RDRF)
#define	MFS0_CSIO_SSR_TDRE    	(IO_MFS0.CSIO.SSR.bit.TDRE)
#define	MFS0_CSIO_SSR_TBI    	(IO_MFS0.CSIO.SSR.bit.TBI)
#define	MFS0_CSIO_ESCR			(IO_MFS0.CSIO.ESCR.byte)
#define	MFS0_CSIO_ESCR_SOP    	(IO_MFS0.CSIO.ESCR.bit.SOP)
#define	MFS0_CSIO_ESCR_L3    	(IO_MFS0.CSIO.ESCR.bit.L3)
#define	MFS0_CSIO_ESCR_CSFE    	(IO_MFS0.CSIO.ESCR.bit.CSFE)
#define	MFS0_CSIO_ESCR_WT    	(IO_MFS0.CSIO.ESCR.bit.WT)
#define	MFS0_CSIO_ESCR_L    	(IO_MFS0.CSIO.ESCR.bit.L)
#define	MFS0_CSIO_RDR	(IO_MFS0.CSIO.RDR.word)
#define	MFS0_CSIO_RDR1	(IO_MFS0.CSIO.RDR.hword.RDR1)
#define	MFS0_CSIO_RDR0	(IO_MFS0.CSIO.RDR.hword.RDR0)
#define	MFS0_CSIO_TDR	(IO_MFS0.CSIO.RDR.word)
#define	MFS0_CSIO_TDR1	(IO_MFS0.CSIO.RDR.hword.RDR1)
#define	MFS0_CSIO_TDR0	(IO_MFS0.CSIO.RDR.hword.RDR0)
#define	MFS0_CSIO_SACSR			(IO_MFS0.CSIO.SACSR.hword)
#define	MFS0_CSIO_SACSR_STST    	(IO_MFS0.CSIO.SACSR.bit.STST)
#define	MFS0_CSIO_SACSR_TBEEN    	(IO_MFS0.CSIO.SACSR.bit.TBEEN)
#define	MFS0_CSIO_SACSR_CSEIE    	(IO_MFS0.CSIO.SACSR.bit.CSEIE)
#define	MFS0_CSIO_SACSR_CSE    	(IO_MFS0.CSIO.SACSR.bit.CSE)
#define	MFS0_CSIO_SACSR_TRG    	(IO_MFS0.CSIO.SACSR.bit.TRG)
#define	MFS0_CSIO_SACSR_TINT    	(IO_MFS0.CSIO.SACSR.bit.TINT)
#define	MFS0_CSIO_SACSR_TINTE    	(IO_MFS0.CSIO.SACSR.bit.TINTE)
#define	MFS0_CSIO_SACSR_TSYNE    	(IO_MFS0.CSIO.SACSR.bit.TSYNE)
#define	MFS0_CSIO_SACSR_TRGE    	(IO_MFS0.CSIO.SACSR.bit.TRGE)
#define	MFS0_CSIO_SACSR_TDIV    	(IO_MFS0.CSIO.SACSR.bit.TDIV)
#define	MFS0_CSIO_SACSR_TMRE    	(IO_MFS0.CSIO.SACSR.bit.TMRE)
#define	MFS0_CSIO_STMR	(IO_MFS0.CSIO.STMR)
#define	MFS0_CSIO_STMCR	(IO_MFS0.CSIO.STMCR)
#define	MFS0_CSIO_SCSCR			(IO_MFS0.CSIO.SCSCR.hword)
#define	MFS0_CSIO_SCSCR_SST    	(IO_MFS0.CSIO.SCSCR.bit.SST)
#define	MFS0_CSIO_SCSCR_SED    	(IO_MFS0.CSIO.SCSCR.bit.SED)
#define	MFS0_CSIO_SCSCR_SCD    	(IO_MFS0.CSIO.SCSCR.bit.SCD)
#define	MFS0_CSIO_SCSCR_SCAM    	(IO_MFS0.CSIO.SCSCR.bit.SCAM)
#define	MFS0_CSIO_SCSCR_CDIV    	(IO_MFS0.CSIO.SCSCR.bit.CDIV)
#define	MFS0_CSIO_SCSCR_CSLVL    	(IO_MFS0.CSIO.SCSCR.bit.CSLVL)
#define	MFS0_CSIO_SCSCR_CSEN3    	(IO_MFS0.CSIO.SCSCR.bit.CSEN3)
#define	MFS0_CSIO_SCSCR_CSEN2    	(IO_MFS0.CSIO.SCSCR.bit.CSEN2)
#define	MFS0_CSIO_SCSCR_CSEN1    	(IO_MFS0.CSIO.SCSCR.bit.CSEN1)
#define	MFS0_CSIO_SCSCR_CSEN0    	(IO_MFS0.CSIO.SCSCR.bit.CSEN0)
#define	MFS0_CSIO_SCSCR_CSOE    	(IO_MFS0.CSIO.SCSCR.bit.CSOE)
#define	MFS0_CSIO_SCSTR	(IO_MFS0.CSIO.SCSTR.word)
#define	MFS0_CSIO_SCSTR32	(IO_MFS0.CSIO.SCSTR.hword.SCSTR32)
#define	MFS0_CSIO_SCSTR3	(IO_MFS0.CSIO.SCSTR.byte.SCSTR3)
#define	MFS0_CSIO_SCSTR2	(IO_MFS0.CSIO.SCSTR.byte.SCSTR2)
#define	MFS0_CSIO_SCSTR10	(IO_MFS0.CSIO.SCSTR.hword.SCSTR10)
#define	MFS0_CSIO_SCSTR1	(IO_MFS0.CSIO.SCSTR.byte.SCSTR1)
#define	MFS0_CSIO_SCSTR0	(IO_MFS0.CSIO.SCSTR.byte.SCSTR0)
#define	MFS0_CSIO_SCSFR2			(IO_MFS0.CSIO.SCSFR2.byte)
#define	MFS0_CSIO_SCSFR2_CSLVL    	(IO_MFS0.CSIO.SCSFR2.bit.CSLVL)
#define	MFS0_CSIO_SCSFR2_SCINV    	(IO_MFS0.CSIO.SCSFR2.bit.SCINV)
#define	MFS0_CSIO_SCSFR2_SPI    	(IO_MFS0.CSIO.SCSFR2.bit.SPI)
#define	MFS0_CSIO_SCSFR2_BDS    	(IO_MFS0.CSIO.SCSFR2.bit.BDS)
#define	MFS0_CSIO_SCSFR2_L    	(IO_MFS0.CSIO.SCSFR2.bit.L)
#define	MFS0_CSIO_SCSFR1			(IO_MFS0.CSIO.SCSFR1.byte)
#define	MFS0_CSIO_SCSFR1_CSLVL    	(IO_MFS0.CSIO.SCSFR1.bit.CSLVL)
#define	MFS0_CSIO_SCSFR1_SCINV    	(IO_MFS0.CSIO.SCSFR1.bit.SCINV)
#define	MFS0_CSIO_SCSFR1_SPI    	(IO_MFS0.CSIO.SCSFR1.bit.SPI)
#define	MFS0_CSIO_SCSFR1_BDS    	(IO_MFS0.CSIO.SCSFR1.bit.BDS)
#define	MFS0_CSIO_SCSFR1_L    	(IO_MFS0.CSIO.SCSFR1.bit.L)
#define	MFS0_CSIO_SCSFR0			(IO_MFS0.CSIO.SCSFR0.byte)
#define	MFS0_CSIO_SCSFR0_CSLVL    	(IO_MFS0.CSIO.SCSFR0.bit.CSLVL)
#define	MFS0_CSIO_SCSFR0_SCINV    	(IO_MFS0.CSIO.SCSFR0.bit.SCINV)
#define	MFS0_CSIO_SCSFR0_SPI    	(IO_MFS0.CSIO.SCSFR0.bit.SPI)
#define	MFS0_CSIO_SCSFR0_BDS    	(IO_MFS0.CSIO.SCSFR0.bit.BDS)
#define	MFS0_CSIO_SCSFR0_L    	(IO_MFS0.CSIO.SCSFR0.bit.L)
#define	MFS0_CSIO_TBYTE3	(IO_MFS0.CSIO.TBYTE3)
#define	MFS0_CSIO_TBYTE2	(IO_MFS0.CSIO.TBYTE2)
#define	MFS0_CSIO_TBYTE1	(IO_MFS0.CSIO.TBYTE1)
#define	MFS0_CSIO_TBYTE0	(IO_MFS0.CSIO.TBYTE0)
#define	MFS0_CSIO_BGR			(IO_MFS0.CSIO.BGR)
#define	MFS0_CSIO_FCR1			(IO_MFS0.CSIO.FCR1.byte)
#define	MFS0_CSIO_FCR1_FLSTE    	(IO_MFS0.CSIO.FCR1.bit.FLSTE)
#define	MFS0_CSIO_FCR1_FRIIE    	(IO_MFS0.CSIO.FCR1.bit.FRIIE)
#define	MFS0_CSIO_FCR1_FDRQ    	(IO_MFS0.CSIO.FCR1.bit.FDRQ)
#define	MFS0_CSIO_FCR1_FTIE    	(IO_MFS0.CSIO.FCR1.bit.FTIE)
#define	MFS0_CSIO_FCR1_FSEL    	(IO_MFS0.CSIO.FCR1.bit.FSEL)
#define	MFS0_CSIO_FCR0			(IO_MFS0.CSIO.FCR0.byte)
#define	MFS0_CSIO_FCR0_FLST    	(IO_MFS0.CSIO.FCR0.bit.FLST)
#define	MFS0_CSIO_FCR0_FLD    	(IO_MFS0.CSIO.FCR0.bit.FLD)
#define	MFS0_CSIO_FCR0_FSET    	(IO_MFS0.CSIO.FCR0.bit.FSET)
#define	MFS0_CSIO_FCR0_FCL2    	(IO_MFS0.CSIO.FCR0.bit.FCL2)
#define	MFS0_CSIO_FCR0_FCL1    	(IO_MFS0.CSIO.FCR0.bit.FCL1)
#define	MFS0_CSIO_FCR0_FE2    	(IO_MFS0.CSIO.FCR0.bit.FE2)
#define	MFS0_CSIO_FCR0_FE1    	(IO_MFS0.CSIO.FCR0.bit.FE1)
#define	MFS0_CSIO_FBYTE 	(IO_MFS0.CSIO.FBYTE.hword)
#define	MFS0_CSIO_FBYTE2	(IO_MFS0.CSIO.FBYTE.byte.FBYTE2)
#define	MFS0_CSIO_FBYTE1	(IO_MFS0.CSIO.FBYTE.byte.FBYTE1)
#define	MFS0_CSIO_FTICR 	(IO_MFS0.CSIO.FTICR.hword)
#define	MFS0_CSIO_FTICR2	(IO_MFS0.CSIO.FTICR.byte.FTICR2)
#define	MFS0_CSIO_FTICR1	(IO_MFS0.CSIO.FTICR.byte.FTICR1)

#define	MFS0_LINUART_SCR			(IO_MFS0.LINUART.SCR.byte)
#define	MFS0_LINUART_SCR_UPCL    	(IO_MFS0.LINUART.SCR.bit.UPCL)
#define	MFS0_LINUART_SCR_MS    	(IO_MFS0.LINUART.SCR.bit.MS)
#define	MFS0_LINUART_SCR_LBR    	(IO_MFS0.LINUART.SCR.bit.LBR)
#define	MFS0_LINUART_SCR_RIE    	(IO_MFS0.LINUART.SCR.bit.RIE)
#define	MFS0_LINUART_SCR_TIE    	(IO_MFS0.LINUART.SCR.bit.TIE)
#define	MFS0_LINUART_SCR_TBIE    	(IO_MFS0.LINUART.SCR.bit.TBIE)
#define	MFS0_LINUART_SCR_RXE    	(IO_MFS0.LINUART.SCR.bit.RXE)
#define	MFS0_LINUART_SCR_TXE    	(IO_MFS0.LINUART.SCR.bit.TXE)
#define	MFS0_LINUART_SMR			(IO_MFS0.LINUART.SMR.byte)
#define	MFS0_LINUART_SMR_MD    	(IO_MFS0.LINUART.SMR.bit.MD)
#define	MFS0_LINUART_SMR_SBL    	(IO_MFS0.LINUART.SMR.bit.SBL)
#define	MFS0_LINUART_SMR_SOE    	(IO_MFS0.LINUART.SMR.bit.SOE)
#define	MFS0_LINUART_SSR			(IO_MFS0.LINUART.SSR.byte)
#define	MFS0_LINUART_SSR_REC    	(IO_MFS0.LINUART.SSR.bit.REC)
#define	MFS0_LINUART_SSR_LBD    	(IO_MFS0.LINUART.SSR.bit.LBD)
#define	MFS0_LINUART_SSR_FRE    	(IO_MFS0.LINUART.SSR.bit.FRE)
#define	MFS0_LINUART_SSR_ORE    	(IO_MFS0.LINUART.SSR.bit.ORE)
#define	MFS0_LINUART_SSR_RDRF    	(IO_MFS0.LINUART.SSR.bit.RDRF)
#define	MFS0_LINUART_SSR_TDRE    	(IO_MFS0.LINUART.SSR.bit.TDRE)
#define	MFS0_LINUART_SSR_TBI    	(IO_MFS0.LINUART.SSR.bit.TBI)
#define	MFS0_LINUART_ESCR			(IO_MFS0.LINUART.ESCR.byte)
#define	MFS0_LINUART_ESCR_ESBL    	(IO_MFS0.LINUART.ESCR.bit.ESBL)
#define	MFS0_LINUART_ESCR_LBIE    	(IO_MFS0.LINUART.ESCR.bit.LBIE)
#define	MFS0_LINUART_ESCR_LBL    	(IO_MFS0.LINUART.ESCR.bit.LBL)
#define	MFS0_LINUART_ESCR_DEL    	(IO_MFS0.LINUART.ESCR.bit.DEL)
#define	MFS0_LINUART_RDR0	(IO_MFS0.LINUART.RDR0)
#define	MFS0_LINUART_TDR0	(IO_MFS0.LINUART.RDR0)
#define	MFS0_LINUART_SACSR			(IO_MFS0.LINUART.SACSR.hword)
#define	MFS0_LINUART_SACSR_STST    	(IO_MFS0.LINUART.SACSR.bit.STST)
#define	MFS0_LINUART_SACSR_BST    	(IO_MFS0.LINUART.SACSR.bit.BST)
#define	MFS0_LINUART_SACSR_SFD    	(IO_MFS0.LINUART.SACSR.bit.SFD)
#define	MFS0_LINUART_SACSR_SFDE    	(IO_MFS0.LINUART.SACSR.bit.SFDE)
#define	MFS0_LINUART_SACSR_AUTE    	(IO_MFS0.LINUART.SACSR.bit.AUTE)
#define	MFS0_LINUART_SACSR_TRG    	(IO_MFS0.LINUART.SACSR.bit.TRG)
#define	MFS0_LINUART_SACSR_TINT    	(IO_MFS0.LINUART.SACSR.bit.TINT)
#define	MFS0_LINUART_SACSR_TINTE    	(IO_MFS0.LINUART.SACSR.bit.TINTE)
#define	MFS0_LINUART_SACSR_TSYNE    	(IO_MFS0.LINUART.SACSR.bit.TSYNE)
#define	MFS0_LINUART_SACSR_TRGE    	(IO_MFS0.LINUART.SACSR.bit.TRGE)
#define	MFS0_LINUART_SACSR_TDIV    	(IO_MFS0.LINUART.SACSR.bit.TDIV)
#define	MFS0_LINUART_SACSR_TMRE    	(IO_MFS0.LINUART.SACSR.bit.TMRE)
#define	MFS0_LINUART_STMR	(IO_MFS0.LINUART.STMR)
#define	MFS0_LINUART_STMCR	(IO_MFS0.LINUART.STMCR)
#define	MFS0_LINUART_SFUR	(IO_MFS0.LINUART.SFUR)
#define	MFS0_LINUART_LAMSR			(IO_MFS0.LINUART.LAMSR.byte)
#define	MFS0_LINUART_LAMSR_LER    	(IO_MFS0.LINUART.LAMSR.bit.LER)
#define	MFS0_LINUART_LAMSR_SER    	(IO_MFS0.LINUART.LAMSR.bit.SER)
#define	MFS0_LINUART_LAMSR_RDRF    	(IO_MFS0.LINUART.LAMSR.bit.RDRF)
#define	MFS0_LINUART_LAMSR_TDRE    	(IO_MFS0.LINUART.LAMSR.bit.TDRE)
#define	MFS0_LINUART_LAMSR_TBI    	(IO_MFS0.LINUART.LAMSR.bit.TBI)
#define	MFS0_LINUART_LAMSR_LCSC    	(IO_MFS0.LINUART.LAMSR.bit.LCSC)
#define	MFS0_LINUART_LAMSR_LAHC    	(IO_MFS0.LINUART.LAMSR.bit.LAHC)
#define	MFS0_LINUART_LAMCR			(IO_MFS0.LINUART.LAMCR.byte)
#define	MFS0_LINUART_LAMCR_LDL    	(IO_MFS0.LINUART.LAMCR.bit.LDL)
#define	MFS0_LINUART_LAMCR_LTDRCL    	(IO_MFS0.LINUART.LAMCR.bit.LTDRCL)
#define	MFS0_LINUART_LAMCR_LCSTYP    	(IO_MFS0.LINUART.LAMCR.bit.LCSTYP)
#define	MFS0_LINUART_LAMCR_LIDEN    	(IO_MFS0.LINUART.LAMCR.bit.LIDEN)
#define	MFS0_LINUART_LAMCR_LAMEN    	(IO_MFS0.LINUART.LAMCR.bit.LAMEN)
#define	MFS0_LINUART_SFLR	(IO_MFS0.LINUART.SFLR.hword)
#define	MFS0_LINUART_SFLR1	(IO_MFS0.LINUART.SFLR.byte.SFLR1)
#define	MFS0_LINUART_SFLR0	(IO_MFS0.LINUART.SFLR.byte.SFLR0)
#define	MFS0_LINUART_LAMESR			(IO_MFS0.LINUART.LAMESR.byte)
#define	MFS0_LINUART_LAMESR_LCSER    	(IO_MFS0.LINUART.LAMESR.bit.LCSER)
#define	MFS0_LINUART_LAMESR_LPTER    	(IO_MFS0.LINUART.LAMESR.bit.LPTER)
#define	MFS0_LINUART_LAMESR_LSFER    	(IO_MFS0.LINUART.LAMESR.bit.LSFER)
#define	MFS0_LINUART_LAMESR_LBSER    	(IO_MFS0.LINUART.LAMESR.bit.LBSER)
#define	MFS0_LINUART_LAMERT			(IO_MFS0.LINUART.LAMERT.byte)
#define	MFS0_LINUART_LAMERT_KEY    	(IO_MFS0.LINUART.LAMERT.bit.KEY)
#define	MFS0_LINUART_LAMERT_LCSERT    	(IO_MFS0.LINUART.LAMERT.bit.LCSERT)
#define	MFS0_LINUART_LAMERT_LPTERT    	(IO_MFS0.LINUART.LAMERT.bit.LPTERT)
#define	MFS0_LINUART_LAMERT_LSFERT    	(IO_MFS0.LINUART.LAMERT.bit.LSFERT)
#define	MFS0_LINUART_LAMERT_LBSERT    	(IO_MFS0.LINUART.LAMERT.bit.LBSERT)
#define	MFS0_LINUART_LAMERT_FRET    	(IO_MFS0.LINUART.LAMERT.bit.FRET)
#define	MFS0_LINUART_LAMIER			(IO_MFS0.LINUART.LAMIER.byte)
#define	MFS0_LINUART_LAMIER_LCSERIE    	(IO_MFS0.LINUART.LAMIER.bit.LCSERIE)
#define	MFS0_LINUART_LAMIER_LPTERIE    	(IO_MFS0.LINUART.LAMIER.bit.LPTERIE)
#define	MFS0_LINUART_LAMIER_LSFERIE    	(IO_MFS0.LINUART.LAMIER.bit.LSFERIE)
#define	MFS0_LINUART_LAMIER_LBSERIE    	(IO_MFS0.LINUART.LAMIER.bit.LBSERIE)
#define	MFS0_LINUART_LAMIER_LCSCIE    	(IO_MFS0.LINUART.LAMIER.bit.LCSCIE)
#define	MFS0_LINUART_LAMIER_LAHCIE    	(IO_MFS0.LINUART.LAMIER.bit.LAHCIE)
#define	MFS0_LINUART_LAMID			(IO_MFS0.LINUART.LAMID.byte)
#define	MFS0_LINUART_LAMID_P    	(IO_MFS0.LINUART.LAMID.bit.P)
#define	MFS0_LINUART_LAMID_LID    	(IO_MFS0.LINUART.LAMID.bit.LID)
#define	MFS0_LINUART_BGR			(IO_MFS0.LINUART.BGR)
#define	MFS0_LINUART_FCR1			(IO_MFS0.LINUART.FCR1.byte)
#define	MFS0_LINUART_FCR1_FLSTE    	(IO_MFS0.LINUART.FCR1.bit.FLSTE)
#define	MFS0_LINUART_FCR1_FRIIE    	(IO_MFS0.LINUART.FCR1.bit.FRIIE)
#define	MFS0_LINUART_FCR1_FDRQ    	(IO_MFS0.LINUART.FCR1.bit.FDRQ)
#define	MFS0_LINUART_FCR1_FTIE    	(IO_MFS0.LINUART.FCR1.bit.FTIE)
#define	MFS0_LINUART_FCR1_FSEL    	(IO_MFS0.LINUART.FCR1.bit.FSEL)
#define	MFS0_LINUART_FCR0			(IO_MFS0.LINUART.FCR0.byte)
#define	MFS0_LINUART_FCR0_FLST    	(IO_MFS0.LINUART.FCR0.bit.FLST)
#define	MFS0_LINUART_FCR0_FLD    	(IO_MFS0.LINUART.FCR0.bit.FLD)
#define	MFS0_LINUART_FCR0_FSET    	(IO_MFS0.LINUART.FCR0.bit.FSET)
#define	MFS0_LINUART_FCR0_FCL2    	(IO_MFS0.LINUART.FCR0.bit.FCL2)
#define	MFS0_LINUART_FCR0_FCL1    	(IO_MFS0.LINUART.FCR0.bit.FCL1)
#define	MFS0_LINUART_FCR0_FE2    	(IO_MFS0.LINUART.FCR0.bit.FE2)
#define	MFS0_LINUART_FCR0_FE1    	(IO_MFS0.LINUART.FCR0.bit.FE1)
#define	MFS0_LINUART_FBYTE 	(IO_MFS0.LINUART.FBYTE.hword)
#define	MFS0_LINUART_FBYTE2	(IO_MFS0.LINUART.FBYTE.byte.FBYTE2)
#define	MFS0_LINUART_FBYTE1	(IO_MFS0.LINUART.FBYTE.byte.FBYTE1)
#define	MFS0_LINUART_FTICR 	(IO_MFS0.LINUART.FTICR.hword)
#define	MFS0_LINUART_FTICR2	(IO_MFS0.LINUART.FTICR.byte.FTICR2)
#define	MFS0_LINUART_FTICR1	(IO_MFS0.LINUART.FTICR.byte.FTICR1)

#define	MFS0_I2C_IBCR			(IO_MFS0.I2C.IBCR.byte)
#define	MFS0_I2C_IBCR_MSS    	(IO_MFS0.I2C.IBCR.bit.MSS)
#define	MFS0_I2C_IBCR_ACT_SCC    	(IO_MFS0.I2C.IBCR.bit.ACT_SCC)
#define	MFS0_I2C_IBCR_ACKE    	(IO_MFS0.I2C.IBCR.bit.ACKE)
#define	MFS0_I2C_IBCR_WSEL    	(IO_MFS0.I2C.IBCR.bit.WSEL)
#define	MFS0_I2C_IBCR_CNDE    	(IO_MFS0.I2C.IBCR.bit.CNDE)
#define	MFS0_I2C_IBCR_INTE    	(IO_MFS0.I2C.IBCR.bit.INTE)
#define	MFS0_I2C_IBCR_BER    	(IO_MFS0.I2C.IBCR.bit.BER)
#define	MFS0_I2C_IBCR_INT    	(IO_MFS0.I2C.IBCR.bit.INT)
#define	MFS0_I2C_SMR			(IO_MFS0.I2C.SMR.byte)
#define	MFS0_I2C_SMR_MD    	(IO_MFS0.I2C.SMR.bit.MD)
#define	MFS0_I2C_SMR_RIE    	(IO_MFS0.I2C.SMR.bit.RIE)
#define	MFS0_I2C_SMR_TIE    	(IO_MFS0.I2C.SMR.bit.TIE)
#define	MFS0_I2C_SSR			(IO_MFS0.I2C.SSR.byte)
#define	MFS0_I2C_SSR_REC    	(IO_MFS0.I2C.SSR.bit.REC)
#define	MFS0_I2C_SSR_TSET    	(IO_MFS0.I2C.SSR.bit.TSET)
#define	MFS0_I2C_SSR_DMA    	(IO_MFS0.I2C.SSR.bit.DMA)
#define	MFS0_I2C_SSR_TBIE    	(IO_MFS0.I2C.SSR.bit.TBIE)
#define	MFS0_I2C_SSR_ORE    	(IO_MFS0.I2C.SSR.bit.ORE)
#define	MFS0_I2C_SSR_RDRF    	(IO_MFS0.I2C.SSR.bit.RDRF)
#define	MFS0_I2C_SSR_TDRE    	(IO_MFS0.I2C.SSR.bit.TDRE)
#define	MFS0_I2C_SSR_TBI    	(IO_MFS0.I2C.SSR.bit.TBI)
#define	MFS0_I2C_IBSR			(IO_MFS0.I2C.IBSR.byte)
#define	MFS0_I2C_IBSR_FBT    	(IO_MFS0.I2C.IBSR.bit.FBT)
#define	MFS0_I2C_IBSR_RACK    	(IO_MFS0.I2C.IBSR.bit.RACK)
#define	MFS0_I2C_IBSR_RSA    	(IO_MFS0.I2C.IBSR.bit.RSA)
#define	MFS0_I2C_IBSR_TRX    	(IO_MFS0.I2C.IBSR.bit.TRX)
#define	MFS0_I2C_IBSR_AL    	(IO_MFS0.I2C.IBSR.bit.AL)
#define	MFS0_I2C_IBSR_RSC    	(IO_MFS0.I2C.IBSR.bit.RSC)
#define	MFS0_I2C_IBSR_SPC    	(IO_MFS0.I2C.IBSR.bit.SPC)
#define	MFS0_I2C_IBSR_BB    	(IO_MFS0.I2C.IBSR.bit.BB)
#define	MFS0_I2C_RDR0	(IO_MFS0.I2C.RDR0)
#define	MFS0_I2C_TDR0	(IO_MFS0.I2C.RDR0)
#define	MFS0_I2C_SACSR			(IO_MFS0.I2C.SACSR.hword)
#define	MFS0_I2C_SACSR_TRG    	(IO_MFS0.I2C.SACSR.bit.TRG)
#define	MFS0_I2C_SACSR_TINT    	(IO_MFS0.I2C.SACSR.bit.TINT)
#define	MFS0_I2C_SACSR_TINTE    	(IO_MFS0.I2C.SACSR.bit.TINTE)
#define	MFS0_I2C_SACSR_TRGE    	(IO_MFS0.I2C.SACSR.bit.TRGE)
#define	MFS0_I2C_SACSR_TDIV    	(IO_MFS0.I2C.SACSR.bit.TDIV)
#define	MFS0_I2C_SACSR_TMRE    	(IO_MFS0.I2C.SACSR.bit.TMRE)
#define	MFS0_I2C_STMR	(IO_MFS0.I2C.STMR)
#define	MFS0_I2C_STMCR	(IO_MFS0.I2C.STMCR)
#define	MFS0_I2C_BGR	(IO_MFS0.I2C.BGR)
#define	MFS0_I2C_ISMK			(IO_MFS0.I2C.ISMK.byte)
#define	MFS0_I2C_ISMK_EN    	(IO_MFS0.I2C.ISMK.bit.EN)
#define	MFS0_I2C_ISMK_SM    	(IO_MFS0.I2C.ISMK.bit.SM)
#define	MFS0_I2C_ISBA			(IO_MFS0.I2C.ISBA.byte)
#define	MFS0_I2C_ISBA_SAEN    	(IO_MFS0.I2C.ISBA.bit.SAEN)
#define	MFS0_I2C_ISBA_SA    	(IO_MFS0.I2C.ISBA.bit.SA)
#define	MFS0_I2C_FCR1			(IO_MFS0.I2C.FCR1.byte)
#define	MFS0_I2C_FCR1_FLSTE    	(IO_MFS0.I2C.FCR1.bit.FLSTE)
#define	MFS0_I2C_FCR1_FRIIE    	(IO_MFS0.I2C.FCR1.bit.FRIIE)
#define	MFS0_I2C_FCR1_FDRQ    	(IO_MFS0.I2C.FCR1.bit.FDRQ)
#define	MFS0_I2C_FCR1_FTIE    	(IO_MFS0.I2C.FCR1.bit.FTIE)
#define	MFS0_I2C_FCR1_FSEL    	(IO_MFS0.I2C.FCR1.bit.FSEL)
#define	MFS0_I2C_FCR0			(IO_MFS0.I2C.FCR0.byte)
#define	MFS0_I2C_FCR0_FLST    	(IO_MFS0.I2C.FCR0.bit.FLST)
#define	MFS0_I2C_FCR0_FLD    	(IO_MFS0.I2C.FCR0.bit.FLD)
#define	MFS0_I2C_FCR0_FSET    	(IO_MFS0.I2C.FCR0.bit.FSET)
#define	MFS0_I2C_FCR0_FCL2    	(IO_MFS0.I2C.FCR0.bit.FCL2)
#define	MFS0_I2C_FCR0_FCL1    	(IO_MFS0.I2C.FCR0.bit.FCL1)
#define	MFS0_I2C_FCR0_FE2    	(IO_MFS0.I2C.FCR0.bit.FE2)
#define	MFS0_I2C_FCR0_FE1    	(IO_MFS0.I2C.FCR0.bit.FE1)
#define	MFS0_I2C_FBYTE 	(IO_MFS0.I2C.FBYTE.hword)
#define	MFS0_I2C_FBYTE2	(IO_MFS0.I2C.FBYTE.byte.FBYTE2)
#define	MFS0_I2C_FBYTE1	(IO_MFS0.I2C.FBYTE.byte.FBYTE1)
#define	MFS0_I2C_FTICR 	(IO_MFS0.I2C.FTICR.hword)
#define	MFS0_I2C_FTICR2	(IO_MFS0.I2C.FTICR.byte.FTICR2)
#define	MFS0_I2C_FTICR1	(IO_MFS0.I2C.FTICR.byte.FTICR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MFS1,attr=IO,locate=0x1778
#endif

__IO_EXTENDED	MFSSTR	IO_MFS1;

#define	MFS1_UART_SCR			(IO_MFS1.UART.SCR.byte)
#define	MFS1_UART_SCR_UPCL    	(IO_MFS1.UART.SCR.bit.UPCL)
#define	MFS1_UART_SCR_RIE    	(IO_MFS1.UART.SCR.bit.RIE)
#define	MFS1_UART_SCR_TIE    	(IO_MFS1.UART.SCR.bit.TIE)
#define	MFS1_UART_SCR_TBIE    	(IO_MFS1.UART.SCR.bit.TBIE)
#define	MFS1_UART_SCR_RXE    	(IO_MFS1.UART.SCR.bit.RXE)
#define	MFS1_UART_SCR_TXE    	(IO_MFS1.UART.SCR.bit.TXE)
#define	MFS1_UART_SMR			(IO_MFS1.UART.SMR.byte)
#define	MFS1_UART_SMR_MD    	(IO_MFS1.UART.SMR.bit.MD)
#define	MFS1_UART_SMR_SBL    	(IO_MFS1.UART.SMR.bit.SBL)
#define	MFS1_UART_SMR_BDS    	(IO_MFS1.UART.SMR.bit.BDS)
#define	MFS1_UART_SMR_SOE    	(IO_MFS1.UART.SMR.bit.SOE)
#define	MFS1_UART_SSR			(IO_MFS1.UART.SSR.byte)
#define	MFS1_UART_SSR_REC    	(IO_MFS1.UART.SSR.bit.REC)
#define	MFS1_UART_SSR_PE    	(IO_MFS1.UART.SSR.bit.PE)
#define	MFS1_UART_SSR_FRE    	(IO_MFS1.UART.SSR.bit.FRE)
#define	MFS1_UART_SSR_ORE    	(IO_MFS1.UART.SSR.bit.ORE)
#define	MFS1_UART_SSR_RDRF    	(IO_MFS1.UART.SSR.bit.RDRF)
#define	MFS1_UART_SSR_TDRE    	(IO_MFS1.UART.SSR.bit.TDRE)
#define	MFS1_UART_SSR_TBI    	(IO_MFS1.UART.SSR.bit.TBI)
#define	MFS1_UART_ESCR			(IO_MFS1.UART.ESCR.byte)
#define	MFS1_UART_ESCR_FLWEN    	(IO_MFS1.UART.ESCR.bit.FLWEN)
#define	MFS1_UART_ESCR_ESBL    	(IO_MFS1.UART.ESCR.bit.ESBL)
#define	MFS1_UART_ESCR_INV    	(IO_MFS1.UART.ESCR.bit.INV)
#define	MFS1_UART_ESCR_PEN    	(IO_MFS1.UART.ESCR.bit.PEN)
#define	MFS1_UART_ESCR_P    	(IO_MFS1.UART.ESCR.bit.P)
#define	MFS1_UART_ESCR_L    	(IO_MFS1.UART.ESCR.bit.L)
#define	MFS1_UART_RDR0	(IO_MFS1.UART.RDR0.hword)
#define	MFS1_UART_RDR0_RDR0L	(IO_MFS1.UART.RDR0.byte.RDR0L)
#define	MFS1_UART_RDR0_bit9	(IO_MFS1.UART.RDR0.bit9.D)
#define	MFS1_UART_RDR0_bit7	(IO_MFS1.UART.RDR0.bit7.D)
#define	MFS1_UART_RDR0_bit6	(IO_MFS1.UART.RDR0.bit6.D)
#define	MFS1_UART_RDR0_bit5	(IO_MFS1.UART.RDR0.bit5.D)
#define	MFS1_UART_TDR0	(IO_MFS1.UART.RDR0.hword)
#define	MFS1_UART_TDR0_TDR0L	(IO_MFS1.UART.RDR0.byte.RDR0L)
#define	MFS1_UART_TDR0_bit9	(IO_MFS1.UART.RDR0.bit9.D)
#define	MFS1_UART_TDR0_bit7	(IO_MFS1.UART.RDR0.bit7.D)
#define	MFS1_UART_TDR0_bit6	(IO_MFS1.UART.RDR0.bit6.D)
#define	MFS1_UART_TDR0_bit5	(IO_MFS1.UART.RDR0.bit5.D)
#define	MFS1_UART_SACSR			(IO_MFS1.UART.SACSR.hword)
#define	MFS1_UART_SACSR_STST    	(IO_MFS1.UART.SACSR.bit.STST)
#define	MFS1_UART_SACSR_TRG    	(IO_MFS1.UART.SACSR.bit.TRG)
#define	MFS1_UART_SACSR_TINT    	(IO_MFS1.UART.SACSR.bit.TINT)
#define	MFS1_UART_SACSR_TINTE    	(IO_MFS1.UART.SACSR.bit.TINTE)
#define	MFS1_UART_SACSR_TSYNE    	(IO_MFS1.UART.SACSR.bit.TSYNE)
#define	MFS1_UART_SACSR_TRGE    	(IO_MFS1.UART.SACSR.bit.TRGE)
#define	MFS1_UART_SACSR_TDIV    	(IO_MFS1.UART.SACSR.bit.TDIV)
#define	MFS1_UART_SACSR_TMRE    	(IO_MFS1.UART.SACSR.bit.TMRE)
#define	MFS1_UART_STMR	(IO_MFS1.UART.STMR)
#define	MFS1_UART_STMCR	(IO_MFS1.UART.STMCR)
#define	MFS1_UART_TBYTE0	(IO_MFS1.UART.TBYTE0)
#define	MFS1_UART_BGR			(IO_MFS1.UART.BGR)
#define	MFS1_UART_FCR1			(IO_MFS1.UART.FCR1.byte)
#define	MFS1_UART_FCR1_FLSTE    	(IO_MFS1.UART.FCR1.bit.FLSTE)
#define	MFS1_UART_FCR1_FRIIE    	(IO_MFS1.UART.FCR1.bit.FRIIE)
#define	MFS1_UART_FCR1_FDRQ    	(IO_MFS1.UART.FCR1.bit.FDRQ)
#define	MFS1_UART_FCR1_FTIE    	(IO_MFS1.UART.FCR1.bit.FTIE)
#define	MFS1_UART_FCR1_FSEL    	(IO_MFS1.UART.FCR1.bit.FSEL)
#define	MFS1_UART_FCR0			(IO_MFS1.UART.FCR0.byte)
#define	MFS1_UART_FCR0_FLST    	(IO_MFS1.UART.FCR0.bit.FLST)
#define	MFS1_UART_FCR0_FLD    	(IO_MFS1.UART.FCR0.bit.FLD)
#define	MFS1_UART_FCR0_FSET    	(IO_MFS1.UART.FCR0.bit.FSET)
#define	MFS1_UART_FCR0_FCL2    	(IO_MFS1.UART.FCR0.bit.FCL2)
#define	MFS1_UART_FCR0_FCL1    	(IO_MFS1.UART.FCR0.bit.FCL1)
#define	MFS1_UART_FCR0_FE2    	(IO_MFS1.UART.FCR0.bit.FE2)
#define	MFS1_UART_FCR0_FE1    	(IO_MFS1.UART.FCR0.bit.FE1)
#define	MFS1_UART_FBYTE 	(IO_MFS1.UART.FBYTE.hword)
#define	MFS1_UART_FBYTE2	(IO_MFS1.UART.FBYTE.byte.FBYTE2)
#define	MFS1_UART_FBYTE1	(IO_MFS1.UART.FBYTE.byte.FBYTE1)
#define	MFS1_UART_FTICR 	(IO_MFS1.UART.FTICR.hword)
#define	MFS1_UART_FTICR2	(IO_MFS1.UART.FTICR.byte.FTICR2)
#define	MFS1_UART_FTICR1	(IO_MFS1.UART.FTICR.byte.FTICR1)

#define	MFS1_CSIO_SCR			(IO_MFS1.CSIO.SCR.byte)
#define	MFS1_CSIO_SCR_UPCL    	(IO_MFS1.CSIO.SCR.bit.UPCL)
#define	MFS1_CSIO_SCR_MS    	(IO_MFS1.CSIO.SCR.bit.MS)
#define	MFS1_CSIO_SCR_SPI    	(IO_MFS1.CSIO.SCR.bit.SPI)
#define	MFS1_CSIO_SCR_RIE    	(IO_MFS1.CSIO.SCR.bit.RIE)
#define	MFS1_CSIO_SCR_TIE    	(IO_MFS1.CSIO.SCR.bit.TIE)
#define	MFS1_CSIO_SCR_TBIE    	(IO_MFS1.CSIO.SCR.bit.TBIE)
#define	MFS1_CSIO_SCR_RXE    	(IO_MFS1.CSIO.SCR.bit.RXE)
#define	MFS1_CSIO_SCR_TXE    	(IO_MFS1.CSIO.SCR.bit.TXE)
#define	MFS1_CSIO_SMR			(IO_MFS1.CSIO.SMR.byte)
#define	MFS1_CSIO_SMR_MD    	(IO_MFS1.CSIO.SMR.bit.MD)
#define	MFS1_CSIO_SMR_SCINV    	(IO_MFS1.CSIO.SMR.bit.SCINV)
#define	MFS1_CSIO_SMR_BDS    	(IO_MFS1.CSIO.SMR.bit.BDS)
#define	MFS1_CSIO_SMR_SCKE    	(IO_MFS1.CSIO.SMR.bit.SCKE)
#define	MFS1_CSIO_SMR_SOE    	(IO_MFS1.CSIO.SMR.bit.SOE)
#define	MFS1_CSIO_SSR			(IO_MFS1.CSIO.SSR.byte)
#define	MFS1_CSIO_SSR_REC    	(IO_MFS1.CSIO.SSR.bit.REC)
#define	MFS1_CSIO_SSR_ES    	(IO_MFS1.CSIO.SSR.bit.ES)
#define	MFS1_CSIO_SSR_AWC    	(IO_MFS1.CSIO.SSR.bit.AWC)
#define	MFS1_CSIO_SSR_ORE    	(IO_MFS1.CSIO.SSR.bit.ORE)
#define	MFS1_CSIO_SSR_RDRF    	(IO_MFS1.CSIO.SSR.bit.RDRF)
#define	MFS1_CSIO_SSR_TDRE    	(IO_MFS1.CSIO.SSR.bit.TDRE)
#define	MFS1_CSIO_SSR_TBI    	(IO_MFS1.CSIO.SSR.bit.TBI)
#define	MFS1_CSIO_ESCR			(IO_MFS1.CSIO.ESCR.byte)
#define	MFS1_CSIO_ESCR_SOP    	(IO_MFS1.CSIO.ESCR.bit.SOP)
#define	MFS1_CSIO_ESCR_L3    	(IO_MFS1.CSIO.ESCR.bit.L3)
#define	MFS1_CSIO_ESCR_CSFE    	(IO_MFS1.CSIO.ESCR.bit.CSFE)
#define	MFS1_CSIO_ESCR_WT    	(IO_MFS1.CSIO.ESCR.bit.WT)
#define	MFS1_CSIO_ESCR_L    	(IO_MFS1.CSIO.ESCR.bit.L)
#define	MFS1_CSIO_RDR	(IO_MFS1.CSIO.RDR.word)
#define	MFS1_CSIO_RDR1	(IO_MFS1.CSIO.RDR.hword.RDR1)
#define	MFS1_CSIO_RDR0	(IO_MFS1.CSIO.RDR.hword.RDR0)
#define	MFS1_CSIO_TDR	(IO_MFS1.CSIO.RDR.word)
#define	MFS1_CSIO_TDR1	(IO_MFS1.CSIO.RDR.hword.RDR1)
#define	MFS1_CSIO_TDR0	(IO_MFS1.CSIO.RDR.hword.RDR0)
#define	MFS1_CSIO_SACSR			(IO_MFS1.CSIO.SACSR.hword)
#define	MFS1_CSIO_SACSR_STST    	(IO_MFS1.CSIO.SACSR.bit.STST)
#define	MFS1_CSIO_SACSR_TBEEN    	(IO_MFS1.CSIO.SACSR.bit.TBEEN)
#define	MFS1_CSIO_SACSR_CSEIE    	(IO_MFS1.CSIO.SACSR.bit.CSEIE)
#define	MFS1_CSIO_SACSR_CSE    	(IO_MFS1.CSIO.SACSR.bit.CSE)
#define	MFS1_CSIO_SACSR_TRG    	(IO_MFS1.CSIO.SACSR.bit.TRG)
#define	MFS1_CSIO_SACSR_TINT    	(IO_MFS1.CSIO.SACSR.bit.TINT)
#define	MFS1_CSIO_SACSR_TINTE    	(IO_MFS1.CSIO.SACSR.bit.TINTE)
#define	MFS1_CSIO_SACSR_TSYNE    	(IO_MFS1.CSIO.SACSR.bit.TSYNE)
#define	MFS1_CSIO_SACSR_TRGE    	(IO_MFS1.CSIO.SACSR.bit.TRGE)
#define	MFS1_CSIO_SACSR_TDIV    	(IO_MFS1.CSIO.SACSR.bit.TDIV)
#define	MFS1_CSIO_SACSR_TMRE    	(IO_MFS1.CSIO.SACSR.bit.TMRE)
#define	MFS1_CSIO_STMR	(IO_MFS1.CSIO.STMR)
#define	MFS1_CSIO_STMCR	(IO_MFS1.CSIO.STMCR)
#define	MFS1_CSIO_SCSCR			(IO_MFS1.CSIO.SCSCR.hword)
#define	MFS1_CSIO_SCSCR_SST    	(IO_MFS1.CSIO.SCSCR.bit.SST)
#define	MFS1_CSIO_SCSCR_SED    	(IO_MFS1.CSIO.SCSCR.bit.SED)
#define	MFS1_CSIO_SCSCR_SCD    	(IO_MFS1.CSIO.SCSCR.bit.SCD)
#define	MFS1_CSIO_SCSCR_SCAM    	(IO_MFS1.CSIO.SCSCR.bit.SCAM)
#define	MFS1_CSIO_SCSCR_CDIV    	(IO_MFS1.CSIO.SCSCR.bit.CDIV)
#define	MFS1_CSIO_SCSCR_CSLVL    	(IO_MFS1.CSIO.SCSCR.bit.CSLVL)
#define	MFS1_CSIO_SCSCR_CSEN3    	(IO_MFS1.CSIO.SCSCR.bit.CSEN3)
#define	MFS1_CSIO_SCSCR_CSEN2    	(IO_MFS1.CSIO.SCSCR.bit.CSEN2)
#define	MFS1_CSIO_SCSCR_CSEN1    	(IO_MFS1.CSIO.SCSCR.bit.CSEN1)
#define	MFS1_CSIO_SCSCR_CSEN0    	(IO_MFS1.CSIO.SCSCR.bit.CSEN0)
#define	MFS1_CSIO_SCSCR_CSOE    	(IO_MFS1.CSIO.SCSCR.bit.CSOE)
#define	MFS1_CSIO_SCSTR	(IO_MFS1.CSIO.SCSTR.word)
#define	MFS1_CSIO_SCSTR32	(IO_MFS1.CSIO.SCSTR.hword.SCSTR32)
#define	MFS1_CSIO_SCSTR3	(IO_MFS1.CSIO.SCSTR.byte.SCSTR3)
#define	MFS1_CSIO_SCSTR2	(IO_MFS1.CSIO.SCSTR.byte.SCSTR2)
#define	MFS1_CSIO_SCSTR10	(IO_MFS1.CSIO.SCSTR.hword.SCSTR10)
#define	MFS1_CSIO_SCSTR1	(IO_MFS1.CSIO.SCSTR.byte.SCSTR1)
#define	MFS1_CSIO_SCSTR0	(IO_MFS1.CSIO.SCSTR.byte.SCSTR0)
#define	MFS1_CSIO_SCSFR2			(IO_MFS1.CSIO.SCSFR2.byte)
#define	MFS1_CSIO_SCSFR2_CSLVL    	(IO_MFS1.CSIO.SCSFR2.bit.CSLVL)
#define	MFS1_CSIO_SCSFR2_SCINV    	(IO_MFS1.CSIO.SCSFR2.bit.SCINV)
#define	MFS1_CSIO_SCSFR2_SPI    	(IO_MFS1.CSIO.SCSFR2.bit.SPI)
#define	MFS1_CSIO_SCSFR2_BDS    	(IO_MFS1.CSIO.SCSFR2.bit.BDS)
#define	MFS1_CSIO_SCSFR2_L    	(IO_MFS1.CSIO.SCSFR2.bit.L)
#define	MFS1_CSIO_SCSFR1			(IO_MFS1.CSIO.SCSFR1.byte)
#define	MFS1_CSIO_SCSFR1_CSLVL    	(IO_MFS1.CSIO.SCSFR1.bit.CSLVL)
#define	MFS1_CSIO_SCSFR1_SCINV    	(IO_MFS1.CSIO.SCSFR1.bit.SCINV)
#define	MFS1_CSIO_SCSFR1_SPI    	(IO_MFS1.CSIO.SCSFR1.bit.SPI)
#define	MFS1_CSIO_SCSFR1_BDS    	(IO_MFS1.CSIO.SCSFR1.bit.BDS)
#define	MFS1_CSIO_SCSFR1_L    	(IO_MFS1.CSIO.SCSFR1.bit.L)
#define	MFS1_CSIO_SCSFR0			(IO_MFS1.CSIO.SCSFR0.byte)
#define	MFS1_CSIO_SCSFR0_CSLVL    	(IO_MFS1.CSIO.SCSFR0.bit.CSLVL)
#define	MFS1_CSIO_SCSFR0_SCINV    	(IO_MFS1.CSIO.SCSFR0.bit.SCINV)
#define	MFS1_CSIO_SCSFR0_SPI    	(IO_MFS1.CSIO.SCSFR0.bit.SPI)
#define	MFS1_CSIO_SCSFR0_BDS    	(IO_MFS1.CSIO.SCSFR0.bit.BDS)
#define	MFS1_CSIO_SCSFR0_L    	(IO_MFS1.CSIO.SCSFR0.bit.L)
#define	MFS1_CSIO_TBYTE3	(IO_MFS1.CSIO.TBYTE3)
#define	MFS1_CSIO_TBYTE2	(IO_MFS1.CSIO.TBYTE2)
#define	MFS1_CSIO_TBYTE1	(IO_MFS1.CSIO.TBYTE1)
#define	MFS1_CSIO_TBYTE0	(IO_MFS1.CSIO.TBYTE0)
#define	MFS1_CSIO_BGR			(IO_MFS1.CSIO.BGR)
#define	MFS1_CSIO_FCR1			(IO_MFS1.CSIO.FCR1.byte)
#define	MFS1_CSIO_FCR1_FLSTE    	(IO_MFS1.CSIO.FCR1.bit.FLSTE)
#define	MFS1_CSIO_FCR1_FRIIE    	(IO_MFS1.CSIO.FCR1.bit.FRIIE)
#define	MFS1_CSIO_FCR1_FDRQ    	(IO_MFS1.CSIO.FCR1.bit.FDRQ)
#define	MFS1_CSIO_FCR1_FTIE    	(IO_MFS1.CSIO.FCR1.bit.FTIE)
#define	MFS1_CSIO_FCR1_FSEL    	(IO_MFS1.CSIO.FCR1.bit.FSEL)
#define	MFS1_CSIO_FCR0			(IO_MFS1.CSIO.FCR0.byte)
#define	MFS1_CSIO_FCR0_FLST    	(IO_MFS1.CSIO.FCR0.bit.FLST)
#define	MFS1_CSIO_FCR0_FLD    	(IO_MFS1.CSIO.FCR0.bit.FLD)
#define	MFS1_CSIO_FCR0_FSET    	(IO_MFS1.CSIO.FCR0.bit.FSET)
#define	MFS1_CSIO_FCR0_FCL2    	(IO_MFS1.CSIO.FCR0.bit.FCL2)
#define	MFS1_CSIO_FCR0_FCL1    	(IO_MFS1.CSIO.FCR0.bit.FCL1)
#define	MFS1_CSIO_FCR0_FE2    	(IO_MFS1.CSIO.FCR0.bit.FE2)
#define	MFS1_CSIO_FCR0_FE1    	(IO_MFS1.CSIO.FCR0.bit.FE1)
#define	MFS1_CSIO_FBYTE 	(IO_MFS1.CSIO.FBYTE.hword)
#define	MFS1_CSIO_FBYTE2	(IO_MFS1.CSIO.FBYTE.byte.FBYTE2)
#define	MFS1_CSIO_FBYTE1	(IO_MFS1.CSIO.FBYTE.byte.FBYTE1)
#define	MFS1_CSIO_FTICR 	(IO_MFS1.CSIO.FTICR.hword)
#define	MFS1_CSIO_FTICR2	(IO_MFS1.CSIO.FTICR.byte.FTICR2)
#define	MFS1_CSIO_FTICR1	(IO_MFS1.CSIO.FTICR.byte.FTICR1)

#define	MFS1_LINUART_SCR			(IO_MFS1.LINUART.SCR.byte)
#define	MFS1_LINUART_SCR_UPCL    	(IO_MFS1.LINUART.SCR.bit.UPCL)
#define	MFS1_LINUART_SCR_MS    	(IO_MFS1.LINUART.SCR.bit.MS)
#define	MFS1_LINUART_SCR_LBR    	(IO_MFS1.LINUART.SCR.bit.LBR)
#define	MFS1_LINUART_SCR_RIE    	(IO_MFS1.LINUART.SCR.bit.RIE)
#define	MFS1_LINUART_SCR_TIE    	(IO_MFS1.LINUART.SCR.bit.TIE)
#define	MFS1_LINUART_SCR_TBIE    	(IO_MFS1.LINUART.SCR.bit.TBIE)
#define	MFS1_LINUART_SCR_RXE    	(IO_MFS1.LINUART.SCR.bit.RXE)
#define	MFS1_LINUART_SCR_TXE    	(IO_MFS1.LINUART.SCR.bit.TXE)
#define	MFS1_LINUART_SMR			(IO_MFS1.LINUART.SMR.byte)
#define	MFS1_LINUART_SMR_MD    	(IO_MFS1.LINUART.SMR.bit.MD)
#define	MFS1_LINUART_SMR_SBL    	(IO_MFS1.LINUART.SMR.bit.SBL)
#define	MFS1_LINUART_SMR_SOE    	(IO_MFS1.LINUART.SMR.bit.SOE)
#define	MFS1_LINUART_SSR			(IO_MFS1.LINUART.SSR.byte)
#define	MFS1_LINUART_SSR_REC    	(IO_MFS1.LINUART.SSR.bit.REC)
#define	MFS1_LINUART_SSR_LBD    	(IO_MFS1.LINUART.SSR.bit.LBD)
#define	MFS1_LINUART_SSR_FRE    	(IO_MFS1.LINUART.SSR.bit.FRE)
#define	MFS1_LINUART_SSR_ORE    	(IO_MFS1.LINUART.SSR.bit.ORE)
#define	MFS1_LINUART_SSR_RDRF    	(IO_MFS1.LINUART.SSR.bit.RDRF)
#define	MFS1_LINUART_SSR_TDRE    	(IO_MFS1.LINUART.SSR.bit.TDRE)
#define	MFS1_LINUART_SSR_TBI    	(IO_MFS1.LINUART.SSR.bit.TBI)
#define	MFS1_LINUART_ESCR			(IO_MFS1.LINUART.ESCR.byte)
#define	MFS1_LINUART_ESCR_ESBL    	(IO_MFS1.LINUART.ESCR.bit.ESBL)
#define	MFS1_LINUART_ESCR_LBIE    	(IO_MFS1.LINUART.ESCR.bit.LBIE)
#define	MFS1_LINUART_ESCR_LBL    	(IO_MFS1.LINUART.ESCR.bit.LBL)
#define	MFS1_LINUART_ESCR_DEL    	(IO_MFS1.LINUART.ESCR.bit.DEL)
#define	MFS1_LINUART_RDR0	(IO_MFS1.LINUART.RDR0)
#define	MFS1_LINUART_TDR0	(IO_MFS1.LINUART.RDR0)
#define	MFS1_LINUART_SACSR			(IO_MFS1.LINUART.SACSR.hword)
#define	MFS1_LINUART_SACSR_STST    	(IO_MFS1.LINUART.SACSR.bit.STST)
#define	MFS1_LINUART_SACSR_BST    	(IO_MFS1.LINUART.SACSR.bit.BST)
#define	MFS1_LINUART_SACSR_SFD    	(IO_MFS1.LINUART.SACSR.bit.SFD)
#define	MFS1_LINUART_SACSR_SFDE    	(IO_MFS1.LINUART.SACSR.bit.SFDE)
#define	MFS1_LINUART_SACSR_AUTE    	(IO_MFS1.LINUART.SACSR.bit.AUTE)
#define	MFS1_LINUART_SACSR_TRG    	(IO_MFS1.LINUART.SACSR.bit.TRG)
#define	MFS1_LINUART_SACSR_TINT    	(IO_MFS1.LINUART.SACSR.bit.TINT)
#define	MFS1_LINUART_SACSR_TINTE    	(IO_MFS1.LINUART.SACSR.bit.TINTE)
#define	MFS1_LINUART_SACSR_TSYNE    	(IO_MFS1.LINUART.SACSR.bit.TSYNE)
#define	MFS1_LINUART_SACSR_TRGE    	(IO_MFS1.LINUART.SACSR.bit.TRGE)
#define	MFS1_LINUART_SACSR_TDIV    	(IO_MFS1.LINUART.SACSR.bit.TDIV)
#define	MFS1_LINUART_SACSR_TMRE    	(IO_MFS1.LINUART.SACSR.bit.TMRE)
#define	MFS1_LINUART_STMR	(IO_MFS1.LINUART.STMR)
#define	MFS1_LINUART_STMCR	(IO_MFS1.LINUART.STMCR)
#define	MFS1_LINUART_SFUR	(IO_MFS1.LINUART.SFUR)
#define	MFS1_LINUART_LAMSR			(IO_MFS1.LINUART.LAMSR.byte)
#define	MFS1_LINUART_LAMSR_LER    	(IO_MFS1.LINUART.LAMSR.bit.LER)
#define	MFS1_LINUART_LAMSR_SER    	(IO_MFS1.LINUART.LAMSR.bit.SER)
#define	MFS1_LINUART_LAMSR_RDRF    	(IO_MFS1.LINUART.LAMSR.bit.RDRF)
#define	MFS1_LINUART_LAMSR_TDRE    	(IO_MFS1.LINUART.LAMSR.bit.TDRE)
#define	MFS1_LINUART_LAMSR_TBI    	(IO_MFS1.LINUART.LAMSR.bit.TBI)
#define	MFS1_LINUART_LAMSR_LCSC    	(IO_MFS1.LINUART.LAMSR.bit.LCSC)
#define	MFS1_LINUART_LAMSR_LAHC    	(IO_MFS1.LINUART.LAMSR.bit.LAHC)
#define	MFS1_LINUART_LAMCR			(IO_MFS1.LINUART.LAMCR.byte)
#define	MFS1_LINUART_LAMCR_LDL    	(IO_MFS1.LINUART.LAMCR.bit.LDL)
#define	MFS1_LINUART_LAMCR_LTDRCL    	(IO_MFS1.LINUART.LAMCR.bit.LTDRCL)
#define	MFS1_LINUART_LAMCR_LCSTYP    	(IO_MFS1.LINUART.LAMCR.bit.LCSTYP)
#define	MFS1_LINUART_LAMCR_LIDEN    	(IO_MFS1.LINUART.LAMCR.bit.LIDEN)
#define	MFS1_LINUART_LAMCR_LAMEN    	(IO_MFS1.LINUART.LAMCR.bit.LAMEN)
#define	MFS1_LINUART_SFLR	(IO_MFS1.LINUART.SFLR.hword)
#define	MFS1_LINUART_SFLR1	(IO_MFS1.LINUART.SFLR.byte.SFLR1)
#define	MFS1_LINUART_SFLR0	(IO_MFS1.LINUART.SFLR.byte.SFLR0)
#define	MFS1_LINUART_LAMESR			(IO_MFS1.LINUART.LAMESR.byte)
#define	MFS1_LINUART_LAMESR_LCSER    	(IO_MFS1.LINUART.LAMESR.bit.LCSER)
#define	MFS1_LINUART_LAMESR_LPTER    	(IO_MFS1.LINUART.LAMESR.bit.LPTER)
#define	MFS1_LINUART_LAMESR_LSFER    	(IO_MFS1.LINUART.LAMESR.bit.LSFER)
#define	MFS1_LINUART_LAMESR_LBSER    	(IO_MFS1.LINUART.LAMESR.bit.LBSER)
#define	MFS1_LINUART_LAMERT			(IO_MFS1.LINUART.LAMERT.byte)
#define	MFS1_LINUART_LAMERT_KEY    	(IO_MFS1.LINUART.LAMERT.bit.KEY)
#define	MFS1_LINUART_LAMERT_LCSERT    	(IO_MFS1.LINUART.LAMERT.bit.LCSERT)
#define	MFS1_LINUART_LAMERT_LPTERT    	(IO_MFS1.LINUART.LAMERT.bit.LPTERT)
#define	MFS1_LINUART_LAMERT_LSFERT    	(IO_MFS1.LINUART.LAMERT.bit.LSFERT)
#define	MFS1_LINUART_LAMERT_LBSERT    	(IO_MFS1.LINUART.LAMERT.bit.LBSERT)
#define	MFS1_LINUART_LAMERT_FRET    	(IO_MFS1.LINUART.LAMERT.bit.FRET)
#define	MFS1_LINUART_LAMIER			(IO_MFS1.LINUART.LAMIER.byte)
#define	MFS1_LINUART_LAMIER_LCSERIE    	(IO_MFS1.LINUART.LAMIER.bit.LCSERIE)
#define	MFS1_LINUART_LAMIER_LPTERIE    	(IO_MFS1.LINUART.LAMIER.bit.LPTERIE)
#define	MFS1_LINUART_LAMIER_LSFERIE    	(IO_MFS1.LINUART.LAMIER.bit.LSFERIE)
#define	MFS1_LINUART_LAMIER_LBSERIE    	(IO_MFS1.LINUART.LAMIER.bit.LBSERIE)
#define	MFS1_LINUART_LAMIER_LCSCIE    	(IO_MFS1.LINUART.LAMIER.bit.LCSCIE)
#define	MFS1_LINUART_LAMIER_LAHCIE    	(IO_MFS1.LINUART.LAMIER.bit.LAHCIE)
#define	MFS1_LINUART_LAMID			(IO_MFS1.LINUART.LAMID.byte)
#define	MFS1_LINUART_LAMID_P    	(IO_MFS1.LINUART.LAMID.bit.P)
#define	MFS1_LINUART_LAMID_LID    	(IO_MFS1.LINUART.LAMID.bit.LID)
#define	MFS1_LINUART_TBYTE0	(IO_MFS1.LINUART.TBYTE0)
#define	MFS1_LINUART_BGR			(IO_MFS1.LINUART.BGR)
#define	MFS1_LINUART_FCR1			(IO_MFS1.LINUART.FCR1.byte)
#define	MFS1_LINUART_FCR1_FLSTE    	(IO_MFS1.LINUART.FCR1.bit.FLSTE)
#define	MFS1_LINUART_FCR1_FRIIE    	(IO_MFS1.LINUART.FCR1.bit.FRIIE)
#define	MFS1_LINUART_FCR1_FDRQ    	(IO_MFS1.LINUART.FCR1.bit.FDRQ)
#define	MFS1_LINUART_FCR1_FTIE    	(IO_MFS1.LINUART.FCR1.bit.FTIE)
#define	MFS1_LINUART_FCR1_FSEL    	(IO_MFS1.LINUART.FCR1.bit.FSEL)
#define	MFS1_LINUART_FCR0			(IO_MFS1.LINUART.FCR0.byte)
#define	MFS1_LINUART_FCR0_FLST    	(IO_MFS1.LINUART.FCR0.bit.FLST)
#define	MFS1_LINUART_FCR0_FLD    	(IO_MFS1.LINUART.FCR0.bit.FLD)
#define	MFS1_LINUART_FCR0_FSET    	(IO_MFS1.LINUART.FCR0.bit.FSET)
#define	MFS1_LINUART_FCR0_FCL2    	(IO_MFS1.LINUART.FCR0.bit.FCL2)
#define	MFS1_LINUART_FCR0_FCL1    	(IO_MFS1.LINUART.FCR0.bit.FCL1)
#define	MFS1_LINUART_FCR0_FE2    	(IO_MFS1.LINUART.FCR0.bit.FE2)
#define	MFS1_LINUART_FCR0_FE1    	(IO_MFS1.LINUART.FCR0.bit.FE1)
#define	MFS1_LINUART_FBYTE 	(IO_MFS1.LINUART.FBYTE.hword)
#define	MFS1_LINUART_FBYTE2	(IO_MFS1.LINUART.FBYTE.byte.FBYTE2)
#define	MFS1_LINUART_FBYTE1	(IO_MFS1.LINUART.FBYTE.byte.FBYTE1)
#define	MFS1_LINUART_FTICR 	(IO_MFS1.LINUART.FTICR.hword)
#define	MFS1_LINUART_FTICR2	(IO_MFS1.LINUART.FTICR.byte.FTICR2)
#define	MFS1_LINUART_FTICR1	(IO_MFS1.LINUART.FTICR.byte.FTICR1)

#define	MFS1_I2C_IBCR			(IO_MFS1.I2C.IBCR.byte)
#define	MFS1_I2C_IBCR_MSS    	(IO_MFS1.I2C.IBCR.bit.MSS)
#define	MFS1_I2C_IBCR_ACT_SCC    	(IO_MFS1.I2C.IBCR.bit.ACT_SCC)
#define	MFS1_I2C_IBCR_ACKE    	(IO_MFS1.I2C.IBCR.bit.ACKE)
#define	MFS1_I2C_IBCR_WSEL    	(IO_MFS1.I2C.IBCR.bit.WSEL)
#define	MFS1_I2C_IBCR_CNDE    	(IO_MFS1.I2C.IBCR.bit.CNDE)
#define	MFS1_I2C_IBCR_INTE    	(IO_MFS1.I2C.IBCR.bit.INTE)
#define	MFS1_I2C_IBCR_BER    	(IO_MFS1.I2C.IBCR.bit.BER)
#define	MFS1_I2C_IBCR_INT    	(IO_MFS1.I2C.IBCR.bit.INT)
#define	MFS1_I2C_SMR			(IO_MFS1.I2C.SMR.byte)
#define	MFS1_I2C_SMR_MD    	(IO_MFS1.I2C.SMR.bit.MD)
#define	MFS1_I2C_SMR_RIE    	(IO_MFS1.I2C.SMR.bit.RIE)
#define	MFS1_I2C_SMR_TIE    	(IO_MFS1.I2C.SMR.bit.TIE)
#define	MFS1_I2C_SSR			(IO_MFS1.I2C.SSR.byte)
#define	MFS1_I2C_SSR_REC    	(IO_MFS1.I2C.SSR.bit.REC)
#define	MFS1_I2C_SSR_TSET    	(IO_MFS1.I2C.SSR.bit.TSET)
#define	MFS1_I2C_SSR_DMA    	(IO_MFS1.I2C.SSR.bit.DMA)
#define	MFS1_I2C_SSR_TBIE    	(IO_MFS1.I2C.SSR.bit.TBIE)
#define	MFS1_I2C_SSR_ORE    	(IO_MFS1.I2C.SSR.bit.ORE)
#define	MFS1_I2C_SSR_RDRF    	(IO_MFS1.I2C.SSR.bit.RDRF)
#define	MFS1_I2C_SSR_TDRE    	(IO_MFS1.I2C.SSR.bit.TDRE)
#define	MFS1_I2C_SSR_TBI    	(IO_MFS1.I2C.SSR.bit.TBI)
#define	MFS1_I2C_IBSR			(IO_MFS1.I2C.IBSR.byte)
#define	MFS1_I2C_IBSR_FBT    	(IO_MFS1.I2C.IBSR.bit.FBT)
#define	MFS1_I2C_IBSR_RACK    	(IO_MFS1.I2C.IBSR.bit.RACK)
#define	MFS1_I2C_IBSR_RSA    	(IO_MFS1.I2C.IBSR.bit.RSA)
#define	MFS1_I2C_IBSR_TRX    	(IO_MFS1.I2C.IBSR.bit.TRX)
#define	MFS1_I2C_IBSR_AL    	(IO_MFS1.I2C.IBSR.bit.AL)
#define	MFS1_I2C_IBSR_RSC    	(IO_MFS1.I2C.IBSR.bit.RSC)
#define	MFS1_I2C_IBSR_SPC    	(IO_MFS1.I2C.IBSR.bit.SPC)
#define	MFS1_I2C_IBSR_BB    	(IO_MFS1.I2C.IBSR.bit.BB)
#define	MFS1_I2C_RDR0	(IO_MFS1.I2C.RDR0)
#define	MFS1_I2C_TDR0	(IO_MFS1.I2C.RDR0)
#define	MFS1_I2C_SACSR			(IO_MFS1.I2C.SACSR.hword)
#define	MFS1_I2C_SACSR_TRG    	(IO_MFS1.I2C.SACSR.bit.TRG)
#define	MFS1_I2C_SACSR_TINT    	(IO_MFS1.I2C.SACSR.bit.TINT)
#define	MFS1_I2C_SACSR_TINTE    	(IO_MFS1.I2C.SACSR.bit.TINTE)
#define	MFS1_I2C_SACSR_TRGE    	(IO_MFS1.I2C.SACSR.bit.TRGE)
#define	MFS1_I2C_SACSR_TDIV    	(IO_MFS1.I2C.SACSR.bit.TDIV)
#define	MFS1_I2C_SACSR_TMRE    	(IO_MFS1.I2C.SACSR.bit.TMRE)
#define	MFS1_I2C_STMR	(IO_MFS1.I2C.STMR)
#define	MFS1_I2C_STMCR	(IO_MFS1.I2C.STMCR)
#define	MFS1_I2C_BGR	(IO_MFS1.I2C.BGR)
#define	MFS1_I2C_ISMK			(IO_MFS1.I2C.ISMK.byte)
#define	MFS1_I2C_ISMK_EN    	(IO_MFS1.I2C.ISMK.bit.EN)
#define	MFS1_I2C_ISMK_SM    	(IO_MFS1.I2C.ISMK.bit.SM)
#define	MFS1_I2C_ISBA			(IO_MFS1.I2C.ISBA.byte)
#define	MFS1_I2C_ISBA_SAEN    	(IO_MFS1.I2C.ISBA.bit.SAEN)
#define	MFS1_I2C_ISBA_SA    	(IO_MFS1.I2C.ISBA.bit.SA)
#define	MFS1_I2C_FCR1			(IO_MFS1.I2C.FCR1.byte)
#define	MFS1_I2C_FCR1_FLSTE    	(IO_MFS1.I2C.FCR1.bit.FLSTE)
#define	MFS1_I2C_FCR1_FRIIE    	(IO_MFS1.I2C.FCR1.bit.FRIIE)
#define	MFS1_I2C_FCR1_FDRQ    	(IO_MFS1.I2C.FCR1.bit.FDRQ)
#define	MFS1_I2C_FCR1_FTIE    	(IO_MFS1.I2C.FCR1.bit.FTIE)
#define	MFS1_I2C_FCR1_FSEL    	(IO_MFS1.I2C.FCR1.bit.FSEL)
#define	MFS1_I2C_FCR0			(IO_MFS1.I2C.FCR0.byte)
#define	MFS1_I2C_FCR0_FLST    	(IO_MFS1.I2C.FCR0.bit.FLST)
#define	MFS1_I2C_FCR0_FLD    	(IO_MFS1.I2C.FCR0.bit.FLD)
#define	MFS1_I2C_FCR0_FSET    	(IO_MFS1.I2C.FCR0.bit.FSET)
#define	MFS1_I2C_FCR0_FCL2    	(IO_MFS1.I2C.FCR0.bit.FCL2)
#define	MFS1_I2C_FCR0_FCL1    	(IO_MFS1.I2C.FCR0.bit.FCL1)
#define	MFS1_I2C_FCR0_FE2    	(IO_MFS1.I2C.FCR0.bit.FE2)
#define	MFS1_I2C_FCR0_FE1    	(IO_MFS1.I2C.FCR0.bit.FE1)
#define	MFS1_I2C_FBYTE 	(IO_MFS1.I2C.FBYTE.hword)
#define	MFS1_I2C_FBYTE2	(IO_MFS1.I2C.FBYTE.byte.FBYTE2)
#define	MFS1_I2C_FBYTE1	(IO_MFS1.I2C.FBYTE.byte.FBYTE1)
#define	MFS1_I2C_FTICR 	(IO_MFS1.I2C.FTICR.hword)
#define	MFS1_I2C_FTICR2	(IO_MFS1.I2C.FTICR.byte.FTICR2)
#define	MFS1_I2C_FTICR1	(IO_MFS1.I2C.FTICR.byte.FTICR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MFS2,attr=IO,locate=0x17A0
#endif

__IO_EXTENDED	MFSSTR	IO_MFS2;

#define	MFS2_UART_SCR			(IO_MFS2.UART.SCR.byte)
#define	MFS2_UART_SCR_UPCL    	(IO_MFS2.UART.SCR.bit.UPCL)
#define	MFS2_UART_SCR_RIE    	(IO_MFS2.UART.SCR.bit.RIE)
#define	MFS2_UART_SCR_TIE    	(IO_MFS2.UART.SCR.bit.TIE)
#define	MFS2_UART_SCR_TBIE    	(IO_MFS2.UART.SCR.bit.TBIE)
#define	MFS2_UART_SCR_RXE    	(IO_MFS2.UART.SCR.bit.RXE)
#define	MFS2_UART_SCR_TXE    	(IO_MFS2.UART.SCR.bit.TXE)
#define	MFS2_UART_SMR			(IO_MFS2.UART.SMR.byte)
#define	MFS2_UART_SMR_MD    	(IO_MFS2.UART.SMR.bit.MD)
#define	MFS2_UART_SMR_SBL    	(IO_MFS2.UART.SMR.bit.SBL)
#define	MFS2_UART_SMR_BDS    	(IO_MFS2.UART.SMR.bit.BDS)
#define	MFS2_UART_SMR_SOE    	(IO_MFS2.UART.SMR.bit.SOE)
#define	MFS2_UART_SSR			(IO_MFS2.UART.SSR.byte)
#define	MFS2_UART_SSR_REC    	(IO_MFS2.UART.SSR.bit.REC)
#define	MFS2_UART_SSR_PE    	(IO_MFS2.UART.SSR.bit.PE)
#define	MFS2_UART_SSR_FRE    	(IO_MFS2.UART.SSR.bit.FRE)
#define	MFS2_UART_SSR_ORE    	(IO_MFS2.UART.SSR.bit.ORE)
#define	MFS2_UART_SSR_RDRF    	(IO_MFS2.UART.SSR.bit.RDRF)
#define	MFS2_UART_SSR_TDRE    	(IO_MFS2.UART.SSR.bit.TDRE)
#define	MFS2_UART_SSR_TBI    	(IO_MFS2.UART.SSR.bit.TBI)
#define	MFS2_UART_ESCR			(IO_MFS2.UART.ESCR.byte)
#define	MFS2_UART_ESCR_FLWEN    	(IO_MFS2.UART.ESCR.bit.FLWEN)
#define	MFS2_UART_ESCR_ESBL    	(IO_MFS2.UART.ESCR.bit.ESBL)
#define	MFS2_UART_ESCR_INV    	(IO_MFS2.UART.ESCR.bit.INV)
#define	MFS2_UART_ESCR_PEN    	(IO_MFS2.UART.ESCR.bit.PEN)
#define	MFS2_UART_ESCR_P    	(IO_MFS2.UART.ESCR.bit.P)
#define	MFS2_UART_ESCR_L    	(IO_MFS2.UART.ESCR.bit.L)
#define	MFS2_UART_RDR0	(IO_MFS2.UART.RDR0.hword)
#define	MFS2_UART_RDR0_RDR0L	(IO_MFS2.UART.RDR0.byte.RDR0L)
#define	MFS2_UART_RDR0_bit9	(IO_MFS2.UART.RDR0.bit9.D)
#define	MFS2_UART_RDR0_bit7	(IO_MFS2.UART.RDR0.bit7.D)
#define	MFS2_UART_RDR0_bit6	(IO_MFS2.UART.RDR0.bit6.D)
#define	MFS2_UART_RDR0_bit5	(IO_MFS2.UART.RDR0.bit5.D)
#define	MFS2_UART_TDR0	(IO_MFS2.UART.RDR0.hword)
#define	MFS2_UART_TDR0_TDR0L	(IO_MFS2.UART.RDR0.byte.RDR0L)
#define	MFS2_UART_TDR0_bit9	(IO_MFS2.UART.RDR0.bit9.D)
#define	MFS2_UART_TDR0_bit7	(IO_MFS2.UART.RDR0.bit7.D)
#define	MFS2_UART_TDR0_bit6	(IO_MFS2.UART.RDR0.bit6.D)
#define	MFS2_UART_TDR0_bit5	(IO_MFS2.UART.RDR0.bit5.D)
#define	MFS2_UART_SACSR			(IO_MFS2.UART.SACSR.hword)
#define	MFS2_UART_SACSR_STST    	(IO_MFS2.UART.SACSR.bit.STST)
#define	MFS2_UART_SACSR_TRG    	(IO_MFS2.UART.SACSR.bit.TRG)
#define	MFS2_UART_SACSR_TINT    	(IO_MFS2.UART.SACSR.bit.TINT)
#define	MFS2_UART_SACSR_TINTE    	(IO_MFS2.UART.SACSR.bit.TINTE)
#define	MFS2_UART_SACSR_TSYNE    	(IO_MFS2.UART.SACSR.bit.TSYNE)
#define	MFS2_UART_SACSR_TRGE    	(IO_MFS2.UART.SACSR.bit.TRGE)
#define	MFS2_UART_SACSR_TDIV    	(IO_MFS2.UART.SACSR.bit.TDIV)
#define	MFS2_UART_SACSR_TMRE    	(IO_MFS2.UART.SACSR.bit.TMRE)
#define	MFS2_UART_STMR	(IO_MFS2.UART.STMR)
#define	MFS2_UART_STMCR	(IO_MFS2.UART.STMCR)
#define	MFS2_UART_TBYTE0	(IO_MFS2.UART.TBYTE0)
#define	MFS2_UART_BGR			(IO_MFS2.UART.BGR)
#define	MFS2_UART_FCR1			(IO_MFS2.UART.FCR1.byte)
#define	MFS2_UART_FCR1_FLSTE    	(IO_MFS2.UART.FCR1.bit.FLSTE)
#define	MFS2_UART_FCR1_FRIIE    	(IO_MFS2.UART.FCR1.bit.FRIIE)
#define	MFS2_UART_FCR1_FDRQ    	(IO_MFS2.UART.FCR1.bit.FDRQ)
#define	MFS2_UART_FCR1_FTIE    	(IO_MFS2.UART.FCR1.bit.FTIE)
#define	MFS2_UART_FCR1_FSEL    	(IO_MFS2.UART.FCR1.bit.FSEL)
#define	MFS2_UART_FCR0			(IO_MFS2.UART.FCR0.byte)
#define	MFS2_UART_FCR0_FLST    	(IO_MFS2.UART.FCR0.bit.FLST)
#define	MFS2_UART_FCR0_FLD    	(IO_MFS2.UART.FCR0.bit.FLD)
#define	MFS2_UART_FCR0_FSET    	(IO_MFS2.UART.FCR0.bit.FSET)
#define	MFS2_UART_FCR0_FCL2    	(IO_MFS2.UART.FCR0.bit.FCL2)
#define	MFS2_UART_FCR0_FCL1    	(IO_MFS2.UART.FCR0.bit.FCL1)
#define	MFS2_UART_FCR0_FE2    	(IO_MFS2.UART.FCR0.bit.FE2)
#define	MFS2_UART_FCR0_FE1    	(IO_MFS2.UART.FCR0.bit.FE1)
#define	MFS2_UART_FBYTE 	(IO_MFS2.UART.FBYTE.hword)
#define	MFS2_UART_FBYTE2	(IO_MFS2.UART.FBYTE.byte.FBYTE2)
#define	MFS2_UART_FBYTE1	(IO_MFS2.UART.FBYTE.byte.FBYTE1)
#define	MFS2_UART_FTICR 	(IO_MFS2.UART.FTICR.hword)
#define	MFS2_UART_FTICR2	(IO_MFS2.UART.FTICR.byte.FTICR2)
#define	MFS2_UART_FTICR1	(IO_MFS2.UART.FTICR.byte.FTICR1)

#define	MFS2_CSIO_SCR			(IO_MFS2.CSIO.SCR.byte)
#define	MFS2_CSIO_SCR_UPCL    	(IO_MFS2.CSIO.SCR.bit.UPCL)
#define	MFS2_CSIO_SCR_MS    	(IO_MFS2.CSIO.SCR.bit.MS)
#define	MFS2_CSIO_SCR_SPI    	(IO_MFS2.CSIO.SCR.bit.SPI)
#define	MFS2_CSIO_SCR_RIE    	(IO_MFS2.CSIO.SCR.bit.RIE)
#define	MFS2_CSIO_SCR_TIE    	(IO_MFS2.CSIO.SCR.bit.TIE)
#define	MFS2_CSIO_SCR_TBIE    	(IO_MFS2.CSIO.SCR.bit.TBIE)
#define	MFS2_CSIO_SCR_RXE    	(IO_MFS2.CSIO.SCR.bit.RXE)
#define	MFS2_CSIO_SCR_TXE    	(IO_MFS2.CSIO.SCR.bit.TXE)
#define	MFS2_CSIO_SMR			(IO_MFS2.CSIO.SMR.byte)
#define	MFS2_CSIO_SMR_MD    	(IO_MFS2.CSIO.SMR.bit.MD)
#define	MFS2_CSIO_SMR_SCINV    	(IO_MFS2.CSIO.SMR.bit.SCINV)
#define	MFS2_CSIO_SMR_BDS    	(IO_MFS2.CSIO.SMR.bit.BDS)
#define	MFS2_CSIO_SMR_SCKE    	(IO_MFS2.CSIO.SMR.bit.SCKE)
#define	MFS2_CSIO_SMR_SOE    	(IO_MFS2.CSIO.SMR.bit.SOE)
#define	MFS2_CSIO_SSR			(IO_MFS2.CSIO.SSR.byte)
#define	MFS2_CSIO_SSR_REC    	(IO_MFS2.CSIO.SSR.bit.REC)
#define	MFS2_CSIO_SSR_ES    	(IO_MFS2.CSIO.SSR.bit.ES)
#define	MFS2_CSIO_SSR_AWC    	(IO_MFS2.CSIO.SSR.bit.AWC)
#define	MFS2_CSIO_SSR_ORE    	(IO_MFS2.CSIO.SSR.bit.ORE)
#define	MFS2_CSIO_SSR_RDRF    	(IO_MFS2.CSIO.SSR.bit.RDRF)
#define	MFS2_CSIO_SSR_TDRE    	(IO_MFS2.CSIO.SSR.bit.TDRE)
#define	MFS2_CSIO_SSR_TBI    	(IO_MFS2.CSIO.SSR.bit.TBI)
#define	MFS2_CSIO_ESCR			(IO_MFS2.CSIO.ESCR.byte)
#define	MFS2_CSIO_ESCR_SOP    	(IO_MFS2.CSIO.ESCR.bit.SOP)
#define	MFS2_CSIO_ESCR_L3    	(IO_MFS2.CSIO.ESCR.bit.L3)
#define	MFS2_CSIO_ESCR_CSFE    	(IO_MFS2.CSIO.ESCR.bit.CSFE)
#define	MFS2_CSIO_ESCR_WT    	(IO_MFS2.CSIO.ESCR.bit.WT)
#define	MFS2_CSIO_ESCR_L    	(IO_MFS2.CSIO.ESCR.bit.L)
#define	MFS2_CSIO_RDR	(IO_MFS2.CSIO.RDR.word)
#define	MFS2_CSIO_RDR1	(IO_MFS2.CSIO.RDR.hword.RDR1)
#define	MFS2_CSIO_RDR0	(IO_MFS2.CSIO.RDR.hword.RDR0)
#define	MFS2_CSIO_TDR	(IO_MFS2.CSIO.RDR.word)
#define	MFS2_CSIO_TDR1	(IO_MFS2.CSIO.RDR.hword.RDR1)
#define	MFS2_CSIO_TDR0	(IO_MFS2.CSIO.RDR.hword.RDR0)
#define	MFS2_CSIO_SACSR			(IO_MFS2.CSIO.SACSR.hword)
#define	MFS2_CSIO_SACSR_STST    	(IO_MFS2.CSIO.SACSR.bit.STST)
#define	MFS2_CSIO_SACSR_TBEEN    	(IO_MFS2.CSIO.SACSR.bit.TBEEN)
#define	MFS2_CSIO_SACSR_CSEIE    	(IO_MFS2.CSIO.SACSR.bit.CSEIE)
#define	MFS2_CSIO_SACSR_CSE    	(IO_MFS2.CSIO.SACSR.bit.CSE)
#define	MFS2_CSIO_SACSR_TRG    	(IO_MFS2.CSIO.SACSR.bit.TRG)
#define	MFS2_CSIO_SACSR_TINT    	(IO_MFS2.CSIO.SACSR.bit.TINT)
#define	MFS2_CSIO_SACSR_TINTE    	(IO_MFS2.CSIO.SACSR.bit.TINTE)
#define	MFS2_CSIO_SACSR_TSYNE    	(IO_MFS2.CSIO.SACSR.bit.TSYNE)
#define	MFS2_CSIO_SACSR_TRGE    	(IO_MFS2.CSIO.SACSR.bit.TRGE)
#define	MFS2_CSIO_SACSR_TDIV    	(IO_MFS2.CSIO.SACSR.bit.TDIV)
#define	MFS2_CSIO_SACSR_TMRE    	(IO_MFS2.CSIO.SACSR.bit.TMRE)
#define	MFS2_CSIO_STMR	(IO_MFS2.CSIO.STMR)
#define	MFS2_CSIO_STMCR	(IO_MFS2.CSIO.STMCR)
#define	MFS2_CSIO_SCSCR			(IO_MFS2.CSIO.SCSCR.hword)
#define	MFS2_CSIO_SCSCR_SST    	(IO_MFS2.CSIO.SCSCR.bit.SST)
#define	MFS2_CSIO_SCSCR_SED    	(IO_MFS2.CSIO.SCSCR.bit.SED)
#define	MFS2_CSIO_SCSCR_SCD    	(IO_MFS2.CSIO.SCSCR.bit.SCD)
#define	MFS2_CSIO_SCSCR_SCAM    	(IO_MFS2.CSIO.SCSCR.bit.SCAM)
#define	MFS2_CSIO_SCSCR_CDIV    	(IO_MFS2.CSIO.SCSCR.bit.CDIV)
#define	MFS2_CSIO_SCSCR_CSLVL    	(IO_MFS2.CSIO.SCSCR.bit.CSLVL)
#define	MFS2_CSIO_SCSCR_CSEN3    	(IO_MFS2.CSIO.SCSCR.bit.CSEN3)
#define	MFS2_CSIO_SCSCR_CSEN2    	(IO_MFS2.CSIO.SCSCR.bit.CSEN2)
#define	MFS2_CSIO_SCSCR_CSEN1    	(IO_MFS2.CSIO.SCSCR.bit.CSEN1)
#define	MFS2_CSIO_SCSCR_CSEN0    	(IO_MFS2.CSIO.SCSCR.bit.CSEN0)
#define	MFS2_CSIO_SCSCR_CSOE    	(IO_MFS2.CSIO.SCSCR.bit.CSOE)
#define	MFS2_CSIO_SCSTR	(IO_MFS2.CSIO.SCSTR.word)
#define	MFS2_CSIO_SCSTR32	(IO_MFS2.CSIO.SCSTR.hword.SCSTR32)
#define	MFS2_CSIO_SCSTR3	(IO_MFS2.CSIO.SCSTR.byte.SCSTR3)
#define	MFS2_CSIO_SCSTR2	(IO_MFS2.CSIO.SCSTR.byte.SCSTR2)
#define	MFS2_CSIO_SCSTR10	(IO_MFS2.CSIO.SCSTR.hword.SCSTR10)
#define	MFS2_CSIO_SCSTR1	(IO_MFS2.CSIO.SCSTR.byte.SCSTR1)
#define	MFS2_CSIO_SCSTR0	(IO_MFS2.CSIO.SCSTR.byte.SCSTR0)
#define	MFS2_CSIO_SCSFR2			(IO_MFS2.CSIO.SCSFR2.byte)
#define	MFS2_CSIO_SCSFR2_CSLVL    	(IO_MFS2.CSIO.SCSFR2.bit.CSLVL)
#define	MFS2_CSIO_SCSFR2_SCINV    	(IO_MFS2.CSIO.SCSFR2.bit.SCINV)
#define	MFS2_CSIO_SCSFR2_SPI    	(IO_MFS2.CSIO.SCSFR2.bit.SPI)
#define	MFS2_CSIO_SCSFR2_BDS    	(IO_MFS2.CSIO.SCSFR2.bit.BDS)
#define	MFS2_CSIO_SCSFR2_L    	(IO_MFS2.CSIO.SCSFR2.bit.L)
#define	MFS2_CSIO_SCSFR1			(IO_MFS2.CSIO.SCSFR1.byte)
#define	MFS2_CSIO_SCSFR1_CSLVL    	(IO_MFS2.CSIO.SCSFR1.bit.CSLVL)
#define	MFS2_CSIO_SCSFR1_SCINV    	(IO_MFS2.CSIO.SCSFR1.bit.SCINV)
#define	MFS2_CSIO_SCSFR1_SPI    	(IO_MFS2.CSIO.SCSFR1.bit.SPI)
#define	MFS2_CSIO_SCSFR1_BDS    	(IO_MFS2.CSIO.SCSFR1.bit.BDS)
#define	MFS2_CSIO_SCSFR1_L    	(IO_MFS2.CSIO.SCSFR1.bit.L)
#define	MFS2_CSIO_SCSFR0			(IO_MFS2.CSIO.SCSFR0.byte)
#define	MFS2_CSIO_SCSFR0_CSLVL    	(IO_MFS2.CSIO.SCSFR0.bit.CSLVL)
#define	MFS2_CSIO_SCSFR0_SCINV    	(IO_MFS2.CSIO.SCSFR0.bit.SCINV)
#define	MFS2_CSIO_SCSFR0_SPI    	(IO_MFS2.CSIO.SCSFR0.bit.SPI)
#define	MFS2_CSIO_SCSFR0_BDS    	(IO_MFS2.CSIO.SCSFR0.bit.BDS)
#define	MFS2_CSIO_SCSFR0_L    	(IO_MFS2.CSIO.SCSFR0.bit.L)
#define	MFS2_CSIO_TBYTE3	(IO_MFS2.CSIO.TBYTE3)
#define	MFS2_CSIO_TBYTE2	(IO_MFS2.CSIO.TBYTE2)
#define	MFS2_CSIO_TBYTE1	(IO_MFS2.CSIO.TBYTE1)
#define	MFS2_CSIO_TBYTE0	(IO_MFS2.CSIO.TBYTE0)
#define	MFS2_CSIO_BGR			(IO_MFS2.CSIO.BGR)
#define	MFS2_CSIO_FCR1			(IO_MFS2.CSIO.FCR1.byte)
#define	MFS2_CSIO_FCR1_FLSTE    	(IO_MFS2.CSIO.FCR1.bit.FLSTE)
#define	MFS2_CSIO_FCR1_FRIIE    	(IO_MFS2.CSIO.FCR1.bit.FRIIE)
#define	MFS2_CSIO_FCR1_FDRQ    	(IO_MFS2.CSIO.FCR1.bit.FDRQ)
#define	MFS2_CSIO_FCR1_FTIE    	(IO_MFS2.CSIO.FCR1.bit.FTIE)
#define	MFS2_CSIO_FCR1_FSEL    	(IO_MFS2.CSIO.FCR1.bit.FSEL)
#define	MFS2_CSIO_FCR0			(IO_MFS2.CSIO.FCR0.byte)
#define	MFS2_CSIO_FCR0_FLST    	(IO_MFS2.CSIO.FCR0.bit.FLST)
#define	MFS2_CSIO_FCR0_FLD    	(IO_MFS2.CSIO.FCR0.bit.FLD)
#define	MFS2_CSIO_FCR0_FSET    	(IO_MFS2.CSIO.FCR0.bit.FSET)
#define	MFS2_CSIO_FCR0_FCL2    	(IO_MFS2.CSIO.FCR0.bit.FCL2)
#define	MFS2_CSIO_FCR0_FCL1    	(IO_MFS2.CSIO.FCR0.bit.FCL1)
#define	MFS2_CSIO_FCR0_FE2    	(IO_MFS2.CSIO.FCR0.bit.FE2)
#define	MFS2_CSIO_FCR0_FE1    	(IO_MFS2.CSIO.FCR0.bit.FE1)
#define	MFS2_CSIO_FBYTE 	(IO_MFS2.CSIO.FBYTE.hword)
#define	MFS2_CSIO_FBYTE2	(IO_MFS2.CSIO.FBYTE.byte.FBYTE2)
#define	MFS2_CSIO_FBYTE1	(IO_MFS2.CSIO.FBYTE.byte.FBYTE1)
#define	MFS2_CSIO_FTICR 	(IO_MFS2.CSIO.FTICR.hword)
#define	MFS2_CSIO_FTICR2	(IO_MFS2.CSIO.FTICR.byte.FTICR2)
#define	MFS2_CSIO_FTICR1	(IO_MFS2.CSIO.FTICR.byte.FTICR1)

#define	MFS2_LINUART_SCR			(IO_MFS2.LINUART.SCR.byte)
#define	MFS2_LINUART_SCR_UPCL    	(IO_MFS2.LINUART.SCR.bit.UPCL)
#define	MFS2_LINUART_SCR_MS    	(IO_MFS2.LINUART.SCR.bit.MS)
#define	MFS2_LINUART_SCR_LBR    	(IO_MFS2.LINUART.SCR.bit.LBR)
#define	MFS2_LINUART_SCR_RIE    	(IO_MFS2.LINUART.SCR.bit.RIE)
#define	MFS2_LINUART_SCR_TIE    	(IO_MFS2.LINUART.SCR.bit.TIE)
#define	MFS2_LINUART_SCR_TBIE    	(IO_MFS2.LINUART.SCR.bit.TBIE)
#define	MFS2_LINUART_SCR_RXE    	(IO_MFS2.LINUART.SCR.bit.RXE)
#define	MFS2_LINUART_SCR_TXE    	(IO_MFS2.LINUART.SCR.bit.TXE)
#define	MFS2_LINUART_SMR			(IO_MFS2.LINUART.SMR.byte)
#define	MFS2_LINUART_SMR_MD    	(IO_MFS2.LINUART.SMR.bit.MD)
#define	MFS2_LINUART_SMR_SBL    	(IO_MFS2.LINUART.SMR.bit.SBL)
#define	MFS2_LINUART_SMR_SOE    	(IO_MFS2.LINUART.SMR.bit.SOE)
#define	MFS2_LINUART_SSR			(IO_MFS2.LINUART.SSR.byte)
#define	MFS2_LINUART_SSR_REC    	(IO_MFS2.LINUART.SSR.bit.REC)
#define	MFS2_LINUART_SSR_LBD    	(IO_MFS2.LINUART.SSR.bit.LBD)
#define	MFS2_LINUART_SSR_FRE    	(IO_MFS2.LINUART.SSR.bit.FRE)
#define	MFS2_LINUART_SSR_ORE    	(IO_MFS2.LINUART.SSR.bit.ORE)
#define	MFS2_LINUART_SSR_RDRF    	(IO_MFS2.LINUART.SSR.bit.RDRF)
#define	MFS2_LINUART_SSR_TDRE    	(IO_MFS2.LINUART.SSR.bit.TDRE)
#define	MFS2_LINUART_SSR_TBI    	(IO_MFS2.LINUART.SSR.bit.TBI)
#define	MFS2_LINUART_ESCR			(IO_MFS2.LINUART.ESCR.byte)
#define	MFS2_LINUART_ESCR_ESBL    	(IO_MFS2.LINUART.ESCR.bit.ESBL)
#define	MFS2_LINUART_ESCR_LBIE    	(IO_MFS2.LINUART.ESCR.bit.LBIE)
#define	MFS2_LINUART_ESCR_LBL    	(IO_MFS2.LINUART.ESCR.bit.LBL)
#define	MFS2_LINUART_ESCR_DEL    	(IO_MFS2.LINUART.ESCR.bit.DEL)
#define	MFS2_LINUART_RDR0	(IO_MFS2.LINUART.RDR0)
#define	MFS2_LINUART_TDR0	(IO_MFS2.LINUART.RDR0)
#define	MFS2_LINUART_SACSR			(IO_MFS2.LINUART.SACSR.hword)
#define	MFS2_LINUART_SACSR_STST    	(IO_MFS2.LINUART.SACSR.bit.STST)
#define	MFS2_LINUART_SACSR_BST    	(IO_MFS2.LINUART.SACSR.bit.BST)
#define	MFS2_LINUART_SACSR_SFD    	(IO_MFS2.LINUART.SACSR.bit.SFD)
#define	MFS2_LINUART_SACSR_SFDE    	(IO_MFS2.LINUART.SACSR.bit.SFDE)
#define	MFS2_LINUART_SACSR_AUTE    	(IO_MFS2.LINUART.SACSR.bit.AUTE)
#define	MFS2_LINUART_SACSR_TRG    	(IO_MFS2.LINUART.SACSR.bit.TRG)
#define	MFS2_LINUART_SACSR_TINT    	(IO_MFS2.LINUART.SACSR.bit.TINT)
#define	MFS2_LINUART_SACSR_TINTE    	(IO_MFS2.LINUART.SACSR.bit.TINTE)
#define	MFS2_LINUART_SACSR_TSYNE    	(IO_MFS2.LINUART.SACSR.bit.TSYNE)
#define	MFS2_LINUART_SACSR_TRGE    	(IO_MFS2.LINUART.SACSR.bit.TRGE)
#define	MFS2_LINUART_SACSR_TDIV    	(IO_MFS2.LINUART.SACSR.bit.TDIV)
#define	MFS2_LINUART_SACSR_TMRE    	(IO_MFS2.LINUART.SACSR.bit.TMRE)
#define	MFS2_LINUART_STMR	(IO_MFS2.LINUART.STMR)
#define	MFS2_LINUART_STMCR	(IO_MFS2.LINUART.STMCR)
#define	MFS2_LINUART_SFUR	(IO_MFS2.LINUART.SFUR)
#define	MFS2_LINUART_LAMSR			(IO_MFS2.LINUART.LAMSR.byte)
#define	MFS2_LINUART_LAMSR_LER    	(IO_MFS2.LINUART.LAMSR.bit.LER)
#define	MFS2_LINUART_LAMSR_SER    	(IO_MFS2.LINUART.LAMSR.bit.SER)
#define	MFS2_LINUART_LAMSR_RDRF    	(IO_MFS2.LINUART.LAMSR.bit.RDRF)
#define	MFS2_LINUART_LAMSR_TDRE    	(IO_MFS2.LINUART.LAMSR.bit.TDRE)
#define	MFS2_LINUART_LAMSR_TBI    	(IO_MFS2.LINUART.LAMSR.bit.TBI)
#define	MFS2_LINUART_LAMSR_LCSC    	(IO_MFS2.LINUART.LAMSR.bit.LCSC)
#define	MFS2_LINUART_LAMSR_LAHC    	(IO_MFS2.LINUART.LAMSR.bit.LAHC)
#define	MFS2_LINUART_LAMCR			(IO_MFS2.LINUART.LAMCR.byte)
#define	MFS2_LINUART_LAMCR_LDL    	(IO_MFS2.LINUART.LAMCR.bit.LDL)
#define	MFS2_LINUART_LAMCR_LTDRCL    	(IO_MFS2.LINUART.LAMCR.bit.LTDRCL)
#define	MFS2_LINUART_LAMCR_LCSTYP    	(IO_MFS2.LINUART.LAMCR.bit.LCSTYP)
#define	MFS2_LINUART_LAMCR_LIDEN    	(IO_MFS2.LINUART.LAMCR.bit.LIDEN)
#define	MFS2_LINUART_LAMCR_LAMEN    	(IO_MFS2.LINUART.LAMCR.bit.LAMEN)
#define	MFS2_LINUART_SFLR	(IO_MFS2.LINUART.SFLR.hword)
#define	MFS2_LINUART_SFLR1	(IO_MFS2.LINUART.SFLR.byte.SFLR1)
#define	MFS2_LINUART_SFLR0	(IO_MFS2.LINUART.SFLR.byte.SFLR0)
#define	MFS2_LINUART_LAMESR			(IO_MFS2.LINUART.LAMESR.byte)
#define	MFS2_LINUART_LAMESR_LCSER    	(IO_MFS2.LINUART.LAMESR.bit.LCSER)
#define	MFS2_LINUART_LAMESR_LPTER    	(IO_MFS2.LINUART.LAMESR.bit.LPTER)
#define	MFS2_LINUART_LAMESR_LSFER    	(IO_MFS2.LINUART.LAMESR.bit.LSFER)
#define	MFS2_LINUART_LAMESR_LBSER    	(IO_MFS2.LINUART.LAMESR.bit.LBSER)
#define	MFS2_LINUART_LAMERT			(IO_MFS2.LINUART.LAMERT.byte)
#define	MFS2_LINUART_LAMERT_KEY    	(IO_MFS2.LINUART.LAMERT.bit.KEY)
#define	MFS2_LINUART_LAMERT_LCSERT    	(IO_MFS2.LINUART.LAMERT.bit.LCSERT)
#define	MFS2_LINUART_LAMERT_LPTERT    	(IO_MFS2.LINUART.LAMERT.bit.LPTERT)
#define	MFS2_LINUART_LAMERT_LSFERT    	(IO_MFS2.LINUART.LAMERT.bit.LSFERT)
#define	MFS2_LINUART_LAMERT_LBSERT    	(IO_MFS2.LINUART.LAMERT.bit.LBSERT)
#define	MFS2_LINUART_LAMERT_FRET    	(IO_MFS2.LINUART.LAMERT.bit.FRET)
#define	MFS2_LINUART_LAMIER			(IO_MFS2.LINUART.LAMIER.byte)
#define	MFS2_LINUART_LAMIER_LCSERIE    	(IO_MFS2.LINUART.LAMIER.bit.LCSERIE)
#define	MFS2_LINUART_LAMIER_LPTERIE    	(IO_MFS2.LINUART.LAMIER.bit.LPTERIE)
#define	MFS2_LINUART_LAMIER_LSFERIE    	(IO_MFS2.LINUART.LAMIER.bit.LSFERIE)
#define	MFS2_LINUART_LAMIER_LBSERIE    	(IO_MFS2.LINUART.LAMIER.bit.LBSERIE)
#define	MFS2_LINUART_LAMIER_LCSCIE    	(IO_MFS2.LINUART.LAMIER.bit.LCSCIE)
#define	MFS2_LINUART_LAMIER_LAHCIE    	(IO_MFS2.LINUART.LAMIER.bit.LAHCIE)
#define	MFS2_LINUART_LAMID			(IO_MFS2.LINUART.LAMID.byte)
#define	MFS2_LINUART_LAMID_P    	(IO_MFS2.LINUART.LAMID.bit.P)
#define	MFS2_LINUART_LAMID_LID    	(IO_MFS2.LINUART.LAMID.bit.LID)
#define	MFS2_LINUART_BGR			(IO_MFS2.LINUART.BGR)
#define	MFS2_LINUART_FCR1			(IO_MFS2.LINUART.FCR1.byte)
#define	MFS2_LINUART_FCR1_FLSTE    	(IO_MFS2.LINUART.FCR1.bit.FLSTE)
#define	MFS2_LINUART_FCR1_FRIIE    	(IO_MFS2.LINUART.FCR1.bit.FRIIE)
#define	MFS2_LINUART_FCR1_FDRQ    	(IO_MFS2.LINUART.FCR1.bit.FDRQ)
#define	MFS2_LINUART_FCR1_FTIE    	(IO_MFS2.LINUART.FCR1.bit.FTIE)
#define	MFS2_LINUART_FCR1_FSEL    	(IO_MFS2.LINUART.FCR1.bit.FSEL)
#define	MFS2_LINUART_FCR0			(IO_MFS2.LINUART.FCR0.byte)
#define	MFS2_LINUART_FCR0_FLST    	(IO_MFS2.LINUART.FCR0.bit.FLST)
#define	MFS2_LINUART_FCR0_FLD    	(IO_MFS2.LINUART.FCR0.bit.FLD)
#define	MFS2_LINUART_FCR0_FSET    	(IO_MFS2.LINUART.FCR0.bit.FSET)
#define	MFS2_LINUART_FCR0_FCL2    	(IO_MFS2.LINUART.FCR0.bit.FCL2)
#define	MFS2_LINUART_FCR0_FCL1    	(IO_MFS2.LINUART.FCR0.bit.FCL1)
#define	MFS2_LINUART_FCR0_FE2    	(IO_MFS2.LINUART.FCR0.bit.FE2)
#define	MFS2_LINUART_FCR0_FE1    	(IO_MFS2.LINUART.FCR0.bit.FE1)
#define	MFS2_LINUART_FBYTE 	(IO_MFS2.LINUART.FBYTE.hword)
#define	MFS2_LINUART_FBYTE2	(IO_MFS2.LINUART.FBYTE.byte.FBYTE2)
#define	MFS2_LINUART_FBYTE1	(IO_MFS2.LINUART.FBYTE.byte.FBYTE1)
#define	MFS2_LINUART_FTICR 	(IO_MFS2.LINUART.FTICR.hword)
#define	MFS2_LINUART_FTICR2	(IO_MFS2.LINUART.FTICR.byte.FTICR2)
#define	MFS2_LINUART_FTICR1	(IO_MFS2.LINUART.FTICR.byte.FTICR1)

#define	MFS2_I2C_IBCR			(IO_MFS2.I2C.IBCR.byte)
#define	MFS2_I2C_IBCR_MSS    	(IO_MFS2.I2C.IBCR.bit.MSS)
#define	MFS2_I2C_IBCR_ACT_SCC    	(IO_MFS2.I2C.IBCR.bit.ACT_SCC)
#define	MFS2_I2C_IBCR_ACKE    	(IO_MFS2.I2C.IBCR.bit.ACKE)
#define	MFS2_I2C_IBCR_WSEL    	(IO_MFS2.I2C.IBCR.bit.WSEL)
#define	MFS2_I2C_IBCR_CNDE    	(IO_MFS2.I2C.IBCR.bit.CNDE)
#define	MFS2_I2C_IBCR_INTE    	(IO_MFS2.I2C.IBCR.bit.INTE)
#define	MFS2_I2C_IBCR_BER    	(IO_MFS2.I2C.IBCR.bit.BER)
#define	MFS2_I2C_IBCR_INT    	(IO_MFS2.I2C.IBCR.bit.INT)
#define	MFS2_I2C_SMR			(IO_MFS2.I2C.SMR.byte)
#define	MFS2_I2C_SMR_MD    	(IO_MFS2.I2C.SMR.bit.MD)
#define	MFS2_I2C_SMR_RIE    	(IO_MFS2.I2C.SMR.bit.RIE)
#define	MFS2_I2C_SMR_TIE    	(IO_MFS2.I2C.SMR.bit.TIE)
#define	MFS2_I2C_SSR			(IO_MFS2.I2C.SSR.byte)
#define	MFS2_I2C_SSR_REC    	(IO_MFS2.I2C.SSR.bit.REC)
#define	MFS2_I2C_SSR_TSET    	(IO_MFS2.I2C.SSR.bit.TSET)
#define	MFS2_I2C_SSR_DMA    	(IO_MFS2.I2C.SSR.bit.DMA)
#define	MFS2_I2C_SSR_TBIE    	(IO_MFS2.I2C.SSR.bit.TBIE)
#define	MFS2_I2C_SSR_ORE    	(IO_MFS2.I2C.SSR.bit.ORE)
#define	MFS2_I2C_SSR_RDRF    	(IO_MFS2.I2C.SSR.bit.RDRF)
#define	MFS2_I2C_SSR_TDRE    	(IO_MFS2.I2C.SSR.bit.TDRE)
#define	MFS2_I2C_SSR_TBI    	(IO_MFS2.I2C.SSR.bit.TBI)
#define	MFS2_I2C_IBSR			(IO_MFS2.I2C.IBSR.byte)
#define	MFS2_I2C_IBSR_FBT    	(IO_MFS2.I2C.IBSR.bit.FBT)
#define	MFS2_I2C_IBSR_RACK    	(IO_MFS2.I2C.IBSR.bit.RACK)
#define	MFS2_I2C_IBSR_RSA    	(IO_MFS2.I2C.IBSR.bit.RSA)
#define	MFS2_I2C_IBSR_TRX    	(IO_MFS2.I2C.IBSR.bit.TRX)
#define	MFS2_I2C_IBSR_AL    	(IO_MFS2.I2C.IBSR.bit.AL)
#define	MFS2_I2C_IBSR_RSC    	(IO_MFS2.I2C.IBSR.bit.RSC)
#define	MFS2_I2C_IBSR_SPC    	(IO_MFS2.I2C.IBSR.bit.SPC)
#define	MFS2_I2C_IBSR_BB    	(IO_MFS2.I2C.IBSR.bit.BB)
#define	MFS2_I2C_RDR0	(IO_MFS2.I2C.RDR0)
#define	MFS2_I2C_TDR0	(IO_MFS2.I2C.RDR0)
#define	MFS2_I2C_SACSR			(IO_MFS2.I2C.SACSR.hword)
#define	MFS2_I2C_SACSR_TRG    	(IO_MFS2.I2C.SACSR.bit.TRG)
#define	MFS2_I2C_SACSR_TINT    	(IO_MFS2.I2C.SACSR.bit.TINT)
#define	MFS2_I2C_SACSR_TINTE    	(IO_MFS2.I2C.SACSR.bit.TINTE)
#define	MFS2_I2C_SACSR_TRGE    	(IO_MFS2.I2C.SACSR.bit.TRGE)
#define	MFS2_I2C_SACSR_TDIV    	(IO_MFS2.I2C.SACSR.bit.TDIV)
#define	MFS2_I2C_SACSR_TMRE    	(IO_MFS2.I2C.SACSR.bit.TMRE)
#define	MFS2_I2C_STMR	(IO_MFS2.I2C.STMR)
#define	MFS2_I2C_STMCR	(IO_MFS2.I2C.STMCR)
#define	MFS2_I2C_BGR	(IO_MFS2.I2C.BGR)
#define	MFS2_I2C_ISMK			(IO_MFS2.I2C.ISMK.byte)
#define	MFS2_I2C_ISMK_EN    	(IO_MFS2.I2C.ISMK.bit.EN)
#define	MFS2_I2C_ISMK_SM    	(IO_MFS2.I2C.ISMK.bit.SM)
#define	MFS2_I2C_ISBA			(IO_MFS2.I2C.ISBA.byte)
#define	MFS2_I2C_ISBA_SAEN    	(IO_MFS2.I2C.ISBA.bit.SAEN)
#define	MFS2_I2C_ISBA_SA    	(IO_MFS2.I2C.ISBA.bit.SA)
#define	MFS2_I2C_FCR1			(IO_MFS2.I2C.FCR1.byte)
#define	MFS2_I2C_FCR1_FLSTE    	(IO_MFS2.I2C.FCR1.bit.FLSTE)
#define	MFS2_I2C_FCR1_FRIIE    	(IO_MFS2.I2C.FCR1.bit.FRIIE)
#define	MFS2_I2C_FCR1_FDRQ    	(IO_MFS2.I2C.FCR1.bit.FDRQ)
#define	MFS2_I2C_FCR1_FTIE    	(IO_MFS2.I2C.FCR1.bit.FTIE)
#define	MFS2_I2C_FCR1_FSEL    	(IO_MFS2.I2C.FCR1.bit.FSEL)
#define	MFS2_I2C_FCR0			(IO_MFS2.I2C.FCR0.byte)
#define	MFS2_I2C_FCR0_FLST    	(IO_MFS2.I2C.FCR0.bit.FLST)
#define	MFS2_I2C_FCR0_FLD    	(IO_MFS2.I2C.FCR0.bit.FLD)
#define	MFS2_I2C_FCR0_FSET    	(IO_MFS2.I2C.FCR0.bit.FSET)
#define	MFS2_I2C_FCR0_FCL2    	(IO_MFS2.I2C.FCR0.bit.FCL2)
#define	MFS2_I2C_FCR0_FCL1    	(IO_MFS2.I2C.FCR0.bit.FCL1)
#define	MFS2_I2C_FCR0_FE2    	(IO_MFS2.I2C.FCR0.bit.FE2)
#define	MFS2_I2C_FCR0_FE1    	(IO_MFS2.I2C.FCR0.bit.FE1)
#define	MFS2_I2C_FBYTE 	(IO_MFS2.I2C.FBYTE.hword)
#define	MFS2_I2C_FBYTE2	(IO_MFS2.I2C.FBYTE.byte.FBYTE2)
#define	MFS2_I2C_FBYTE1	(IO_MFS2.I2C.FBYTE.byte.FBYTE1)
#define	MFS2_I2C_FTICR 	(IO_MFS2.I2C.FTICR.hword)
#define	MFS2_I2C_FTICR2	(IO_MFS2.I2C.FTICR.byte.FTICR2)
#define	MFS2_I2C_FTICR1	(IO_MFS2.I2C.FTICR.byte.FTICR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MFS3,attr=IO,locate=0x17C8
#endif

__IO_EXTENDED	MFSSTR	IO_MFS3;

#define	MFS3_UART_SCR			(IO_MFS3.UART.SCR.byte)
#define	MFS3_UART_SCR_UPCL    	(IO_MFS3.UART.SCR.bit.UPCL)
#define	MFS3_UART_SCR_RIE    	(IO_MFS3.UART.SCR.bit.RIE)
#define	MFS3_UART_SCR_TIE    	(IO_MFS3.UART.SCR.bit.TIE)
#define	MFS3_UART_SCR_TBIE    	(IO_MFS3.UART.SCR.bit.TBIE)
#define	MFS3_UART_SCR_RXE    	(IO_MFS3.UART.SCR.bit.RXE)
#define	MFS3_UART_SCR_TXE    	(IO_MFS3.UART.SCR.bit.TXE)
#define	MFS3_UART_SMR			(IO_MFS3.UART.SMR.byte)
#define	MFS3_UART_SMR_MD    	(IO_MFS3.UART.SMR.bit.MD)
#define	MFS3_UART_SMR_SBL    	(IO_MFS3.UART.SMR.bit.SBL)
#define	MFS3_UART_SMR_BDS    	(IO_MFS3.UART.SMR.bit.BDS)
#define	MFS3_UART_SMR_SOE    	(IO_MFS3.UART.SMR.bit.SOE)
#define	MFS3_UART_SSR			(IO_MFS3.UART.SSR.byte)
#define	MFS3_UART_SSR_REC    	(IO_MFS3.UART.SSR.bit.REC)
#define	MFS3_UART_SSR_PE    	(IO_MFS3.UART.SSR.bit.PE)
#define	MFS3_UART_SSR_FRE    	(IO_MFS3.UART.SSR.bit.FRE)
#define	MFS3_UART_SSR_ORE    	(IO_MFS3.UART.SSR.bit.ORE)
#define	MFS3_UART_SSR_RDRF    	(IO_MFS3.UART.SSR.bit.RDRF)
#define	MFS3_UART_SSR_TDRE    	(IO_MFS3.UART.SSR.bit.TDRE)
#define	MFS3_UART_SSR_TBI    	(IO_MFS3.UART.SSR.bit.TBI)
#define	MFS3_UART_ESCR			(IO_MFS3.UART.ESCR.byte)
#define	MFS3_UART_ESCR_FLWEN    	(IO_MFS3.UART.ESCR.bit.FLWEN)
#define	MFS3_UART_ESCR_ESBL    	(IO_MFS3.UART.ESCR.bit.ESBL)
#define	MFS3_UART_ESCR_INV    	(IO_MFS3.UART.ESCR.bit.INV)
#define	MFS3_UART_ESCR_PEN    	(IO_MFS3.UART.ESCR.bit.PEN)
#define	MFS3_UART_ESCR_P    	(IO_MFS3.UART.ESCR.bit.P)
#define	MFS3_UART_ESCR_L    	(IO_MFS3.UART.ESCR.bit.L)
#define	MFS3_UART_RDR0	(IO_MFS3.UART.RDR0.hword)
#define	MFS3_UART_RDR0_RDR0L	(IO_MFS3.UART.RDR0.byte.RDR0L)
#define	MFS3_UART_RDR0_bit9	(IO_MFS3.UART.RDR0.bit9.D)
#define	MFS3_UART_RDR0_bit7	(IO_MFS3.UART.RDR0.bit7.D)
#define	MFS3_UART_RDR0_bit6	(IO_MFS3.UART.RDR0.bit6.D)
#define	MFS3_UART_RDR0_bit5	(IO_MFS3.UART.RDR0.bit5.D)
#define	MFS3_UART_TDR0	(IO_MFS3.UART.RDR0.hword)
#define	MFS3_UART_TDR0_TDR0L	(IO_MFS3.UART.RDR0.byte.RDR0L)
#define	MFS3_UART_TDR0_bit9	(IO_MFS3.UART.RDR0.bit9.D)
#define	MFS3_UART_TDR0_bit7	(IO_MFS3.UART.RDR0.bit7.D)
#define	MFS3_UART_TDR0_bit6	(IO_MFS3.UART.RDR0.bit6.D)
#define	MFS3_UART_TDR0_bit5	(IO_MFS3.UART.RDR0.bit5.D)
#define	MFS3_UART_SACSR			(IO_MFS3.UART.SACSR.hword)
#define	MFS3_UART_SACSR_STST    	(IO_MFS3.UART.SACSR.bit.STST)
#define	MFS3_UART_SACSR_TRG    	(IO_MFS3.UART.SACSR.bit.TRG)
#define	MFS3_UART_SACSR_TINT    	(IO_MFS3.UART.SACSR.bit.TINT)
#define	MFS3_UART_SACSR_TINTE    	(IO_MFS3.UART.SACSR.bit.TINTE)
#define	MFS3_UART_SACSR_TSYNE    	(IO_MFS3.UART.SACSR.bit.TSYNE)
#define	MFS3_UART_SACSR_TRGE    	(IO_MFS3.UART.SACSR.bit.TRGE)
#define	MFS3_UART_SACSR_TDIV    	(IO_MFS3.UART.SACSR.bit.TDIV)
#define	MFS3_UART_SACSR_TMRE    	(IO_MFS3.UART.SACSR.bit.TMRE)
#define	MFS3_UART_STMR	(IO_MFS3.UART.STMR)
#define	MFS3_UART_STMCR	(IO_MFS3.UART.STMCR)
#define	MFS3_UART_TBYTE0	(IO_MFS3.UART.TBYTE0)
#define	MFS3_UART_BGR			(IO_MFS3.UART.BGR)
#define	MFS3_UART_FCR1			(IO_MFS3.UART.FCR1.byte)
#define	MFS3_UART_FCR1_FLSTE    	(IO_MFS3.UART.FCR1.bit.FLSTE)
#define	MFS3_UART_FCR1_FRIIE    	(IO_MFS3.UART.FCR1.bit.FRIIE)
#define	MFS3_UART_FCR1_FDRQ    	(IO_MFS3.UART.FCR1.bit.FDRQ)
#define	MFS3_UART_FCR1_FTIE    	(IO_MFS3.UART.FCR1.bit.FTIE)
#define	MFS3_UART_FCR1_FSEL    	(IO_MFS3.UART.FCR1.bit.FSEL)
#define	MFS3_UART_FCR0			(IO_MFS3.UART.FCR0.byte)
#define	MFS3_UART_FCR0_FLST    	(IO_MFS3.UART.FCR0.bit.FLST)
#define	MFS3_UART_FCR0_FLD    	(IO_MFS3.UART.FCR0.bit.FLD)
#define	MFS3_UART_FCR0_FSET    	(IO_MFS3.UART.FCR0.bit.FSET)
#define	MFS3_UART_FCR0_FCL2    	(IO_MFS3.UART.FCR0.bit.FCL2)
#define	MFS3_UART_FCR0_FCL1    	(IO_MFS3.UART.FCR0.bit.FCL1)
#define	MFS3_UART_FCR0_FE2    	(IO_MFS3.UART.FCR0.bit.FE2)
#define	MFS3_UART_FCR0_FE1    	(IO_MFS3.UART.FCR0.bit.FE1)
#define	MFS3_UART_FBYTE 	(IO_MFS3.UART.FBYTE.hword)
#define	MFS3_UART_FBYTE2	(IO_MFS3.UART.FBYTE.byte.FBYTE2)
#define	MFS3_UART_FBYTE1	(IO_MFS3.UART.FBYTE.byte.FBYTE1)
#define	MFS3_UART_FTICR 	(IO_MFS3.UART.FTICR.hword)
#define	MFS3_UART_FTICR2	(IO_MFS3.UART.FTICR.byte.FTICR2)
#define	MFS3_UART_FTICR1	(IO_MFS3.UART.FTICR.byte.FTICR1)

#define	MFS3_CSIO_SCR			(IO_MFS3.CSIO.SCR.byte)
#define	MFS3_CSIO_SCR_UPCL    	(IO_MFS3.CSIO.SCR.bit.UPCL)
#define	MFS3_CSIO_SCR_MS    	(IO_MFS3.CSIO.SCR.bit.MS)
#define	MFS3_CSIO_SCR_SPI    	(IO_MFS3.CSIO.SCR.bit.SPI)
#define	MFS3_CSIO_SCR_RIE    	(IO_MFS3.CSIO.SCR.bit.RIE)
#define	MFS3_CSIO_SCR_TIE    	(IO_MFS3.CSIO.SCR.bit.TIE)
#define	MFS3_CSIO_SCR_TBIE    	(IO_MFS3.CSIO.SCR.bit.TBIE)
#define	MFS3_CSIO_SCR_RXE    	(IO_MFS3.CSIO.SCR.bit.RXE)
#define	MFS3_CSIO_SCR_TXE    	(IO_MFS3.CSIO.SCR.bit.TXE)
#define	MFS3_CSIO_SMR			(IO_MFS3.CSIO.SMR.byte)
#define	MFS3_CSIO_SMR_MD    	(IO_MFS3.CSIO.SMR.bit.MD)
#define	MFS3_CSIO_SMR_SCINV    	(IO_MFS3.CSIO.SMR.bit.SCINV)
#define	MFS3_CSIO_SMR_BDS    	(IO_MFS3.CSIO.SMR.bit.BDS)
#define	MFS3_CSIO_SMR_SCKE    	(IO_MFS3.CSIO.SMR.bit.SCKE)
#define	MFS3_CSIO_SMR_SOE    	(IO_MFS3.CSIO.SMR.bit.SOE)
#define	MFS3_CSIO_SSR			(IO_MFS3.CSIO.SSR.byte)
#define	MFS3_CSIO_SSR_REC    	(IO_MFS3.CSIO.SSR.bit.REC)
#define	MFS3_CSIO_SSR_ES    	(IO_MFS3.CSIO.SSR.bit.ES)
#define	MFS3_CSIO_SSR_AWC    	(IO_MFS3.CSIO.SSR.bit.AWC)
#define	MFS3_CSIO_SSR_ORE    	(IO_MFS3.CSIO.SSR.bit.ORE)
#define	MFS3_CSIO_SSR_RDRF    	(IO_MFS3.CSIO.SSR.bit.RDRF)
#define	MFS3_CSIO_SSR_TDRE    	(IO_MFS3.CSIO.SSR.bit.TDRE)
#define	MFS3_CSIO_SSR_TBI    	(IO_MFS3.CSIO.SSR.bit.TBI)
#define	MFS3_CSIO_ESCR			(IO_MFS3.CSIO.ESCR.byte)
#define	MFS3_CSIO_ESCR_SOP    	(IO_MFS3.CSIO.ESCR.bit.SOP)
#define	MFS3_CSIO_ESCR_L3    	(IO_MFS3.CSIO.ESCR.bit.L3)
#define	MFS3_CSIO_ESCR_CSFE    	(IO_MFS3.CSIO.ESCR.bit.CSFE)
#define	MFS3_CSIO_ESCR_WT    	(IO_MFS3.CSIO.ESCR.bit.WT)
#define	MFS3_CSIO_ESCR_L    	(IO_MFS3.CSIO.ESCR.bit.L)
#define	MFS3_CSIO_RDR	(IO_MFS3.CSIO.RDR.word)
#define	MFS3_CSIO_RDR1	(IO_MFS3.CSIO.RDR.hword.RDR1)
#define	MFS3_CSIO_RDR0	(IO_MFS3.CSIO.RDR.hword.RDR0)
#define	MFS3_CSIO_TDR	(IO_MFS3.CSIO.RDR.word)
#define	MFS3_CSIO_TDR1	(IO_MFS3.CSIO.RDR.hword.RDR1)
#define	MFS3_CSIO_TDR0	(IO_MFS3.CSIO.RDR.hword.RDR0)
#define	MFS3_CSIO_SACSR			(IO_MFS3.CSIO.SACSR.hword)
#define	MFS3_CSIO_SACSR_STST    	(IO_MFS3.CSIO.SACSR.bit.STST)
#define	MFS3_CSIO_SACSR_TBEEN    	(IO_MFS3.CSIO.SACSR.bit.TBEEN)
#define	MFS3_CSIO_SACSR_CSEIE    	(IO_MFS3.CSIO.SACSR.bit.CSEIE)
#define	MFS3_CSIO_SACSR_CSE    	(IO_MFS3.CSIO.SACSR.bit.CSE)
#define	MFS3_CSIO_SACSR_TRG    	(IO_MFS3.CSIO.SACSR.bit.TRG)
#define	MFS3_CSIO_SACSR_TINT    	(IO_MFS3.CSIO.SACSR.bit.TINT)
#define	MFS3_CSIO_SACSR_TINTE    	(IO_MFS3.CSIO.SACSR.bit.TINTE)
#define	MFS3_CSIO_SACSR_TSYNE    	(IO_MFS3.CSIO.SACSR.bit.TSYNE)
#define	MFS3_CSIO_SACSR_TRGE    	(IO_MFS3.CSIO.SACSR.bit.TRGE)
#define	MFS3_CSIO_SACSR_TDIV    	(IO_MFS3.CSIO.SACSR.bit.TDIV)
#define	MFS3_CSIO_SACSR_TMRE    	(IO_MFS3.CSIO.SACSR.bit.TMRE)
#define	MFS3_CSIO_STMR	(IO_MFS3.CSIO.STMR)
#define	MFS3_CSIO_STMCR	(IO_MFS3.CSIO.STMCR)
#define	MFS3_CSIO_SCSCR			(IO_MFS3.CSIO.SCSCR.hword)
#define	MFS3_CSIO_SCSCR_SST    	(IO_MFS3.CSIO.SCSCR.bit.SST)
#define	MFS3_CSIO_SCSCR_SED    	(IO_MFS3.CSIO.SCSCR.bit.SED)
#define	MFS3_CSIO_SCSCR_SCD    	(IO_MFS3.CSIO.SCSCR.bit.SCD)
#define	MFS3_CSIO_SCSCR_SCAM    	(IO_MFS3.CSIO.SCSCR.bit.SCAM)
#define	MFS3_CSIO_SCSCR_CDIV    	(IO_MFS3.CSIO.SCSCR.bit.CDIV)
#define	MFS3_CSIO_SCSCR_CSLVL    	(IO_MFS3.CSIO.SCSCR.bit.CSLVL)
#define	MFS3_CSIO_SCSCR_CSEN3    	(IO_MFS3.CSIO.SCSCR.bit.CSEN3)
#define	MFS3_CSIO_SCSCR_CSEN2    	(IO_MFS3.CSIO.SCSCR.bit.CSEN2)
#define	MFS3_CSIO_SCSCR_CSEN1    	(IO_MFS3.CSIO.SCSCR.bit.CSEN1)
#define	MFS3_CSIO_SCSCR_CSEN0    	(IO_MFS3.CSIO.SCSCR.bit.CSEN0)
#define	MFS3_CSIO_SCSCR_CSOE    	(IO_MFS3.CSIO.SCSCR.bit.CSOE)
#define	MFS3_CSIO_SCSTR	(IO_MFS3.CSIO.SCSTR.word)
#define	MFS3_CSIO_SCSTR32	(IO_MFS3.CSIO.SCSTR.hword.SCSTR32)
#define	MFS3_CSIO_SCSTR3	(IO_MFS3.CSIO.SCSTR.byte.SCSTR3)
#define	MFS3_CSIO_SCSTR2	(IO_MFS3.CSIO.SCSTR.byte.SCSTR2)
#define	MFS3_CSIO_SCSTR10	(IO_MFS3.CSIO.SCSTR.hword.SCSTR10)
#define	MFS3_CSIO_SCSTR1	(IO_MFS3.CSIO.SCSTR.byte.SCSTR1)
#define	MFS3_CSIO_SCSTR0	(IO_MFS3.CSIO.SCSTR.byte.SCSTR0)
#define	MFS3_CSIO_SCSFR2			(IO_MFS3.CSIO.SCSFR2.byte)
#define	MFS3_CSIO_SCSFR2_CSLVL    	(IO_MFS3.CSIO.SCSFR2.bit.CSLVL)
#define	MFS3_CSIO_SCSFR2_SCINV    	(IO_MFS3.CSIO.SCSFR2.bit.SCINV)
#define	MFS3_CSIO_SCSFR2_SPI    	(IO_MFS3.CSIO.SCSFR2.bit.SPI)
#define	MFS3_CSIO_SCSFR2_BDS    	(IO_MFS3.CSIO.SCSFR2.bit.BDS)
#define	MFS3_CSIO_SCSFR2_L    	(IO_MFS3.CSIO.SCSFR2.bit.L)
#define	MFS3_CSIO_SCSFR1			(IO_MFS3.CSIO.SCSFR1.byte)
#define	MFS3_CSIO_SCSFR1_CSLVL    	(IO_MFS3.CSIO.SCSFR1.bit.CSLVL)
#define	MFS3_CSIO_SCSFR1_SCINV    	(IO_MFS3.CSIO.SCSFR1.bit.SCINV)
#define	MFS3_CSIO_SCSFR1_SPI    	(IO_MFS3.CSIO.SCSFR1.bit.SPI)
#define	MFS3_CSIO_SCSFR1_BDS    	(IO_MFS3.CSIO.SCSFR1.bit.BDS)
#define	MFS3_CSIO_SCSFR1_L    	(IO_MFS3.CSIO.SCSFR1.bit.L)
#define	MFS3_CSIO_SCSFR0			(IO_MFS3.CSIO.SCSFR0.byte)
#define	MFS3_CSIO_SCSFR0_CSLVL    	(IO_MFS3.CSIO.SCSFR0.bit.CSLVL)
#define	MFS3_CSIO_SCSFR0_SCINV    	(IO_MFS3.CSIO.SCSFR0.bit.SCINV)
#define	MFS3_CSIO_SCSFR0_SPI    	(IO_MFS3.CSIO.SCSFR0.bit.SPI)
#define	MFS3_CSIO_SCSFR0_BDS    	(IO_MFS3.CSIO.SCSFR0.bit.BDS)
#define	MFS3_CSIO_SCSFR0_L    	(IO_MFS3.CSIO.SCSFR0.bit.L)
#define	MFS3_CSIO_TBYTE3	(IO_MFS3.CSIO.TBYTE3)
#define	MFS3_CSIO_TBYTE2	(IO_MFS3.CSIO.TBYTE2)
#define	MFS3_CSIO_TBYTE1	(IO_MFS3.CSIO.TBYTE1)
#define	MFS3_CSIO_TBYTE0	(IO_MFS3.CSIO.TBYTE0)
#define	MFS3_CSIO_BGR			(IO_MFS3.CSIO.BGR)
#define	MFS3_CSIO_FCR1			(IO_MFS3.CSIO.FCR1.byte)
#define	MFS3_CSIO_FCR1_FLSTE    	(IO_MFS3.CSIO.FCR1.bit.FLSTE)
#define	MFS3_CSIO_FCR1_FRIIE    	(IO_MFS3.CSIO.FCR1.bit.FRIIE)
#define	MFS3_CSIO_FCR1_FDRQ    	(IO_MFS3.CSIO.FCR1.bit.FDRQ)
#define	MFS3_CSIO_FCR1_FTIE    	(IO_MFS3.CSIO.FCR1.bit.FTIE)
#define	MFS3_CSIO_FCR1_FSEL    	(IO_MFS3.CSIO.FCR1.bit.FSEL)
#define	MFS3_CSIO_FCR0			(IO_MFS3.CSIO.FCR0.byte)
#define	MFS3_CSIO_FCR0_FLST    	(IO_MFS3.CSIO.FCR0.bit.FLST)
#define	MFS3_CSIO_FCR0_FLD    	(IO_MFS3.CSIO.FCR0.bit.FLD)
#define	MFS3_CSIO_FCR0_FSET    	(IO_MFS3.CSIO.FCR0.bit.FSET)
#define	MFS3_CSIO_FCR0_FCL2    	(IO_MFS3.CSIO.FCR0.bit.FCL2)
#define	MFS3_CSIO_FCR0_FCL1    	(IO_MFS3.CSIO.FCR0.bit.FCL1)
#define	MFS3_CSIO_FCR0_FE2    	(IO_MFS3.CSIO.FCR0.bit.FE2)
#define	MFS3_CSIO_FCR0_FE1    	(IO_MFS3.CSIO.FCR0.bit.FE1)
#define	MFS3_CSIO_FBYTE 	(IO_MFS3.CSIO.FBYTE.hword)
#define	MFS3_CSIO_FBYTE2	(IO_MFS3.CSIO.FBYTE.byte.FBYTE2)
#define	MFS3_CSIO_FBYTE1	(IO_MFS3.CSIO.FBYTE.byte.FBYTE1)
#define	MFS3_CSIO_FTICR 	(IO_MFS3.CSIO.FTICR.hword)
#define	MFS3_CSIO_FTICR2	(IO_MFS3.CSIO.FTICR.byte.FTICR2)
#define	MFS3_CSIO_FTICR1	(IO_MFS3.CSIO.FTICR.byte.FTICR1)

#define	MFS3_LINUART_SCR			(IO_MFS3.LINUART.SCR.byte)
#define	MFS3_LINUART_SCR_UPCL    	(IO_MFS3.LINUART.SCR.bit.UPCL)
#define	MFS3_LINUART_SCR_MS    	(IO_MFS3.LINUART.SCR.bit.MS)
#define	MFS3_LINUART_SCR_LBR    	(IO_MFS3.LINUART.SCR.bit.LBR)
#define	MFS3_LINUART_SCR_RIE    	(IO_MFS3.LINUART.SCR.bit.RIE)
#define	MFS3_LINUART_SCR_TIE    	(IO_MFS3.LINUART.SCR.bit.TIE)
#define	MFS3_LINUART_SCR_TBIE    	(IO_MFS3.LINUART.SCR.bit.TBIE)
#define	MFS3_LINUART_SCR_RXE    	(IO_MFS3.LINUART.SCR.bit.RXE)
#define	MFS3_LINUART_SCR_TXE    	(IO_MFS3.LINUART.SCR.bit.TXE)
#define	MFS3_LINUART_SMR			(IO_MFS3.LINUART.SMR.byte)
#define	MFS3_LINUART_SMR_MD    	(IO_MFS3.LINUART.SMR.bit.MD)
#define	MFS3_LINUART_SMR_SBL    	(IO_MFS3.LINUART.SMR.bit.SBL)
#define	MFS3_LINUART_SMR_SOE    	(IO_MFS3.LINUART.SMR.bit.SOE)
#define	MFS3_LINUART_SSR			(IO_MFS3.LINUART.SSR.byte)
#define	MFS3_LINUART_SSR_REC    	(IO_MFS3.LINUART.SSR.bit.REC)
#define	MFS3_LINUART_SSR_LBD    	(IO_MFS3.LINUART.SSR.bit.LBD)
#define	MFS3_LINUART_SSR_FRE    	(IO_MFS3.LINUART.SSR.bit.FRE)
#define	MFS3_LINUART_SSR_ORE    	(IO_MFS3.LINUART.SSR.bit.ORE)
#define	MFS3_LINUART_SSR_RDRF    	(IO_MFS3.LINUART.SSR.bit.RDRF)
#define	MFS3_LINUART_SSR_TDRE    	(IO_MFS3.LINUART.SSR.bit.TDRE)
#define	MFS3_LINUART_SSR_TBI    	(IO_MFS3.LINUART.SSR.bit.TBI)
#define	MFS3_LINUART_ESCR			(IO_MFS3.LINUART.ESCR.byte)
#define	MFS3_LINUART_ESCR_ESBL    	(IO_MFS3.LINUART.ESCR.bit.ESBL)
#define	MFS3_LINUART_ESCR_LBIE    	(IO_MFS3.LINUART.ESCR.bit.LBIE)
#define	MFS3_LINUART_ESCR_LBL    	(IO_MFS3.LINUART.ESCR.bit.LBL)
#define	MFS3_LINUART_ESCR_DEL    	(IO_MFS3.LINUART.ESCR.bit.DEL)
#define	MFS3_LINUART_RDR0	(IO_MFS3.LINUART.RDR0)
#define	MFS3_LINUART_TDR0	(IO_MFS3.LINUART.RDR0)
#define	MFS3_LINUART_SACSR			(IO_MFS3.LINUART.SACSR.hword)
#define	MFS3_LINUART_SACSR_STST    	(IO_MFS3.LINUART.SACSR.bit.STST)
#define	MFS3_LINUART_SACSR_BST    	(IO_MFS3.LINUART.SACSR.bit.BST)
#define	MFS3_LINUART_SACSR_SFD    	(IO_MFS3.LINUART.SACSR.bit.SFD)
#define	MFS3_LINUART_SACSR_SFDE    	(IO_MFS3.LINUART.SACSR.bit.SFDE)
#define	MFS3_LINUART_SACSR_AUTE    	(IO_MFS3.LINUART.SACSR.bit.AUTE)
#define	MFS3_LINUART_SACSR_TRG    	(IO_MFS3.LINUART.SACSR.bit.TRG)
#define	MFS3_LINUART_SACSR_TINT    	(IO_MFS3.LINUART.SACSR.bit.TINT)
#define	MFS3_LINUART_SACSR_TINTE    	(IO_MFS3.LINUART.SACSR.bit.TINTE)
#define	MFS3_LINUART_SACSR_TSYNE    	(IO_MFS3.LINUART.SACSR.bit.TSYNE)
#define	MFS3_LINUART_SACSR_TRGE    	(IO_MFS3.LINUART.SACSR.bit.TRGE)
#define	MFS3_LINUART_SACSR_TDIV    	(IO_MFS3.LINUART.SACSR.bit.TDIV)
#define	MFS3_LINUART_SACSR_TMRE    	(IO_MFS3.LINUART.SACSR.bit.TMRE)
#define	MFS3_LINUART_STMR	(IO_MFS3.LINUART.STMR)
#define	MFS3_LINUART_STMCR	(IO_MFS3.LINUART.STMCR)
#define	MFS3_LINUART_SFUR	(IO_MFS3.LINUART.SFUR)
#define	MFS3_LINUART_LAMSR			(IO_MFS3.LINUART.LAMSR.byte)
#define	MFS3_LINUART_LAMSR_LER    	(IO_MFS3.LINUART.LAMSR.bit.LER)
#define	MFS3_LINUART_LAMSR_SER    	(IO_MFS3.LINUART.LAMSR.bit.SER)
#define	MFS3_LINUART_LAMSR_RDRF    	(IO_MFS3.LINUART.LAMSR.bit.RDRF)
#define	MFS3_LINUART_LAMSR_TDRE    	(IO_MFS3.LINUART.LAMSR.bit.TDRE)
#define	MFS3_LINUART_LAMSR_TBI    	(IO_MFS3.LINUART.LAMSR.bit.TBI)
#define	MFS3_LINUART_LAMSR_LCSC    	(IO_MFS3.LINUART.LAMSR.bit.LCSC)
#define	MFS3_LINUART_LAMSR_LAHC    	(IO_MFS3.LINUART.LAMSR.bit.LAHC)
#define	MFS3_LINUART_LAMCR			(IO_MFS3.LINUART.LAMCR.byte)
#define	MFS3_LINUART_LAMCR_LDL    	(IO_MFS3.LINUART.LAMCR.bit.LDL)
#define	MFS3_LINUART_LAMCR_LTDRCL    	(IO_MFS3.LINUART.LAMCR.bit.LTDRCL)
#define	MFS3_LINUART_LAMCR_LCSTYP    	(IO_MFS3.LINUART.LAMCR.bit.LCSTYP)
#define	MFS3_LINUART_LAMCR_LIDEN    	(IO_MFS3.LINUART.LAMCR.bit.LIDEN)
#define	MFS3_LINUART_LAMCR_LAMEN    	(IO_MFS3.LINUART.LAMCR.bit.LAMEN)
#define	MFS3_LINUART_SFLR	(IO_MFS3.LINUART.SFLR.hword)
#define	MFS3_LINUART_SFLR1	(IO_MFS3.LINUART.SFLR.byte.SFLR1)
#define	MFS3_LINUART_SFLR0	(IO_MFS3.LINUART.SFLR.byte.SFLR0)
#define	MFS3_LINUART_LAMESR			(IO_MFS3.LINUART.LAMESR.byte)
#define	MFS3_LINUART_LAMESR_LCSER    	(IO_MFS3.LINUART.LAMESR.bit.LCSER)
#define	MFS3_LINUART_LAMESR_LPTER    	(IO_MFS3.LINUART.LAMESR.bit.LPTER)
#define	MFS3_LINUART_LAMESR_LSFER    	(IO_MFS3.LINUART.LAMESR.bit.LSFER)
#define	MFS3_LINUART_LAMESR_LBSER    	(IO_MFS3.LINUART.LAMESR.bit.LBSER)
#define	MFS3_LINUART_LAMERT			(IO_MFS3.LINUART.LAMERT.byte)
#define	MFS3_LINUART_LAMERT_KEY    	(IO_MFS3.LINUART.LAMERT.bit.KEY)
#define	MFS3_LINUART_LAMERT_LCSERT    	(IO_MFS3.LINUART.LAMERT.bit.LCSERT)
#define	MFS3_LINUART_LAMERT_LPTERT    	(IO_MFS3.LINUART.LAMERT.bit.LPTERT)
#define	MFS3_LINUART_LAMERT_LSFERT    	(IO_MFS3.LINUART.LAMERT.bit.LSFERT)
#define	MFS3_LINUART_LAMERT_LBSERT    	(IO_MFS3.LINUART.LAMERT.bit.LBSERT)
#define	MFS3_LINUART_LAMERT_FRET    	(IO_MFS3.LINUART.LAMERT.bit.FRET)
#define	MFS3_LINUART_LAMIER			(IO_MFS3.LINUART.LAMIER.byte)
#define	MFS3_LINUART_LAMIER_LCSERIE    	(IO_MFS3.LINUART.LAMIER.bit.LCSERIE)
#define	MFS3_LINUART_LAMIER_LPTERIE    	(IO_MFS3.LINUART.LAMIER.bit.LPTERIE)
#define	MFS3_LINUART_LAMIER_LSFERIE    	(IO_MFS3.LINUART.LAMIER.bit.LSFERIE)
#define	MFS3_LINUART_LAMIER_LBSERIE    	(IO_MFS3.LINUART.LAMIER.bit.LBSERIE)
#define	MFS3_LINUART_LAMIER_LCSCIE    	(IO_MFS3.LINUART.LAMIER.bit.LCSCIE)
#define	MFS3_LINUART_LAMIER_LAHCIE    	(IO_MFS3.LINUART.LAMIER.bit.LAHCIE)
#define	MFS3_LINUART_LAMID			(IO_MFS3.LINUART.LAMID.byte)
#define	MFS3_LINUART_LAMID_P    	(IO_MFS3.LINUART.LAMID.bit.P)
#define	MFS3_LINUART_LAMID_LID    	(IO_MFS3.LINUART.LAMID.bit.LID)
#define	MFS3_LINUART_BGR			(IO_MFS3.LINUART.BGR)
#define	MFS3_LINUART_FCR1			(IO_MFS3.LINUART.FCR1.byte)
#define	MFS3_LINUART_FCR1_FLSTE    	(IO_MFS3.LINUART.FCR1.bit.FLSTE)
#define	MFS3_LINUART_FCR1_FRIIE    	(IO_MFS3.LINUART.FCR1.bit.FRIIE)
#define	MFS3_LINUART_FCR1_FDRQ    	(IO_MFS3.LINUART.FCR1.bit.FDRQ)
#define	MFS3_LINUART_FCR1_FTIE    	(IO_MFS3.LINUART.FCR1.bit.FTIE)
#define	MFS3_LINUART_FCR1_FSEL    	(IO_MFS3.LINUART.FCR1.bit.FSEL)
#define	MFS3_LINUART_FCR0			(IO_MFS3.LINUART.FCR0.byte)
#define	MFS3_LINUART_FCR0_FLST    	(IO_MFS3.LINUART.FCR0.bit.FLST)
#define	MFS3_LINUART_FCR0_FLD    	(IO_MFS3.LINUART.FCR0.bit.FLD)
#define	MFS3_LINUART_FCR0_FSET    	(IO_MFS3.LINUART.FCR0.bit.FSET)
#define	MFS3_LINUART_FCR0_FCL2    	(IO_MFS3.LINUART.FCR0.bit.FCL2)
#define	MFS3_LINUART_FCR0_FCL1    	(IO_MFS3.LINUART.FCR0.bit.FCL1)
#define	MFS3_LINUART_FCR0_FE2    	(IO_MFS3.LINUART.FCR0.bit.FE2)
#define	MFS3_LINUART_FCR0_FE1    	(IO_MFS3.LINUART.FCR0.bit.FE1)
#define	MFS3_LINUART_FBYTE 	(IO_MFS3.LINUART.FBYTE.hword)
#define	MFS3_LINUART_FBYTE2	(IO_MFS3.LINUART.FBYTE.byte.FBYTE2)
#define	MFS3_LINUART_FBYTE1	(IO_MFS3.LINUART.FBYTE.byte.FBYTE1)
#define	MFS3_LINUART_FTICR 	(IO_MFS3.LINUART.FTICR.hword)
#define	MFS3_LINUART_FTICR2	(IO_MFS3.LINUART.FTICR.byte.FTICR2)
#define	MFS3_LINUART_FTICR1	(IO_MFS3.LINUART.FTICR.byte.FTICR1)

#define	MFS3_I2C_IBCR			(IO_MFS3.I2C.IBCR.byte)
#define	MFS3_I2C_IBCR_MSS    	(IO_MFS3.I2C.IBCR.bit.MSS)
#define	MFS3_I2C_IBCR_ACT_SCC    	(IO_MFS3.I2C.IBCR.bit.ACT_SCC)
#define	MFS3_I2C_IBCR_ACKE    	(IO_MFS3.I2C.IBCR.bit.ACKE)
#define	MFS3_I2C_IBCR_WSEL    	(IO_MFS3.I2C.IBCR.bit.WSEL)
#define	MFS3_I2C_IBCR_CNDE    	(IO_MFS3.I2C.IBCR.bit.CNDE)
#define	MFS3_I2C_IBCR_INTE    	(IO_MFS3.I2C.IBCR.bit.INTE)
#define	MFS3_I2C_IBCR_BER    	(IO_MFS3.I2C.IBCR.bit.BER)
#define	MFS3_I2C_IBCR_INT    	(IO_MFS3.I2C.IBCR.bit.INT)
#define	MFS3_I2C_SMR			(IO_MFS3.I2C.SMR.byte)
#define	MFS3_I2C_SMR_MD    	(IO_MFS3.I2C.SMR.bit.MD)
#define	MFS3_I2C_SMR_RIE    	(IO_MFS3.I2C.SMR.bit.RIE)
#define	MFS3_I2C_SMR_TIE    	(IO_MFS3.I2C.SMR.bit.TIE)
#define	MFS3_I2C_SSR			(IO_MFS3.I2C.SSR.byte)
#define	MFS3_I2C_SSR_REC    	(IO_MFS3.I2C.SSR.bit.REC)
#define	MFS3_I2C_SSR_TSET    	(IO_MFS3.I2C.SSR.bit.TSET)
#define	MFS3_I2C_SSR_DMA    	(IO_MFS3.I2C.SSR.bit.DMA)
#define	MFS3_I2C_SSR_TBIE    	(IO_MFS3.I2C.SSR.bit.TBIE)
#define	MFS3_I2C_SSR_ORE    	(IO_MFS3.I2C.SSR.bit.ORE)
#define	MFS3_I2C_SSR_RDRF    	(IO_MFS3.I2C.SSR.bit.RDRF)
#define	MFS3_I2C_SSR_TDRE    	(IO_MFS3.I2C.SSR.bit.TDRE)
#define	MFS3_I2C_SSR_TBI    	(IO_MFS3.I2C.SSR.bit.TBI)
#define	MFS3_I2C_IBSR			(IO_MFS3.I2C.IBSR.byte)
#define	MFS3_I2C_IBSR_FBT    	(IO_MFS3.I2C.IBSR.bit.FBT)
#define	MFS3_I2C_IBSR_RACK    	(IO_MFS3.I2C.IBSR.bit.RACK)
#define	MFS3_I2C_IBSR_RSA    	(IO_MFS3.I2C.IBSR.bit.RSA)
#define	MFS3_I2C_IBSR_TRX    	(IO_MFS3.I2C.IBSR.bit.TRX)
#define	MFS3_I2C_IBSR_AL    	(IO_MFS3.I2C.IBSR.bit.AL)
#define	MFS3_I2C_IBSR_RSC    	(IO_MFS3.I2C.IBSR.bit.RSC)
#define	MFS3_I2C_IBSR_SPC    	(IO_MFS3.I2C.IBSR.bit.SPC)
#define	MFS3_I2C_IBSR_BB    	(IO_MFS3.I2C.IBSR.bit.BB)
#define	MFS3_I2C_RDR0	(IO_MFS3.I2C.RDR0)
#define	MFS3_I2C_TDR0	(IO_MFS3.I2C.RDR0)
#define	MFS3_I2C_SACSR			(IO_MFS3.I2C.SACSR.hword)
#define	MFS3_I2C_SACSR_TRG    	(IO_MFS3.I2C.SACSR.bit.TRG)
#define	MFS3_I2C_SACSR_TINT    	(IO_MFS3.I2C.SACSR.bit.TINT)
#define	MFS3_I2C_SACSR_TINTE    	(IO_MFS3.I2C.SACSR.bit.TINTE)
#define	MFS3_I2C_SACSR_TRGE    	(IO_MFS3.I2C.SACSR.bit.TRGE)
#define	MFS3_I2C_SACSR_TDIV    	(IO_MFS3.I2C.SACSR.bit.TDIV)
#define	MFS3_I2C_SACSR_TMRE    	(IO_MFS3.I2C.SACSR.bit.TMRE)
#define	MFS3_I2C_STMR	(IO_MFS3.I2C.STMR)
#define	MFS3_I2C_STMCR	(IO_MFS3.I2C.STMCR)
#define	MFS3_I2C_BGR	(IO_MFS3.I2C.BGR)
#define	MFS3_I2C_ISMK			(IO_MFS3.I2C.ISMK.byte)
#define	MFS3_I2C_ISMK_EN    	(IO_MFS3.I2C.ISMK.bit.EN)
#define	MFS3_I2C_ISMK_SM    	(IO_MFS3.I2C.ISMK.bit.SM)
#define	MFS3_I2C_ISBA			(IO_MFS3.I2C.ISBA.byte)
#define	MFS3_I2C_ISBA_SAEN    	(IO_MFS3.I2C.ISBA.bit.SAEN)
#define	MFS3_I2C_ISBA_SA    	(IO_MFS3.I2C.ISBA.bit.SA)
#define	MFS3_I2C_FCR1			(IO_MFS3.I2C.FCR1.byte)
#define	MFS3_I2C_FCR1_FLSTE    	(IO_MFS3.I2C.FCR1.bit.FLSTE)
#define	MFS3_I2C_FCR1_FRIIE    	(IO_MFS3.I2C.FCR1.bit.FRIIE)
#define	MFS3_I2C_FCR1_FDRQ    	(IO_MFS3.I2C.FCR1.bit.FDRQ)
#define	MFS3_I2C_FCR1_FTIE    	(IO_MFS3.I2C.FCR1.bit.FTIE)
#define	MFS3_I2C_FCR1_FSEL    	(IO_MFS3.I2C.FCR1.bit.FSEL)
#define	MFS3_I2C_FCR0			(IO_MFS3.I2C.FCR0.byte)
#define	MFS3_I2C_FCR0_FLST    	(IO_MFS3.I2C.FCR0.bit.FLST)
#define	MFS3_I2C_FCR0_FLD    	(IO_MFS3.I2C.FCR0.bit.FLD)
#define	MFS3_I2C_FCR0_FSET    	(IO_MFS3.I2C.FCR0.bit.FSET)
#define	MFS3_I2C_FCR0_FCL2    	(IO_MFS3.I2C.FCR0.bit.FCL2)
#define	MFS3_I2C_FCR0_FCL1    	(IO_MFS3.I2C.FCR0.bit.FCL1)
#define	MFS3_I2C_FCR0_FE2    	(IO_MFS3.I2C.FCR0.bit.FE2)
#define	MFS3_I2C_FCR0_FE1    	(IO_MFS3.I2C.FCR0.bit.FE1)
#define	MFS3_I2C_FBYTE 	(IO_MFS3.I2C.FBYTE.hword)
#define	MFS3_I2C_FBYTE2	(IO_MFS3.I2C.FBYTE.byte.FBYTE2)
#define	MFS3_I2C_FBYTE1	(IO_MFS3.I2C.FBYTE.byte.FBYTE1)
#define	MFS3_I2C_FTICR 	(IO_MFS3.I2C.FTICR.hword)
#define	MFS3_I2C_FTICR2	(IO_MFS3.I2C.FTICR.byte.FTICR2)
#define	MFS3_I2C_FTICR1	(IO_MFS3.I2C.FTICR.byte.FTICR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MFS4,attr=IO,locate=0x17F0
#endif

__IO_EXTENDED	MFSSTR	IO_MFS4;

#define	MFS4_UART_SCR			(IO_MFS4.UART.SCR.byte)
#define	MFS4_UART_SCR_UPCL    	(IO_MFS4.UART.SCR.bit.UPCL)
#define	MFS4_UART_SCR_RIE    	(IO_MFS4.UART.SCR.bit.RIE)
#define	MFS4_UART_SCR_TIE    	(IO_MFS4.UART.SCR.bit.TIE)
#define	MFS4_UART_SCR_TBIE    	(IO_MFS4.UART.SCR.bit.TBIE)
#define	MFS4_UART_SCR_RXE    	(IO_MFS4.UART.SCR.bit.RXE)
#define	MFS4_UART_SCR_TXE    	(IO_MFS4.UART.SCR.bit.TXE)
#define	MFS4_UART_SMR			(IO_MFS4.UART.SMR.byte)
#define	MFS4_UART_SMR_MD    	(IO_MFS4.UART.SMR.bit.MD)
#define	MFS4_UART_SMR_SBL    	(IO_MFS4.UART.SMR.bit.SBL)
#define	MFS4_UART_SMR_BDS    	(IO_MFS4.UART.SMR.bit.BDS)
#define	MFS4_UART_SMR_SOE    	(IO_MFS4.UART.SMR.bit.SOE)
#define	MFS4_UART_SSR			(IO_MFS4.UART.SSR.byte)
#define	MFS4_UART_SSR_REC    	(IO_MFS4.UART.SSR.bit.REC)
#define	MFS4_UART_SSR_PE    	(IO_MFS4.UART.SSR.bit.PE)
#define	MFS4_UART_SSR_FRE    	(IO_MFS4.UART.SSR.bit.FRE)
#define	MFS4_UART_SSR_ORE    	(IO_MFS4.UART.SSR.bit.ORE)
#define	MFS4_UART_SSR_RDRF    	(IO_MFS4.UART.SSR.bit.RDRF)
#define	MFS4_UART_SSR_TDRE    	(IO_MFS4.UART.SSR.bit.TDRE)
#define	MFS4_UART_SSR_TBI    	(IO_MFS4.UART.SSR.bit.TBI)
#define	MFS4_UART_ESCR			(IO_MFS4.UART.ESCR.byte)
#define	MFS4_UART_ESCR_FLWEN    	(IO_MFS4.UART.ESCR.bit.FLWEN)
#define	MFS4_UART_ESCR_ESBL    	(IO_MFS4.UART.ESCR.bit.ESBL)
#define	MFS4_UART_ESCR_INV    	(IO_MFS4.UART.ESCR.bit.INV)
#define	MFS4_UART_ESCR_PEN    	(IO_MFS4.UART.ESCR.bit.PEN)
#define	MFS4_UART_ESCR_P    	(IO_MFS4.UART.ESCR.bit.P)
#define	MFS4_UART_ESCR_L    	(IO_MFS4.UART.ESCR.bit.L)
#define	MFS4_UART_RDR0	(IO_MFS4.UART.RDR0.hword)
#define	MFS4_UART_RDR0_RDR0L	(IO_MFS4.UART.RDR0.byte.RDR0L)
#define	MFS4_UART_RDR0_bit9	(IO_MFS4.UART.RDR0.bit9.D)
#define	MFS4_UART_RDR0_bit7	(IO_MFS4.UART.RDR0.bit7.D)
#define	MFS4_UART_RDR0_bit6	(IO_MFS4.UART.RDR0.bit6.D)
#define	MFS4_UART_RDR0_bit5	(IO_MFS4.UART.RDR0.bit5.D)
#define	MFS4_UART_TDR0	(IO_MFS4.UART.RDR0.hword)
#define	MFS4_UART_TDR0_TDR0L	(IO_MFS4.UART.RDR0.byte.RDR0L)
#define	MFS4_UART_TDR0_bit9	(IO_MFS4.UART.RDR0.bit9.D)
#define	MFS4_UART_TDR0_bit7	(IO_MFS4.UART.RDR0.bit7.D)
#define	MFS4_UART_TDR0_bit6	(IO_MFS4.UART.RDR0.bit6.D)
#define	MFS4_UART_TDR0_bit5	(IO_MFS4.UART.RDR0.bit5.D)
#define	MFS4_UART_SACSR			(IO_MFS4.UART.SACSR.hword)
#define	MFS4_UART_SACSR_STST    	(IO_MFS4.UART.SACSR.bit.STST)
#define	MFS4_UART_SACSR_TRG    	(IO_MFS4.UART.SACSR.bit.TRG)
#define	MFS4_UART_SACSR_TINT    	(IO_MFS4.UART.SACSR.bit.TINT)
#define	MFS4_UART_SACSR_TINTE    	(IO_MFS4.UART.SACSR.bit.TINTE)
#define	MFS4_UART_SACSR_TSYNE    	(IO_MFS4.UART.SACSR.bit.TSYNE)
#define	MFS4_UART_SACSR_TRGE    	(IO_MFS4.UART.SACSR.bit.TRGE)
#define	MFS4_UART_SACSR_TDIV    	(IO_MFS4.UART.SACSR.bit.TDIV)
#define	MFS4_UART_SACSR_TMRE    	(IO_MFS4.UART.SACSR.bit.TMRE)
#define	MFS4_UART_STMR	(IO_MFS4.UART.STMR)
#define	MFS4_UART_STMCR	(IO_MFS4.UART.STMCR)
#define	MFS4_UART_TBYTE0	(IO_MFS4.UART.TBYTE0)
#define	MFS4_UART_BGR			(IO_MFS4.UART.BGR)
#define	MFS4_UART_FCR1			(IO_MFS4.UART.FCR1.byte)
#define	MFS4_UART_FCR1_FLSTE    	(IO_MFS4.UART.FCR1.bit.FLSTE)
#define	MFS4_UART_FCR1_FRIIE    	(IO_MFS4.UART.FCR1.bit.FRIIE)
#define	MFS4_UART_FCR1_FDRQ    	(IO_MFS4.UART.FCR1.bit.FDRQ)
#define	MFS4_UART_FCR1_FTIE    	(IO_MFS4.UART.FCR1.bit.FTIE)
#define	MFS4_UART_FCR1_FSEL    	(IO_MFS4.UART.FCR1.bit.FSEL)
#define	MFS4_UART_FCR0			(IO_MFS4.UART.FCR0.byte)
#define	MFS4_UART_FCR0_FLST    	(IO_MFS4.UART.FCR0.bit.FLST)
#define	MFS4_UART_FCR0_FLD    	(IO_MFS4.UART.FCR0.bit.FLD)
#define	MFS4_UART_FCR0_FSET    	(IO_MFS4.UART.FCR0.bit.FSET)
#define	MFS4_UART_FCR0_FCL2    	(IO_MFS4.UART.FCR0.bit.FCL2)
#define	MFS4_UART_FCR0_FCL1    	(IO_MFS4.UART.FCR0.bit.FCL1)
#define	MFS4_UART_FCR0_FE2    	(IO_MFS4.UART.FCR0.bit.FE2)
#define	MFS4_UART_FCR0_FE1    	(IO_MFS4.UART.FCR0.bit.FE1)
#define	MFS4_UART_FBYTE 	(IO_MFS4.UART.FBYTE.hword)
#define	MFS4_UART_FBYTE2	(IO_MFS4.UART.FBYTE.byte.FBYTE2)
#define	MFS4_UART_FBYTE1	(IO_MFS4.UART.FBYTE.byte.FBYTE1)
#define	MFS4_UART_FTICR 	(IO_MFS4.UART.FTICR.hword)
#define	MFS4_UART_FTICR2	(IO_MFS4.UART.FTICR.byte.FTICR2)
#define	MFS4_UART_FTICR1	(IO_MFS4.UART.FTICR.byte.FTICR1)

#define	MFS4_CSIO_SCR			(IO_MFS4.CSIO.SCR.byte)
#define	MFS4_CSIO_SCR_UPCL    	(IO_MFS4.CSIO.SCR.bit.UPCL)
#define	MFS4_CSIO_SCR_MS    	(IO_MFS4.CSIO.SCR.bit.MS)
#define	MFS4_CSIO_SCR_SPI    	(IO_MFS4.CSIO.SCR.bit.SPI)
#define	MFS4_CSIO_SCR_RIE    	(IO_MFS4.CSIO.SCR.bit.RIE)
#define	MFS4_CSIO_SCR_TIE    	(IO_MFS4.CSIO.SCR.bit.TIE)
#define	MFS4_CSIO_SCR_TBIE    	(IO_MFS4.CSIO.SCR.bit.TBIE)
#define	MFS4_CSIO_SCR_RXE    	(IO_MFS4.CSIO.SCR.bit.RXE)
#define	MFS4_CSIO_SCR_TXE    	(IO_MFS4.CSIO.SCR.bit.TXE)
#define	MFS4_CSIO_SMR			(IO_MFS4.CSIO.SMR.byte)
#define	MFS4_CSIO_SMR_MD    	(IO_MFS4.CSIO.SMR.bit.MD)
#define	MFS4_CSIO_SMR_SCINV    	(IO_MFS4.CSIO.SMR.bit.SCINV)
#define	MFS4_CSIO_SMR_BDS    	(IO_MFS4.CSIO.SMR.bit.BDS)
#define	MFS4_CSIO_SMR_SCKE    	(IO_MFS4.CSIO.SMR.bit.SCKE)
#define	MFS4_CSIO_SMR_SOE    	(IO_MFS4.CSIO.SMR.bit.SOE)
#define	MFS4_CSIO_SSR			(IO_MFS4.CSIO.SSR.byte)
#define	MFS4_CSIO_SSR_REC    	(IO_MFS4.CSIO.SSR.bit.REC)
#define	MFS4_CSIO_SSR_ES    	(IO_MFS4.CSIO.SSR.bit.ES)
#define	MFS4_CSIO_SSR_AWC    	(IO_MFS4.CSIO.SSR.bit.AWC)
#define	MFS4_CSIO_SSR_ORE    	(IO_MFS4.CSIO.SSR.bit.ORE)
#define	MFS4_CSIO_SSR_RDRF    	(IO_MFS4.CSIO.SSR.bit.RDRF)
#define	MFS4_CSIO_SSR_TDRE    	(IO_MFS4.CSIO.SSR.bit.TDRE)
#define	MFS4_CSIO_SSR_TBI    	(IO_MFS4.CSIO.SSR.bit.TBI)
#define	MFS4_CSIO_ESCR			(IO_MFS4.CSIO.ESCR.byte)
#define	MFS4_CSIO_ESCR_SOP    	(IO_MFS4.CSIO.ESCR.bit.SOP)
#define	MFS4_CSIO_ESCR_L3    	(IO_MFS4.CSIO.ESCR.bit.L3)
#define	MFS4_CSIO_ESCR_CSFE    	(IO_MFS4.CSIO.ESCR.bit.CSFE)
#define	MFS4_CSIO_ESCR_WT    	(IO_MFS4.CSIO.ESCR.bit.WT)
#define	MFS4_CSIO_ESCR_L    	(IO_MFS4.CSIO.ESCR.bit.L)
#define	MFS4_CSIO_RDR	(IO_MFS4.CSIO.RDR.word)
#define	MFS4_CSIO_RDR1	(IO_MFS4.CSIO.RDR.hword.RDR1)
#define	MFS4_CSIO_RDR0	(IO_MFS4.CSIO.RDR.hword.RDR0)
#define	MFS4_CSIO_TDR	(IO_MFS4.CSIO.RDR.word)
#define	MFS4_CSIO_TDR1	(IO_MFS4.CSIO.RDR.hword.RDR1)
#define	MFS4_CSIO_TDR0	(IO_MFS4.CSIO.RDR.hword.RDR0)
#define	MFS4_CSIO_SACSR			(IO_MFS4.CSIO.SACSR.hword)
#define	MFS4_CSIO_SACSR_STST    	(IO_MFS4.CSIO.SACSR.bit.STST)
#define	MFS4_CSIO_SACSR_TBEEN    	(IO_MFS4.CSIO.SACSR.bit.TBEEN)
#define	MFS4_CSIO_SACSR_CSEIE    	(IO_MFS4.CSIO.SACSR.bit.CSEIE)
#define	MFS4_CSIO_SACSR_CSE    	(IO_MFS4.CSIO.SACSR.bit.CSE)
#define	MFS4_CSIO_SACSR_TRG    	(IO_MFS4.CSIO.SACSR.bit.TRG)
#define	MFS4_CSIO_SACSR_TINT    	(IO_MFS4.CSIO.SACSR.bit.TINT)
#define	MFS4_CSIO_SACSR_TINTE    	(IO_MFS4.CSIO.SACSR.bit.TINTE)
#define	MFS4_CSIO_SACSR_TSYNE    	(IO_MFS4.CSIO.SACSR.bit.TSYNE)
#define	MFS4_CSIO_SACSR_TRGE    	(IO_MFS4.CSIO.SACSR.bit.TRGE)
#define	MFS4_CSIO_SACSR_TDIV    	(IO_MFS4.CSIO.SACSR.bit.TDIV)
#define	MFS4_CSIO_SACSR_TMRE    	(IO_MFS4.CSIO.SACSR.bit.TMRE)
#define	MFS4_CSIO_STMR	(IO_MFS4.CSIO.STMR)
#define	MFS4_CSIO_STMCR	(IO_MFS4.CSIO.STMCR)
#define	MFS4_CSIO_SCSCR			(IO_MFS4.CSIO.SCSCR.hword)
#define	MFS4_CSIO_SCSCR_SST    	(IO_MFS4.CSIO.SCSCR.bit.SST)
#define	MFS4_CSIO_SCSCR_SED    	(IO_MFS4.CSIO.SCSCR.bit.SED)
#define	MFS4_CSIO_SCSCR_SCD    	(IO_MFS4.CSIO.SCSCR.bit.SCD)
#define	MFS4_CSIO_SCSCR_SCAM    	(IO_MFS4.CSIO.SCSCR.bit.SCAM)
#define	MFS4_CSIO_SCSCR_CDIV    	(IO_MFS4.CSIO.SCSCR.bit.CDIV)
#define	MFS4_CSIO_SCSCR_CSLVL    	(IO_MFS4.CSIO.SCSCR.bit.CSLVL)
#define	MFS4_CSIO_SCSCR_CSEN3    	(IO_MFS4.CSIO.SCSCR.bit.CSEN3)
#define	MFS4_CSIO_SCSCR_CSEN2    	(IO_MFS4.CSIO.SCSCR.bit.CSEN2)
#define	MFS4_CSIO_SCSCR_CSEN1    	(IO_MFS4.CSIO.SCSCR.bit.CSEN1)
#define	MFS4_CSIO_SCSCR_CSEN0    	(IO_MFS4.CSIO.SCSCR.bit.CSEN0)
#define	MFS4_CSIO_SCSCR_CSOE    	(IO_MFS4.CSIO.SCSCR.bit.CSOE)
#define	MFS4_CSIO_SCSTR	(IO_MFS4.CSIO.SCSTR.word)
#define	MFS4_CSIO_SCSTR32	(IO_MFS4.CSIO.SCSTR.hword.SCSTR32)
#define	MFS4_CSIO_SCSTR3	(IO_MFS4.CSIO.SCSTR.byte.SCSTR3)
#define	MFS4_CSIO_SCSTR2	(IO_MFS4.CSIO.SCSTR.byte.SCSTR2)
#define	MFS4_CSIO_SCSTR10	(IO_MFS4.CSIO.SCSTR.hword.SCSTR10)
#define	MFS4_CSIO_SCSTR1	(IO_MFS4.CSIO.SCSTR.byte.SCSTR1)
#define	MFS4_CSIO_SCSTR0	(IO_MFS4.CSIO.SCSTR.byte.SCSTR0)
#define	MFS4_CSIO_SCSFR2			(IO_MFS4.CSIO.SCSFR2.byte)
#define	MFS4_CSIO_SCSFR2_CSLVL    	(IO_MFS4.CSIO.SCSFR2.bit.CSLVL)
#define	MFS4_CSIO_SCSFR2_SCINV    	(IO_MFS4.CSIO.SCSFR2.bit.SCINV)
#define	MFS4_CSIO_SCSFR2_SPI    	(IO_MFS4.CSIO.SCSFR2.bit.SPI)
#define	MFS4_CSIO_SCSFR2_BDS    	(IO_MFS4.CSIO.SCSFR2.bit.BDS)
#define	MFS4_CSIO_SCSFR2_L    	(IO_MFS4.CSIO.SCSFR2.bit.L)
#define	MFS4_CSIO_SCSFR1			(IO_MFS4.CSIO.SCSFR1.byte)
#define	MFS4_CSIO_SCSFR1_CSLVL    	(IO_MFS4.CSIO.SCSFR1.bit.CSLVL)
#define	MFS4_CSIO_SCSFR1_SCINV    	(IO_MFS4.CSIO.SCSFR1.bit.SCINV)
#define	MFS4_CSIO_SCSFR1_SPI    	(IO_MFS4.CSIO.SCSFR1.bit.SPI)
#define	MFS4_CSIO_SCSFR1_BDS    	(IO_MFS4.CSIO.SCSFR1.bit.BDS)
#define	MFS4_CSIO_SCSFR1_L    	(IO_MFS4.CSIO.SCSFR1.bit.L)
#define	MFS4_CSIO_SCSFR0			(IO_MFS4.CSIO.SCSFR0.byte)
#define	MFS4_CSIO_SCSFR0_CSLVL    	(IO_MFS4.CSIO.SCSFR0.bit.CSLVL)
#define	MFS4_CSIO_SCSFR0_SCINV    	(IO_MFS4.CSIO.SCSFR0.bit.SCINV)
#define	MFS4_CSIO_SCSFR0_SPI    	(IO_MFS4.CSIO.SCSFR0.bit.SPI)
#define	MFS4_CSIO_SCSFR0_BDS    	(IO_MFS4.CSIO.SCSFR0.bit.BDS)
#define	MFS4_CSIO_SCSFR0_L    	(IO_MFS4.CSIO.SCSFR0.bit.L)
#define	MFS4_CSIO_TBYTE3	(IO_MFS4.CSIO.TBYTE3)
#define	MFS4_CSIO_TBYTE2	(IO_MFS4.CSIO.TBYTE2)
#define	MFS4_CSIO_TBYTE1	(IO_MFS4.CSIO.TBYTE1)
#define	MFS4_CSIO_TBYTE0	(IO_MFS4.CSIO.TBYTE0)
#define	MFS4_CSIO_BGR			(IO_MFS4.CSIO.BGR)
#define	MFS4_CSIO_FCR1			(IO_MFS4.CSIO.FCR1.byte)
#define	MFS4_CSIO_FCR1_FLSTE    	(IO_MFS4.CSIO.FCR1.bit.FLSTE)
#define	MFS4_CSIO_FCR1_FRIIE    	(IO_MFS4.CSIO.FCR1.bit.FRIIE)
#define	MFS4_CSIO_FCR1_FDRQ    	(IO_MFS4.CSIO.FCR1.bit.FDRQ)
#define	MFS4_CSIO_FCR1_FTIE    	(IO_MFS4.CSIO.FCR1.bit.FTIE)
#define	MFS4_CSIO_FCR1_FSEL    	(IO_MFS4.CSIO.FCR1.bit.FSEL)
#define	MFS4_CSIO_FCR0			(IO_MFS4.CSIO.FCR0.byte)
#define	MFS4_CSIO_FCR0_FLST    	(IO_MFS4.CSIO.FCR0.bit.FLST)
#define	MFS4_CSIO_FCR0_FLD    	(IO_MFS4.CSIO.FCR0.bit.FLD)
#define	MFS4_CSIO_FCR0_FSET    	(IO_MFS4.CSIO.FCR0.bit.FSET)
#define	MFS4_CSIO_FCR0_FCL2    	(IO_MFS4.CSIO.FCR0.bit.FCL2)
#define	MFS4_CSIO_FCR0_FCL1    	(IO_MFS4.CSIO.FCR0.bit.FCL1)
#define	MFS4_CSIO_FCR0_FE2    	(IO_MFS4.CSIO.FCR0.bit.FE2)
#define	MFS4_CSIO_FCR0_FE1    	(IO_MFS4.CSIO.FCR0.bit.FE1)
#define	MFS4_CSIO_FBYTE 	(IO_MFS4.CSIO.FBYTE.hword)
#define	MFS4_CSIO_FBYTE2	(IO_MFS4.CSIO.FBYTE.byte.FBYTE2)
#define	MFS4_CSIO_FBYTE1	(IO_MFS4.CSIO.FBYTE.byte.FBYTE1)
#define	MFS4_CSIO_FTICR 	(IO_MFS4.CSIO.FTICR.hword)
#define	MFS4_CSIO_FTICR2	(IO_MFS4.CSIO.FTICR.byte.FTICR2)
#define	MFS4_CSIO_FTICR1	(IO_MFS4.CSIO.FTICR.byte.FTICR1)

#define	MFS4_LINUART_SCR			(IO_MFS4.LINUART.SCR.byte)
#define	MFS4_LINUART_SCR_UPCL    	(IO_MFS4.LINUART.SCR.bit.UPCL)
#define	MFS4_LINUART_SCR_MS    	(IO_MFS4.LINUART.SCR.bit.MS)
#define	MFS4_LINUART_SCR_LBR    	(IO_MFS4.LINUART.SCR.bit.LBR)
#define	MFS4_LINUART_SCR_RIE    	(IO_MFS4.LINUART.SCR.bit.RIE)
#define	MFS4_LINUART_SCR_TIE    	(IO_MFS4.LINUART.SCR.bit.TIE)
#define	MFS4_LINUART_SCR_TBIE    	(IO_MFS4.LINUART.SCR.bit.TBIE)
#define	MFS4_LINUART_SCR_RXE    	(IO_MFS4.LINUART.SCR.bit.RXE)
#define	MFS4_LINUART_SCR_TXE    	(IO_MFS4.LINUART.SCR.bit.TXE)
#define	MFS4_LINUART_SMR			(IO_MFS4.LINUART.SMR.byte)
#define	MFS4_LINUART_SMR_MD    	(IO_MFS4.LINUART.SMR.bit.MD)
#define	MFS4_LINUART_SMR_SBL    	(IO_MFS4.LINUART.SMR.bit.SBL)
#define	MFS4_LINUART_SMR_SOE    	(IO_MFS4.LINUART.SMR.bit.SOE)
#define	MFS4_LINUART_SSR			(IO_MFS4.LINUART.SSR.byte)
#define	MFS4_LINUART_SSR_REC    	(IO_MFS4.LINUART.SSR.bit.REC)
#define	MFS4_LINUART_SSR_LBD    	(IO_MFS4.LINUART.SSR.bit.LBD)
#define	MFS4_LINUART_SSR_FRE    	(IO_MFS4.LINUART.SSR.bit.FRE)
#define	MFS4_LINUART_SSR_ORE    	(IO_MFS4.LINUART.SSR.bit.ORE)
#define	MFS4_LINUART_SSR_RDRF    	(IO_MFS4.LINUART.SSR.bit.RDRF)
#define	MFS4_LINUART_SSR_TDRE    	(IO_MFS4.LINUART.SSR.bit.TDRE)
#define	MFS4_LINUART_SSR_TBI    	(IO_MFS4.LINUART.SSR.bit.TBI)
#define	MFS4_LINUART_ESCR			(IO_MFS4.LINUART.ESCR.byte)
#define	MFS4_LINUART_ESCR_ESBL    	(IO_MFS4.LINUART.ESCR.bit.ESBL)
#define	MFS4_LINUART_ESCR_LBIE    	(IO_MFS4.LINUART.ESCR.bit.LBIE)
#define	MFS4_LINUART_ESCR_LBL    	(IO_MFS4.LINUART.ESCR.bit.LBL)
#define	MFS4_LINUART_ESCR_DEL    	(IO_MFS4.LINUART.ESCR.bit.DEL)
#define	MFS4_LINUART_RDR0	(IO_MFS4.LINUART.RDR0)
#define	MFS4_LINUART_TDR0	(IO_MFS4.LINUART.RDR0)
#define	MFS4_LINUART_SACSR			(IO_MFS4.LINUART.SACSR.hword)
#define	MFS4_LINUART_SACSR_STST    	(IO_MFS4.LINUART.SACSR.bit.STST)
#define	MFS4_LINUART_SACSR_BST    	(IO_MFS4.LINUART.SACSR.bit.BST)
#define	MFS4_LINUART_SACSR_SFD    	(IO_MFS4.LINUART.SACSR.bit.SFD)
#define	MFS4_LINUART_SACSR_SFDE    	(IO_MFS4.LINUART.SACSR.bit.SFDE)
#define	MFS4_LINUART_SACSR_AUTE    	(IO_MFS4.LINUART.SACSR.bit.AUTE)
#define	MFS4_LINUART_SACSR_TRG    	(IO_MFS4.LINUART.SACSR.bit.TRG)
#define	MFS4_LINUART_SACSR_TINT    	(IO_MFS4.LINUART.SACSR.bit.TINT)
#define	MFS4_LINUART_SACSR_TINTE    	(IO_MFS4.LINUART.SACSR.bit.TINTE)
#define	MFS4_LINUART_SACSR_TSYNE    	(IO_MFS4.LINUART.SACSR.bit.TSYNE)
#define	MFS4_LINUART_SACSR_TRGE    	(IO_MFS4.LINUART.SACSR.bit.TRGE)
#define	MFS4_LINUART_SACSR_TDIV    	(IO_MFS4.LINUART.SACSR.bit.TDIV)
#define	MFS4_LINUART_SACSR_TMRE    	(IO_MFS4.LINUART.SACSR.bit.TMRE)
#define	MFS4_LINUART_STMR	(IO_MFS4.LINUART.STMR)
#define	MFS4_LINUART_STMCR	(IO_MFS4.LINUART.STMCR)
#define	MFS4_LINUART_SFUR	(IO_MFS4.LINUART.SFUR)
#define	MFS4_LINUART_LAMSR			(IO_MFS4.LINUART.LAMSR.byte)
#define	MFS4_LINUART_LAMSR_LER    	(IO_MFS4.LINUART.LAMSR.bit.LER)
#define	MFS4_LINUART_LAMSR_SER    	(IO_MFS4.LINUART.LAMSR.bit.SER)
#define	MFS4_LINUART_LAMSR_RDRF    	(IO_MFS4.LINUART.LAMSR.bit.RDRF)
#define	MFS4_LINUART_LAMSR_TDRE    	(IO_MFS4.LINUART.LAMSR.bit.TDRE)
#define	MFS4_LINUART_LAMSR_TBI    	(IO_MFS4.LINUART.LAMSR.bit.TBI)
#define	MFS4_LINUART_LAMSR_LCSC    	(IO_MFS4.LINUART.LAMSR.bit.LCSC)
#define	MFS4_LINUART_LAMSR_LAHC    	(IO_MFS4.LINUART.LAMSR.bit.LAHC)
#define	MFS4_LINUART_LAMCR			(IO_MFS4.LINUART.LAMCR.byte)
#define	MFS4_LINUART_LAMCR_LDL    	(IO_MFS4.LINUART.LAMCR.bit.LDL)
#define	MFS4_LINUART_LAMCR_LTDRCL    	(IO_MFS4.LINUART.LAMCR.bit.LTDRCL)
#define	MFS4_LINUART_LAMCR_LCSTYP    	(IO_MFS4.LINUART.LAMCR.bit.LCSTYP)
#define	MFS4_LINUART_LAMCR_LIDEN    	(IO_MFS4.LINUART.LAMCR.bit.LIDEN)
#define	MFS4_LINUART_LAMCR_LAMEN    	(IO_MFS4.LINUART.LAMCR.bit.LAMEN)
#define	MFS4_LINUART_SFLR	(IO_MFS4.LINUART.SFLR.hword)
#define	MFS4_LINUART_SFLR1	(IO_MFS4.LINUART.SFLR.byte.SFLR1)
#define	MFS4_LINUART_SFLR0	(IO_MFS4.LINUART.SFLR.byte.SFLR0)
#define	MFS4_LINUART_LAMESR			(IO_MFS4.LINUART.LAMESR.byte)
#define	MFS4_LINUART_LAMESR_LCSER    	(IO_MFS4.LINUART.LAMESR.bit.LCSER)
#define	MFS4_LINUART_LAMESR_LPTER    	(IO_MFS4.LINUART.LAMESR.bit.LPTER)
#define	MFS4_LINUART_LAMESR_LSFER    	(IO_MFS4.LINUART.LAMESR.bit.LSFER)
#define	MFS4_LINUART_LAMESR_LBSER    	(IO_MFS4.LINUART.LAMESR.bit.LBSER)
#define	MFS4_LINUART_LAMERT			(IO_MFS4.LINUART.LAMERT.byte)
#define	MFS4_LINUART_LAMERT_KEY    	(IO_MFS4.LINUART.LAMERT.bit.KEY)
#define	MFS4_LINUART_LAMERT_LCSERT    	(IO_MFS4.LINUART.LAMERT.bit.LCSERT)
#define	MFS4_LINUART_LAMERT_LPTERT    	(IO_MFS4.LINUART.LAMERT.bit.LPTERT)
#define	MFS4_LINUART_LAMERT_LSFERT    	(IO_MFS4.LINUART.LAMERT.bit.LSFERT)
#define	MFS4_LINUART_LAMERT_LBSERT    	(IO_MFS4.LINUART.LAMERT.bit.LBSERT)
#define	MFS4_LINUART_LAMERT_FRET    	(IO_MFS4.LINUART.LAMERT.bit.FRET)
#define	MFS4_LINUART_LAMIER			(IO_MFS4.LINUART.LAMIER.byte)
#define	MFS4_LINUART_LAMIER_LCSERIE    	(IO_MFS4.LINUART.LAMIER.bit.LCSERIE)
#define	MFS4_LINUART_LAMIER_LPTERIE    	(IO_MFS4.LINUART.LAMIER.bit.LPTERIE)
#define	MFS4_LINUART_LAMIER_LSFERIE    	(IO_MFS4.LINUART.LAMIER.bit.LSFERIE)
#define	MFS4_LINUART_LAMIER_LBSERIE    	(IO_MFS4.LINUART.LAMIER.bit.LBSERIE)
#define	MFS4_LINUART_LAMIER_LCSCIE    	(IO_MFS4.LINUART.LAMIER.bit.LCSCIE)
#define	MFS4_LINUART_LAMIER_LAHCIE    	(IO_MFS4.LINUART.LAMIER.bit.LAHCIE)
#define	MFS4_LINUART_LAMID			(IO_MFS4.LINUART.LAMID.byte)
#define	MFS4_LINUART_LAMID_P    	(IO_MFS4.LINUART.LAMID.bit.P)
#define	MFS4_LINUART_LAMID_LID    	(IO_MFS4.LINUART.LAMID.bit.LID)
#define	MFS4_LINUART_BGR			(IO_MFS4.LINUART.BGR)
#define	MFS4_LINUART_FCR1			(IO_MFS4.LINUART.FCR1.byte)
#define	MFS4_LINUART_FCR1_FLSTE    	(IO_MFS4.LINUART.FCR1.bit.FLSTE)
#define	MFS4_LINUART_FCR1_FRIIE    	(IO_MFS4.LINUART.FCR1.bit.FRIIE)
#define	MFS4_LINUART_FCR1_FDRQ    	(IO_MFS4.LINUART.FCR1.bit.FDRQ)
#define	MFS4_LINUART_FCR1_FTIE    	(IO_MFS4.LINUART.FCR1.bit.FTIE)
#define	MFS4_LINUART_FCR1_FSEL    	(IO_MFS4.LINUART.FCR1.bit.FSEL)
#define	MFS4_LINUART_FCR0			(IO_MFS4.LINUART.FCR0.byte)
#define	MFS4_LINUART_FCR0_FLST    	(IO_MFS4.LINUART.FCR0.bit.FLST)
#define	MFS4_LINUART_FCR0_FLD    	(IO_MFS4.LINUART.FCR0.bit.FLD)
#define	MFS4_LINUART_FCR0_FSET    	(IO_MFS4.LINUART.FCR0.bit.FSET)
#define	MFS4_LINUART_FCR0_FCL2    	(IO_MFS4.LINUART.FCR0.bit.FCL2)
#define	MFS4_LINUART_FCR0_FCL1    	(IO_MFS4.LINUART.FCR0.bit.FCL1)
#define	MFS4_LINUART_FCR0_FE2    	(IO_MFS4.LINUART.FCR0.bit.FE2)
#define	MFS4_LINUART_FCR0_FE1    	(IO_MFS4.LINUART.FCR0.bit.FE1)
#define	MFS4_LINUART_FBYTE 	(IO_MFS4.LINUART.FBYTE.hword)
#define	MFS4_LINUART_FBYTE2	(IO_MFS4.LINUART.FBYTE.byte.FBYTE2)
#define	MFS4_LINUART_FBYTE1	(IO_MFS4.LINUART.FBYTE.byte.FBYTE1)
#define	MFS4_LINUART_FTICR 	(IO_MFS4.LINUART.FTICR.hword)
#define	MFS4_LINUART_FTICR2	(IO_MFS4.LINUART.FTICR.byte.FTICR2)
#define	MFS4_LINUART_FTICR1	(IO_MFS4.LINUART.FTICR.byte.FTICR1)

#define	MFS4_I2C_IBCR			(IO_MFS4.I2C.IBCR.byte)
#define	MFS4_I2C_IBCR_MSS    	(IO_MFS4.I2C.IBCR.bit.MSS)
#define	MFS4_I2C_IBCR_ACT_SCC    	(IO_MFS4.I2C.IBCR.bit.ACT_SCC)
#define	MFS4_I2C_IBCR_ACKE    	(IO_MFS4.I2C.IBCR.bit.ACKE)
#define	MFS4_I2C_IBCR_WSEL    	(IO_MFS4.I2C.IBCR.bit.WSEL)
#define	MFS4_I2C_IBCR_CNDE    	(IO_MFS4.I2C.IBCR.bit.CNDE)
#define	MFS4_I2C_IBCR_INTE    	(IO_MFS4.I2C.IBCR.bit.INTE)
#define	MFS4_I2C_IBCR_BER    	(IO_MFS4.I2C.IBCR.bit.BER)
#define	MFS4_I2C_IBCR_INT    	(IO_MFS4.I2C.IBCR.bit.INT)
#define	MFS4_I2C_SMR			(IO_MFS4.I2C.SMR.byte)
#define	MFS4_I2C_SMR_MD    	(IO_MFS4.I2C.SMR.bit.MD)
#define	MFS4_I2C_SMR_RIE    	(IO_MFS4.I2C.SMR.bit.RIE)
#define	MFS4_I2C_SMR_TIE    	(IO_MFS4.I2C.SMR.bit.TIE)
#define	MFS4_I2C_SSR			(IO_MFS4.I2C.SSR.byte)
#define	MFS4_I2C_SSR_REC    	(IO_MFS4.I2C.SSR.bit.REC)
#define	MFS4_I2C_SSR_TSET    	(IO_MFS4.I2C.SSR.bit.TSET)
#define	MFS4_I2C_SSR_DMA    	(IO_MFS4.I2C.SSR.bit.DMA)
#define	MFS4_I2C_SSR_TBIE    	(IO_MFS4.I2C.SSR.bit.TBIE)
#define	MFS4_I2C_SSR_ORE    	(IO_MFS4.I2C.SSR.bit.ORE)
#define	MFS4_I2C_SSR_RDRF    	(IO_MFS4.I2C.SSR.bit.RDRF)
#define	MFS4_I2C_SSR_TDRE    	(IO_MFS4.I2C.SSR.bit.TDRE)
#define	MFS4_I2C_SSR_TBI    	(IO_MFS4.I2C.SSR.bit.TBI)
#define	MFS4_I2C_IBSR			(IO_MFS4.I2C.IBSR.byte)
#define	MFS4_I2C_IBSR_FBT    	(IO_MFS4.I2C.IBSR.bit.FBT)
#define	MFS4_I2C_IBSR_RACK    	(IO_MFS4.I2C.IBSR.bit.RACK)
#define	MFS4_I2C_IBSR_RSA    	(IO_MFS4.I2C.IBSR.bit.RSA)
#define	MFS4_I2C_IBSR_TRX    	(IO_MFS4.I2C.IBSR.bit.TRX)
#define	MFS4_I2C_IBSR_AL    	(IO_MFS4.I2C.IBSR.bit.AL)
#define	MFS4_I2C_IBSR_RSC    	(IO_MFS4.I2C.IBSR.bit.RSC)
#define	MFS4_I2C_IBSR_SPC    	(IO_MFS4.I2C.IBSR.bit.SPC)
#define	MFS4_I2C_IBSR_BB    	(IO_MFS4.I2C.IBSR.bit.BB)
#define	MFS4_I2C_RDR0	(IO_MFS4.I2C.RDR0)
#define	MFS4_I2C_TDR0	(IO_MFS4.I2C.RDR0)
#define	MFS4_I2C_SACSR			(IO_MFS4.I2C.SACSR.hword)
#define	MFS4_I2C_SACSR_TRG    	(IO_MFS4.I2C.SACSR.bit.TRG)
#define	MFS4_I2C_SACSR_TINT    	(IO_MFS4.I2C.SACSR.bit.TINT)
#define	MFS4_I2C_SACSR_TINTE    	(IO_MFS4.I2C.SACSR.bit.TINTE)
#define	MFS4_I2C_SACSR_TRGE    	(IO_MFS4.I2C.SACSR.bit.TRGE)
#define	MFS4_I2C_SACSR_TDIV    	(IO_MFS4.I2C.SACSR.bit.TDIV)
#define	MFS4_I2C_SACSR_TMRE    	(IO_MFS4.I2C.SACSR.bit.TMRE)
#define	MFS4_I2C_STMR	(IO_MFS4.I2C.STMR)
#define	MFS4_I2C_STMCR	(IO_MFS4.I2C.STMCR)
#define	MFS4_I2C_BGR	(IO_MFS4.I2C.BGR)
#define	MFS4_I2C_ISMK			(IO_MFS4.I2C.ISMK.byte)
#define	MFS4_I2C_ISMK_EN    	(IO_MFS4.I2C.ISMK.bit.EN)
#define	MFS4_I2C_ISMK_SM    	(IO_MFS4.I2C.ISMK.bit.SM)
#define	MFS4_I2C_ISBA			(IO_MFS4.I2C.ISBA.byte)
#define	MFS4_I2C_ISBA_SAEN    	(IO_MFS4.I2C.ISBA.bit.SAEN)
#define	MFS4_I2C_ISBA_SA    	(IO_MFS4.I2C.ISBA.bit.SA)
#define	MFS4_I2C_FCR1			(IO_MFS4.I2C.FCR1.byte)
#define	MFS4_I2C_FCR1_FLSTE    	(IO_MFS4.I2C.FCR1.bit.FLSTE)
#define	MFS4_I2C_FCR1_FRIIE    	(IO_MFS4.I2C.FCR1.bit.FRIIE)
#define	MFS4_I2C_FCR1_FDRQ    	(IO_MFS4.I2C.FCR1.bit.FDRQ)
#define	MFS4_I2C_FCR1_FTIE    	(IO_MFS4.I2C.FCR1.bit.FTIE)
#define	MFS4_I2C_FCR1_FSEL    	(IO_MFS4.I2C.FCR1.bit.FSEL)
#define	MFS4_I2C_FCR0			(IO_MFS4.I2C.FCR0.byte)
#define	MFS4_I2C_FCR0_FLST    	(IO_MFS4.I2C.FCR0.bit.FLST)
#define	MFS4_I2C_FCR0_FLD    	(IO_MFS4.I2C.FCR0.bit.FLD)
#define	MFS4_I2C_FCR0_FSET    	(IO_MFS4.I2C.FCR0.bit.FSET)
#define	MFS4_I2C_FCR0_FCL2    	(IO_MFS4.I2C.FCR0.bit.FCL2)
#define	MFS4_I2C_FCR0_FCL1    	(IO_MFS4.I2C.FCR0.bit.FCL1)
#define	MFS4_I2C_FCR0_FE2    	(IO_MFS4.I2C.FCR0.bit.FE2)
#define	MFS4_I2C_FCR0_FE1    	(IO_MFS4.I2C.FCR0.bit.FE1)
#define	MFS4_I2C_FBYTE 	(IO_MFS4.I2C.FBYTE.hword)
#define	MFS4_I2C_FBYTE2	(IO_MFS4.I2C.FBYTE.byte.FBYTE2)
#define	MFS4_I2C_FBYTE1	(IO_MFS4.I2C.FBYTE.byte.FBYTE1)
#define	MFS4_I2C_FTICR 	(IO_MFS4.I2C.FTICR.hword)
#define	MFS4_I2C_FTICR2	(IO_MFS4.I2C.FTICR.byte.FTICR2)
#define	MFS4_I2C_FTICR1	(IO_MFS4.I2C.FTICR.byte.FTICR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MFS5,attr=IO,locate=0x1818
#endif

__IO_EXTENDED	MFSSTR	IO_MFS5;

#define	MFS5_UART_SCR			(IO_MFS5.UART.SCR.byte)
#define	MFS5_UART_SCR_UPCL    	(IO_MFS5.UART.SCR.bit.UPCL)
#define	MFS5_UART_SCR_RIE    	(IO_MFS5.UART.SCR.bit.RIE)
#define	MFS5_UART_SCR_TIE    	(IO_MFS5.UART.SCR.bit.TIE)
#define	MFS5_UART_SCR_TBIE    	(IO_MFS5.UART.SCR.bit.TBIE)
#define	MFS5_UART_SCR_RXE    	(IO_MFS5.UART.SCR.bit.RXE)
#define	MFS5_UART_SCR_TXE    	(IO_MFS5.UART.SCR.bit.TXE)
#define	MFS5_UART_SMR			(IO_MFS5.UART.SMR.byte)
#define	MFS5_UART_SMR_MD    	(IO_MFS5.UART.SMR.bit.MD)
#define	MFS5_UART_SMR_SBL    	(IO_MFS5.UART.SMR.bit.SBL)
#define	MFS5_UART_SMR_BDS    	(IO_MFS5.UART.SMR.bit.BDS)
#define	MFS5_UART_SMR_SOE    	(IO_MFS5.UART.SMR.bit.SOE)
#define	MFS5_UART_SSR			(IO_MFS5.UART.SSR.byte)
#define	MFS5_UART_SSR_REC    	(IO_MFS5.UART.SSR.bit.REC)
#define	MFS5_UART_SSR_PE    	(IO_MFS5.UART.SSR.bit.PE)
#define	MFS5_UART_SSR_FRE    	(IO_MFS5.UART.SSR.bit.FRE)
#define	MFS5_UART_SSR_ORE    	(IO_MFS5.UART.SSR.bit.ORE)
#define	MFS5_UART_SSR_RDRF    	(IO_MFS5.UART.SSR.bit.RDRF)
#define	MFS5_UART_SSR_TDRE    	(IO_MFS5.UART.SSR.bit.TDRE)
#define	MFS5_UART_SSR_TBI    	(IO_MFS5.UART.SSR.bit.TBI)
#define	MFS5_UART_ESCR			(IO_MFS5.UART.ESCR.byte)
#define	MFS5_UART_ESCR_FLWEN    	(IO_MFS5.UART.ESCR.bit.FLWEN)
#define	MFS5_UART_ESCR_ESBL    	(IO_MFS5.UART.ESCR.bit.ESBL)
#define	MFS5_UART_ESCR_INV    	(IO_MFS5.UART.ESCR.bit.INV)
#define	MFS5_UART_ESCR_PEN    	(IO_MFS5.UART.ESCR.bit.PEN)
#define	MFS5_UART_ESCR_P    	(IO_MFS5.UART.ESCR.bit.P)
#define	MFS5_UART_ESCR_L    	(IO_MFS5.UART.ESCR.bit.L)
#define	MFS5_UART_RDR0	(IO_MFS5.UART.RDR0.hword)
#define	MFS5_UART_RDR0_RDR0L	(IO_MFS5.UART.RDR0.byte.RDR0L)
#define	MFS5_UART_RDR0_bit9	(IO_MFS5.UART.RDR0.bit9.D)
#define	MFS5_UART_RDR0_bit7	(IO_MFS5.UART.RDR0.bit7.D)
#define	MFS5_UART_RDR0_bit6	(IO_MFS5.UART.RDR0.bit6.D)
#define	MFS5_UART_RDR0_bit5	(IO_MFS5.UART.RDR0.bit5.D)
#define	MFS5_UART_TDR0	(IO_MFS5.UART.RDR0.hword)
#define	MFS5_UART_TDR0_TDR0L	(IO_MFS5.UART.RDR0.byte.RDR0L)
#define	MFS5_UART_TDR0_bit9	(IO_MFS5.UART.RDR0.bit9.D)
#define	MFS5_UART_TDR0_bit7	(IO_MFS5.UART.RDR0.bit7.D)
#define	MFS5_UART_TDR0_bit6	(IO_MFS5.UART.RDR0.bit6.D)
#define	MFS5_UART_TDR0_bit5	(IO_MFS5.UART.RDR0.bit5.D)
#define	MFS5_UART_SACSR			(IO_MFS5.UART.SACSR.hword)
#define	MFS5_UART_SACSR_STST    	(IO_MFS5.UART.SACSR.bit.STST)
#define	MFS5_UART_SACSR_TRG    	(IO_MFS5.UART.SACSR.bit.TRG)
#define	MFS5_UART_SACSR_TINT    	(IO_MFS5.UART.SACSR.bit.TINT)
#define	MFS5_UART_SACSR_TINTE    	(IO_MFS5.UART.SACSR.bit.TINTE)
#define	MFS5_UART_SACSR_TSYNE    	(IO_MFS5.UART.SACSR.bit.TSYNE)
#define	MFS5_UART_SACSR_TRGE    	(IO_MFS5.UART.SACSR.bit.TRGE)
#define	MFS5_UART_SACSR_TDIV    	(IO_MFS5.UART.SACSR.bit.TDIV)
#define	MFS5_UART_SACSR_TMRE    	(IO_MFS5.UART.SACSR.bit.TMRE)
#define	MFS5_UART_STMR	(IO_MFS5.UART.STMR)
#define	MFS5_UART_STMCR	(IO_MFS5.UART.STMCR)
#define	MFS5_UART_TBYTE0	(IO_MFS5.UART.TBYTE0)
#define	MFS5_UART_BGR			(IO_MFS5.UART.BGR)
#define	MFS5_UART_FCR1			(IO_MFS5.UART.FCR1.byte)
#define	MFS5_UART_FCR1_FLSTE    	(IO_MFS5.UART.FCR1.bit.FLSTE)
#define	MFS5_UART_FCR1_FRIIE    	(IO_MFS5.UART.FCR1.bit.FRIIE)
#define	MFS5_UART_FCR1_FDRQ    	(IO_MFS5.UART.FCR1.bit.FDRQ)
#define	MFS5_UART_FCR1_FTIE    	(IO_MFS5.UART.FCR1.bit.FTIE)
#define	MFS5_UART_FCR1_FSEL    	(IO_MFS5.UART.FCR1.bit.FSEL)
#define	MFS5_UART_FCR0			(IO_MFS5.UART.FCR0.byte)
#define	MFS5_UART_FCR0_FLST    	(IO_MFS5.UART.FCR0.bit.FLST)
#define	MFS5_UART_FCR0_FLD    	(IO_MFS5.UART.FCR0.bit.FLD)
#define	MFS5_UART_FCR0_FSET    	(IO_MFS5.UART.FCR0.bit.FSET)
#define	MFS5_UART_FCR0_FCL2    	(IO_MFS5.UART.FCR0.bit.FCL2)
#define	MFS5_UART_FCR0_FCL1    	(IO_MFS5.UART.FCR0.bit.FCL1)
#define	MFS5_UART_FCR0_FE2    	(IO_MFS5.UART.FCR0.bit.FE2)
#define	MFS5_UART_FCR0_FE1    	(IO_MFS5.UART.FCR0.bit.FE1)
#define	MFS5_UART_FBYTE 	(IO_MFS5.UART.FBYTE.hword)
#define	MFS5_UART_FBYTE2	(IO_MFS5.UART.FBYTE.byte.FBYTE2)
#define	MFS5_UART_FBYTE1	(IO_MFS5.UART.FBYTE.byte.FBYTE1)
#define	MFS5_UART_FTICR 	(IO_MFS5.UART.FTICR.hword)
#define	MFS5_UART_FTICR2	(IO_MFS5.UART.FTICR.byte.FTICR2)
#define	MFS5_UART_FTICR1	(IO_MFS5.UART.FTICR.byte.FTICR1)

#define	MFS5_CSIO_SCR			(IO_MFS5.CSIO.SCR.byte)
#define	MFS5_CSIO_SCR_UPCL    	(IO_MFS5.CSIO.SCR.bit.UPCL)
#define	MFS5_CSIO_SCR_MS    	(IO_MFS5.CSIO.SCR.bit.MS)
#define	MFS5_CSIO_SCR_SPI    	(IO_MFS5.CSIO.SCR.bit.SPI)
#define	MFS5_CSIO_SCR_RIE    	(IO_MFS5.CSIO.SCR.bit.RIE)
#define	MFS5_CSIO_SCR_TIE    	(IO_MFS5.CSIO.SCR.bit.TIE)
#define	MFS5_CSIO_SCR_TBIE    	(IO_MFS5.CSIO.SCR.bit.TBIE)
#define	MFS5_CSIO_SCR_RXE    	(IO_MFS5.CSIO.SCR.bit.RXE)
#define	MFS5_CSIO_SCR_TXE    	(IO_MFS5.CSIO.SCR.bit.TXE)
#define	MFS5_CSIO_SMR			(IO_MFS5.CSIO.SMR.byte)
#define	MFS5_CSIO_SMR_MD    	(IO_MFS5.CSIO.SMR.bit.MD)
#define	MFS5_CSIO_SMR_SCINV    	(IO_MFS5.CSIO.SMR.bit.SCINV)
#define	MFS5_CSIO_SMR_BDS    	(IO_MFS5.CSIO.SMR.bit.BDS)
#define	MFS5_CSIO_SMR_SCKE    	(IO_MFS5.CSIO.SMR.bit.SCKE)
#define	MFS5_CSIO_SMR_SOE    	(IO_MFS5.CSIO.SMR.bit.SOE)
#define	MFS5_CSIO_SSR			(IO_MFS5.CSIO.SSR.byte)
#define	MFS5_CSIO_SSR_REC    	(IO_MFS5.CSIO.SSR.bit.REC)
#define	MFS5_CSIO_SSR_ES    	(IO_MFS5.CSIO.SSR.bit.ES)
#define	MFS5_CSIO_SSR_AWC    	(IO_MFS5.CSIO.SSR.bit.AWC)
#define	MFS5_CSIO_SSR_ORE    	(IO_MFS5.CSIO.SSR.bit.ORE)
#define	MFS5_CSIO_SSR_RDRF    	(IO_MFS5.CSIO.SSR.bit.RDRF)
#define	MFS5_CSIO_SSR_TDRE    	(IO_MFS5.CSIO.SSR.bit.TDRE)
#define	MFS5_CSIO_SSR_TBI    	(IO_MFS5.CSIO.SSR.bit.TBI)
#define	MFS5_CSIO_ESCR			(IO_MFS5.CSIO.ESCR.byte)
#define	MFS5_CSIO_ESCR_SOP    	(IO_MFS5.CSIO.ESCR.bit.SOP)
#define	MFS5_CSIO_ESCR_L3    	(IO_MFS5.CSIO.ESCR.bit.L3)
#define	MFS5_CSIO_ESCR_CSFE    	(IO_MFS5.CSIO.ESCR.bit.CSFE)
#define	MFS5_CSIO_ESCR_WT    	(IO_MFS5.CSIO.ESCR.bit.WT)
#define	MFS5_CSIO_ESCR_L    	(IO_MFS5.CSIO.ESCR.bit.L)
#define	MFS5_CSIO_RDR	(IO_MFS5.CSIO.RDR.word)
#define	MFS5_CSIO_RDR1	(IO_MFS5.CSIO.RDR.hword.RDR1)
#define	MFS5_CSIO_RDR0	(IO_MFS5.CSIO.RDR.hword.RDR0)
#define	MFS5_CSIO_TDR	(IO_MFS5.CSIO.RDR.word)
#define	MFS5_CSIO_TDR1	(IO_MFS5.CSIO.RDR.hword.RDR1)
#define	MFS5_CSIO_TDR0	(IO_MFS5.CSIO.RDR.hword.RDR0)
#define	MFS5_CSIO_SACSR			(IO_MFS5.CSIO.SACSR.hword)
#define	MFS5_CSIO_SACSR_STST    	(IO_MFS5.CSIO.SACSR.bit.STST)
#define	MFS5_CSIO_SACSR_TBEEN    	(IO_MFS5.CSIO.SACSR.bit.TBEEN)
#define	MFS5_CSIO_SACSR_CSEIE    	(IO_MFS5.CSIO.SACSR.bit.CSEIE)
#define	MFS5_CSIO_SACSR_CSE    	(IO_MFS5.CSIO.SACSR.bit.CSE)
#define	MFS5_CSIO_SACSR_TRG    	(IO_MFS5.CSIO.SACSR.bit.TRG)
#define	MFS5_CSIO_SACSR_TINT    	(IO_MFS5.CSIO.SACSR.bit.TINT)
#define	MFS5_CSIO_SACSR_TINTE    	(IO_MFS5.CSIO.SACSR.bit.TINTE)
#define	MFS5_CSIO_SACSR_TSYNE    	(IO_MFS5.CSIO.SACSR.bit.TSYNE)
#define	MFS5_CSIO_SACSR_TRGE    	(IO_MFS5.CSIO.SACSR.bit.TRGE)
#define	MFS5_CSIO_SACSR_TDIV    	(IO_MFS5.CSIO.SACSR.bit.TDIV)
#define	MFS5_CSIO_SACSR_TMRE    	(IO_MFS5.CSIO.SACSR.bit.TMRE)
#define	MFS5_CSIO_STMR	(IO_MFS5.CSIO.STMR)
#define	MFS5_CSIO_STMCR	(IO_MFS5.CSIO.STMCR)
#define	MFS5_CSIO_SCSCR			(IO_MFS5.CSIO.SCSCR.hword)
#define	MFS5_CSIO_SCSCR_SST    	(IO_MFS5.CSIO.SCSCR.bit.SST)
#define	MFS5_CSIO_SCSCR_SED    	(IO_MFS5.CSIO.SCSCR.bit.SED)
#define	MFS5_CSIO_SCSCR_SCD    	(IO_MFS5.CSIO.SCSCR.bit.SCD)
#define	MFS5_CSIO_SCSCR_SCAM    	(IO_MFS5.CSIO.SCSCR.bit.SCAM)
#define	MFS5_CSIO_SCSCR_CDIV    	(IO_MFS5.CSIO.SCSCR.bit.CDIV)
#define	MFS5_CSIO_SCSCR_CSLVL    	(IO_MFS5.CSIO.SCSCR.bit.CSLVL)
#define	MFS5_CSIO_SCSCR_CSEN3    	(IO_MFS5.CSIO.SCSCR.bit.CSEN3)
#define	MFS5_CSIO_SCSCR_CSEN2    	(IO_MFS5.CSIO.SCSCR.bit.CSEN2)
#define	MFS5_CSIO_SCSCR_CSEN1    	(IO_MFS5.CSIO.SCSCR.bit.CSEN1)
#define	MFS5_CSIO_SCSCR_CSEN0    	(IO_MFS5.CSIO.SCSCR.bit.CSEN0)
#define	MFS5_CSIO_SCSCR_CSOE    	(IO_MFS5.CSIO.SCSCR.bit.CSOE)
#define	MFS5_CSIO_SCSTR	(IO_MFS5.CSIO.SCSTR.word)
#define	MFS5_CSIO_SCSTR32	(IO_MFS5.CSIO.SCSTR.hword.SCSTR32)
#define	MFS5_CSIO_SCSTR3	(IO_MFS5.CSIO.SCSTR.byte.SCSTR3)
#define	MFS5_CSIO_SCSTR2	(IO_MFS5.CSIO.SCSTR.byte.SCSTR2)
#define	MFS5_CSIO_SCSTR10	(IO_MFS5.CSIO.SCSTR.hword.SCSTR10)
#define	MFS5_CSIO_SCSTR1	(IO_MFS5.CSIO.SCSTR.byte.SCSTR1)
#define	MFS5_CSIO_SCSTR0	(IO_MFS5.CSIO.SCSTR.byte.SCSTR0)
#define	MFS5_CSIO_SCSFR2			(IO_MFS5.CSIO.SCSFR2.byte)
#define	MFS5_CSIO_SCSFR2_CSLVL    	(IO_MFS5.CSIO.SCSFR2.bit.CSLVL)
#define	MFS5_CSIO_SCSFR2_SCINV    	(IO_MFS5.CSIO.SCSFR2.bit.SCINV)
#define	MFS5_CSIO_SCSFR2_SPI    	(IO_MFS5.CSIO.SCSFR2.bit.SPI)
#define	MFS5_CSIO_SCSFR2_BDS    	(IO_MFS5.CSIO.SCSFR2.bit.BDS)
#define	MFS5_CSIO_SCSFR2_L    	(IO_MFS5.CSIO.SCSFR2.bit.L)
#define	MFS5_CSIO_SCSFR1			(IO_MFS5.CSIO.SCSFR1.byte)
#define	MFS5_CSIO_SCSFR1_CSLVL    	(IO_MFS5.CSIO.SCSFR1.bit.CSLVL)
#define	MFS5_CSIO_SCSFR1_SCINV    	(IO_MFS5.CSIO.SCSFR1.bit.SCINV)
#define	MFS5_CSIO_SCSFR1_SPI    	(IO_MFS5.CSIO.SCSFR1.bit.SPI)
#define	MFS5_CSIO_SCSFR1_BDS    	(IO_MFS5.CSIO.SCSFR1.bit.BDS)
#define	MFS5_CSIO_SCSFR1_L    	(IO_MFS5.CSIO.SCSFR1.bit.L)
#define	MFS5_CSIO_SCSFR0			(IO_MFS5.CSIO.SCSFR0.byte)
#define	MFS5_CSIO_SCSFR0_CSLVL    	(IO_MFS5.CSIO.SCSFR0.bit.CSLVL)
#define	MFS5_CSIO_SCSFR0_SCINV    	(IO_MFS5.CSIO.SCSFR0.bit.SCINV)
#define	MFS5_CSIO_SCSFR0_SPI    	(IO_MFS5.CSIO.SCSFR0.bit.SPI)
#define	MFS5_CSIO_SCSFR0_BDS    	(IO_MFS5.CSIO.SCSFR0.bit.BDS)
#define	MFS5_CSIO_SCSFR0_L    	(IO_MFS5.CSIO.SCSFR0.bit.L)
#define	MFS5_CSIO_TBYTE3	(IO_MFS5.CSIO.TBYTE3)
#define	MFS5_CSIO_TBYTE2	(IO_MFS5.CSIO.TBYTE2)
#define	MFS5_CSIO_TBYTE1	(IO_MFS5.CSIO.TBYTE1)
#define	MFS5_CSIO_TBYTE0	(IO_MFS5.CSIO.TBYTE0)
#define	MFS5_CSIO_BGR			(IO_MFS5.CSIO.BGR)
#define	MFS5_CSIO_FCR1			(IO_MFS5.CSIO.FCR1.byte)
#define	MFS5_CSIO_FCR1_FLSTE    	(IO_MFS5.CSIO.FCR1.bit.FLSTE)
#define	MFS5_CSIO_FCR1_FRIIE    	(IO_MFS5.CSIO.FCR1.bit.FRIIE)
#define	MFS5_CSIO_FCR1_FDRQ    	(IO_MFS5.CSIO.FCR1.bit.FDRQ)
#define	MFS5_CSIO_FCR1_FTIE    	(IO_MFS5.CSIO.FCR1.bit.FTIE)
#define	MFS5_CSIO_FCR1_FSEL    	(IO_MFS5.CSIO.FCR1.bit.FSEL)
#define	MFS5_CSIO_FCR0			(IO_MFS5.CSIO.FCR0.byte)
#define	MFS5_CSIO_FCR0_FLST    	(IO_MFS5.CSIO.FCR0.bit.FLST)
#define	MFS5_CSIO_FCR0_FLD    	(IO_MFS5.CSIO.FCR0.bit.FLD)
#define	MFS5_CSIO_FCR0_FSET    	(IO_MFS5.CSIO.FCR0.bit.FSET)
#define	MFS5_CSIO_FCR0_FCL2    	(IO_MFS5.CSIO.FCR0.bit.FCL2)
#define	MFS5_CSIO_FCR0_FCL1    	(IO_MFS5.CSIO.FCR0.bit.FCL1)
#define	MFS5_CSIO_FCR0_FE2    	(IO_MFS5.CSIO.FCR0.bit.FE2)
#define	MFS5_CSIO_FCR0_FE1    	(IO_MFS5.CSIO.FCR0.bit.FE1)
#define	MFS5_CSIO_FBYTE 	(IO_MFS5.CSIO.FBYTE.hword)
#define	MFS5_CSIO_FBYTE2	(IO_MFS5.CSIO.FBYTE.byte.FBYTE2)
#define	MFS5_CSIO_FBYTE1	(IO_MFS5.CSIO.FBYTE.byte.FBYTE1)
#define	MFS5_CSIO_FTICR 	(IO_MFS5.CSIO.FTICR.hword)
#define	MFS5_CSIO_FTICR2	(IO_MFS5.CSIO.FTICR.byte.FTICR2)
#define	MFS5_CSIO_FTICR1	(IO_MFS5.CSIO.FTICR.byte.FTICR1)

#define	MFS5_LINUART_SCR			(IO_MFS5.LINUART.SCR.byte)
#define	MFS5_LINUART_SCR_UPCL    	(IO_MFS5.LINUART.SCR.bit.UPCL)
#define	MFS5_LINUART_SCR_MS    	(IO_MFS5.LINUART.SCR.bit.MS)
#define	MFS5_LINUART_SCR_LBR    	(IO_MFS5.LINUART.SCR.bit.LBR)
#define	MFS5_LINUART_SCR_RIE    	(IO_MFS5.LINUART.SCR.bit.RIE)
#define	MFS5_LINUART_SCR_TIE    	(IO_MFS5.LINUART.SCR.bit.TIE)
#define	MFS5_LINUART_SCR_TBIE    	(IO_MFS5.LINUART.SCR.bit.TBIE)
#define	MFS5_LINUART_SCR_RXE    	(IO_MFS5.LINUART.SCR.bit.RXE)
#define	MFS5_LINUART_SCR_TXE    	(IO_MFS5.LINUART.SCR.bit.TXE)
#define	MFS5_LINUART_SMR			(IO_MFS5.LINUART.SMR.byte)
#define	MFS5_LINUART_SMR_MD    	(IO_MFS5.LINUART.SMR.bit.MD)
#define	MFS5_LINUART_SMR_SBL    	(IO_MFS5.LINUART.SMR.bit.SBL)
#define	MFS5_LINUART_SMR_SOE    	(IO_MFS5.LINUART.SMR.bit.SOE)
#define	MFS5_LINUART_SSR			(IO_MFS5.LINUART.SSR.byte)
#define	MFS5_LINUART_SSR_REC    	(IO_MFS5.LINUART.SSR.bit.REC)
#define	MFS5_LINUART_SSR_LBD    	(IO_MFS5.LINUART.SSR.bit.LBD)
#define	MFS5_LINUART_SSR_FRE    	(IO_MFS5.LINUART.SSR.bit.FRE)
#define	MFS5_LINUART_SSR_ORE    	(IO_MFS5.LINUART.SSR.bit.ORE)
#define	MFS5_LINUART_SSR_RDRF    	(IO_MFS5.LINUART.SSR.bit.RDRF)
#define	MFS5_LINUART_SSR_TDRE    	(IO_MFS5.LINUART.SSR.bit.TDRE)
#define	MFS5_LINUART_SSR_TBI    	(IO_MFS5.LINUART.SSR.bit.TBI)
#define	MFS5_LINUART_ESCR			(IO_MFS5.LINUART.ESCR.byte)
#define	MFS5_LINUART_ESCR_ESBL    	(IO_MFS5.LINUART.ESCR.bit.ESBL)
#define	MFS5_LINUART_ESCR_LBIE    	(IO_MFS5.LINUART.ESCR.bit.LBIE)
#define	MFS5_LINUART_ESCR_LBL    	(IO_MFS5.LINUART.ESCR.bit.LBL)
#define	MFS5_LINUART_ESCR_DEL    	(IO_MFS5.LINUART.ESCR.bit.DEL)
#define	MFS5_LINUART_RDR0	(IO_MFS5.LINUART.RDR0)
#define	MFS5_LINUART_TDR0	(IO_MFS5.LINUART.RDR0)
#define	MFS5_LINUART_SACSR			(IO_MFS5.LINUART.SACSR.hword)
#define	MFS5_LINUART_SACSR_STST    	(IO_MFS5.LINUART.SACSR.bit.STST)
#define	MFS5_LINUART_SACSR_BST    	(IO_MFS5.LINUART.SACSR.bit.BST)
#define	MFS5_LINUART_SACSR_SFD    	(IO_MFS5.LINUART.SACSR.bit.SFD)
#define	MFS5_LINUART_SACSR_SFDE    	(IO_MFS5.LINUART.SACSR.bit.SFDE)
#define	MFS5_LINUART_SACSR_AUTE    	(IO_MFS5.LINUART.SACSR.bit.AUTE)
#define	MFS5_LINUART_SACSR_TRG    	(IO_MFS5.LINUART.SACSR.bit.TRG)
#define	MFS5_LINUART_SACSR_TINT    	(IO_MFS5.LINUART.SACSR.bit.TINT)
#define	MFS5_LINUART_SACSR_TINTE    	(IO_MFS5.LINUART.SACSR.bit.TINTE)
#define	MFS5_LINUART_SACSR_TSYNE    	(IO_MFS5.LINUART.SACSR.bit.TSYNE)
#define	MFS5_LINUART_SACSR_TRGE    	(IO_MFS5.LINUART.SACSR.bit.TRGE)
#define	MFS5_LINUART_SACSR_TDIV    	(IO_MFS5.LINUART.SACSR.bit.TDIV)
#define	MFS5_LINUART_SACSR_TMRE    	(IO_MFS5.LINUART.SACSR.bit.TMRE)
#define	MFS5_LINUART_STMR	(IO_MFS5.LINUART.STMR)
#define	MFS5_LINUART_STMCR	(IO_MFS5.LINUART.STMCR)
#define	MFS5_LINUART_SFUR	(IO_MFS5.LINUART.SFUR)
#define	MFS5_LINUART_LAMSR			(IO_MFS5.LINUART.LAMSR.byte)
#define	MFS5_LINUART_LAMSR_LER    	(IO_MFS5.LINUART.LAMSR.bit.LER)
#define	MFS5_LINUART_LAMSR_SER    	(IO_MFS5.LINUART.LAMSR.bit.SER)
#define	MFS5_LINUART_LAMSR_RDRF    	(IO_MFS5.LINUART.LAMSR.bit.RDRF)
#define	MFS5_LINUART_LAMSR_TDRE    	(IO_MFS5.LINUART.LAMSR.bit.TDRE)
#define	MFS5_LINUART_LAMSR_TBI    	(IO_MFS5.LINUART.LAMSR.bit.TBI)
#define	MFS5_LINUART_LAMSR_LCSC    	(IO_MFS5.LINUART.LAMSR.bit.LCSC)
#define	MFS5_LINUART_LAMSR_LAHC    	(IO_MFS5.LINUART.LAMSR.bit.LAHC)
#define	MFS5_LINUART_LAMCR			(IO_MFS5.LINUART.LAMCR.byte)
#define	MFS5_LINUART_LAMCR_LDL    	(IO_MFS5.LINUART.LAMCR.bit.LDL)
#define	MFS5_LINUART_LAMCR_LTDRCL    	(IO_MFS5.LINUART.LAMCR.bit.LTDRCL)
#define	MFS5_LINUART_LAMCR_LCSTYP    	(IO_MFS5.LINUART.LAMCR.bit.LCSTYP)
#define	MFS5_LINUART_LAMCR_LIDEN    	(IO_MFS5.LINUART.LAMCR.bit.LIDEN)
#define	MFS5_LINUART_LAMCR_LAMEN    	(IO_MFS5.LINUART.LAMCR.bit.LAMEN)
#define	MFS5_LINUART_SFLR	(IO_MFS5.LINUART.SFLR.hword)
#define	MFS5_LINUART_SFLR1	(IO_MFS5.LINUART.SFLR.byte.SFLR1)
#define	MFS5_LINUART_SFLR0	(IO_MFS5.LINUART.SFLR.byte.SFLR0)
#define	MFS5_LINUART_LAMESR			(IO_MFS5.LINUART.LAMESR.byte)
#define	MFS5_LINUART_LAMESR_LCSER    	(IO_MFS5.LINUART.LAMESR.bit.LCSER)
#define	MFS5_LINUART_LAMESR_LPTER    	(IO_MFS5.LINUART.LAMESR.bit.LPTER)
#define	MFS5_LINUART_LAMESR_LSFER    	(IO_MFS5.LINUART.LAMESR.bit.LSFER)
#define	MFS5_LINUART_LAMESR_LBSER    	(IO_MFS5.LINUART.LAMESR.bit.LBSER)
#define	MFS5_LINUART_LAMERT			(IO_MFS5.LINUART.LAMERT.byte)
#define	MFS5_LINUART_LAMERT_KEY    	(IO_MFS5.LINUART.LAMERT.bit.KEY)
#define	MFS5_LINUART_LAMERT_LCSERT    	(IO_MFS5.LINUART.LAMERT.bit.LCSERT)
#define	MFS5_LINUART_LAMERT_LPTERT    	(IO_MFS5.LINUART.LAMERT.bit.LPTERT)
#define	MFS5_LINUART_LAMERT_LSFERT    	(IO_MFS5.LINUART.LAMERT.bit.LSFERT)
#define	MFS5_LINUART_LAMERT_LBSERT    	(IO_MFS5.LINUART.LAMERT.bit.LBSERT)
#define	MFS5_LINUART_LAMERT_FRET    	(IO_MFS5.LINUART.LAMERT.bit.FRET)
#define	MFS5_LINUART_LAMIER			(IO_MFS5.LINUART.LAMIER.byte)
#define	MFS5_LINUART_LAMIER_LCSERIE    	(IO_MFS5.LINUART.LAMIER.bit.LCSERIE)
#define	MFS5_LINUART_LAMIER_LPTERIE    	(IO_MFS5.LINUART.LAMIER.bit.LPTERIE)
#define	MFS5_LINUART_LAMIER_LSFERIE    	(IO_MFS5.LINUART.LAMIER.bit.LSFERIE)
#define	MFS5_LINUART_LAMIER_LBSERIE    	(IO_MFS5.LINUART.LAMIER.bit.LBSERIE)
#define	MFS5_LINUART_LAMIER_LCSCIE    	(IO_MFS5.LINUART.LAMIER.bit.LCSCIE)
#define	MFS5_LINUART_LAMIER_LAHCIE    	(IO_MFS5.LINUART.LAMIER.bit.LAHCIE)
#define	MFS5_LINUART_LAMID			(IO_MFS5.LINUART.LAMID.byte)
#define	MFS5_LINUART_LAMID_P    	(IO_MFS5.LINUART.LAMID.bit.P)
#define	MFS5_LINUART_LAMID_LID    	(IO_MFS5.LINUART.LAMID.bit.LID)
#define	MFS5_LINUART_BGR			(IO_MFS5.LINUART.BGR)
#define	MFS5_LINUART_FCR1			(IO_MFS5.LINUART.FCR1.byte)
#define	MFS5_LINUART_FCR1_FLSTE    	(IO_MFS5.LINUART.FCR1.bit.FLSTE)
#define	MFS5_LINUART_FCR1_FRIIE    	(IO_MFS5.LINUART.FCR1.bit.FRIIE)
#define	MFS5_LINUART_FCR1_FDRQ    	(IO_MFS5.LINUART.FCR1.bit.FDRQ)
#define	MFS5_LINUART_FCR1_FTIE    	(IO_MFS5.LINUART.FCR1.bit.FTIE)
#define	MFS5_LINUART_FCR1_FSEL    	(IO_MFS5.LINUART.FCR1.bit.FSEL)
#define	MFS5_LINUART_FCR0			(IO_MFS5.LINUART.FCR0.byte)
#define	MFS5_LINUART_FCR0_FLST    	(IO_MFS5.LINUART.FCR0.bit.FLST)
#define	MFS5_LINUART_FCR0_FLD    	(IO_MFS5.LINUART.FCR0.bit.FLD)
#define	MFS5_LINUART_FCR0_FSET    	(IO_MFS5.LINUART.FCR0.bit.FSET)
#define	MFS5_LINUART_FCR0_FCL2    	(IO_MFS5.LINUART.FCR0.bit.FCL2)
#define	MFS5_LINUART_FCR0_FCL1    	(IO_MFS5.LINUART.FCR0.bit.FCL1)
#define	MFS5_LINUART_FCR0_FE2    	(IO_MFS5.LINUART.FCR0.bit.FE2)
#define	MFS5_LINUART_FCR0_FE1    	(IO_MFS5.LINUART.FCR0.bit.FE1)
#define	MFS5_LINUART_FBYTE 	(IO_MFS5.LINUART.FBYTE.hword)
#define	MFS5_LINUART_FBYTE2	(IO_MFS5.LINUART.FBYTE.byte.FBYTE2)
#define	MFS5_LINUART_FBYTE1	(IO_MFS5.LINUART.FBYTE.byte.FBYTE1)
#define	MFS5_LINUART_FTICR 	(IO_MFS5.LINUART.FTICR.hword)
#define	MFS5_LINUART_FTICR2	(IO_MFS5.LINUART.FTICR.byte.FTICR2)
#define	MFS5_LINUART_FTICR1	(IO_MFS5.LINUART.FTICR.byte.FTICR1)

#define	MFS5_I2C_IBCR			(IO_MFS5.I2C.IBCR.byte)
#define	MFS5_I2C_IBCR_MSS    	(IO_MFS5.I2C.IBCR.bit.MSS)
#define	MFS5_I2C_IBCR_ACT_SCC    	(IO_MFS5.I2C.IBCR.bit.ACT_SCC)
#define	MFS5_I2C_IBCR_ACKE    	(IO_MFS5.I2C.IBCR.bit.ACKE)
#define	MFS5_I2C_IBCR_WSEL    	(IO_MFS5.I2C.IBCR.bit.WSEL)
#define	MFS5_I2C_IBCR_CNDE    	(IO_MFS5.I2C.IBCR.bit.CNDE)
#define	MFS5_I2C_IBCR_INTE    	(IO_MFS5.I2C.IBCR.bit.INTE)
#define	MFS5_I2C_IBCR_BER    	(IO_MFS5.I2C.IBCR.bit.BER)
#define	MFS5_I2C_IBCR_INT    	(IO_MFS5.I2C.IBCR.bit.INT)
#define	MFS5_I2C_SMR			(IO_MFS5.I2C.SMR.byte)
#define	MFS5_I2C_SMR_MD    	(IO_MFS5.I2C.SMR.bit.MD)
#define	MFS5_I2C_SMR_RIE    	(IO_MFS5.I2C.SMR.bit.RIE)
#define	MFS5_I2C_SMR_TIE    	(IO_MFS5.I2C.SMR.bit.TIE)
#define	MFS5_I2C_SSR			(IO_MFS5.I2C.SSR.byte)
#define	MFS5_I2C_SSR_REC    	(IO_MFS5.I2C.SSR.bit.REC)
#define	MFS5_I2C_SSR_TSET    	(IO_MFS5.I2C.SSR.bit.TSET)
#define	MFS5_I2C_SSR_DMA    	(IO_MFS5.I2C.SSR.bit.DMA)
#define	MFS5_I2C_SSR_TBIE    	(IO_MFS5.I2C.SSR.bit.TBIE)
#define	MFS5_I2C_SSR_ORE    	(IO_MFS5.I2C.SSR.bit.ORE)
#define	MFS5_I2C_SSR_RDRF    	(IO_MFS5.I2C.SSR.bit.RDRF)
#define	MFS5_I2C_SSR_TDRE    	(IO_MFS5.I2C.SSR.bit.TDRE)
#define	MFS5_I2C_SSR_TBI    	(IO_MFS5.I2C.SSR.bit.TBI)
#define	MFS5_I2C_IBSR			(IO_MFS5.I2C.IBSR.byte)
#define	MFS5_I2C_IBSR_FBT    	(IO_MFS5.I2C.IBSR.bit.FBT)
#define	MFS5_I2C_IBSR_RACK    	(IO_MFS5.I2C.IBSR.bit.RACK)
#define	MFS5_I2C_IBSR_RSA    	(IO_MFS5.I2C.IBSR.bit.RSA)
#define	MFS5_I2C_IBSR_TRX    	(IO_MFS5.I2C.IBSR.bit.TRX)
#define	MFS5_I2C_IBSR_AL    	(IO_MFS5.I2C.IBSR.bit.AL)
#define	MFS5_I2C_IBSR_RSC    	(IO_MFS5.I2C.IBSR.bit.RSC)
#define	MFS5_I2C_IBSR_SPC    	(IO_MFS5.I2C.IBSR.bit.SPC)
#define	MFS5_I2C_IBSR_BB    	(IO_MFS5.I2C.IBSR.bit.BB)
#define	MFS5_I2C_RDR0	(IO_MFS5.I2C.RDR0)
#define	MFS5_I2C_TDR0	(IO_MFS5.I2C.RDR0)
#define	MFS5_I2C_SACSR			(IO_MFS5.I2C.SACSR.hword)
#define	MFS5_I2C_SACSR_TRG    	(IO_MFS5.I2C.SACSR.bit.TRG)
#define	MFS5_I2C_SACSR_TINT    	(IO_MFS5.I2C.SACSR.bit.TINT)
#define	MFS5_I2C_SACSR_TINTE    	(IO_MFS5.I2C.SACSR.bit.TINTE)
#define	MFS5_I2C_SACSR_TRGE    	(IO_MFS5.I2C.SACSR.bit.TRGE)
#define	MFS5_I2C_SACSR_TDIV    	(IO_MFS5.I2C.SACSR.bit.TDIV)
#define	MFS5_I2C_SACSR_TMRE    	(IO_MFS5.I2C.SACSR.bit.TMRE)
#define	MFS5_I2C_STMR	(IO_MFS5.I2C.STMR)
#define	MFS5_I2C_STMCR	(IO_MFS5.I2C.STMCR)
#define	MFS5_I2C_BGR	(IO_MFS5.I2C.BGR)
#define	MFS5_I2C_ISMK			(IO_MFS5.I2C.ISMK.byte)
#define	MFS5_I2C_ISMK_EN    	(IO_MFS5.I2C.ISMK.bit.EN)
#define	MFS5_I2C_ISMK_SM    	(IO_MFS5.I2C.ISMK.bit.SM)
#define	MFS5_I2C_ISBA			(IO_MFS5.I2C.ISBA.byte)
#define	MFS5_I2C_ISBA_SAEN    	(IO_MFS5.I2C.ISBA.bit.SAEN)
#define	MFS5_I2C_ISBA_SA    	(IO_MFS5.I2C.ISBA.bit.SA)
#define	MFS5_I2C_FCR1			(IO_MFS5.I2C.FCR1.byte)
#define	MFS5_I2C_FCR1_FLSTE    	(IO_MFS5.I2C.FCR1.bit.FLSTE)
#define	MFS5_I2C_FCR1_FRIIE    	(IO_MFS5.I2C.FCR1.bit.FRIIE)
#define	MFS5_I2C_FCR1_FDRQ    	(IO_MFS5.I2C.FCR1.bit.FDRQ)
#define	MFS5_I2C_FCR1_FTIE    	(IO_MFS5.I2C.FCR1.bit.FTIE)
#define	MFS5_I2C_FCR1_FSEL    	(IO_MFS5.I2C.FCR1.bit.FSEL)
#define	MFS5_I2C_FCR0			(IO_MFS5.I2C.FCR0.byte)
#define	MFS5_I2C_FCR0_FLST    	(IO_MFS5.I2C.FCR0.bit.FLST)
#define	MFS5_I2C_FCR0_FLD    	(IO_MFS5.I2C.FCR0.bit.FLD)
#define	MFS5_I2C_FCR0_FSET    	(IO_MFS5.I2C.FCR0.bit.FSET)
#define	MFS5_I2C_FCR0_FCL2    	(IO_MFS5.I2C.FCR0.bit.FCL2)
#define	MFS5_I2C_FCR0_FCL1    	(IO_MFS5.I2C.FCR0.bit.FCL1)
#define	MFS5_I2C_FCR0_FE2    	(IO_MFS5.I2C.FCR0.bit.FE2)
#define	MFS5_I2C_FCR0_FE1    	(IO_MFS5.I2C.FCR0.bit.FE1)
#define	MFS5_I2C_FBYTE 	(IO_MFS5.I2C.FBYTE.hword)
#define	MFS5_I2C_FBYTE2	(IO_MFS5.I2C.FBYTE.byte.FBYTE2)
#define	MFS5_I2C_FBYTE1	(IO_MFS5.I2C.FBYTE.byte.FBYTE1)
#define	MFS5_I2C_FTICR 	(IO_MFS5.I2C.FTICR.hword)
#define	MFS5_I2C_FTICR2	(IO_MFS5.I2C.FTICR.byte.FTICR2)
#define	MFS5_I2C_FTICR1	(IO_MFS5.I2C.FTICR.byte.FTICR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MFS6,attr=IO,locate=0x1840
#endif

__IO_EXTENDED	MFSSTR	IO_MFS6;

#define	MFS6_UART_SCR			(IO_MFS6.UART.SCR.byte)
#define	MFS6_UART_SCR_UPCL    	(IO_MFS6.UART.SCR.bit.UPCL)
#define	MFS6_UART_SCR_RIE    	(IO_MFS6.UART.SCR.bit.RIE)
#define	MFS6_UART_SCR_TIE    	(IO_MFS6.UART.SCR.bit.TIE)
#define	MFS6_UART_SCR_TBIE    	(IO_MFS6.UART.SCR.bit.TBIE)
#define	MFS6_UART_SCR_RXE    	(IO_MFS6.UART.SCR.bit.RXE)
#define	MFS6_UART_SCR_TXE    	(IO_MFS6.UART.SCR.bit.TXE)
#define	MFS6_UART_SMR			(IO_MFS6.UART.SMR.byte)
#define	MFS6_UART_SMR_MD    	(IO_MFS6.UART.SMR.bit.MD)
#define	MFS6_UART_SMR_SBL    	(IO_MFS6.UART.SMR.bit.SBL)
#define	MFS6_UART_SMR_BDS    	(IO_MFS6.UART.SMR.bit.BDS)
#define	MFS6_UART_SMR_SOE    	(IO_MFS6.UART.SMR.bit.SOE)
#define	MFS6_UART_SSR			(IO_MFS6.UART.SSR.byte)
#define	MFS6_UART_SSR_REC    	(IO_MFS6.UART.SSR.bit.REC)
#define	MFS6_UART_SSR_PE    	(IO_MFS6.UART.SSR.bit.PE)
#define	MFS6_UART_SSR_FRE    	(IO_MFS6.UART.SSR.bit.FRE)
#define	MFS6_UART_SSR_ORE    	(IO_MFS6.UART.SSR.bit.ORE)
#define	MFS6_UART_SSR_RDRF    	(IO_MFS6.UART.SSR.bit.RDRF)
#define	MFS6_UART_SSR_TDRE    	(IO_MFS6.UART.SSR.bit.TDRE)
#define	MFS6_UART_SSR_TBI    	(IO_MFS6.UART.SSR.bit.TBI)
#define	MFS6_UART_ESCR			(IO_MFS6.UART.ESCR.byte)
#define	MFS6_UART_ESCR_FLWEN    	(IO_MFS6.UART.ESCR.bit.FLWEN)
#define	MFS6_UART_ESCR_ESBL    	(IO_MFS6.UART.ESCR.bit.ESBL)
#define	MFS6_UART_ESCR_INV    	(IO_MFS6.UART.ESCR.bit.INV)
#define	MFS6_UART_ESCR_PEN    	(IO_MFS6.UART.ESCR.bit.PEN)
#define	MFS6_UART_ESCR_P    	(IO_MFS6.UART.ESCR.bit.P)
#define	MFS6_UART_ESCR_L    	(IO_MFS6.UART.ESCR.bit.L)
#define	MFS6_UART_RDR0	(IO_MFS6.UART.RDR0.hword)
#define	MFS6_UART_RDR0_RDR0L	(IO_MFS6.UART.RDR0.byte.RDR0L)
#define	MFS6_UART_RDR0_bit9	(IO_MFS6.UART.RDR0.bit9.D)
#define	MFS6_UART_RDR0_bit7	(IO_MFS6.UART.RDR0.bit7.D)
#define	MFS6_UART_RDR0_bit6	(IO_MFS6.UART.RDR0.bit6.D)
#define	MFS6_UART_RDR0_bit5	(IO_MFS6.UART.RDR0.bit5.D)
#define	MFS6_UART_TDR0	(IO_MFS6.UART.RDR0.hword)
#define	MFS6_UART_TDR0_TDR0L	(IO_MFS6.UART.RDR0.byte.RDR0L)
#define	MFS6_UART_TDR0_bit9	(IO_MFS6.UART.RDR0.bit9.D)
#define	MFS6_UART_TDR0_bit7	(IO_MFS6.UART.RDR0.bit7.D)
#define	MFS6_UART_TDR0_bit6	(IO_MFS6.UART.RDR0.bit6.D)
#define	MFS6_UART_TDR0_bit5	(IO_MFS6.UART.RDR0.bit5.D)
#define	MFS6_UART_SACSR			(IO_MFS6.UART.SACSR.hword)
#define	MFS6_UART_SACSR_STST    	(IO_MFS6.UART.SACSR.bit.STST)
#define	MFS6_UART_SACSR_TRG    	(IO_MFS6.UART.SACSR.bit.TRG)
#define	MFS6_UART_SACSR_TINT    	(IO_MFS6.UART.SACSR.bit.TINT)
#define	MFS6_UART_SACSR_TINTE    	(IO_MFS6.UART.SACSR.bit.TINTE)
#define	MFS6_UART_SACSR_TSYNE    	(IO_MFS6.UART.SACSR.bit.TSYNE)
#define	MFS6_UART_SACSR_TRGE    	(IO_MFS6.UART.SACSR.bit.TRGE)
#define	MFS6_UART_SACSR_TDIV    	(IO_MFS6.UART.SACSR.bit.TDIV)
#define	MFS6_UART_SACSR_TMRE    	(IO_MFS6.UART.SACSR.bit.TMRE)
#define	MFS6_UART_STMR	(IO_MFS6.UART.STMR)
#define	MFS6_UART_STMCR	(IO_MFS6.UART.STMCR)
#define	MFS6_UART_TBYTE0	(IO_MFS6.UART.TBYTE0)
#define	MFS6_UART_BGR			(IO_MFS6.UART.BGR)
#define	MFS6_UART_FCR1			(IO_MFS6.UART.FCR1.byte)
#define	MFS6_UART_FCR1_FLSTE    	(IO_MFS6.UART.FCR1.bit.FLSTE)
#define	MFS6_UART_FCR1_FRIIE    	(IO_MFS6.UART.FCR1.bit.FRIIE)
#define	MFS6_UART_FCR1_FDRQ    	(IO_MFS6.UART.FCR1.bit.FDRQ)
#define	MFS6_UART_FCR1_FTIE    	(IO_MFS6.UART.FCR1.bit.FTIE)
#define	MFS6_UART_FCR1_FSEL    	(IO_MFS6.UART.FCR1.bit.FSEL)
#define	MFS6_UART_FCR0			(IO_MFS6.UART.FCR0.byte)
#define	MFS6_UART_FCR0_FLST    	(IO_MFS6.UART.FCR0.bit.FLST)
#define	MFS6_UART_FCR0_FLD    	(IO_MFS6.UART.FCR0.bit.FLD)
#define	MFS6_UART_FCR0_FSET    	(IO_MFS6.UART.FCR0.bit.FSET)
#define	MFS6_UART_FCR0_FCL2    	(IO_MFS6.UART.FCR0.bit.FCL2)
#define	MFS6_UART_FCR0_FCL1    	(IO_MFS6.UART.FCR0.bit.FCL1)
#define	MFS6_UART_FCR0_FE2    	(IO_MFS6.UART.FCR0.bit.FE2)
#define	MFS6_UART_FCR0_FE1    	(IO_MFS6.UART.FCR0.bit.FE1)
#define	MFS6_UART_FBYTE 	(IO_MFS6.UART.FBYTE.hword)
#define	MFS6_UART_FBYTE2	(IO_MFS6.UART.FBYTE.byte.FBYTE2)
#define	MFS6_UART_FBYTE1	(IO_MFS6.UART.FBYTE.byte.FBYTE1)
#define	MFS6_UART_FTICR 	(IO_MFS6.UART.FTICR.hword)
#define	MFS6_UART_FTICR2	(IO_MFS6.UART.FTICR.byte.FTICR2)
#define	MFS6_UART_FTICR1	(IO_MFS6.UART.FTICR.byte.FTICR1)

#define	MFS6_CSIO_SCR			(IO_MFS6.CSIO.SCR.byte)
#define	MFS6_CSIO_SCR_UPCL    	(IO_MFS6.CSIO.SCR.bit.UPCL)
#define	MFS6_CSIO_SCR_MS    	(IO_MFS6.CSIO.SCR.bit.MS)
#define	MFS6_CSIO_SCR_SPI    	(IO_MFS6.CSIO.SCR.bit.SPI)
#define	MFS6_CSIO_SCR_RIE    	(IO_MFS6.CSIO.SCR.bit.RIE)
#define	MFS6_CSIO_SCR_TIE    	(IO_MFS6.CSIO.SCR.bit.TIE)
#define	MFS6_CSIO_SCR_TBIE    	(IO_MFS6.CSIO.SCR.bit.TBIE)
#define	MFS6_CSIO_SCR_RXE    	(IO_MFS6.CSIO.SCR.bit.RXE)
#define	MFS6_CSIO_SCR_TXE    	(IO_MFS6.CSIO.SCR.bit.TXE)
#define	MFS6_CSIO_SMR			(IO_MFS6.CSIO.SMR.byte)
#define	MFS6_CSIO_SMR_MD    	(IO_MFS6.CSIO.SMR.bit.MD)
#define	MFS6_CSIO_SMR_SCINV    	(IO_MFS6.CSIO.SMR.bit.SCINV)
#define	MFS6_CSIO_SMR_BDS    	(IO_MFS6.CSIO.SMR.bit.BDS)
#define	MFS6_CSIO_SMR_SCKE    	(IO_MFS6.CSIO.SMR.bit.SCKE)
#define	MFS6_CSIO_SMR_SOE    	(IO_MFS6.CSIO.SMR.bit.SOE)
#define	MFS6_CSIO_SSR			(IO_MFS6.CSIO.SSR.byte)
#define	MFS6_CSIO_SSR_REC    	(IO_MFS6.CSIO.SSR.bit.REC)
#define	MFS6_CSIO_SSR_ES    	(IO_MFS6.CSIO.SSR.bit.ES)
#define	MFS6_CSIO_SSR_AWC    	(IO_MFS6.CSIO.SSR.bit.AWC)
#define	MFS6_CSIO_SSR_ORE    	(IO_MFS6.CSIO.SSR.bit.ORE)
#define	MFS6_CSIO_SSR_RDRF    	(IO_MFS6.CSIO.SSR.bit.RDRF)
#define	MFS6_CSIO_SSR_TDRE    	(IO_MFS6.CSIO.SSR.bit.TDRE)
#define	MFS6_CSIO_SSR_TBI    	(IO_MFS6.CSIO.SSR.bit.TBI)
#define	MFS6_CSIO_ESCR			(IO_MFS6.CSIO.ESCR.byte)
#define	MFS6_CSIO_ESCR_SOP    	(IO_MFS6.CSIO.ESCR.bit.SOP)
#define	MFS6_CSIO_ESCR_L3    	(IO_MFS6.CSIO.ESCR.bit.L3)
#define	MFS6_CSIO_ESCR_CSFE    	(IO_MFS6.CSIO.ESCR.bit.CSFE)
#define	MFS6_CSIO_ESCR_WT    	(IO_MFS6.CSIO.ESCR.bit.WT)
#define	MFS6_CSIO_ESCR_L    	(IO_MFS6.CSIO.ESCR.bit.L)
#define	MFS6_CSIO_RDR	(IO_MFS6.CSIO.RDR.word)
#define	MFS6_CSIO_RDR1	(IO_MFS6.CSIO.RDR.hword.RDR1)
#define	MFS6_CSIO_RDR0	(IO_MFS6.CSIO.RDR.hword.RDR0)
#define	MFS6_CSIO_TDR	(IO_MFS6.CSIO.RDR.word)
#define	MFS6_CSIO_TDR1	(IO_MFS6.CSIO.RDR.hword.RDR1)
#define	MFS6_CSIO_TDR0	(IO_MFS6.CSIO.RDR.hword.RDR0)
#define	MFS6_CSIO_SACSR			(IO_MFS6.CSIO.SACSR.hword)
#define	MFS6_CSIO_SACSR_STST    	(IO_MFS6.CSIO.SACSR.bit.STST)
#define	MFS6_CSIO_SACSR_TBEEN    	(IO_MFS6.CSIO.SACSR.bit.TBEEN)
#define	MFS6_CSIO_SACSR_CSEIE    	(IO_MFS6.CSIO.SACSR.bit.CSEIE)
#define	MFS6_CSIO_SACSR_CSE    	(IO_MFS6.CSIO.SACSR.bit.CSE)
#define	MFS6_CSIO_SACSR_TRG    	(IO_MFS6.CSIO.SACSR.bit.TRG)
#define	MFS6_CSIO_SACSR_TINT    	(IO_MFS6.CSIO.SACSR.bit.TINT)
#define	MFS6_CSIO_SACSR_TINTE    	(IO_MFS6.CSIO.SACSR.bit.TINTE)
#define	MFS6_CSIO_SACSR_TSYNE    	(IO_MFS6.CSIO.SACSR.bit.TSYNE)
#define	MFS6_CSIO_SACSR_TRGE    	(IO_MFS6.CSIO.SACSR.bit.TRGE)
#define	MFS6_CSIO_SACSR_TDIV    	(IO_MFS6.CSIO.SACSR.bit.TDIV)
#define	MFS6_CSIO_SACSR_TMRE    	(IO_MFS6.CSIO.SACSR.bit.TMRE)
#define	MFS6_CSIO_STMR	(IO_MFS6.CSIO.STMR)
#define	MFS6_CSIO_STMCR	(IO_MFS6.CSIO.STMCR)
#define	MFS6_CSIO_SCSCR			(IO_MFS6.CSIO.SCSCR.hword)
#define	MFS6_CSIO_SCSCR_SST    	(IO_MFS6.CSIO.SCSCR.bit.SST)
#define	MFS6_CSIO_SCSCR_SED    	(IO_MFS6.CSIO.SCSCR.bit.SED)
#define	MFS6_CSIO_SCSCR_SCD    	(IO_MFS6.CSIO.SCSCR.bit.SCD)
#define	MFS6_CSIO_SCSCR_SCAM    	(IO_MFS6.CSIO.SCSCR.bit.SCAM)
#define	MFS6_CSIO_SCSCR_CDIV    	(IO_MFS6.CSIO.SCSCR.bit.CDIV)
#define	MFS6_CSIO_SCSCR_CSLVL    	(IO_MFS6.CSIO.SCSCR.bit.CSLVL)
#define	MFS6_CSIO_SCSCR_CSEN3    	(IO_MFS6.CSIO.SCSCR.bit.CSEN3)
#define	MFS6_CSIO_SCSCR_CSEN2    	(IO_MFS6.CSIO.SCSCR.bit.CSEN2)
#define	MFS6_CSIO_SCSCR_CSEN1    	(IO_MFS6.CSIO.SCSCR.bit.CSEN1)
#define	MFS6_CSIO_SCSCR_CSEN0    	(IO_MFS6.CSIO.SCSCR.bit.CSEN0)
#define	MFS6_CSIO_SCSCR_CSOE    	(IO_MFS6.CSIO.SCSCR.bit.CSOE)
#define	MFS6_CSIO_SCSTR	(IO_MFS6.CSIO.SCSTR.word)
#define	MFS6_CSIO_SCSTR32	(IO_MFS6.CSIO.SCSTR.hword.SCSTR32)
#define	MFS6_CSIO_SCSTR3	(IO_MFS6.CSIO.SCSTR.byte.SCSTR3)
#define	MFS6_CSIO_SCSTR2	(IO_MFS6.CSIO.SCSTR.byte.SCSTR2)
#define	MFS6_CSIO_SCSTR10	(IO_MFS6.CSIO.SCSTR.hword.SCSTR10)
#define	MFS6_CSIO_SCSTR1	(IO_MFS6.CSIO.SCSTR.byte.SCSTR1)
#define	MFS6_CSIO_SCSTR0	(IO_MFS6.CSIO.SCSTR.byte.SCSTR0)
#define	MFS6_CSIO_SCSFR2			(IO_MFS6.CSIO.SCSFR2.byte)
#define	MFS6_CSIO_SCSFR2_CSLVL    	(IO_MFS6.CSIO.SCSFR2.bit.CSLVL)
#define	MFS6_CSIO_SCSFR2_SCINV    	(IO_MFS6.CSIO.SCSFR2.bit.SCINV)
#define	MFS6_CSIO_SCSFR2_SPI    	(IO_MFS6.CSIO.SCSFR2.bit.SPI)
#define	MFS6_CSIO_SCSFR2_BDS    	(IO_MFS6.CSIO.SCSFR2.bit.BDS)
#define	MFS6_CSIO_SCSFR2_L    	(IO_MFS6.CSIO.SCSFR2.bit.L)
#define	MFS6_CSIO_SCSFR1			(IO_MFS6.CSIO.SCSFR1.byte)
#define	MFS6_CSIO_SCSFR1_CSLVL    	(IO_MFS6.CSIO.SCSFR1.bit.CSLVL)
#define	MFS6_CSIO_SCSFR1_SCINV    	(IO_MFS6.CSIO.SCSFR1.bit.SCINV)
#define	MFS6_CSIO_SCSFR1_SPI    	(IO_MFS6.CSIO.SCSFR1.bit.SPI)
#define	MFS6_CSIO_SCSFR1_BDS    	(IO_MFS6.CSIO.SCSFR1.bit.BDS)
#define	MFS6_CSIO_SCSFR1_L    	(IO_MFS6.CSIO.SCSFR1.bit.L)
#define	MFS6_CSIO_SCSFR0			(IO_MFS6.CSIO.SCSFR0.byte)
#define	MFS6_CSIO_SCSFR0_CSLVL    	(IO_MFS6.CSIO.SCSFR0.bit.CSLVL)
#define	MFS6_CSIO_SCSFR0_SCINV    	(IO_MFS6.CSIO.SCSFR0.bit.SCINV)
#define	MFS6_CSIO_SCSFR0_SPI    	(IO_MFS6.CSIO.SCSFR0.bit.SPI)
#define	MFS6_CSIO_SCSFR0_BDS    	(IO_MFS6.CSIO.SCSFR0.bit.BDS)
#define	MFS6_CSIO_SCSFR0_L    	(IO_MFS6.CSIO.SCSFR0.bit.L)
#define	MFS6_CSIO_TBYTE3	(IO_MFS6.CSIO.TBYTE3)
#define	MFS6_CSIO_TBYTE2	(IO_MFS6.CSIO.TBYTE2)
#define	MFS6_CSIO_TBYTE1	(IO_MFS6.CSIO.TBYTE1)
#define	MFS6_CSIO_TBYTE0	(IO_MFS6.CSIO.TBYTE0)
#define	MFS6_CSIO_BGR			(IO_MFS6.CSIO.BGR)
#define	MFS6_CSIO_FCR1			(IO_MFS6.CSIO.FCR1.byte)
#define	MFS6_CSIO_FCR1_FLSTE    	(IO_MFS6.CSIO.FCR1.bit.FLSTE)
#define	MFS6_CSIO_FCR1_FRIIE    	(IO_MFS6.CSIO.FCR1.bit.FRIIE)
#define	MFS6_CSIO_FCR1_FDRQ    	(IO_MFS6.CSIO.FCR1.bit.FDRQ)
#define	MFS6_CSIO_FCR1_FTIE    	(IO_MFS6.CSIO.FCR1.bit.FTIE)
#define	MFS6_CSIO_FCR1_FSEL    	(IO_MFS6.CSIO.FCR1.bit.FSEL)
#define	MFS6_CSIO_FCR0			(IO_MFS6.CSIO.FCR0.byte)
#define	MFS6_CSIO_FCR0_FLST    	(IO_MFS6.CSIO.FCR0.bit.FLST)
#define	MFS6_CSIO_FCR0_FLD    	(IO_MFS6.CSIO.FCR0.bit.FLD)
#define	MFS6_CSIO_FCR0_FSET    	(IO_MFS6.CSIO.FCR0.bit.FSET)
#define	MFS6_CSIO_FCR0_FCL2    	(IO_MFS6.CSIO.FCR0.bit.FCL2)
#define	MFS6_CSIO_FCR0_FCL1    	(IO_MFS6.CSIO.FCR0.bit.FCL1)
#define	MFS6_CSIO_FCR0_FE2    	(IO_MFS6.CSIO.FCR0.bit.FE2)
#define	MFS6_CSIO_FCR0_FE1    	(IO_MFS6.CSIO.FCR0.bit.FE1)
#define	MFS6_CSIO_FBYTE 	(IO_MFS6.CSIO.FBYTE.hword)
#define	MFS6_CSIO_FBYTE2	(IO_MFS6.CSIO.FBYTE.byte.FBYTE2)
#define	MFS6_CSIO_FBYTE1	(IO_MFS6.CSIO.FBYTE.byte.FBYTE1)
#define	MFS6_CSIO_FTICR 	(IO_MFS6.CSIO.FTICR.hword)
#define	MFS6_CSIO_FTICR2	(IO_MFS6.CSIO.FTICR.byte.FTICR2)
#define	MFS6_CSIO_FTICR1	(IO_MFS6.CSIO.FTICR.byte.FTICR1)

#define	MFS6_LINUART_SCR			(IO_MFS6.LINUART.SCR.byte)
#define	MFS6_LINUART_SCR_UPCL    	(IO_MFS6.LINUART.SCR.bit.UPCL)
#define	MFS6_LINUART_SCR_MS    	(IO_MFS6.LINUART.SCR.bit.MS)
#define	MFS6_LINUART_SCR_LBR    	(IO_MFS6.LINUART.SCR.bit.LBR)
#define	MFS6_LINUART_SCR_RIE    	(IO_MFS6.LINUART.SCR.bit.RIE)
#define	MFS6_LINUART_SCR_TIE    	(IO_MFS6.LINUART.SCR.bit.TIE)
#define	MFS6_LINUART_SCR_TBIE    	(IO_MFS6.LINUART.SCR.bit.TBIE)
#define	MFS6_LINUART_SCR_RXE    	(IO_MFS6.LINUART.SCR.bit.RXE)
#define	MFS6_LINUART_SCR_TXE    	(IO_MFS6.LINUART.SCR.bit.TXE)
#define	MFS6_LINUART_SMR			(IO_MFS6.LINUART.SMR.byte)
#define	MFS6_LINUART_SMR_MD    	(IO_MFS6.LINUART.SMR.bit.MD)
#define	MFS6_LINUART_SMR_SBL    	(IO_MFS6.LINUART.SMR.bit.SBL)
#define	MFS6_LINUART_SMR_SOE    	(IO_MFS6.LINUART.SMR.bit.SOE)
#define	MFS6_LINUART_SSR			(IO_MFS6.LINUART.SSR.byte)
#define	MFS6_LINUART_SSR_REC    	(IO_MFS6.LINUART.SSR.bit.REC)
#define	MFS6_LINUART_SSR_LBD    	(IO_MFS6.LINUART.SSR.bit.LBD)
#define	MFS6_LINUART_SSR_FRE    	(IO_MFS6.LINUART.SSR.bit.FRE)
#define	MFS6_LINUART_SSR_ORE    	(IO_MFS6.LINUART.SSR.bit.ORE)
#define	MFS6_LINUART_SSR_RDRF    	(IO_MFS6.LINUART.SSR.bit.RDRF)
#define	MFS6_LINUART_SSR_TDRE    	(IO_MFS6.LINUART.SSR.bit.TDRE)
#define	MFS6_LINUART_SSR_TBI    	(IO_MFS6.LINUART.SSR.bit.TBI)
#define	MFS6_LINUART_ESCR			(IO_MFS6.LINUART.ESCR.byte)
#define	MFS6_LINUART_ESCR_ESBL    	(IO_MFS6.LINUART.ESCR.bit.ESBL)
#define	MFS6_LINUART_ESCR_LBIE    	(IO_MFS6.LINUART.ESCR.bit.LBIE)
#define	MFS6_LINUART_ESCR_LBL    	(IO_MFS6.LINUART.ESCR.bit.LBL)
#define	MFS6_LINUART_ESCR_DEL    	(IO_MFS6.LINUART.ESCR.bit.DEL)
#define	MFS6_LINUART_RDR0	(IO_MFS6.LINUART.RDR0)
#define	MFS6_LINUART_TDR0	(IO_MFS6.LINUART.RDR0)
#define	MFS6_LINUART_SACSR			(IO_MFS6.LINUART.SACSR.hword)
#define	MFS6_LINUART_SACSR_STST    	(IO_MFS6.LINUART.SACSR.bit.STST)
#define	MFS6_LINUART_SACSR_BST    	(IO_MFS6.LINUART.SACSR.bit.BST)
#define	MFS6_LINUART_SACSR_SFD    	(IO_MFS6.LINUART.SACSR.bit.SFD)
#define	MFS6_LINUART_SACSR_SFDE    	(IO_MFS6.LINUART.SACSR.bit.SFDE)
#define	MFS6_LINUART_SACSR_AUTE    	(IO_MFS6.LINUART.SACSR.bit.AUTE)
#define	MFS6_LINUART_SACSR_TRG    	(IO_MFS6.LINUART.SACSR.bit.TRG)
#define	MFS6_LINUART_SACSR_TINT    	(IO_MFS6.LINUART.SACSR.bit.TINT)
#define	MFS6_LINUART_SACSR_TINTE    	(IO_MFS6.LINUART.SACSR.bit.TINTE)
#define	MFS6_LINUART_SACSR_TSYNE    	(IO_MFS6.LINUART.SACSR.bit.TSYNE)
#define	MFS6_LINUART_SACSR_TRGE    	(IO_MFS6.LINUART.SACSR.bit.TRGE)
#define	MFS6_LINUART_SACSR_TDIV    	(IO_MFS6.LINUART.SACSR.bit.TDIV)
#define	MFS6_LINUART_SACSR_TMRE    	(IO_MFS6.LINUART.SACSR.bit.TMRE)
#define	MFS6_LINUART_STMR	(IO_MFS6.LINUART.STMR)
#define	MFS6_LINUART_STMCR	(IO_MFS6.LINUART.STMCR)
#define	MFS6_LINUART_SFUR	(IO_MFS6.LINUART.SFUR)
#define	MFS6_LINUART_LAMSR			(IO_MFS6.LINUART.LAMSR.byte)
#define	MFS6_LINUART_LAMSR_LER    	(IO_MFS6.LINUART.LAMSR.bit.LER)
#define	MFS6_LINUART_LAMSR_SER    	(IO_MFS6.LINUART.LAMSR.bit.SER)
#define	MFS6_LINUART_LAMSR_RDRF    	(IO_MFS6.LINUART.LAMSR.bit.RDRF)
#define	MFS6_LINUART_LAMSR_TDRE    	(IO_MFS6.LINUART.LAMSR.bit.TDRE)
#define	MFS6_LINUART_LAMSR_TBI    	(IO_MFS6.LINUART.LAMSR.bit.TBI)
#define	MFS6_LINUART_LAMSR_LCSC    	(IO_MFS6.LINUART.LAMSR.bit.LCSC)
#define	MFS6_LINUART_LAMSR_LAHC    	(IO_MFS6.LINUART.LAMSR.bit.LAHC)
#define	MFS6_LINUART_LAMCR			(IO_MFS6.LINUART.LAMCR.byte)
#define	MFS6_LINUART_LAMCR_LDL    	(IO_MFS6.LINUART.LAMCR.bit.LDL)
#define	MFS6_LINUART_LAMCR_LTDRCL    	(IO_MFS6.LINUART.LAMCR.bit.LTDRCL)
#define	MFS6_LINUART_LAMCR_LCSTYP    	(IO_MFS6.LINUART.LAMCR.bit.LCSTYP)
#define	MFS6_LINUART_LAMCR_LIDEN    	(IO_MFS6.LINUART.LAMCR.bit.LIDEN)
#define	MFS6_LINUART_LAMCR_LAMEN    	(IO_MFS6.LINUART.LAMCR.bit.LAMEN)
#define	MFS6_LINUART_SFLR	(IO_MFS6.LINUART.SFLR.hword)
#define	MFS6_LINUART_SFLR1	(IO_MFS6.LINUART.SFLR.byte.SFLR1)
#define	MFS6_LINUART_SFLR0	(IO_MFS6.LINUART.SFLR.byte.SFLR0)
#define	MFS6_LINUART_LAMESR			(IO_MFS6.LINUART.LAMESR.byte)
#define	MFS6_LINUART_LAMESR_LCSER    	(IO_MFS6.LINUART.LAMESR.bit.LCSER)
#define	MFS6_LINUART_LAMESR_LPTER    	(IO_MFS6.LINUART.LAMESR.bit.LPTER)
#define	MFS6_LINUART_LAMESR_LSFER    	(IO_MFS6.LINUART.LAMESR.bit.LSFER)
#define	MFS6_LINUART_LAMESR_LBSER    	(IO_MFS6.LINUART.LAMESR.bit.LBSER)
#define	MFS6_LINUART_LAMERT			(IO_MFS6.LINUART.LAMERT.byte)
#define	MFS6_LINUART_LAMERT_KEY    	(IO_MFS6.LINUART.LAMERT.bit.KEY)
#define	MFS6_LINUART_LAMERT_LCSERT    	(IO_MFS6.LINUART.LAMERT.bit.LCSERT)
#define	MFS6_LINUART_LAMERT_LPTERT    	(IO_MFS6.LINUART.LAMERT.bit.LPTERT)
#define	MFS6_LINUART_LAMERT_LSFERT    	(IO_MFS6.LINUART.LAMERT.bit.LSFERT)
#define	MFS6_LINUART_LAMERT_LBSERT    	(IO_MFS6.LINUART.LAMERT.bit.LBSERT)
#define	MFS6_LINUART_LAMERT_FRET    	(IO_MFS6.LINUART.LAMERT.bit.FRET)
#define	MFS6_LINUART_LAMIER			(IO_MFS6.LINUART.LAMIER.byte)
#define	MFS6_LINUART_LAMIER_LCSERIE    	(IO_MFS6.LINUART.LAMIER.bit.LCSERIE)
#define	MFS6_LINUART_LAMIER_LPTERIE    	(IO_MFS6.LINUART.LAMIER.bit.LPTERIE)
#define	MFS6_LINUART_LAMIER_LSFERIE    	(IO_MFS6.LINUART.LAMIER.bit.LSFERIE)
#define	MFS6_LINUART_LAMIER_LBSERIE    	(IO_MFS6.LINUART.LAMIER.bit.LBSERIE)
#define	MFS6_LINUART_LAMIER_LCSCIE    	(IO_MFS6.LINUART.LAMIER.bit.LCSCIE)
#define	MFS6_LINUART_LAMIER_LAHCIE    	(IO_MFS6.LINUART.LAMIER.bit.LAHCIE)
#define	MFS6_LINUART_LAMID			(IO_MFS6.LINUART.LAMID.byte)
#define	MFS6_LINUART_LAMID_P    	(IO_MFS6.LINUART.LAMID.bit.P)
#define	MFS6_LINUART_LAMID_LID    	(IO_MFS6.LINUART.LAMID.bit.LID)
#define	MFS6_LINUART_BGR			(IO_MFS6.LINUART.BGR)
#define	MFS6_LINUART_FCR1			(IO_MFS6.LINUART.FCR1.byte)
#define	MFS6_LINUART_FCR1_FLSTE    	(IO_MFS6.LINUART.FCR1.bit.FLSTE)
#define	MFS6_LINUART_FCR1_FRIIE    	(IO_MFS6.LINUART.FCR1.bit.FRIIE)
#define	MFS6_LINUART_FCR1_FDRQ    	(IO_MFS6.LINUART.FCR1.bit.FDRQ)
#define	MFS6_LINUART_FCR1_FTIE    	(IO_MFS6.LINUART.FCR1.bit.FTIE)
#define	MFS6_LINUART_FCR1_FSEL    	(IO_MFS6.LINUART.FCR1.bit.FSEL)
#define	MFS6_LINUART_FCR0			(IO_MFS6.LINUART.FCR0.byte)
#define	MFS6_LINUART_FCR0_FLST    	(IO_MFS6.LINUART.FCR0.bit.FLST)
#define	MFS6_LINUART_FCR0_FLD    	(IO_MFS6.LINUART.FCR0.bit.FLD)
#define	MFS6_LINUART_FCR0_FSET    	(IO_MFS6.LINUART.FCR0.bit.FSET)
#define	MFS6_LINUART_FCR0_FCL2    	(IO_MFS6.LINUART.FCR0.bit.FCL2)
#define	MFS6_LINUART_FCR0_FCL1    	(IO_MFS6.LINUART.FCR0.bit.FCL1)
#define	MFS6_LINUART_FCR0_FE2    	(IO_MFS6.LINUART.FCR0.bit.FE2)
#define	MFS6_LINUART_FCR0_FE1    	(IO_MFS6.LINUART.FCR0.bit.FE1)
#define	MFS6_LINUART_FBYTE 	(IO_MFS6.LINUART.FBYTE.hword)
#define	MFS6_LINUART_FBYTE2	(IO_MFS6.LINUART.FBYTE.byte.FBYTE2)
#define	MFS6_LINUART_FBYTE1	(IO_MFS6.LINUART.FBYTE.byte.FBYTE1)
#define	MFS6_LINUART_FTICR 	(IO_MFS6.LINUART.FTICR.hword)
#define	MFS6_LINUART_FTICR2	(IO_MFS6.LINUART.FTICR.byte.FTICR2)
#define	MFS6_LINUART_FTICR1	(IO_MFS6.LINUART.FTICR.byte.FTICR1)

#define	MFS6_I2C_IBCR			(IO_MFS6.I2C.IBCR.byte)
#define	MFS6_I2C_IBCR_MSS    	(IO_MFS6.I2C.IBCR.bit.MSS)
#define	MFS6_I2C_IBCR_ACT_SCC    	(IO_MFS6.I2C.IBCR.bit.ACT_SCC)
#define	MFS6_I2C_IBCR_ACKE    	(IO_MFS6.I2C.IBCR.bit.ACKE)
#define	MFS6_I2C_IBCR_WSEL    	(IO_MFS6.I2C.IBCR.bit.WSEL)
#define	MFS6_I2C_IBCR_CNDE    	(IO_MFS6.I2C.IBCR.bit.CNDE)
#define	MFS6_I2C_IBCR_INTE    	(IO_MFS6.I2C.IBCR.bit.INTE)
#define	MFS6_I2C_IBCR_BER    	(IO_MFS6.I2C.IBCR.bit.BER)
#define	MFS6_I2C_IBCR_INT    	(IO_MFS6.I2C.IBCR.bit.INT)
#define	MFS6_I2C_SMR			(IO_MFS6.I2C.SMR.byte)
#define	MFS6_I2C_SMR_MD    	(IO_MFS6.I2C.SMR.bit.MD)
#define	MFS6_I2C_SMR_RIE    	(IO_MFS6.I2C.SMR.bit.RIE)
#define	MFS6_I2C_SMR_TIE    	(IO_MFS6.I2C.SMR.bit.TIE)
#define	MFS6_I2C_SSR			(IO_MFS6.I2C.SSR.byte)
#define	MFS6_I2C_SSR_REC    	(IO_MFS6.I2C.SSR.bit.REC)
#define	MFS6_I2C_SSR_TSET    	(IO_MFS6.I2C.SSR.bit.TSET)
#define	MFS6_I2C_SSR_DMA    	(IO_MFS6.I2C.SSR.bit.DMA)
#define	MFS6_I2C_SSR_TBIE    	(IO_MFS6.I2C.SSR.bit.TBIE)
#define	MFS6_I2C_SSR_ORE    	(IO_MFS6.I2C.SSR.bit.ORE)
#define	MFS6_I2C_SSR_RDRF    	(IO_MFS6.I2C.SSR.bit.RDRF)
#define	MFS6_I2C_SSR_TDRE    	(IO_MFS6.I2C.SSR.bit.TDRE)
#define	MFS6_I2C_SSR_TBI    	(IO_MFS6.I2C.SSR.bit.TBI)
#define	MFS6_I2C_IBSR			(IO_MFS6.I2C.IBSR.byte)
#define	MFS6_I2C_IBSR_FBT    	(IO_MFS6.I2C.IBSR.bit.FBT)
#define	MFS6_I2C_IBSR_RACK    	(IO_MFS6.I2C.IBSR.bit.RACK)
#define	MFS6_I2C_IBSR_RSA    	(IO_MFS6.I2C.IBSR.bit.RSA)
#define	MFS6_I2C_IBSR_TRX    	(IO_MFS6.I2C.IBSR.bit.TRX)
#define	MFS6_I2C_IBSR_AL    	(IO_MFS6.I2C.IBSR.bit.AL)
#define	MFS6_I2C_IBSR_RSC    	(IO_MFS6.I2C.IBSR.bit.RSC)
#define	MFS6_I2C_IBSR_SPC    	(IO_MFS6.I2C.IBSR.bit.SPC)
#define	MFS6_I2C_IBSR_BB    	(IO_MFS6.I2C.IBSR.bit.BB)
#define	MFS6_I2C_RDR0	(IO_MFS6.I2C.RDR0)
#define	MFS6_I2C_TDR0	(IO_MFS6.I2C.RDR0)
#define	MFS6_I2C_SACSR			(IO_MFS6.I2C.SACSR.hword)
#define	MFS6_I2C_SACSR_TRG    	(IO_MFS6.I2C.SACSR.bit.TRG)
#define	MFS6_I2C_SACSR_TINT    	(IO_MFS6.I2C.SACSR.bit.TINT)
#define	MFS6_I2C_SACSR_TINTE    	(IO_MFS6.I2C.SACSR.bit.TINTE)
#define	MFS6_I2C_SACSR_TRGE    	(IO_MFS6.I2C.SACSR.bit.TRGE)
#define	MFS6_I2C_SACSR_TDIV    	(IO_MFS6.I2C.SACSR.bit.TDIV)
#define	MFS6_I2C_SACSR_TMRE    	(IO_MFS6.I2C.SACSR.bit.TMRE)
#define	MFS6_I2C_STMR	(IO_MFS6.I2C.STMR)
#define	MFS6_I2C_STMCR	(IO_MFS6.I2C.STMCR)
#define	MFS6_I2C_BGR	(IO_MFS6.I2C.BGR)
#define	MFS6_I2C_ISMK			(IO_MFS6.I2C.ISMK.byte)
#define	MFS6_I2C_ISMK_EN    	(IO_MFS6.I2C.ISMK.bit.EN)
#define	MFS6_I2C_ISMK_SM    	(IO_MFS6.I2C.ISMK.bit.SM)
#define	MFS6_I2C_ISBA			(IO_MFS6.I2C.ISBA.byte)
#define	MFS6_I2C_ISBA_SAEN    	(IO_MFS6.I2C.ISBA.bit.SAEN)
#define	MFS6_I2C_ISBA_SA    	(IO_MFS6.I2C.ISBA.bit.SA)
#define	MFS6_I2C_FCR1			(IO_MFS6.I2C.FCR1.byte)
#define	MFS6_I2C_FCR1_FLSTE    	(IO_MFS6.I2C.FCR1.bit.FLSTE)
#define	MFS6_I2C_FCR1_FRIIE    	(IO_MFS6.I2C.FCR1.bit.FRIIE)
#define	MFS6_I2C_FCR1_FDRQ    	(IO_MFS6.I2C.FCR1.bit.FDRQ)
#define	MFS6_I2C_FCR1_FTIE    	(IO_MFS6.I2C.FCR1.bit.FTIE)
#define	MFS6_I2C_FCR1_FSEL    	(IO_MFS6.I2C.FCR1.bit.FSEL)
#define	MFS6_I2C_FCR0			(IO_MFS6.I2C.FCR0.byte)
#define	MFS6_I2C_FCR0_FLST    	(IO_MFS6.I2C.FCR0.bit.FLST)
#define	MFS6_I2C_FCR0_FLD    	(IO_MFS6.I2C.FCR0.bit.FLD)
#define	MFS6_I2C_FCR0_FSET    	(IO_MFS6.I2C.FCR0.bit.FSET)
#define	MFS6_I2C_FCR0_FCL2    	(IO_MFS6.I2C.FCR0.bit.FCL2)
#define	MFS6_I2C_FCR0_FCL1    	(IO_MFS6.I2C.FCR0.bit.FCL1)
#define	MFS6_I2C_FCR0_FE2    	(IO_MFS6.I2C.FCR0.bit.FE2)
#define	MFS6_I2C_FCR0_FE1    	(IO_MFS6.I2C.FCR0.bit.FE1)
#define	MFS6_I2C_FBYTE 	(IO_MFS6.I2C.FBYTE.hword)
#define	MFS6_I2C_FBYTE2	(IO_MFS6.I2C.FBYTE.byte.FBYTE2)
#define	MFS6_I2C_FBYTE1	(IO_MFS6.I2C.FBYTE.byte.FBYTE1)
#define	MFS6_I2C_FTICR 	(IO_MFS6.I2C.FTICR.hword)
#define	MFS6_I2C_FTICR2	(IO_MFS6.I2C.FTICR.byte.FTICR2)
#define	MFS6_I2C_FTICR1	(IO_MFS6.I2C.FTICR.byte.FTICR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MFS7,attr=IO,locate=0x1868
#endif

__IO_EXTENDED	MFSSTR	IO_MFS7;

#define	MFS7_UART_SCR			(IO_MFS7.UART.SCR.byte)
#define	MFS7_UART_SCR_UPCL    	(IO_MFS7.UART.SCR.bit.UPCL)
#define	MFS7_UART_SCR_RIE    	(IO_MFS7.UART.SCR.bit.RIE)
#define	MFS7_UART_SCR_TIE    	(IO_MFS7.UART.SCR.bit.TIE)
#define	MFS7_UART_SCR_TBIE    	(IO_MFS7.UART.SCR.bit.TBIE)
#define	MFS7_UART_SCR_RXE    	(IO_MFS7.UART.SCR.bit.RXE)
#define	MFS7_UART_SCR_TXE    	(IO_MFS7.UART.SCR.bit.TXE)
#define	MFS7_UART_SMR			(IO_MFS7.UART.SMR.byte)
#define	MFS7_UART_SMR_MD    	(IO_MFS7.UART.SMR.bit.MD)
#define	MFS7_UART_SMR_SBL    	(IO_MFS7.UART.SMR.bit.SBL)
#define	MFS7_UART_SMR_BDS    	(IO_MFS7.UART.SMR.bit.BDS)
#define	MFS7_UART_SMR_SOE    	(IO_MFS7.UART.SMR.bit.SOE)
#define	MFS7_UART_SSR			(IO_MFS7.UART.SSR.byte)
#define	MFS7_UART_SSR_REC    	(IO_MFS7.UART.SSR.bit.REC)
#define	MFS7_UART_SSR_PE    	(IO_MFS7.UART.SSR.bit.PE)
#define	MFS7_UART_SSR_FRE    	(IO_MFS7.UART.SSR.bit.FRE)
#define	MFS7_UART_SSR_ORE    	(IO_MFS7.UART.SSR.bit.ORE)
#define	MFS7_UART_SSR_RDRF    	(IO_MFS7.UART.SSR.bit.RDRF)
#define	MFS7_UART_SSR_TDRE    	(IO_MFS7.UART.SSR.bit.TDRE)
#define	MFS7_UART_SSR_TBI    	(IO_MFS7.UART.SSR.bit.TBI)
#define	MFS7_UART_ESCR			(IO_MFS7.UART.ESCR.byte)
#define	MFS7_UART_ESCR_FLWEN    	(IO_MFS7.UART.ESCR.bit.FLWEN)
#define	MFS7_UART_ESCR_ESBL    	(IO_MFS7.UART.ESCR.bit.ESBL)
#define	MFS7_UART_ESCR_INV    	(IO_MFS7.UART.ESCR.bit.INV)
#define	MFS7_UART_ESCR_PEN    	(IO_MFS7.UART.ESCR.bit.PEN)
#define	MFS7_UART_ESCR_P    	(IO_MFS7.UART.ESCR.bit.P)
#define	MFS7_UART_ESCR_L    	(IO_MFS7.UART.ESCR.bit.L)
#define	MFS7_UART_RDR0	(IO_MFS7.UART.RDR0.hword)
#define	MFS7_UART_RDR0_RDR0L	(IO_MFS7.UART.RDR0.byte.RDR0L)
#define	MFS7_UART_RDR0_bit9	(IO_MFS7.UART.RDR0.bit9.D)
#define	MFS7_UART_RDR0_bit7	(IO_MFS7.UART.RDR0.bit7.D)
#define	MFS7_UART_RDR0_bit6	(IO_MFS7.UART.RDR0.bit6.D)
#define	MFS7_UART_RDR0_bit5	(IO_MFS7.UART.RDR0.bit5.D)
#define	MFS7_UART_TDR0	(IO_MFS7.UART.RDR0.hword)
#define	MFS7_UART_TDR0_TDR0L	(IO_MFS7.UART.RDR0.byte.RDR0L)
#define	MFS7_UART_TDR0_bit9	(IO_MFS7.UART.RDR0.bit9.D)
#define	MFS7_UART_TDR0_bit7	(IO_MFS7.UART.RDR0.bit7.D)
#define	MFS7_UART_TDR0_bit6	(IO_MFS7.UART.RDR0.bit6.D)
#define	MFS7_UART_TDR0_bit5	(IO_MFS7.UART.RDR0.bit5.D)
#define	MFS7_UART_SACSR			(IO_MFS7.UART.SACSR.hword)
#define	MFS7_UART_SACSR_STST    	(IO_MFS7.UART.SACSR.bit.STST)
#define	MFS7_UART_SACSR_TRG    	(IO_MFS7.UART.SACSR.bit.TRG)
#define	MFS7_UART_SACSR_TINT    	(IO_MFS7.UART.SACSR.bit.TINT)
#define	MFS7_UART_SACSR_TINTE    	(IO_MFS7.UART.SACSR.bit.TINTE)
#define	MFS7_UART_SACSR_TSYNE    	(IO_MFS7.UART.SACSR.bit.TSYNE)
#define	MFS7_UART_SACSR_TRGE    	(IO_MFS7.UART.SACSR.bit.TRGE)
#define	MFS7_UART_SACSR_TDIV    	(IO_MFS7.UART.SACSR.bit.TDIV)
#define	MFS7_UART_SACSR_TMRE    	(IO_MFS7.UART.SACSR.bit.TMRE)
#define	MFS7_UART_STMR	(IO_MFS7.UART.STMR)
#define	MFS7_UART_STMCR	(IO_MFS7.UART.STMCR)
#define	MFS7_UART_TBYTE0	(IO_MFS7.UART.TBYTE0)
#define	MFS7_UART_BGR			(IO_MFS7.UART.BGR)
#define	MFS7_UART_FCR1			(IO_MFS7.UART.FCR1.byte)
#define	MFS7_UART_FCR1_FLSTE    	(IO_MFS7.UART.FCR1.bit.FLSTE)
#define	MFS7_UART_FCR1_FRIIE    	(IO_MFS7.UART.FCR1.bit.FRIIE)
#define	MFS7_UART_FCR1_FDRQ    	(IO_MFS7.UART.FCR1.bit.FDRQ)
#define	MFS7_UART_FCR1_FTIE    	(IO_MFS7.UART.FCR1.bit.FTIE)
#define	MFS7_UART_FCR1_FSEL    	(IO_MFS7.UART.FCR1.bit.FSEL)
#define	MFS7_UART_FCR0			(IO_MFS7.UART.FCR0.byte)
#define	MFS7_UART_FCR0_FLST    	(IO_MFS7.UART.FCR0.bit.FLST)
#define	MFS7_UART_FCR0_FLD    	(IO_MFS7.UART.FCR0.bit.FLD)
#define	MFS7_UART_FCR0_FSET    	(IO_MFS7.UART.FCR0.bit.FSET)
#define	MFS7_UART_FCR0_FCL2    	(IO_MFS7.UART.FCR0.bit.FCL2)
#define	MFS7_UART_FCR0_FCL1    	(IO_MFS7.UART.FCR0.bit.FCL1)
#define	MFS7_UART_FCR0_FE2    	(IO_MFS7.UART.FCR0.bit.FE2)
#define	MFS7_UART_FCR0_FE1    	(IO_MFS7.UART.FCR0.bit.FE1)
#define	MFS7_UART_FBYTE 	(IO_MFS7.UART.FBYTE.hword)
#define	MFS7_UART_FBYTE2	(IO_MFS7.UART.FBYTE.byte.FBYTE2)
#define	MFS7_UART_FBYTE1	(IO_MFS7.UART.FBYTE.byte.FBYTE1)
#define	MFS7_UART_FTICR 	(IO_MFS7.UART.FTICR.hword)
#define	MFS7_UART_FTICR2	(IO_MFS7.UART.FTICR.byte.FTICR2)
#define	MFS7_UART_FTICR1	(IO_MFS7.UART.FTICR.byte.FTICR1)

#define	MFS7_CSIO_SCR			(IO_MFS7.CSIO.SCR.byte)
#define	MFS7_CSIO_SCR_UPCL    	(IO_MFS7.CSIO.SCR.bit.UPCL)
#define	MFS7_CSIO_SCR_MS    	(IO_MFS7.CSIO.SCR.bit.MS)
#define	MFS7_CSIO_SCR_SPI    	(IO_MFS7.CSIO.SCR.bit.SPI)
#define	MFS7_CSIO_SCR_RIE    	(IO_MFS7.CSIO.SCR.bit.RIE)
#define	MFS7_CSIO_SCR_TIE    	(IO_MFS7.CSIO.SCR.bit.TIE)
#define	MFS7_CSIO_SCR_TBIE    	(IO_MFS7.CSIO.SCR.bit.TBIE)
#define	MFS7_CSIO_SCR_RXE    	(IO_MFS7.CSIO.SCR.bit.RXE)
#define	MFS7_CSIO_SCR_TXE    	(IO_MFS7.CSIO.SCR.bit.TXE)
#define	MFS7_CSIO_SMR			(IO_MFS7.CSIO.SMR.byte)
#define	MFS7_CSIO_SMR_MD    	(IO_MFS7.CSIO.SMR.bit.MD)
#define	MFS7_CSIO_SMR_SCINV    	(IO_MFS7.CSIO.SMR.bit.SCINV)
#define	MFS7_CSIO_SMR_BDS    	(IO_MFS7.CSIO.SMR.bit.BDS)
#define	MFS7_CSIO_SMR_SCKE    	(IO_MFS7.CSIO.SMR.bit.SCKE)
#define	MFS7_CSIO_SMR_SOE    	(IO_MFS7.CSIO.SMR.bit.SOE)
#define	MFS7_CSIO_SSR			(IO_MFS7.CSIO.SSR.byte)
#define	MFS7_CSIO_SSR_REC    	(IO_MFS7.CSIO.SSR.bit.REC)
#define	MFS7_CSIO_SSR_ES    	(IO_MFS7.CSIO.SSR.bit.ES)
#define	MFS7_CSIO_SSR_AWC    	(IO_MFS7.CSIO.SSR.bit.AWC)
#define	MFS7_CSIO_SSR_ORE    	(IO_MFS7.CSIO.SSR.bit.ORE)
#define	MFS7_CSIO_SSR_RDRF    	(IO_MFS7.CSIO.SSR.bit.RDRF)
#define	MFS7_CSIO_SSR_TDRE    	(IO_MFS7.CSIO.SSR.bit.TDRE)
#define	MFS7_CSIO_SSR_TBI    	(IO_MFS7.CSIO.SSR.bit.TBI)
#define	MFS7_CSIO_ESCR			(IO_MFS7.CSIO.ESCR.byte)
#define	MFS7_CSIO_ESCR_SOP    	(IO_MFS7.CSIO.ESCR.bit.SOP)
#define	MFS7_CSIO_ESCR_L3    	(IO_MFS7.CSIO.ESCR.bit.L3)
#define	MFS7_CSIO_ESCR_CSFE    	(IO_MFS7.CSIO.ESCR.bit.CSFE)
#define	MFS7_CSIO_ESCR_WT    	(IO_MFS7.CSIO.ESCR.bit.WT)
#define	MFS7_CSIO_ESCR_L    	(IO_MFS7.CSIO.ESCR.bit.L)
#define	MFS7_CSIO_RDR	(IO_MFS7.CSIO.RDR.word)
#define	MFS7_CSIO_RDR1	(IO_MFS7.CSIO.RDR.hword.RDR1)
#define	MFS7_CSIO_RDR0	(IO_MFS7.CSIO.RDR.hword.RDR0)
#define	MFS7_CSIO_TDR	(IO_MFS7.CSIO.RDR.word)
#define	MFS7_CSIO_TDR1	(IO_MFS7.CSIO.RDR.hword.RDR1)
#define	MFS7_CSIO_TDR0	(IO_MFS7.CSIO.RDR.hword.RDR0)
#define	MFS7_CSIO_SACSR			(IO_MFS7.CSIO.SACSR.hword)
#define	MFS7_CSIO_SACSR_STST    	(IO_MFS7.CSIO.SACSR.bit.STST)
#define	MFS7_CSIO_SACSR_TBEEN    	(IO_MFS7.CSIO.SACSR.bit.TBEEN)
#define	MFS7_CSIO_SACSR_CSEIE    	(IO_MFS7.CSIO.SACSR.bit.CSEIE)
#define	MFS7_CSIO_SACSR_CSE    	(IO_MFS7.CSIO.SACSR.bit.CSE)
#define	MFS7_CSIO_SACSR_TRG    	(IO_MFS7.CSIO.SACSR.bit.TRG)
#define	MFS7_CSIO_SACSR_TINT    	(IO_MFS7.CSIO.SACSR.bit.TINT)
#define	MFS7_CSIO_SACSR_TINTE    	(IO_MFS7.CSIO.SACSR.bit.TINTE)
#define	MFS7_CSIO_SACSR_TSYNE    	(IO_MFS7.CSIO.SACSR.bit.TSYNE)
#define	MFS7_CSIO_SACSR_TRGE    	(IO_MFS7.CSIO.SACSR.bit.TRGE)
#define	MFS7_CSIO_SACSR_TDIV    	(IO_MFS7.CSIO.SACSR.bit.TDIV)
#define	MFS7_CSIO_SACSR_TMRE    	(IO_MFS7.CSIO.SACSR.bit.TMRE)
#define	MFS7_CSIO_STMR	(IO_MFS7.CSIO.STMR)
#define	MFS7_CSIO_STMCR	(IO_MFS7.CSIO.STMCR)
#define	MFS7_CSIO_SCSCR			(IO_MFS7.CSIO.SCSCR.hword)
#define	MFS7_CSIO_SCSCR_SST    	(IO_MFS7.CSIO.SCSCR.bit.SST)
#define	MFS7_CSIO_SCSCR_SED    	(IO_MFS7.CSIO.SCSCR.bit.SED)
#define	MFS7_CSIO_SCSCR_SCD    	(IO_MFS7.CSIO.SCSCR.bit.SCD)
#define	MFS7_CSIO_SCSCR_SCAM    	(IO_MFS7.CSIO.SCSCR.bit.SCAM)
#define	MFS7_CSIO_SCSCR_CDIV    	(IO_MFS7.CSIO.SCSCR.bit.CDIV)
#define	MFS7_CSIO_SCSCR_CSLVL    	(IO_MFS7.CSIO.SCSCR.bit.CSLVL)
#define	MFS7_CSIO_SCSCR_CSEN3    	(IO_MFS7.CSIO.SCSCR.bit.CSEN3)
#define	MFS7_CSIO_SCSCR_CSEN2    	(IO_MFS7.CSIO.SCSCR.bit.CSEN2)
#define	MFS7_CSIO_SCSCR_CSEN1    	(IO_MFS7.CSIO.SCSCR.bit.CSEN1)
#define	MFS7_CSIO_SCSCR_CSEN0    	(IO_MFS7.CSIO.SCSCR.bit.CSEN0)
#define	MFS7_CSIO_SCSCR_CSOE    	(IO_MFS7.CSIO.SCSCR.bit.CSOE)
#define	MFS7_CSIO_SCSTR	(IO_MFS7.CSIO.SCSTR.word)
#define	MFS7_CSIO_SCSTR32	(IO_MFS7.CSIO.SCSTR.hword.SCSTR32)
#define	MFS7_CSIO_SCSTR3	(IO_MFS7.CSIO.SCSTR.byte.SCSTR3)
#define	MFS7_CSIO_SCSTR2	(IO_MFS7.CSIO.SCSTR.byte.SCSTR2)
#define	MFS7_CSIO_SCSTR10	(IO_MFS7.CSIO.SCSTR.hword.SCSTR10)
#define	MFS7_CSIO_SCSTR1	(IO_MFS7.CSIO.SCSTR.byte.SCSTR1)
#define	MFS7_CSIO_SCSTR0	(IO_MFS7.CSIO.SCSTR.byte.SCSTR0)
#define	MFS7_CSIO_SCSFR2			(IO_MFS7.CSIO.SCSFR2.byte)
#define	MFS7_CSIO_SCSFR2_CSLVL    	(IO_MFS7.CSIO.SCSFR2.bit.CSLVL)
#define	MFS7_CSIO_SCSFR2_SCINV    	(IO_MFS7.CSIO.SCSFR2.bit.SCINV)
#define	MFS7_CSIO_SCSFR2_SPI    	(IO_MFS7.CSIO.SCSFR2.bit.SPI)
#define	MFS7_CSIO_SCSFR2_BDS    	(IO_MFS7.CSIO.SCSFR2.bit.BDS)
#define	MFS7_CSIO_SCSFR2_L    	(IO_MFS7.CSIO.SCSFR2.bit.L)
#define	MFS7_CSIO_SCSFR1			(IO_MFS7.CSIO.SCSFR1.byte)
#define	MFS7_CSIO_SCSFR1_CSLVL    	(IO_MFS7.CSIO.SCSFR1.bit.CSLVL)
#define	MFS7_CSIO_SCSFR1_SCINV    	(IO_MFS7.CSIO.SCSFR1.bit.SCINV)
#define	MFS7_CSIO_SCSFR1_SPI    	(IO_MFS7.CSIO.SCSFR1.bit.SPI)
#define	MFS7_CSIO_SCSFR1_BDS    	(IO_MFS7.CSIO.SCSFR1.bit.BDS)
#define	MFS7_CSIO_SCSFR1_L    	(IO_MFS7.CSIO.SCSFR1.bit.L)
#define	MFS7_CSIO_SCSFR0			(IO_MFS7.CSIO.SCSFR0.byte)
#define	MFS7_CSIO_SCSFR0_CSLVL    	(IO_MFS7.CSIO.SCSFR0.bit.CSLVL)
#define	MFS7_CSIO_SCSFR0_SCINV    	(IO_MFS7.CSIO.SCSFR0.bit.SCINV)
#define	MFS7_CSIO_SCSFR0_SPI    	(IO_MFS7.CSIO.SCSFR0.bit.SPI)
#define	MFS7_CSIO_SCSFR0_BDS    	(IO_MFS7.CSIO.SCSFR0.bit.BDS)
#define	MFS7_CSIO_SCSFR0_L    	(IO_MFS7.CSIO.SCSFR0.bit.L)
#define	MFS7_CSIO_TBYTE3	(IO_MFS7.CSIO.TBYTE3)
#define	MFS7_CSIO_TBYTE2	(IO_MFS7.CSIO.TBYTE2)
#define	MFS7_CSIO_TBYTE1	(IO_MFS7.CSIO.TBYTE1)
#define	MFS7_CSIO_TBYTE0	(IO_MFS7.CSIO.TBYTE0)
#define	MFS7_CSIO_BGR			(IO_MFS7.CSIO.BGR)
#define	MFS7_CSIO_FCR1			(IO_MFS7.CSIO.FCR1.byte)
#define	MFS7_CSIO_FCR1_FLSTE    	(IO_MFS7.CSIO.FCR1.bit.FLSTE)
#define	MFS7_CSIO_FCR1_FRIIE    	(IO_MFS7.CSIO.FCR1.bit.FRIIE)
#define	MFS7_CSIO_FCR1_FDRQ    	(IO_MFS7.CSIO.FCR1.bit.FDRQ)
#define	MFS7_CSIO_FCR1_FTIE    	(IO_MFS7.CSIO.FCR1.bit.FTIE)
#define	MFS7_CSIO_FCR1_FSEL    	(IO_MFS7.CSIO.FCR1.bit.FSEL)
#define	MFS7_CSIO_FCR0			(IO_MFS7.CSIO.FCR0.byte)
#define	MFS7_CSIO_FCR0_FLST    	(IO_MFS7.CSIO.FCR0.bit.FLST)
#define	MFS7_CSIO_FCR0_FLD    	(IO_MFS7.CSIO.FCR0.bit.FLD)
#define	MFS7_CSIO_FCR0_FSET    	(IO_MFS7.CSIO.FCR0.bit.FSET)
#define	MFS7_CSIO_FCR0_FCL2    	(IO_MFS7.CSIO.FCR0.bit.FCL2)
#define	MFS7_CSIO_FCR0_FCL1    	(IO_MFS7.CSIO.FCR0.bit.FCL1)
#define	MFS7_CSIO_FCR0_FE2    	(IO_MFS7.CSIO.FCR0.bit.FE2)
#define	MFS7_CSIO_FCR0_FE1    	(IO_MFS7.CSIO.FCR0.bit.FE1)
#define	MFS7_CSIO_FBYTE 	(IO_MFS7.CSIO.FBYTE.hword)
#define	MFS7_CSIO_FBYTE2	(IO_MFS7.CSIO.FBYTE.byte.FBYTE2)
#define	MFS7_CSIO_FBYTE1	(IO_MFS7.CSIO.FBYTE.byte.FBYTE1)
#define	MFS7_CSIO_FTICR 	(IO_MFS7.CSIO.FTICR.hword)
#define	MFS7_CSIO_FTICR2	(IO_MFS7.CSIO.FTICR.byte.FTICR2)
#define	MFS7_CSIO_FTICR1	(IO_MFS7.CSIO.FTICR.byte.FTICR1)

#define	MFS7_LINUART_SCR			(IO_MFS7.LINUART.SCR.byte)
#define	MFS7_LINUART_SCR_UPCL    	(IO_MFS7.LINUART.SCR.bit.UPCL)
#define	MFS7_LINUART_SCR_MS    	(IO_MFS7.LINUART.SCR.bit.MS)
#define	MFS7_LINUART_SCR_LBR    	(IO_MFS7.LINUART.SCR.bit.LBR)
#define	MFS7_LINUART_SCR_RIE    	(IO_MFS7.LINUART.SCR.bit.RIE)
#define	MFS7_LINUART_SCR_TIE    	(IO_MFS7.LINUART.SCR.bit.TIE)
#define	MFS7_LINUART_SCR_TBIE    	(IO_MFS7.LINUART.SCR.bit.TBIE)
#define	MFS7_LINUART_SCR_RXE    	(IO_MFS7.LINUART.SCR.bit.RXE)
#define	MFS7_LINUART_SCR_TXE    	(IO_MFS7.LINUART.SCR.bit.TXE)
#define	MFS7_LINUART_SMR			(IO_MFS7.LINUART.SMR.byte)
#define	MFS7_LINUART_SMR_MD    	(IO_MFS7.LINUART.SMR.bit.MD)
#define	MFS7_LINUART_SMR_SBL    	(IO_MFS7.LINUART.SMR.bit.SBL)
#define	MFS7_LINUART_SMR_SOE    	(IO_MFS7.LINUART.SMR.bit.SOE)
#define	MFS7_LINUART_SSR			(IO_MFS7.LINUART.SSR.byte)
#define	MFS7_LINUART_SSR_REC    	(IO_MFS7.LINUART.SSR.bit.REC)
#define	MFS7_LINUART_SSR_LBD    	(IO_MFS7.LINUART.SSR.bit.LBD)
#define	MFS7_LINUART_SSR_FRE    	(IO_MFS7.LINUART.SSR.bit.FRE)
#define	MFS7_LINUART_SSR_ORE    	(IO_MFS7.LINUART.SSR.bit.ORE)
#define	MFS7_LINUART_SSR_RDRF    	(IO_MFS7.LINUART.SSR.bit.RDRF)
#define	MFS7_LINUART_SSR_TDRE    	(IO_MFS7.LINUART.SSR.bit.TDRE)
#define	MFS7_LINUART_SSR_TBI    	(IO_MFS7.LINUART.SSR.bit.TBI)
#define	MFS7_LINUART_ESCR			(IO_MFS7.LINUART.ESCR.byte)
#define	MFS7_LINUART_ESCR_ESBL    	(IO_MFS7.LINUART.ESCR.bit.ESBL)
#define	MFS7_LINUART_ESCR_LBIE    	(IO_MFS7.LINUART.ESCR.bit.LBIE)
#define	MFS7_LINUART_ESCR_LBL    	(IO_MFS7.LINUART.ESCR.bit.LBL)
#define	MFS7_LINUART_ESCR_DEL    	(IO_MFS7.LINUART.ESCR.bit.DEL)
#define	MFS7_LINUART_RDR0	(IO_MFS7.LINUART.RDR0)
#define	MFS7_LINUART_TDR0	(IO_MFS7.LINUART.RDR0)
#define	MFS7_LINUART_SACSR			(IO_MFS7.LINUART.SACSR.hword)
#define	MFS7_LINUART_SACSR_STST    	(IO_MFS7.LINUART.SACSR.bit.STST)
#define	MFS7_LINUART_SACSR_BST    	(IO_MFS7.LINUART.SACSR.bit.BST)
#define	MFS7_LINUART_SACSR_SFD    	(IO_MFS7.LINUART.SACSR.bit.SFD)
#define	MFS7_LINUART_SACSR_SFDE    	(IO_MFS7.LINUART.SACSR.bit.SFDE)
#define	MFS7_LINUART_SACSR_AUTE    	(IO_MFS7.LINUART.SACSR.bit.AUTE)
#define	MFS7_LINUART_SACSR_TRG    	(IO_MFS7.LINUART.SACSR.bit.TRG)
#define	MFS7_LINUART_SACSR_TINT    	(IO_MFS7.LINUART.SACSR.bit.TINT)
#define	MFS7_LINUART_SACSR_TINTE    	(IO_MFS7.LINUART.SACSR.bit.TINTE)
#define	MFS7_LINUART_SACSR_TSYNE    	(IO_MFS7.LINUART.SACSR.bit.TSYNE)
#define	MFS7_LINUART_SACSR_TRGE    	(IO_MFS7.LINUART.SACSR.bit.TRGE)
#define	MFS7_LINUART_SACSR_TDIV    	(IO_MFS7.LINUART.SACSR.bit.TDIV)
#define	MFS7_LINUART_SACSR_TMRE    	(IO_MFS7.LINUART.SACSR.bit.TMRE)
#define	MFS7_LINUART_STMR	(IO_MFS7.LINUART.STMR)
#define	MFS7_LINUART_STMCR	(IO_MFS7.LINUART.STMCR)
#define	MFS7_LINUART_SFUR	(IO_MFS7.LINUART.SFUR)
#define	MFS7_LINUART_LAMSR			(IO_MFS7.LINUART.LAMSR.byte)
#define	MFS7_LINUART_LAMSR_LER    	(IO_MFS7.LINUART.LAMSR.bit.LER)
#define	MFS7_LINUART_LAMSR_SER    	(IO_MFS7.LINUART.LAMSR.bit.SER)
#define	MFS7_LINUART_LAMSR_RDRF    	(IO_MFS7.LINUART.LAMSR.bit.RDRF)
#define	MFS7_LINUART_LAMSR_TDRE    	(IO_MFS7.LINUART.LAMSR.bit.TDRE)
#define	MFS7_LINUART_LAMSR_TBI    	(IO_MFS7.LINUART.LAMSR.bit.TBI)
#define	MFS7_LINUART_LAMSR_LCSC    	(IO_MFS7.LINUART.LAMSR.bit.LCSC)
#define	MFS7_LINUART_LAMSR_LAHC    	(IO_MFS7.LINUART.LAMSR.bit.LAHC)
#define	MFS7_LINUART_LAMCR			(IO_MFS7.LINUART.LAMCR.byte)
#define	MFS7_LINUART_LAMCR_LDL    	(IO_MFS7.LINUART.LAMCR.bit.LDL)
#define	MFS7_LINUART_LAMCR_LTDRCL    	(IO_MFS7.LINUART.LAMCR.bit.LTDRCL)
#define	MFS7_LINUART_LAMCR_LCSTYP    	(IO_MFS7.LINUART.LAMCR.bit.LCSTYP)
#define	MFS7_LINUART_LAMCR_LIDEN    	(IO_MFS7.LINUART.LAMCR.bit.LIDEN)
#define	MFS7_LINUART_LAMCR_LAMEN    	(IO_MFS7.LINUART.LAMCR.bit.LAMEN)
#define	MFS7_LINUART_SFLR	(IO_MFS7.LINUART.SFLR.hword)
#define	MFS7_LINUART_SFLR1	(IO_MFS7.LINUART.SFLR.byte.SFLR1)
#define	MFS7_LINUART_SFLR0	(IO_MFS7.LINUART.SFLR.byte.SFLR0)
#define	MFS7_LINUART_LAMESR			(IO_MFS7.LINUART.LAMESR.byte)
#define	MFS7_LINUART_LAMESR_LCSER    	(IO_MFS7.LINUART.LAMESR.bit.LCSER)
#define	MFS7_LINUART_LAMESR_LPTER    	(IO_MFS7.LINUART.LAMESR.bit.LPTER)
#define	MFS7_LINUART_LAMESR_LSFER    	(IO_MFS7.LINUART.LAMESR.bit.LSFER)
#define	MFS7_LINUART_LAMESR_LBSER    	(IO_MFS7.LINUART.LAMESR.bit.LBSER)
#define	MFS7_LINUART_LAMERT			(IO_MFS7.LINUART.LAMERT.byte)
#define	MFS7_LINUART_LAMERT_KEY    	(IO_MFS7.LINUART.LAMERT.bit.KEY)
#define	MFS7_LINUART_LAMERT_LCSERT    	(IO_MFS7.LINUART.LAMERT.bit.LCSERT)
#define	MFS7_LINUART_LAMERT_LPTERT    	(IO_MFS7.LINUART.LAMERT.bit.LPTERT)
#define	MFS7_LINUART_LAMERT_LSFERT    	(IO_MFS7.LINUART.LAMERT.bit.LSFERT)
#define	MFS7_LINUART_LAMERT_LBSERT    	(IO_MFS7.LINUART.LAMERT.bit.LBSERT)
#define	MFS7_LINUART_LAMERT_FRET    	(IO_MFS7.LINUART.LAMERT.bit.FRET)
#define	MFS7_LINUART_LAMIER			(IO_MFS7.LINUART.LAMIER.byte)
#define	MFS7_LINUART_LAMIER_LCSERIE    	(IO_MFS7.LINUART.LAMIER.bit.LCSERIE)
#define	MFS7_LINUART_LAMIER_LPTERIE    	(IO_MFS7.LINUART.LAMIER.bit.LPTERIE)
#define	MFS7_LINUART_LAMIER_LSFERIE    	(IO_MFS7.LINUART.LAMIER.bit.LSFERIE)
#define	MFS7_LINUART_LAMIER_LBSERIE    	(IO_MFS7.LINUART.LAMIER.bit.LBSERIE)
#define	MFS7_LINUART_LAMIER_LCSCIE    	(IO_MFS7.LINUART.LAMIER.bit.LCSCIE)
#define	MFS7_LINUART_LAMIER_LAHCIE    	(IO_MFS7.LINUART.LAMIER.bit.LAHCIE)
#define	MFS7_LINUART_LAMID			(IO_MFS7.LINUART.LAMID.byte)
#define	MFS7_LINUART_LAMID_P    	(IO_MFS7.LINUART.LAMID.bit.P)
#define	MFS7_LINUART_LAMID_LID    	(IO_MFS7.LINUART.LAMID.bit.LID)
#define	MFS7_LINUART_BGR			(IO_MFS7.LINUART.BGR)
#define	MFS7_LINUART_FCR1			(IO_MFS7.LINUART.FCR1.byte)
#define	MFS7_LINUART_FCR1_FLSTE    	(IO_MFS7.LINUART.FCR1.bit.FLSTE)
#define	MFS7_LINUART_FCR1_FRIIE    	(IO_MFS7.LINUART.FCR1.bit.FRIIE)
#define	MFS7_LINUART_FCR1_FDRQ    	(IO_MFS7.LINUART.FCR1.bit.FDRQ)
#define	MFS7_LINUART_FCR1_FTIE    	(IO_MFS7.LINUART.FCR1.bit.FTIE)
#define	MFS7_LINUART_FCR1_FSEL    	(IO_MFS7.LINUART.FCR1.bit.FSEL)
#define	MFS7_LINUART_FCR0			(IO_MFS7.LINUART.FCR0.byte)
#define	MFS7_LINUART_FCR0_FLST    	(IO_MFS7.LINUART.FCR0.bit.FLST)
#define	MFS7_LINUART_FCR0_FLD    	(IO_MFS7.LINUART.FCR0.bit.FLD)
#define	MFS7_LINUART_FCR0_FSET    	(IO_MFS7.LINUART.FCR0.bit.FSET)
#define	MFS7_LINUART_FCR0_FCL2    	(IO_MFS7.LINUART.FCR0.bit.FCL2)
#define	MFS7_LINUART_FCR0_FCL1    	(IO_MFS7.LINUART.FCR0.bit.FCL1)
#define	MFS7_LINUART_FCR0_FE2    	(IO_MFS7.LINUART.FCR0.bit.FE2)
#define	MFS7_LINUART_FCR0_FE1    	(IO_MFS7.LINUART.FCR0.bit.FE1)
#define	MFS7_LINUART_FBYTE 	(IO_MFS7.LINUART.FBYTE.hword)
#define	MFS7_LINUART_FBYTE2	(IO_MFS7.LINUART.FBYTE.byte.FBYTE2)
#define	MFS7_LINUART_FBYTE1	(IO_MFS7.LINUART.FBYTE.byte.FBYTE1)
#define	MFS7_LINUART_FTICR 	(IO_MFS7.LINUART.FTICR.hword)
#define	MFS7_LINUART_FTICR2	(IO_MFS7.LINUART.FTICR.byte.FTICR2)
#define	MFS7_LINUART_FTICR1	(IO_MFS7.LINUART.FTICR.byte.FTICR1)

#define	MFS7_I2C_IBCR			(IO_MFS7.I2C.IBCR.byte)
#define	MFS7_I2C_IBCR_MSS    	(IO_MFS7.I2C.IBCR.bit.MSS)
#define	MFS7_I2C_IBCR_ACT_SCC    	(IO_MFS7.I2C.IBCR.bit.ACT_SCC)
#define	MFS7_I2C_IBCR_ACKE    	(IO_MFS7.I2C.IBCR.bit.ACKE)
#define	MFS7_I2C_IBCR_WSEL    	(IO_MFS7.I2C.IBCR.bit.WSEL)
#define	MFS7_I2C_IBCR_CNDE    	(IO_MFS7.I2C.IBCR.bit.CNDE)
#define	MFS7_I2C_IBCR_INTE    	(IO_MFS7.I2C.IBCR.bit.INTE)
#define	MFS7_I2C_IBCR_BER    	(IO_MFS7.I2C.IBCR.bit.BER)
#define	MFS7_I2C_IBCR_INT    	(IO_MFS7.I2C.IBCR.bit.INT)
#define	MFS7_I2C_SMR			(IO_MFS7.I2C.SMR.byte)
#define	MFS7_I2C_SMR_MD    	(IO_MFS7.I2C.SMR.bit.MD)
#define	MFS7_I2C_SMR_RIE    	(IO_MFS7.I2C.SMR.bit.RIE)
#define	MFS7_I2C_SMR_TIE    	(IO_MFS7.I2C.SMR.bit.TIE)
#define	MFS7_I2C_SSR			(IO_MFS7.I2C.SSR.byte)
#define	MFS7_I2C_SSR_REC    	(IO_MFS7.I2C.SSR.bit.REC)
#define	MFS7_I2C_SSR_TSET    	(IO_MFS7.I2C.SSR.bit.TSET)
#define	MFS7_I2C_SSR_DMA    	(IO_MFS7.I2C.SSR.bit.DMA)
#define	MFS7_I2C_SSR_TBIE    	(IO_MFS7.I2C.SSR.bit.TBIE)
#define	MFS7_I2C_SSR_ORE    	(IO_MFS7.I2C.SSR.bit.ORE)
#define	MFS7_I2C_SSR_RDRF    	(IO_MFS7.I2C.SSR.bit.RDRF)
#define	MFS7_I2C_SSR_TDRE    	(IO_MFS7.I2C.SSR.bit.TDRE)
#define	MFS7_I2C_SSR_TBI    	(IO_MFS7.I2C.SSR.bit.TBI)
#define	MFS7_I2C_IBSR			(IO_MFS7.I2C.IBSR.byte)
#define	MFS7_I2C_IBSR_FBT    	(IO_MFS7.I2C.IBSR.bit.FBT)
#define	MFS7_I2C_IBSR_RACK    	(IO_MFS7.I2C.IBSR.bit.RACK)
#define	MFS7_I2C_IBSR_RSA    	(IO_MFS7.I2C.IBSR.bit.RSA)
#define	MFS7_I2C_IBSR_TRX    	(IO_MFS7.I2C.IBSR.bit.TRX)
#define	MFS7_I2C_IBSR_AL    	(IO_MFS7.I2C.IBSR.bit.AL)
#define	MFS7_I2C_IBSR_RSC    	(IO_MFS7.I2C.IBSR.bit.RSC)
#define	MFS7_I2C_IBSR_SPC    	(IO_MFS7.I2C.IBSR.bit.SPC)
#define	MFS7_I2C_IBSR_BB    	(IO_MFS7.I2C.IBSR.bit.BB)
#define	MFS7_I2C_RDR0	(IO_MFS7.I2C.RDR0)
#define	MFS7_I2C_TDR0	(IO_MFS7.I2C.RDR0)
#define	MFS7_I2C_SACSR			(IO_MFS7.I2C.SACSR.hword)
#define	MFS7_I2C_SACSR_TRG    	(IO_MFS7.I2C.SACSR.bit.TRG)
#define	MFS7_I2C_SACSR_TINT    	(IO_MFS7.I2C.SACSR.bit.TINT)
#define	MFS7_I2C_SACSR_TINTE    	(IO_MFS7.I2C.SACSR.bit.TINTE)
#define	MFS7_I2C_SACSR_TRGE    	(IO_MFS7.I2C.SACSR.bit.TRGE)
#define	MFS7_I2C_SACSR_TDIV    	(IO_MFS7.I2C.SACSR.bit.TDIV)
#define	MFS7_I2C_SACSR_TMRE    	(IO_MFS7.I2C.SACSR.bit.TMRE)
#define	MFS7_I2C_STMR	(IO_MFS7.I2C.STMR)
#define	MFS7_I2C_STMCR	(IO_MFS7.I2C.STMCR)
#define	MFS7_I2C_BGR	(IO_MFS7.I2C.BGR)
#define	MFS7_I2C_ISMK			(IO_MFS7.I2C.ISMK.byte)
#define	MFS7_I2C_ISMK_EN    	(IO_MFS7.I2C.ISMK.bit.EN)
#define	MFS7_I2C_ISMK_SM    	(IO_MFS7.I2C.ISMK.bit.SM)
#define	MFS7_I2C_ISBA			(IO_MFS7.I2C.ISBA.byte)
#define	MFS7_I2C_ISBA_SAEN    	(IO_MFS7.I2C.ISBA.bit.SAEN)
#define	MFS7_I2C_ISBA_SA    	(IO_MFS7.I2C.ISBA.bit.SA)
#define	MFS7_I2C_FCR1			(IO_MFS7.I2C.FCR1.byte)
#define	MFS7_I2C_FCR1_FLSTE    	(IO_MFS7.I2C.FCR1.bit.FLSTE)
#define	MFS7_I2C_FCR1_FRIIE    	(IO_MFS7.I2C.FCR1.bit.FRIIE)
#define	MFS7_I2C_FCR1_FDRQ    	(IO_MFS7.I2C.FCR1.bit.FDRQ)
#define	MFS7_I2C_FCR1_FTIE    	(IO_MFS7.I2C.FCR1.bit.FTIE)
#define	MFS7_I2C_FCR1_FSEL    	(IO_MFS7.I2C.FCR1.bit.FSEL)
#define	MFS7_I2C_FCR0			(IO_MFS7.I2C.FCR0.byte)
#define	MFS7_I2C_FCR0_FLST    	(IO_MFS7.I2C.FCR0.bit.FLST)
#define	MFS7_I2C_FCR0_FLD    	(IO_MFS7.I2C.FCR0.bit.FLD)
#define	MFS7_I2C_FCR0_FSET    	(IO_MFS7.I2C.FCR0.bit.FSET)
#define	MFS7_I2C_FCR0_FCL2    	(IO_MFS7.I2C.FCR0.bit.FCL2)
#define	MFS7_I2C_FCR0_FCL1    	(IO_MFS7.I2C.FCR0.bit.FCL1)
#define	MFS7_I2C_FCR0_FE2    	(IO_MFS7.I2C.FCR0.bit.FE2)
#define	MFS7_I2C_FCR0_FE1    	(IO_MFS7.I2C.FCR0.bit.FE1)
#define	MFS7_I2C_FBYTE 	(IO_MFS7.I2C.FBYTE.hword)
#define	MFS7_I2C_FBYTE2	(IO_MFS7.I2C.FBYTE.byte.FBYTE2)
#define	MFS7_I2C_FBYTE1	(IO_MFS7.I2C.FBYTE.byte.FBYTE1)
#define	MFS7_I2C_FTICR 	(IO_MFS7.I2C.FTICR.hword)
#define	MFS7_I2C_FTICR2	(IO_MFS7.I2C.FTICR.byte.FTICR2)
#define	MFS7_I2C_FTICR1	(IO_MFS7.I2C.FTICR.byte.FTICR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MFS8,attr=IO,locate=0x1890
#endif

__IO_EXTENDED	MFSSTR	IO_MFS8;

#define	MFS8_UART_SCR			(IO_MFS8.UART.SCR.byte)
#define	MFS8_UART_SCR_UPCL    	(IO_MFS8.UART.SCR.bit.UPCL)
#define	MFS8_UART_SCR_RIE    	(IO_MFS8.UART.SCR.bit.RIE)
#define	MFS8_UART_SCR_TIE    	(IO_MFS8.UART.SCR.bit.TIE)
#define	MFS8_UART_SCR_TBIE    	(IO_MFS8.UART.SCR.bit.TBIE)
#define	MFS8_UART_SCR_RXE    	(IO_MFS8.UART.SCR.bit.RXE)
#define	MFS8_UART_SCR_TXE    	(IO_MFS8.UART.SCR.bit.TXE)
#define	MFS8_UART_SMR			(IO_MFS8.UART.SMR.byte)
#define	MFS8_UART_SMR_MD    	(IO_MFS8.UART.SMR.bit.MD)
#define	MFS8_UART_SMR_SBL    	(IO_MFS8.UART.SMR.bit.SBL)
#define	MFS8_UART_SMR_BDS    	(IO_MFS8.UART.SMR.bit.BDS)
#define	MFS8_UART_SMR_SOE    	(IO_MFS8.UART.SMR.bit.SOE)
#define	MFS8_UART_SSR			(IO_MFS8.UART.SSR.byte)
#define	MFS8_UART_SSR_REC    	(IO_MFS8.UART.SSR.bit.REC)
#define	MFS8_UART_SSR_PE    	(IO_MFS8.UART.SSR.bit.PE)
#define	MFS8_UART_SSR_FRE    	(IO_MFS8.UART.SSR.bit.FRE)
#define	MFS8_UART_SSR_ORE    	(IO_MFS8.UART.SSR.bit.ORE)
#define	MFS8_UART_SSR_RDRF    	(IO_MFS8.UART.SSR.bit.RDRF)
#define	MFS8_UART_SSR_TDRE    	(IO_MFS8.UART.SSR.bit.TDRE)
#define	MFS8_UART_SSR_TBI    	(IO_MFS8.UART.SSR.bit.TBI)
#define	MFS8_UART_ESCR			(IO_MFS8.UART.ESCR.byte)
#define	MFS8_UART_ESCR_FLWEN    	(IO_MFS8.UART.ESCR.bit.FLWEN)
#define	MFS8_UART_ESCR_ESBL    	(IO_MFS8.UART.ESCR.bit.ESBL)
#define	MFS8_UART_ESCR_INV    	(IO_MFS8.UART.ESCR.bit.INV)
#define	MFS8_UART_ESCR_PEN    	(IO_MFS8.UART.ESCR.bit.PEN)
#define	MFS8_UART_ESCR_P    	(IO_MFS8.UART.ESCR.bit.P)
#define	MFS8_UART_ESCR_L    	(IO_MFS8.UART.ESCR.bit.L)
#define	MFS8_UART_RDR0	(IO_MFS8.UART.RDR0.hword)
#define	MFS8_UART_RDR0_RDR0L	(IO_MFS8.UART.RDR0.byte.RDR0L)
#define	MFS8_UART_RDR0_bit9	(IO_MFS8.UART.RDR0.bit9.D)
#define	MFS8_UART_RDR0_bit7	(IO_MFS8.UART.RDR0.bit7.D)
#define	MFS8_UART_RDR0_bit6	(IO_MFS8.UART.RDR0.bit6.D)
#define	MFS8_UART_RDR0_bit5	(IO_MFS8.UART.RDR0.bit5.D)
#define	MFS8_UART_TDR0	(IO_MFS8.UART.RDR0.hword)
#define	MFS8_UART_TDR0_TDR0L	(IO_MFS8.UART.RDR0.byte.RDR0L)
#define	MFS8_UART_TDR0_bit9	(IO_MFS8.UART.RDR0.bit9.D)
#define	MFS8_UART_TDR0_bit7	(IO_MFS8.UART.RDR0.bit7.D)
#define	MFS8_UART_TDR0_bit6	(IO_MFS8.UART.RDR0.bit6.D)
#define	MFS8_UART_TDR0_bit5	(IO_MFS8.UART.RDR0.bit5.D)
#define	MFS8_UART_SACSR			(IO_MFS8.UART.SACSR.hword)
#define	MFS8_UART_SACSR_STST    	(IO_MFS8.UART.SACSR.bit.STST)
#define	MFS8_UART_SACSR_TRG    	(IO_MFS8.UART.SACSR.bit.TRG)
#define	MFS8_UART_SACSR_TINT    	(IO_MFS8.UART.SACSR.bit.TINT)
#define	MFS8_UART_SACSR_TINTE    	(IO_MFS8.UART.SACSR.bit.TINTE)
#define	MFS8_UART_SACSR_TSYNE    	(IO_MFS8.UART.SACSR.bit.TSYNE)
#define	MFS8_UART_SACSR_TRGE    	(IO_MFS8.UART.SACSR.bit.TRGE)
#define	MFS8_UART_SACSR_TDIV    	(IO_MFS8.UART.SACSR.bit.TDIV)
#define	MFS8_UART_SACSR_TMRE    	(IO_MFS8.UART.SACSR.bit.TMRE)
#define	MFS8_UART_STMR	(IO_MFS8.UART.STMR)
#define	MFS8_UART_STMCR	(IO_MFS8.UART.STMCR)
#define	MFS8_UART_TBYTE0	(IO_MFS8.UART.TBYTE0)
#define	MFS8_UART_BGR			(IO_MFS8.UART.BGR)
#define	MFS8_UART_FCR1			(IO_MFS8.UART.FCR1.byte)
#define	MFS8_UART_FCR1_FLSTE    	(IO_MFS8.UART.FCR1.bit.FLSTE)
#define	MFS8_UART_FCR1_FRIIE    	(IO_MFS8.UART.FCR1.bit.FRIIE)
#define	MFS8_UART_FCR1_FDRQ    	(IO_MFS8.UART.FCR1.bit.FDRQ)
#define	MFS8_UART_FCR1_FTIE    	(IO_MFS8.UART.FCR1.bit.FTIE)
#define	MFS8_UART_FCR1_FSEL    	(IO_MFS8.UART.FCR1.bit.FSEL)
#define	MFS8_UART_FCR0			(IO_MFS8.UART.FCR0.byte)
#define	MFS8_UART_FCR0_FLST    	(IO_MFS8.UART.FCR0.bit.FLST)
#define	MFS8_UART_FCR0_FLD    	(IO_MFS8.UART.FCR0.bit.FLD)
#define	MFS8_UART_FCR0_FSET    	(IO_MFS8.UART.FCR0.bit.FSET)
#define	MFS8_UART_FCR0_FCL2    	(IO_MFS8.UART.FCR0.bit.FCL2)
#define	MFS8_UART_FCR0_FCL1    	(IO_MFS8.UART.FCR0.bit.FCL1)
#define	MFS8_UART_FCR0_FE2    	(IO_MFS8.UART.FCR0.bit.FE2)
#define	MFS8_UART_FCR0_FE1    	(IO_MFS8.UART.FCR0.bit.FE1)
#define	MFS8_UART_FBYTE 	(IO_MFS8.UART.FBYTE.hword)
#define	MFS8_UART_FBYTE2	(IO_MFS8.UART.FBYTE.byte.FBYTE2)
#define	MFS8_UART_FBYTE1	(IO_MFS8.UART.FBYTE.byte.FBYTE1)
#define	MFS8_UART_FTICR 	(IO_MFS8.UART.FTICR.hword)
#define	MFS8_UART_FTICR2	(IO_MFS8.UART.FTICR.byte.FTICR2)
#define	MFS8_UART_FTICR1	(IO_MFS8.UART.FTICR.byte.FTICR1)

#define	MFS8_CSIO_SCR			(IO_MFS8.CSIO.SCR.byte)
#define	MFS8_CSIO_SCR_UPCL    	(IO_MFS8.CSIO.SCR.bit.UPCL)
#define	MFS8_CSIO_SCR_MS    	(IO_MFS8.CSIO.SCR.bit.MS)
#define	MFS8_CSIO_SCR_SPI    	(IO_MFS8.CSIO.SCR.bit.SPI)
#define	MFS8_CSIO_SCR_RIE    	(IO_MFS8.CSIO.SCR.bit.RIE)
#define	MFS8_CSIO_SCR_TIE    	(IO_MFS8.CSIO.SCR.bit.TIE)
#define	MFS8_CSIO_SCR_TBIE    	(IO_MFS8.CSIO.SCR.bit.TBIE)
#define	MFS8_CSIO_SCR_RXE    	(IO_MFS8.CSIO.SCR.bit.RXE)
#define	MFS8_CSIO_SCR_TXE    	(IO_MFS8.CSIO.SCR.bit.TXE)
#define	MFS8_CSIO_SMR			(IO_MFS8.CSIO.SMR.byte)
#define	MFS8_CSIO_SMR_MD    	(IO_MFS8.CSIO.SMR.bit.MD)
#define	MFS8_CSIO_SMR_SCINV    	(IO_MFS8.CSIO.SMR.bit.SCINV)
#define	MFS8_CSIO_SMR_BDS    	(IO_MFS8.CSIO.SMR.bit.BDS)
#define	MFS8_CSIO_SMR_SCKE    	(IO_MFS8.CSIO.SMR.bit.SCKE)
#define	MFS8_CSIO_SMR_SOE    	(IO_MFS8.CSIO.SMR.bit.SOE)
#define	MFS8_CSIO_SSR			(IO_MFS8.CSIO.SSR.byte)
#define	MFS8_CSIO_SSR_REC    	(IO_MFS8.CSIO.SSR.bit.REC)
#define	MFS8_CSIO_SSR_ES    	(IO_MFS8.CSIO.SSR.bit.ES)
#define	MFS8_CSIO_SSR_AWC    	(IO_MFS8.CSIO.SSR.bit.AWC)
#define	MFS8_CSIO_SSR_ORE    	(IO_MFS8.CSIO.SSR.bit.ORE)
#define	MFS8_CSIO_SSR_RDRF    	(IO_MFS8.CSIO.SSR.bit.RDRF)
#define	MFS8_CSIO_SSR_TDRE    	(IO_MFS8.CSIO.SSR.bit.TDRE)
#define	MFS8_CSIO_SSR_TBI    	(IO_MFS8.CSIO.SSR.bit.TBI)
#define	MFS8_CSIO_ESCR			(IO_MFS8.CSIO.ESCR.byte)
#define	MFS8_CSIO_ESCR_SOP    	(IO_MFS8.CSIO.ESCR.bit.SOP)
#define	MFS8_CSIO_ESCR_L3    	(IO_MFS8.CSIO.ESCR.bit.L3)
#define	MFS8_CSIO_ESCR_CSFE    	(IO_MFS8.CSIO.ESCR.bit.CSFE)
#define	MFS8_CSIO_ESCR_WT    	(IO_MFS8.CSIO.ESCR.bit.WT)
#define	MFS8_CSIO_ESCR_L    	(IO_MFS8.CSIO.ESCR.bit.L)
#define	MFS8_CSIO_RDR	(IO_MFS8.CSIO.RDR.word)
#define	MFS8_CSIO_RDR1	(IO_MFS8.CSIO.RDR.hword.RDR1)
#define	MFS8_CSIO_RDR0	(IO_MFS8.CSIO.RDR.hword.RDR0)
#define	MFS8_CSIO_TDR	(IO_MFS8.CSIO.RDR.word)
#define	MFS8_CSIO_TDR1	(IO_MFS8.CSIO.RDR.hword.RDR1)
#define	MFS8_CSIO_TDR0	(IO_MFS8.CSIO.RDR.hword.RDR0)
#define	MFS8_CSIO_SACSR			(IO_MFS8.CSIO.SACSR.hword)
#define	MFS8_CSIO_SACSR_STST    	(IO_MFS8.CSIO.SACSR.bit.STST)
#define	MFS8_CSIO_SACSR_TBEEN    	(IO_MFS8.CSIO.SACSR.bit.TBEEN)
#define	MFS8_CSIO_SACSR_CSEIE    	(IO_MFS8.CSIO.SACSR.bit.CSEIE)
#define	MFS8_CSIO_SACSR_CSE    	(IO_MFS8.CSIO.SACSR.bit.CSE)
#define	MFS8_CSIO_SACSR_TRG    	(IO_MFS8.CSIO.SACSR.bit.TRG)
#define	MFS8_CSIO_SACSR_TINT    	(IO_MFS8.CSIO.SACSR.bit.TINT)
#define	MFS8_CSIO_SACSR_TINTE    	(IO_MFS8.CSIO.SACSR.bit.TINTE)
#define	MFS8_CSIO_SACSR_TSYNE    	(IO_MFS8.CSIO.SACSR.bit.TSYNE)
#define	MFS8_CSIO_SACSR_TRGE    	(IO_MFS8.CSIO.SACSR.bit.TRGE)
#define	MFS8_CSIO_SACSR_TDIV    	(IO_MFS8.CSIO.SACSR.bit.TDIV)
#define	MFS8_CSIO_SACSR_TMRE    	(IO_MFS8.CSIO.SACSR.bit.TMRE)
#define	MFS8_CSIO_STMR	(IO_MFS8.CSIO.STMR)
#define	MFS8_CSIO_STMCR	(IO_MFS8.CSIO.STMCR)
#define	MFS8_CSIO_SCSCR			(IO_MFS8.CSIO.SCSCR.hword)
#define	MFS8_CSIO_SCSCR_SST    	(IO_MFS8.CSIO.SCSCR.bit.SST)
#define	MFS8_CSIO_SCSCR_SED    	(IO_MFS8.CSIO.SCSCR.bit.SED)
#define	MFS8_CSIO_SCSCR_SCD    	(IO_MFS8.CSIO.SCSCR.bit.SCD)
#define	MFS8_CSIO_SCSCR_SCAM    	(IO_MFS8.CSIO.SCSCR.bit.SCAM)
#define	MFS8_CSIO_SCSCR_CDIV    	(IO_MFS8.CSIO.SCSCR.bit.CDIV)
#define	MFS8_CSIO_SCSCR_CSLVL    	(IO_MFS8.CSIO.SCSCR.bit.CSLVL)
#define	MFS8_CSIO_SCSCR_CSEN3    	(IO_MFS8.CSIO.SCSCR.bit.CSEN3)
#define	MFS8_CSIO_SCSCR_CSEN2    	(IO_MFS8.CSIO.SCSCR.bit.CSEN2)
#define	MFS8_CSIO_SCSCR_CSEN1    	(IO_MFS8.CSIO.SCSCR.bit.CSEN1)
#define	MFS8_CSIO_SCSCR_CSEN0    	(IO_MFS8.CSIO.SCSCR.bit.CSEN0)
#define	MFS8_CSIO_SCSCR_CSOE    	(IO_MFS8.CSIO.SCSCR.bit.CSOE)
#define	MFS8_CSIO_SCSTR	(IO_MFS8.CSIO.SCSTR.word)
#define	MFS8_CSIO_SCSTR32	(IO_MFS8.CSIO.SCSTR.hword.SCSTR32)
#define	MFS8_CSIO_SCSTR3	(IO_MFS8.CSIO.SCSTR.byte.SCSTR3)
#define	MFS8_CSIO_SCSTR2	(IO_MFS8.CSIO.SCSTR.byte.SCSTR2)
#define	MFS8_CSIO_SCSTR10	(IO_MFS8.CSIO.SCSTR.hword.SCSTR10)
#define	MFS8_CSIO_SCSTR1	(IO_MFS8.CSIO.SCSTR.byte.SCSTR1)
#define	MFS8_CSIO_SCSTR0	(IO_MFS8.CSIO.SCSTR.byte.SCSTR0)
#define	MFS8_CSIO_SCSFR2			(IO_MFS8.CSIO.SCSFR2.byte)
#define	MFS8_CSIO_SCSFR2_CSLVL    	(IO_MFS8.CSIO.SCSFR2.bit.CSLVL)
#define	MFS8_CSIO_SCSFR2_SCINV    	(IO_MFS8.CSIO.SCSFR2.bit.SCINV)
#define	MFS8_CSIO_SCSFR2_SPI    	(IO_MFS8.CSIO.SCSFR2.bit.SPI)
#define	MFS8_CSIO_SCSFR2_BDS    	(IO_MFS8.CSIO.SCSFR2.bit.BDS)
#define	MFS8_CSIO_SCSFR2_L    	(IO_MFS8.CSIO.SCSFR2.bit.L)
#define	MFS8_CSIO_SCSFR1			(IO_MFS8.CSIO.SCSFR1.byte)
#define	MFS8_CSIO_SCSFR1_CSLVL    	(IO_MFS8.CSIO.SCSFR1.bit.CSLVL)
#define	MFS8_CSIO_SCSFR1_SCINV    	(IO_MFS8.CSIO.SCSFR1.bit.SCINV)
#define	MFS8_CSIO_SCSFR1_SPI    	(IO_MFS8.CSIO.SCSFR1.bit.SPI)
#define	MFS8_CSIO_SCSFR1_BDS    	(IO_MFS8.CSIO.SCSFR1.bit.BDS)
#define	MFS8_CSIO_SCSFR1_L    	(IO_MFS8.CSIO.SCSFR1.bit.L)
#define	MFS8_CSIO_SCSFR0			(IO_MFS8.CSIO.SCSFR0.byte)
#define	MFS8_CSIO_SCSFR0_CSLVL    	(IO_MFS8.CSIO.SCSFR0.bit.CSLVL)
#define	MFS8_CSIO_SCSFR0_SCINV    	(IO_MFS8.CSIO.SCSFR0.bit.SCINV)
#define	MFS8_CSIO_SCSFR0_SPI    	(IO_MFS8.CSIO.SCSFR0.bit.SPI)
#define	MFS8_CSIO_SCSFR0_BDS    	(IO_MFS8.CSIO.SCSFR0.bit.BDS)
#define	MFS8_CSIO_SCSFR0_L    	(IO_MFS8.CSIO.SCSFR0.bit.L)
#define	MFS8_CSIO_TBYTE3	(IO_MFS8.CSIO.TBYTE3)
#define	MFS8_CSIO_TBYTE2	(IO_MFS8.CSIO.TBYTE2)
#define	MFS8_CSIO_TBYTE1	(IO_MFS8.CSIO.TBYTE1)
#define	MFS8_CSIO_TBYTE0	(IO_MFS8.CSIO.TBYTE0)
#define	MFS8_CSIO_BGR			(IO_MFS8.CSIO.BGR)
#define	MFS8_CSIO_FCR1			(IO_MFS8.CSIO.FCR1.byte)
#define	MFS8_CSIO_FCR1_FLSTE    	(IO_MFS8.CSIO.FCR1.bit.FLSTE)
#define	MFS8_CSIO_FCR1_FRIIE    	(IO_MFS8.CSIO.FCR1.bit.FRIIE)
#define	MFS8_CSIO_FCR1_FDRQ    	(IO_MFS8.CSIO.FCR1.bit.FDRQ)
#define	MFS8_CSIO_FCR1_FTIE    	(IO_MFS8.CSIO.FCR1.bit.FTIE)
#define	MFS8_CSIO_FCR1_FSEL    	(IO_MFS8.CSIO.FCR1.bit.FSEL)
#define	MFS8_CSIO_FCR0			(IO_MFS8.CSIO.FCR0.byte)
#define	MFS8_CSIO_FCR0_FLST    	(IO_MFS8.CSIO.FCR0.bit.FLST)
#define	MFS8_CSIO_FCR0_FLD    	(IO_MFS8.CSIO.FCR0.bit.FLD)
#define	MFS8_CSIO_FCR0_FSET    	(IO_MFS8.CSIO.FCR0.bit.FSET)
#define	MFS8_CSIO_FCR0_FCL2    	(IO_MFS8.CSIO.FCR0.bit.FCL2)
#define	MFS8_CSIO_FCR0_FCL1    	(IO_MFS8.CSIO.FCR0.bit.FCL1)
#define	MFS8_CSIO_FCR0_FE2    	(IO_MFS8.CSIO.FCR0.bit.FE2)
#define	MFS8_CSIO_FCR0_FE1    	(IO_MFS8.CSIO.FCR0.bit.FE1)
#define	MFS8_CSIO_FBYTE 	(IO_MFS8.CSIO.FBYTE.hword)
#define	MFS8_CSIO_FBYTE2	(IO_MFS8.CSIO.FBYTE.byte.FBYTE2)
#define	MFS8_CSIO_FBYTE1	(IO_MFS8.CSIO.FBYTE.byte.FBYTE1)
#define	MFS8_CSIO_FTICR 	(IO_MFS8.CSIO.FTICR.hword)
#define	MFS8_CSIO_FTICR2	(IO_MFS8.CSIO.FTICR.byte.FTICR2)
#define	MFS8_CSIO_FTICR1	(IO_MFS8.CSIO.FTICR.byte.FTICR1)

#define	MFS8_LINUART_SCR			(IO_MFS8.LINUART.SCR.byte)
#define	MFS8_LINUART_SCR_UPCL    	(IO_MFS8.LINUART.SCR.bit.UPCL)
#define	MFS8_LINUART_SCR_MS    	(IO_MFS8.LINUART.SCR.bit.MS)
#define	MFS8_LINUART_SCR_LBR    	(IO_MFS8.LINUART.SCR.bit.LBR)
#define	MFS8_LINUART_SCR_RIE    	(IO_MFS8.LINUART.SCR.bit.RIE)
#define	MFS8_LINUART_SCR_TIE    	(IO_MFS8.LINUART.SCR.bit.TIE)
#define	MFS8_LINUART_SCR_TBIE    	(IO_MFS8.LINUART.SCR.bit.TBIE)
#define	MFS8_LINUART_SCR_RXE    	(IO_MFS8.LINUART.SCR.bit.RXE)
#define	MFS8_LINUART_SCR_TXE    	(IO_MFS8.LINUART.SCR.bit.TXE)
#define	MFS8_LINUART_SMR			(IO_MFS8.LINUART.SMR.byte)
#define	MFS8_LINUART_SMR_MD    	(IO_MFS8.LINUART.SMR.bit.MD)
#define	MFS8_LINUART_SMR_SBL    	(IO_MFS8.LINUART.SMR.bit.SBL)
#define	MFS8_LINUART_SMR_SOE    	(IO_MFS8.LINUART.SMR.bit.SOE)
#define	MFS8_LINUART_SSR			(IO_MFS8.LINUART.SSR.byte)
#define	MFS8_LINUART_SSR_REC    	(IO_MFS8.LINUART.SSR.bit.REC)
#define	MFS8_LINUART_SSR_LBD    	(IO_MFS8.LINUART.SSR.bit.LBD)
#define	MFS8_LINUART_SSR_FRE    	(IO_MFS8.LINUART.SSR.bit.FRE)
#define	MFS8_LINUART_SSR_ORE    	(IO_MFS8.LINUART.SSR.bit.ORE)
#define	MFS8_LINUART_SSR_RDRF    	(IO_MFS8.LINUART.SSR.bit.RDRF)
#define	MFS8_LINUART_SSR_TDRE    	(IO_MFS8.LINUART.SSR.bit.TDRE)
#define	MFS8_LINUART_SSR_TBI    	(IO_MFS8.LINUART.SSR.bit.TBI)
#define	MFS8_LINUART_ESCR			(IO_MFS8.LINUART.ESCR.byte)
#define	MFS8_LINUART_ESCR_ESBL    	(IO_MFS8.LINUART.ESCR.bit.ESBL)
#define	MFS8_LINUART_ESCR_LBIE    	(IO_MFS8.LINUART.ESCR.bit.LBIE)
#define	MFS8_LINUART_ESCR_LBL    	(IO_MFS8.LINUART.ESCR.bit.LBL)
#define	MFS8_LINUART_ESCR_DEL    	(IO_MFS8.LINUART.ESCR.bit.DEL)
#define	MFS8_LINUART_RDR0	(IO_MFS8.LINUART.RDR0)
#define	MFS8_LINUART_TDR0	(IO_MFS8.LINUART.RDR0)
#define	MFS8_LINUART_SACSR			(IO_MFS8.LINUART.SACSR.hword)
#define	MFS8_LINUART_SACSR_STST    	(IO_MFS8.LINUART.SACSR.bit.STST)
#define	MFS8_LINUART_SACSR_BST    	(IO_MFS8.LINUART.SACSR.bit.BST)
#define	MFS8_LINUART_SACSR_SFD    	(IO_MFS8.LINUART.SACSR.bit.SFD)
#define	MFS8_LINUART_SACSR_SFDE    	(IO_MFS8.LINUART.SACSR.bit.SFDE)
#define	MFS8_LINUART_SACSR_AUTE    	(IO_MFS8.LINUART.SACSR.bit.AUTE)
#define	MFS8_LINUART_SACSR_TRG    	(IO_MFS8.LINUART.SACSR.bit.TRG)
#define	MFS8_LINUART_SACSR_TINT    	(IO_MFS8.LINUART.SACSR.bit.TINT)
#define	MFS8_LINUART_SACSR_TINTE    	(IO_MFS8.LINUART.SACSR.bit.TINTE)
#define	MFS8_LINUART_SACSR_TSYNE    	(IO_MFS8.LINUART.SACSR.bit.TSYNE)
#define	MFS8_LINUART_SACSR_TRGE    	(IO_MFS8.LINUART.SACSR.bit.TRGE)
#define	MFS8_LINUART_SACSR_TDIV    	(IO_MFS8.LINUART.SACSR.bit.TDIV)
#define	MFS8_LINUART_SACSR_TMRE    	(IO_MFS8.LINUART.SACSR.bit.TMRE)
#define	MFS8_LINUART_STMR	(IO_MFS8.LINUART.STMR)
#define	MFS8_LINUART_STMCR	(IO_MFS8.LINUART.STMCR)
#define	MFS8_LINUART_SFUR	(IO_MFS8.LINUART.SFUR)
#define	MFS8_LINUART_LAMSR			(IO_MFS8.LINUART.LAMSR.byte)
#define	MFS8_LINUART_LAMSR_LER    	(IO_MFS8.LINUART.LAMSR.bit.LER)
#define	MFS8_LINUART_LAMSR_SER    	(IO_MFS8.LINUART.LAMSR.bit.SER)
#define	MFS8_LINUART_LAMSR_RDRF    	(IO_MFS8.LINUART.LAMSR.bit.RDRF)
#define	MFS8_LINUART_LAMSR_TDRE    	(IO_MFS8.LINUART.LAMSR.bit.TDRE)
#define	MFS8_LINUART_LAMSR_TBI    	(IO_MFS8.LINUART.LAMSR.bit.TBI)
#define	MFS8_LINUART_LAMSR_LCSC    	(IO_MFS8.LINUART.LAMSR.bit.LCSC)
#define	MFS8_LINUART_LAMSR_LAHC    	(IO_MFS8.LINUART.LAMSR.bit.LAHC)
#define	MFS8_LINUART_LAMCR			(IO_MFS8.LINUART.LAMCR.byte)
#define	MFS8_LINUART_LAMCR_LDL    	(IO_MFS8.LINUART.LAMCR.bit.LDL)
#define	MFS8_LINUART_LAMCR_LTDRCL    	(IO_MFS8.LINUART.LAMCR.bit.LTDRCL)
#define	MFS8_LINUART_LAMCR_LCSTYP    	(IO_MFS8.LINUART.LAMCR.bit.LCSTYP)
#define	MFS8_LINUART_LAMCR_LIDEN    	(IO_MFS8.LINUART.LAMCR.bit.LIDEN)
#define	MFS8_LINUART_LAMCR_LAMEN    	(IO_MFS8.LINUART.LAMCR.bit.LAMEN)
#define	MFS8_LINUART_SFLR	(IO_MFS8.LINUART.SFLR.hword)
#define	MFS8_LINUART_SFLR1	(IO_MFS8.LINUART.SFLR.byte.SFLR1)
#define	MFS8_LINUART_SFLR0	(IO_MFS8.LINUART.SFLR.byte.SFLR0)
#define	MFS8_LINUART_LAMESR			(IO_MFS8.LINUART.LAMESR.byte)
#define	MFS8_LINUART_LAMESR_LCSER    	(IO_MFS8.LINUART.LAMESR.bit.LCSER)
#define	MFS8_LINUART_LAMESR_LPTER    	(IO_MFS8.LINUART.LAMESR.bit.LPTER)
#define	MFS8_LINUART_LAMESR_LSFER    	(IO_MFS8.LINUART.LAMESR.bit.LSFER)
#define	MFS8_LINUART_LAMESR_LBSER    	(IO_MFS8.LINUART.LAMESR.bit.LBSER)
#define	MFS8_LINUART_LAMERT			(IO_MFS8.LINUART.LAMERT.byte)
#define	MFS8_LINUART_LAMERT_KEY    	(IO_MFS8.LINUART.LAMERT.bit.KEY)
#define	MFS8_LINUART_LAMERT_LCSERT    	(IO_MFS8.LINUART.LAMERT.bit.LCSERT)
#define	MFS8_LINUART_LAMERT_LPTERT    	(IO_MFS8.LINUART.LAMERT.bit.LPTERT)
#define	MFS8_LINUART_LAMERT_LSFERT    	(IO_MFS8.LINUART.LAMERT.bit.LSFERT)
#define	MFS8_LINUART_LAMERT_LBSERT    	(IO_MFS8.LINUART.LAMERT.bit.LBSERT)
#define	MFS8_LINUART_LAMERT_FRET    	(IO_MFS8.LINUART.LAMERT.bit.FRET)
#define	MFS8_LINUART_LAMIER			(IO_MFS8.LINUART.LAMIER.byte)
#define	MFS8_LINUART_LAMIER_LCSERIE    	(IO_MFS8.LINUART.LAMIER.bit.LCSERIE)
#define	MFS8_LINUART_LAMIER_LPTERIE    	(IO_MFS8.LINUART.LAMIER.bit.LPTERIE)
#define	MFS8_LINUART_LAMIER_LSFERIE    	(IO_MFS8.LINUART.LAMIER.bit.LSFERIE)
#define	MFS8_LINUART_LAMIER_LBSERIE    	(IO_MFS8.LINUART.LAMIER.bit.LBSERIE)
#define	MFS8_LINUART_LAMIER_LCSCIE    	(IO_MFS8.LINUART.LAMIER.bit.LCSCIE)
#define	MFS8_LINUART_LAMIER_LAHCIE    	(IO_MFS8.LINUART.LAMIER.bit.LAHCIE)
#define	MFS8_LINUART_LAMID			(IO_MFS8.LINUART.LAMID.byte)
#define	MFS8_LINUART_LAMID_P    	(IO_MFS8.LINUART.LAMID.bit.P)
#define	MFS8_LINUART_LAMID_LID    	(IO_MFS8.LINUART.LAMID.bit.LID)
#define	MFS8_LINUART_BGR			(IO_MFS8.LINUART.BGR)
#define	MFS8_LINUART_FCR1			(IO_MFS8.LINUART.FCR1.byte)
#define	MFS8_LINUART_FCR1_FLSTE    	(IO_MFS8.LINUART.FCR1.bit.FLSTE)
#define	MFS8_LINUART_FCR1_FRIIE    	(IO_MFS8.LINUART.FCR1.bit.FRIIE)
#define	MFS8_LINUART_FCR1_FDRQ    	(IO_MFS8.LINUART.FCR1.bit.FDRQ)
#define	MFS8_LINUART_FCR1_FTIE    	(IO_MFS8.LINUART.FCR1.bit.FTIE)
#define	MFS8_LINUART_FCR1_FSEL    	(IO_MFS8.LINUART.FCR1.bit.FSEL)
#define	MFS8_LINUART_FCR0			(IO_MFS8.LINUART.FCR0.byte)
#define	MFS8_LINUART_FCR0_FLST    	(IO_MFS8.LINUART.FCR0.bit.FLST)
#define	MFS8_LINUART_FCR0_FLD    	(IO_MFS8.LINUART.FCR0.bit.FLD)
#define	MFS8_LINUART_FCR0_FSET    	(IO_MFS8.LINUART.FCR0.bit.FSET)
#define	MFS8_LINUART_FCR0_FCL2    	(IO_MFS8.LINUART.FCR0.bit.FCL2)
#define	MFS8_LINUART_FCR0_FCL1    	(IO_MFS8.LINUART.FCR0.bit.FCL1)
#define	MFS8_LINUART_FCR0_FE2    	(IO_MFS8.LINUART.FCR0.bit.FE2)
#define	MFS8_LINUART_FCR0_FE1    	(IO_MFS8.LINUART.FCR0.bit.FE1)
#define	MFS8_LINUART_FBYTE 	(IO_MFS8.LINUART.FBYTE.hword)
#define	MFS8_LINUART_FBYTE2	(IO_MFS8.LINUART.FBYTE.byte.FBYTE2)
#define	MFS8_LINUART_FBYTE1	(IO_MFS8.LINUART.FBYTE.byte.FBYTE1)
#define	MFS8_LINUART_FTICR 	(IO_MFS8.LINUART.FTICR.hword)
#define	MFS8_LINUART_FTICR2	(IO_MFS8.LINUART.FTICR.byte.FTICR2)
#define	MFS8_LINUART_FTICR1	(IO_MFS8.LINUART.FTICR.byte.FTICR1)

#define	MFS8_I2C_IBCR			(IO_MFS8.I2C.IBCR.byte)
#define	MFS8_I2C_IBCR_MSS    	(IO_MFS8.I2C.IBCR.bit.MSS)
#define	MFS8_I2C_IBCR_ACT_SCC    	(IO_MFS8.I2C.IBCR.bit.ACT_SCC)
#define	MFS8_I2C_IBCR_ACKE    	(IO_MFS8.I2C.IBCR.bit.ACKE)
#define	MFS8_I2C_IBCR_WSEL    	(IO_MFS8.I2C.IBCR.bit.WSEL)
#define	MFS8_I2C_IBCR_CNDE    	(IO_MFS8.I2C.IBCR.bit.CNDE)
#define	MFS8_I2C_IBCR_INTE    	(IO_MFS8.I2C.IBCR.bit.INTE)
#define	MFS8_I2C_IBCR_BER    	(IO_MFS8.I2C.IBCR.bit.BER)
#define	MFS8_I2C_IBCR_INT    	(IO_MFS8.I2C.IBCR.bit.INT)
#define	MFS8_I2C_SMR			(IO_MFS8.I2C.SMR.byte)
#define	MFS8_I2C_SMR_MD    	(IO_MFS8.I2C.SMR.bit.MD)
#define	MFS8_I2C_SMR_RIE    	(IO_MFS8.I2C.SMR.bit.RIE)
#define	MFS8_I2C_SMR_TIE    	(IO_MFS8.I2C.SMR.bit.TIE)
#define	MFS8_I2C_SSR			(IO_MFS8.I2C.SSR.byte)
#define	MFS8_I2C_SSR_REC    	(IO_MFS8.I2C.SSR.bit.REC)
#define	MFS8_I2C_SSR_TSET    	(IO_MFS8.I2C.SSR.bit.TSET)
#define	MFS8_I2C_SSR_DMA    	(IO_MFS8.I2C.SSR.bit.DMA)
#define	MFS8_I2C_SSR_TBIE    	(IO_MFS8.I2C.SSR.bit.TBIE)
#define	MFS8_I2C_SSR_ORE    	(IO_MFS8.I2C.SSR.bit.ORE)
#define	MFS8_I2C_SSR_RDRF    	(IO_MFS8.I2C.SSR.bit.RDRF)
#define	MFS8_I2C_SSR_TDRE    	(IO_MFS8.I2C.SSR.bit.TDRE)
#define	MFS8_I2C_SSR_TBI    	(IO_MFS8.I2C.SSR.bit.TBI)
#define	MFS8_I2C_IBSR			(IO_MFS8.I2C.IBSR.byte)
#define	MFS8_I2C_IBSR_FBT    	(IO_MFS8.I2C.IBSR.bit.FBT)
#define	MFS8_I2C_IBSR_RACK    	(IO_MFS8.I2C.IBSR.bit.RACK)
#define	MFS8_I2C_IBSR_RSA    	(IO_MFS8.I2C.IBSR.bit.RSA)
#define	MFS8_I2C_IBSR_TRX    	(IO_MFS8.I2C.IBSR.bit.TRX)
#define	MFS8_I2C_IBSR_AL    	(IO_MFS8.I2C.IBSR.bit.AL)
#define	MFS8_I2C_IBSR_RSC    	(IO_MFS8.I2C.IBSR.bit.RSC)
#define	MFS8_I2C_IBSR_SPC    	(IO_MFS8.I2C.IBSR.bit.SPC)
#define	MFS8_I2C_IBSR_BB    	(IO_MFS8.I2C.IBSR.bit.BB)
#define	MFS8_I2C_RDR0	(IO_MFS8.I2C.RDR0)
#define	MFS8_I2C_TDR0	(IO_MFS8.I2C.RDR0)
#define	MFS8_I2C_SACSR			(IO_MFS8.I2C.SACSR.hword)
#define	MFS8_I2C_SACSR_TRG    	(IO_MFS8.I2C.SACSR.bit.TRG)
#define	MFS8_I2C_SACSR_TINT    	(IO_MFS8.I2C.SACSR.bit.TINT)
#define	MFS8_I2C_SACSR_TINTE    	(IO_MFS8.I2C.SACSR.bit.TINTE)
#define	MFS8_I2C_SACSR_TRGE    	(IO_MFS8.I2C.SACSR.bit.TRGE)
#define	MFS8_I2C_SACSR_TDIV    	(IO_MFS8.I2C.SACSR.bit.TDIV)
#define	MFS8_I2C_SACSR_TMRE    	(IO_MFS8.I2C.SACSR.bit.TMRE)
#define	MFS8_I2C_STMR	(IO_MFS8.I2C.STMR)
#define	MFS8_I2C_STMCR	(IO_MFS8.I2C.STMCR)
#define	MFS8_I2C_BGR	(IO_MFS8.I2C.BGR)
#define	MFS8_I2C_ISMK			(IO_MFS8.I2C.ISMK.byte)
#define	MFS8_I2C_ISMK_EN    	(IO_MFS8.I2C.ISMK.bit.EN)
#define	MFS8_I2C_ISMK_SM    	(IO_MFS8.I2C.ISMK.bit.SM)
#define	MFS8_I2C_ISBA			(IO_MFS8.I2C.ISBA.byte)
#define	MFS8_I2C_ISBA_SAEN    	(IO_MFS8.I2C.ISBA.bit.SAEN)
#define	MFS8_I2C_ISBA_SA    	(IO_MFS8.I2C.ISBA.bit.SA)
#define	MFS8_I2C_FCR1			(IO_MFS8.I2C.FCR1.byte)
#define	MFS8_I2C_FCR1_FLSTE    	(IO_MFS8.I2C.FCR1.bit.FLSTE)
#define	MFS8_I2C_FCR1_FRIIE    	(IO_MFS8.I2C.FCR1.bit.FRIIE)
#define	MFS8_I2C_FCR1_FDRQ    	(IO_MFS8.I2C.FCR1.bit.FDRQ)
#define	MFS8_I2C_FCR1_FTIE    	(IO_MFS8.I2C.FCR1.bit.FTIE)
#define	MFS8_I2C_FCR1_FSEL    	(IO_MFS8.I2C.FCR1.bit.FSEL)
#define	MFS8_I2C_FCR0			(IO_MFS8.I2C.FCR0.byte)
#define	MFS8_I2C_FCR0_FLST    	(IO_MFS8.I2C.FCR0.bit.FLST)
#define	MFS8_I2C_FCR0_FLD    	(IO_MFS8.I2C.FCR0.bit.FLD)
#define	MFS8_I2C_FCR0_FSET    	(IO_MFS8.I2C.FCR0.bit.FSET)
#define	MFS8_I2C_FCR0_FCL2    	(IO_MFS8.I2C.FCR0.bit.FCL2)
#define	MFS8_I2C_FCR0_FCL1    	(IO_MFS8.I2C.FCR0.bit.FCL1)
#define	MFS8_I2C_FCR0_FE2    	(IO_MFS8.I2C.FCR0.bit.FE2)
#define	MFS8_I2C_FCR0_FE1    	(IO_MFS8.I2C.FCR0.bit.FE1)
#define	MFS8_I2C_FBYTE 	(IO_MFS8.I2C.FBYTE.hword)
#define	MFS8_I2C_FBYTE2	(IO_MFS8.I2C.FBYTE.byte.FBYTE2)
#define	MFS8_I2C_FBYTE1	(IO_MFS8.I2C.FBYTE.byte.FBYTE1)
#define	MFS8_I2C_FTICR 	(IO_MFS8.I2C.FTICR.hword)
#define	MFS8_I2C_FTICR2	(IO_MFS8.I2C.FTICR.byte.FTICR2)
#define	MFS8_I2C_FTICR1	(IO_MFS8.I2C.FTICR.byte.FTICR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MFS9,attr=IO,locate=0x18B8
#endif

__IO_EXTENDED	MFSSTR	IO_MFS9;

#define	MFS9_UART_SCR			(IO_MFS9.UART.SCR.byte)
#define	MFS9_UART_SCR_UPCL    	(IO_MFS9.UART.SCR.bit.UPCL)
#define	MFS9_UART_SCR_RIE    	(IO_MFS9.UART.SCR.bit.RIE)
#define	MFS9_UART_SCR_TIE    	(IO_MFS9.UART.SCR.bit.TIE)
#define	MFS9_UART_SCR_TBIE    	(IO_MFS9.UART.SCR.bit.TBIE)
#define	MFS9_UART_SCR_RXE    	(IO_MFS9.UART.SCR.bit.RXE)
#define	MFS9_UART_SCR_TXE    	(IO_MFS9.UART.SCR.bit.TXE)
#define	MFS9_UART_SMR			(IO_MFS9.UART.SMR.byte)
#define	MFS9_UART_SMR_MD    	(IO_MFS9.UART.SMR.bit.MD)
#define	MFS9_UART_SMR_SBL    	(IO_MFS9.UART.SMR.bit.SBL)
#define	MFS9_UART_SMR_BDS    	(IO_MFS9.UART.SMR.bit.BDS)
#define	MFS9_UART_SMR_SOE    	(IO_MFS9.UART.SMR.bit.SOE)
#define	MFS9_UART_SSR			(IO_MFS9.UART.SSR.byte)
#define	MFS9_UART_SSR_REC    	(IO_MFS9.UART.SSR.bit.REC)
#define	MFS9_UART_SSR_PE    	(IO_MFS9.UART.SSR.bit.PE)
#define	MFS9_UART_SSR_FRE    	(IO_MFS9.UART.SSR.bit.FRE)
#define	MFS9_UART_SSR_ORE    	(IO_MFS9.UART.SSR.bit.ORE)
#define	MFS9_UART_SSR_RDRF    	(IO_MFS9.UART.SSR.bit.RDRF)
#define	MFS9_UART_SSR_TDRE    	(IO_MFS9.UART.SSR.bit.TDRE)
#define	MFS9_UART_SSR_TBI    	(IO_MFS9.UART.SSR.bit.TBI)
#define	MFS9_UART_ESCR			(IO_MFS9.UART.ESCR.byte)
#define	MFS9_UART_ESCR_FLWEN    	(IO_MFS9.UART.ESCR.bit.FLWEN)
#define	MFS9_UART_ESCR_ESBL    	(IO_MFS9.UART.ESCR.bit.ESBL)
#define	MFS9_UART_ESCR_INV    	(IO_MFS9.UART.ESCR.bit.INV)
#define	MFS9_UART_ESCR_PEN    	(IO_MFS9.UART.ESCR.bit.PEN)
#define	MFS9_UART_ESCR_P    	(IO_MFS9.UART.ESCR.bit.P)
#define	MFS9_UART_ESCR_L    	(IO_MFS9.UART.ESCR.bit.L)
#define	MFS9_UART_RDR0	(IO_MFS9.UART.RDR0.hword)
#define	MFS9_UART_RDR0_RDR0L	(IO_MFS9.UART.RDR0.byte.RDR0L)
#define	MFS9_UART_RDR0_bit9	(IO_MFS9.UART.RDR0.bit9.D)
#define	MFS9_UART_RDR0_bit7	(IO_MFS9.UART.RDR0.bit7.D)
#define	MFS9_UART_RDR0_bit6	(IO_MFS9.UART.RDR0.bit6.D)
#define	MFS9_UART_RDR0_bit5	(IO_MFS9.UART.RDR0.bit5.D)
#define	MFS9_UART_TDR0	(IO_MFS9.UART.RDR0.hword)
#define	MFS9_UART_TDR0_TDR0L	(IO_MFS9.UART.RDR0.byte.RDR0L)
#define	MFS9_UART_TDR0_bit9	(IO_MFS9.UART.RDR0.bit9.D)
#define	MFS9_UART_TDR0_bit7	(IO_MFS9.UART.RDR0.bit7.D)
#define	MFS9_UART_TDR0_bit6	(IO_MFS9.UART.RDR0.bit6.D)
#define	MFS9_UART_TDR0_bit5	(IO_MFS9.UART.RDR0.bit5.D)
#define	MFS9_UART_SACSR			(IO_MFS9.UART.SACSR.hword)
#define	MFS9_UART_SACSR_STST    	(IO_MFS9.UART.SACSR.bit.STST)
#define	MFS9_UART_SACSR_TRG    	(IO_MFS9.UART.SACSR.bit.TRG)
#define	MFS9_UART_SACSR_TINT    	(IO_MFS9.UART.SACSR.bit.TINT)
#define	MFS9_UART_SACSR_TINTE    	(IO_MFS9.UART.SACSR.bit.TINTE)
#define	MFS9_UART_SACSR_TSYNE    	(IO_MFS9.UART.SACSR.bit.TSYNE)
#define	MFS9_UART_SACSR_TRGE    	(IO_MFS9.UART.SACSR.bit.TRGE)
#define	MFS9_UART_SACSR_TDIV    	(IO_MFS9.UART.SACSR.bit.TDIV)
#define	MFS9_UART_SACSR_TMRE    	(IO_MFS9.UART.SACSR.bit.TMRE)
#define	MFS9_UART_STMR	(IO_MFS9.UART.STMR)
#define	MFS9_UART_STMCR	(IO_MFS9.UART.STMCR)
#define	MFS9_UART_TBYTE0	(IO_MFS9.UART.TBYTE0)
#define	MFS9_UART_BGR			(IO_MFS9.UART.BGR)
#define	MFS9_UART_FCR1			(IO_MFS9.UART.FCR1.byte)
#define	MFS9_UART_FCR1_FLSTE    	(IO_MFS9.UART.FCR1.bit.FLSTE)
#define	MFS9_UART_FCR1_FRIIE    	(IO_MFS9.UART.FCR1.bit.FRIIE)
#define	MFS9_UART_FCR1_FDRQ    	(IO_MFS9.UART.FCR1.bit.FDRQ)
#define	MFS9_UART_FCR1_FTIE    	(IO_MFS9.UART.FCR1.bit.FTIE)
#define	MFS9_UART_FCR1_FSEL    	(IO_MFS9.UART.FCR1.bit.FSEL)
#define	MFS9_UART_FCR0			(IO_MFS9.UART.FCR0.byte)
#define	MFS9_UART_FCR0_FLST    	(IO_MFS9.UART.FCR0.bit.FLST)
#define	MFS9_UART_FCR0_FLD    	(IO_MFS9.UART.FCR0.bit.FLD)
#define	MFS9_UART_FCR0_FSET    	(IO_MFS9.UART.FCR0.bit.FSET)
#define	MFS9_UART_FCR0_FCL2    	(IO_MFS9.UART.FCR0.bit.FCL2)
#define	MFS9_UART_FCR0_FCL1    	(IO_MFS9.UART.FCR0.bit.FCL1)
#define	MFS9_UART_FCR0_FE2    	(IO_MFS9.UART.FCR0.bit.FE2)
#define	MFS9_UART_FCR0_FE1    	(IO_MFS9.UART.FCR0.bit.FE1)
#define	MFS9_UART_FBYTE 	(IO_MFS9.UART.FBYTE.hword)
#define	MFS9_UART_FBYTE2	(IO_MFS9.UART.FBYTE.byte.FBYTE2)
#define	MFS9_UART_FBYTE1	(IO_MFS9.UART.FBYTE.byte.FBYTE1)
#define	MFS9_UART_FTICR 	(IO_MFS9.UART.FTICR.hword)
#define	MFS9_UART_FTICR2	(IO_MFS9.UART.FTICR.byte.FTICR2)
#define	MFS9_UART_FTICR1	(IO_MFS9.UART.FTICR.byte.FTICR1)

#define	MFS9_CSIO_SCR			(IO_MFS9.CSIO.SCR.byte)
#define	MFS9_CSIO_SCR_UPCL    	(IO_MFS9.CSIO.SCR.bit.UPCL)
#define	MFS9_CSIO_SCR_MS    	(IO_MFS9.CSIO.SCR.bit.MS)
#define	MFS9_CSIO_SCR_SPI    	(IO_MFS9.CSIO.SCR.bit.SPI)
#define	MFS9_CSIO_SCR_RIE    	(IO_MFS9.CSIO.SCR.bit.RIE)
#define	MFS9_CSIO_SCR_TIE    	(IO_MFS9.CSIO.SCR.bit.TIE)
#define	MFS9_CSIO_SCR_TBIE    	(IO_MFS9.CSIO.SCR.bit.TBIE)
#define	MFS9_CSIO_SCR_RXE    	(IO_MFS9.CSIO.SCR.bit.RXE)
#define	MFS9_CSIO_SCR_TXE    	(IO_MFS9.CSIO.SCR.bit.TXE)
#define	MFS9_CSIO_SMR			(IO_MFS9.CSIO.SMR.byte)
#define	MFS9_CSIO_SMR_MD    	(IO_MFS9.CSIO.SMR.bit.MD)
#define	MFS9_CSIO_SMR_SCINV    	(IO_MFS9.CSIO.SMR.bit.SCINV)
#define	MFS9_CSIO_SMR_BDS    	(IO_MFS9.CSIO.SMR.bit.BDS)
#define	MFS9_CSIO_SMR_SCKE    	(IO_MFS9.CSIO.SMR.bit.SCKE)
#define	MFS9_CSIO_SMR_SOE    	(IO_MFS9.CSIO.SMR.bit.SOE)
#define	MFS9_CSIO_SSR			(IO_MFS9.CSIO.SSR.byte)
#define	MFS9_CSIO_SSR_REC    	(IO_MFS9.CSIO.SSR.bit.REC)
#define	MFS9_CSIO_SSR_ES    	(IO_MFS9.CSIO.SSR.bit.ES)
#define	MFS9_CSIO_SSR_AWC    	(IO_MFS9.CSIO.SSR.bit.AWC)
#define	MFS9_CSIO_SSR_ORE    	(IO_MFS9.CSIO.SSR.bit.ORE)
#define	MFS9_CSIO_SSR_RDRF    	(IO_MFS9.CSIO.SSR.bit.RDRF)
#define	MFS9_CSIO_SSR_TDRE    	(IO_MFS9.CSIO.SSR.bit.TDRE)
#define	MFS9_CSIO_SSR_TBI    	(IO_MFS9.CSIO.SSR.bit.TBI)
#define	MFS9_CSIO_ESCR			(IO_MFS9.CSIO.ESCR.byte)
#define	MFS9_CSIO_ESCR_SOP    	(IO_MFS9.CSIO.ESCR.bit.SOP)
#define	MFS9_CSIO_ESCR_L3    	(IO_MFS9.CSIO.ESCR.bit.L3)
#define	MFS9_CSIO_ESCR_CSFE    	(IO_MFS9.CSIO.ESCR.bit.CSFE)
#define	MFS9_CSIO_ESCR_WT    	(IO_MFS9.CSIO.ESCR.bit.WT)
#define	MFS9_CSIO_ESCR_L    	(IO_MFS9.CSIO.ESCR.bit.L)
#define	MFS9_CSIO_RDR	(IO_MFS9.CSIO.RDR.word)
#define	MFS9_CSIO_RDR1	(IO_MFS9.CSIO.RDR.hword.RDR1)
#define	MFS9_CSIO_RDR0	(IO_MFS9.CSIO.RDR.hword.RDR0)
#define	MFS9_CSIO_TDR	(IO_MFS9.CSIO.RDR.word)
#define	MFS9_CSIO_TDR1	(IO_MFS9.CSIO.RDR.hword.RDR1)
#define	MFS9_CSIO_TDR0	(IO_MFS9.CSIO.RDR.hword.RDR0)
#define	MFS9_CSIO_SACSR			(IO_MFS9.CSIO.SACSR.hword)
#define	MFS9_CSIO_SACSR_STST    	(IO_MFS9.CSIO.SACSR.bit.STST)
#define	MFS9_CSIO_SACSR_TBEEN    	(IO_MFS9.CSIO.SACSR.bit.TBEEN)
#define	MFS9_CSIO_SACSR_CSEIE    	(IO_MFS9.CSIO.SACSR.bit.CSEIE)
#define	MFS9_CSIO_SACSR_CSE    	(IO_MFS9.CSIO.SACSR.bit.CSE)
#define	MFS9_CSIO_SACSR_TRG    	(IO_MFS9.CSIO.SACSR.bit.TRG)
#define	MFS9_CSIO_SACSR_TINT    	(IO_MFS9.CSIO.SACSR.bit.TINT)
#define	MFS9_CSIO_SACSR_TINTE    	(IO_MFS9.CSIO.SACSR.bit.TINTE)
#define	MFS9_CSIO_SACSR_TSYNE    	(IO_MFS9.CSIO.SACSR.bit.TSYNE)
#define	MFS9_CSIO_SACSR_TRGE    	(IO_MFS9.CSIO.SACSR.bit.TRGE)
#define	MFS9_CSIO_SACSR_TDIV    	(IO_MFS9.CSIO.SACSR.bit.TDIV)
#define	MFS9_CSIO_SACSR_TMRE    	(IO_MFS9.CSIO.SACSR.bit.TMRE)
#define	MFS9_CSIO_STMR	(IO_MFS9.CSIO.STMR)
#define	MFS9_CSIO_STMCR	(IO_MFS9.CSIO.STMCR)
#define	MFS9_CSIO_SCSCR			(IO_MFS9.CSIO.SCSCR.hword)
#define	MFS9_CSIO_SCSCR_SST    	(IO_MFS9.CSIO.SCSCR.bit.SST)
#define	MFS9_CSIO_SCSCR_SED    	(IO_MFS9.CSIO.SCSCR.bit.SED)
#define	MFS9_CSIO_SCSCR_SCD    	(IO_MFS9.CSIO.SCSCR.bit.SCD)
#define	MFS9_CSIO_SCSCR_SCAM    	(IO_MFS9.CSIO.SCSCR.bit.SCAM)
#define	MFS9_CSIO_SCSCR_CDIV    	(IO_MFS9.CSIO.SCSCR.bit.CDIV)
#define	MFS9_CSIO_SCSCR_CSLVL    	(IO_MFS9.CSIO.SCSCR.bit.CSLVL)
#define	MFS9_CSIO_SCSCR_CSEN3    	(IO_MFS9.CSIO.SCSCR.bit.CSEN3)
#define	MFS9_CSIO_SCSCR_CSEN2    	(IO_MFS9.CSIO.SCSCR.bit.CSEN2)
#define	MFS9_CSIO_SCSCR_CSEN1    	(IO_MFS9.CSIO.SCSCR.bit.CSEN1)
#define	MFS9_CSIO_SCSCR_CSEN0    	(IO_MFS9.CSIO.SCSCR.bit.CSEN0)
#define	MFS9_CSIO_SCSCR_CSOE    	(IO_MFS9.CSIO.SCSCR.bit.CSOE)
#define	MFS9_CSIO_SCSTR	(IO_MFS9.CSIO.SCSTR.word)
#define	MFS9_CSIO_SCSTR32	(IO_MFS9.CSIO.SCSTR.hword.SCSTR32)
#define	MFS9_CSIO_SCSTR3	(IO_MFS9.CSIO.SCSTR.byte.SCSTR3)
#define	MFS9_CSIO_SCSTR2	(IO_MFS9.CSIO.SCSTR.byte.SCSTR2)
#define	MFS9_CSIO_SCSTR10	(IO_MFS9.CSIO.SCSTR.hword.SCSTR10)
#define	MFS9_CSIO_SCSTR1	(IO_MFS9.CSIO.SCSTR.byte.SCSTR1)
#define	MFS9_CSIO_SCSTR0	(IO_MFS9.CSIO.SCSTR.byte.SCSTR0)
#define	MFS9_CSIO_SCSFR2			(IO_MFS9.CSIO.SCSFR2.byte)
#define	MFS9_CSIO_SCSFR2_CSLVL    	(IO_MFS9.CSIO.SCSFR2.bit.CSLVL)
#define	MFS9_CSIO_SCSFR2_SCINV    	(IO_MFS9.CSIO.SCSFR2.bit.SCINV)
#define	MFS9_CSIO_SCSFR2_SPI    	(IO_MFS9.CSIO.SCSFR2.bit.SPI)
#define	MFS9_CSIO_SCSFR2_BDS    	(IO_MFS9.CSIO.SCSFR2.bit.BDS)
#define	MFS9_CSIO_SCSFR2_L    	(IO_MFS9.CSIO.SCSFR2.bit.L)
#define	MFS9_CSIO_SCSFR1			(IO_MFS9.CSIO.SCSFR1.byte)
#define	MFS9_CSIO_SCSFR1_CSLVL    	(IO_MFS9.CSIO.SCSFR1.bit.CSLVL)
#define	MFS9_CSIO_SCSFR1_SCINV    	(IO_MFS9.CSIO.SCSFR1.bit.SCINV)
#define	MFS9_CSIO_SCSFR1_SPI    	(IO_MFS9.CSIO.SCSFR1.bit.SPI)
#define	MFS9_CSIO_SCSFR1_BDS    	(IO_MFS9.CSIO.SCSFR1.bit.BDS)
#define	MFS9_CSIO_SCSFR1_L    	(IO_MFS9.CSIO.SCSFR1.bit.L)
#define	MFS9_CSIO_SCSFR0			(IO_MFS9.CSIO.SCSFR0.byte)
#define	MFS9_CSIO_SCSFR0_CSLVL    	(IO_MFS9.CSIO.SCSFR0.bit.CSLVL)
#define	MFS9_CSIO_SCSFR0_SCINV    	(IO_MFS9.CSIO.SCSFR0.bit.SCINV)
#define	MFS9_CSIO_SCSFR0_SPI    	(IO_MFS9.CSIO.SCSFR0.bit.SPI)
#define	MFS9_CSIO_SCSFR0_BDS    	(IO_MFS9.CSIO.SCSFR0.bit.BDS)
#define	MFS9_CSIO_SCSFR0_L    	(IO_MFS9.CSIO.SCSFR0.bit.L)
#define	MFS9_CSIO_TBYTE3	(IO_MFS9.CSIO.TBYTE3)
#define	MFS9_CSIO_TBYTE2	(IO_MFS9.CSIO.TBYTE2)
#define	MFS9_CSIO_TBYTE1	(IO_MFS9.CSIO.TBYTE1)
#define	MFS9_CSIO_TBYTE0	(IO_MFS9.CSIO.TBYTE0)
#define	MFS9_CSIO_BGR			(IO_MFS9.CSIO.BGR)
#define	MFS9_CSIO_FCR1			(IO_MFS9.CSIO.FCR1.byte)
#define	MFS9_CSIO_FCR1_FLSTE    	(IO_MFS9.CSIO.FCR1.bit.FLSTE)
#define	MFS9_CSIO_FCR1_FRIIE    	(IO_MFS9.CSIO.FCR1.bit.FRIIE)
#define	MFS9_CSIO_FCR1_FDRQ    	(IO_MFS9.CSIO.FCR1.bit.FDRQ)
#define	MFS9_CSIO_FCR1_FTIE    	(IO_MFS9.CSIO.FCR1.bit.FTIE)
#define	MFS9_CSIO_FCR1_FSEL    	(IO_MFS9.CSIO.FCR1.bit.FSEL)
#define	MFS9_CSIO_FCR0			(IO_MFS9.CSIO.FCR0.byte)
#define	MFS9_CSIO_FCR0_FLST    	(IO_MFS9.CSIO.FCR0.bit.FLST)
#define	MFS9_CSIO_FCR0_FLD    	(IO_MFS9.CSIO.FCR0.bit.FLD)
#define	MFS9_CSIO_FCR0_FSET    	(IO_MFS9.CSIO.FCR0.bit.FSET)
#define	MFS9_CSIO_FCR0_FCL2    	(IO_MFS9.CSIO.FCR0.bit.FCL2)
#define	MFS9_CSIO_FCR0_FCL1    	(IO_MFS9.CSIO.FCR0.bit.FCL1)
#define	MFS9_CSIO_FCR0_FE2    	(IO_MFS9.CSIO.FCR0.bit.FE2)
#define	MFS9_CSIO_FCR0_FE1    	(IO_MFS9.CSIO.FCR0.bit.FE1)
#define	MFS9_CSIO_FBYTE 	(IO_MFS9.CSIO.FBYTE.hword)
#define	MFS9_CSIO_FBYTE2	(IO_MFS9.CSIO.FBYTE.byte.FBYTE2)
#define	MFS9_CSIO_FBYTE1	(IO_MFS9.CSIO.FBYTE.byte.FBYTE1)
#define	MFS9_CSIO_FTICR 	(IO_MFS9.CSIO.FTICR.hword)
#define	MFS9_CSIO_FTICR2	(IO_MFS9.CSIO.FTICR.byte.FTICR2)
#define	MFS9_CSIO_FTICR1	(IO_MFS9.CSIO.FTICR.byte.FTICR1)

#define	MFS9_LINUART_SCR			(IO_MFS9.LINUART.SCR.byte)
#define	MFS9_LINUART_SCR_UPCL    	(IO_MFS9.LINUART.SCR.bit.UPCL)
#define	MFS9_LINUART_SCR_MS    	(IO_MFS9.LINUART.SCR.bit.MS)
#define	MFS9_LINUART_SCR_LBR    	(IO_MFS9.LINUART.SCR.bit.LBR)
#define	MFS9_LINUART_SCR_RIE    	(IO_MFS9.LINUART.SCR.bit.RIE)
#define	MFS9_LINUART_SCR_TIE    	(IO_MFS9.LINUART.SCR.bit.TIE)
#define	MFS9_LINUART_SCR_TBIE    	(IO_MFS9.LINUART.SCR.bit.TBIE)
#define	MFS9_LINUART_SCR_RXE    	(IO_MFS9.LINUART.SCR.bit.RXE)
#define	MFS9_LINUART_SCR_TXE    	(IO_MFS9.LINUART.SCR.bit.TXE)
#define	MFS9_LINUART_SMR			(IO_MFS9.LINUART.SMR.byte)
#define	MFS9_LINUART_SMR_MD    	(IO_MFS9.LINUART.SMR.bit.MD)
#define	MFS9_LINUART_SMR_SBL    	(IO_MFS9.LINUART.SMR.bit.SBL)
#define	MFS9_LINUART_SMR_SOE    	(IO_MFS9.LINUART.SMR.bit.SOE)
#define	MFS9_LINUART_SSR			(IO_MFS9.LINUART.SSR.byte)
#define	MFS9_LINUART_SSR_REC    	(IO_MFS9.LINUART.SSR.bit.REC)
#define	MFS9_LINUART_SSR_LBD    	(IO_MFS9.LINUART.SSR.bit.LBD)
#define	MFS9_LINUART_SSR_FRE    	(IO_MFS9.LINUART.SSR.bit.FRE)
#define	MFS9_LINUART_SSR_ORE    	(IO_MFS9.LINUART.SSR.bit.ORE)
#define	MFS9_LINUART_SSR_RDRF    	(IO_MFS9.LINUART.SSR.bit.RDRF)
#define	MFS9_LINUART_SSR_TDRE    	(IO_MFS9.LINUART.SSR.bit.TDRE)
#define	MFS9_LINUART_SSR_TBI    	(IO_MFS9.LINUART.SSR.bit.TBI)
#define	MFS9_LINUART_ESCR			(IO_MFS9.LINUART.ESCR.byte)
#define	MFS9_LINUART_ESCR_ESBL    	(IO_MFS9.LINUART.ESCR.bit.ESBL)
#define	MFS9_LINUART_ESCR_LBIE    	(IO_MFS9.LINUART.ESCR.bit.LBIE)
#define	MFS9_LINUART_ESCR_LBL    	(IO_MFS9.LINUART.ESCR.bit.LBL)
#define	MFS9_LINUART_ESCR_DEL    	(IO_MFS9.LINUART.ESCR.bit.DEL)
#define	MFS9_LINUART_RDR0	(IO_MFS9.LINUART.RDR0)
#define	MFS9_LINUART_TDR0	(IO_MFS9.LINUART.RDR0)
#define	MFS9_LINUART_SACSR			(IO_MFS9.LINUART.SACSR.hword)
#define	MFS9_LINUART_SACSR_STST    	(IO_MFS9.LINUART.SACSR.bit.STST)
#define	MFS9_LINUART_SACSR_BST    	(IO_MFS9.LINUART.SACSR.bit.BST)
#define	MFS9_LINUART_SACSR_SFD    	(IO_MFS9.LINUART.SACSR.bit.SFD)
#define	MFS9_LINUART_SACSR_SFDE    	(IO_MFS9.LINUART.SACSR.bit.SFDE)
#define	MFS9_LINUART_SACSR_AUTE    	(IO_MFS9.LINUART.SACSR.bit.AUTE)
#define	MFS9_LINUART_SACSR_TRG    	(IO_MFS9.LINUART.SACSR.bit.TRG)
#define	MFS9_LINUART_SACSR_TINT    	(IO_MFS9.LINUART.SACSR.bit.TINT)
#define	MFS9_LINUART_SACSR_TINTE    	(IO_MFS9.LINUART.SACSR.bit.TINTE)
#define	MFS9_LINUART_SACSR_TSYNE    	(IO_MFS9.LINUART.SACSR.bit.TSYNE)
#define	MFS9_LINUART_SACSR_TRGE    	(IO_MFS9.LINUART.SACSR.bit.TRGE)
#define	MFS9_LINUART_SACSR_TDIV    	(IO_MFS9.LINUART.SACSR.bit.TDIV)
#define	MFS9_LINUART_SACSR_TMRE    	(IO_MFS9.LINUART.SACSR.bit.TMRE)
#define	MFS9_LINUART_STMR	(IO_MFS9.LINUART.STMR)
#define	MFS9_LINUART_STMCR	(IO_MFS9.LINUART.STMCR)
#define	MFS9_LINUART_SFUR	(IO_MFS9.LINUART.SFUR)
#define	MFS9_LINUART_LAMSR			(IO_MFS9.LINUART.LAMSR.byte)
#define	MFS9_LINUART_LAMSR_LER    	(IO_MFS9.LINUART.LAMSR.bit.LER)
#define	MFS9_LINUART_LAMSR_SER    	(IO_MFS9.LINUART.LAMSR.bit.SER)
#define	MFS9_LINUART_LAMSR_RDRF    	(IO_MFS9.LINUART.LAMSR.bit.RDRF)
#define	MFS9_LINUART_LAMSR_TDRE    	(IO_MFS9.LINUART.LAMSR.bit.TDRE)
#define	MFS9_LINUART_LAMSR_TBI    	(IO_MFS9.LINUART.LAMSR.bit.TBI)
#define	MFS9_LINUART_LAMSR_LCSC    	(IO_MFS9.LINUART.LAMSR.bit.LCSC)
#define	MFS9_LINUART_LAMSR_LAHC    	(IO_MFS9.LINUART.LAMSR.bit.LAHC)
#define	MFS9_LINUART_LAMCR			(IO_MFS9.LINUART.LAMCR.byte)
#define	MFS9_LINUART_LAMCR_LDL    	(IO_MFS9.LINUART.LAMCR.bit.LDL)
#define	MFS9_LINUART_LAMCR_LTDRCL    	(IO_MFS9.LINUART.LAMCR.bit.LTDRCL)
#define	MFS9_LINUART_LAMCR_LCSTYP    	(IO_MFS9.LINUART.LAMCR.bit.LCSTYP)
#define	MFS9_LINUART_LAMCR_LIDEN    	(IO_MFS9.LINUART.LAMCR.bit.LIDEN)
#define	MFS9_LINUART_LAMCR_LAMEN    	(IO_MFS9.LINUART.LAMCR.bit.LAMEN)
#define	MFS9_LINUART_SFLR	(IO_MFS9.LINUART.SFLR.hword)
#define	MFS9_LINUART_SFLR1	(IO_MFS9.LINUART.SFLR.byte.SFLR1)
#define	MFS9_LINUART_SFLR0	(IO_MFS9.LINUART.SFLR.byte.SFLR0)
#define	MFS9_LINUART_LAMESR			(IO_MFS9.LINUART.LAMESR.byte)
#define	MFS9_LINUART_LAMESR_LCSER    	(IO_MFS9.LINUART.LAMESR.bit.LCSER)
#define	MFS9_LINUART_LAMESR_LPTER    	(IO_MFS9.LINUART.LAMESR.bit.LPTER)
#define	MFS9_LINUART_LAMESR_LSFER    	(IO_MFS9.LINUART.LAMESR.bit.LSFER)
#define	MFS9_LINUART_LAMESR_LBSER    	(IO_MFS9.LINUART.LAMESR.bit.LBSER)
#define	MFS9_LINUART_LAMERT			(IO_MFS9.LINUART.LAMERT.byte)
#define	MFS9_LINUART_LAMERT_KEY    	(IO_MFS9.LINUART.LAMERT.bit.KEY)
#define	MFS9_LINUART_LAMERT_LCSERT    	(IO_MFS9.LINUART.LAMERT.bit.LCSERT)
#define	MFS9_LINUART_LAMERT_LPTERT    	(IO_MFS9.LINUART.LAMERT.bit.LPTERT)
#define	MFS9_LINUART_LAMERT_LSFERT    	(IO_MFS9.LINUART.LAMERT.bit.LSFERT)
#define	MFS9_LINUART_LAMERT_LBSERT    	(IO_MFS9.LINUART.LAMERT.bit.LBSERT)
#define	MFS9_LINUART_LAMERT_FRET    	(IO_MFS9.LINUART.LAMERT.bit.FRET)
#define	MFS9_LINUART_LAMIER			(IO_MFS9.LINUART.LAMIER.byte)
#define	MFS9_LINUART_LAMIER_LCSERIE    	(IO_MFS9.LINUART.LAMIER.bit.LCSERIE)
#define	MFS9_LINUART_LAMIER_LPTERIE    	(IO_MFS9.LINUART.LAMIER.bit.LPTERIE)
#define	MFS9_LINUART_LAMIER_LSFERIE    	(IO_MFS9.LINUART.LAMIER.bit.LSFERIE)
#define	MFS9_LINUART_LAMIER_LBSERIE    	(IO_MFS9.LINUART.LAMIER.bit.LBSERIE)
#define	MFS9_LINUART_LAMIER_LCSCIE    	(IO_MFS9.LINUART.LAMIER.bit.LCSCIE)
#define	MFS9_LINUART_LAMIER_LAHCIE    	(IO_MFS9.LINUART.LAMIER.bit.LAHCIE)
#define	MFS9_LINUART_LAMID			(IO_MFS9.LINUART.LAMID.byte)
#define	MFS9_LINUART_LAMID_P    	(IO_MFS9.LINUART.LAMID.bit.P)
#define	MFS9_LINUART_LAMID_LID    	(IO_MFS9.LINUART.LAMID.bit.LID)
#define	MFS9_LINUART_BGR			(IO_MFS9.LINUART.BGR)
#define	MFS9_LINUART_FCR1			(IO_MFS9.LINUART.FCR1.byte)
#define	MFS9_LINUART_FCR1_FLSTE    	(IO_MFS9.LINUART.FCR1.bit.FLSTE)
#define	MFS9_LINUART_FCR1_FRIIE    	(IO_MFS9.LINUART.FCR1.bit.FRIIE)
#define	MFS9_LINUART_FCR1_FDRQ    	(IO_MFS9.LINUART.FCR1.bit.FDRQ)
#define	MFS9_LINUART_FCR1_FTIE    	(IO_MFS9.LINUART.FCR1.bit.FTIE)
#define	MFS9_LINUART_FCR1_FSEL    	(IO_MFS9.LINUART.FCR1.bit.FSEL)
#define	MFS9_LINUART_FCR0			(IO_MFS9.LINUART.FCR0.byte)
#define	MFS9_LINUART_FCR0_FLST    	(IO_MFS9.LINUART.FCR0.bit.FLST)
#define	MFS9_LINUART_FCR0_FLD    	(IO_MFS9.LINUART.FCR0.bit.FLD)
#define	MFS9_LINUART_FCR0_FSET    	(IO_MFS9.LINUART.FCR0.bit.FSET)
#define	MFS9_LINUART_FCR0_FCL2    	(IO_MFS9.LINUART.FCR0.bit.FCL2)
#define	MFS9_LINUART_FCR0_FCL1    	(IO_MFS9.LINUART.FCR0.bit.FCL1)
#define	MFS9_LINUART_FCR0_FE2    	(IO_MFS9.LINUART.FCR0.bit.FE2)
#define	MFS9_LINUART_FCR0_FE1    	(IO_MFS9.LINUART.FCR0.bit.FE1)
#define	MFS9_LINUART_FBYTE 	(IO_MFS9.LINUART.FBYTE.hword)
#define	MFS9_LINUART_FBYTE2	(IO_MFS9.LINUART.FBYTE.byte.FBYTE2)
#define	MFS9_LINUART_FBYTE1	(IO_MFS9.LINUART.FBYTE.byte.FBYTE1)
#define	MFS9_LINUART_FTICR 	(IO_MFS9.LINUART.FTICR.hword)
#define	MFS9_LINUART_FTICR2	(IO_MFS9.LINUART.FTICR.byte.FTICR2)
#define	MFS9_LINUART_FTICR1	(IO_MFS9.LINUART.FTICR.byte.FTICR1)

#define	MFS9_I2C_IBCR			(IO_MFS9.I2C.IBCR.byte)
#define	MFS9_I2C_IBCR_MSS    	(IO_MFS9.I2C.IBCR.bit.MSS)
#define	MFS9_I2C_IBCR_ACT_SCC    	(IO_MFS9.I2C.IBCR.bit.ACT_SCC)
#define	MFS9_I2C_IBCR_ACKE    	(IO_MFS9.I2C.IBCR.bit.ACKE)
#define	MFS9_I2C_IBCR_WSEL    	(IO_MFS9.I2C.IBCR.bit.WSEL)
#define	MFS9_I2C_IBCR_CNDE    	(IO_MFS9.I2C.IBCR.bit.CNDE)
#define	MFS9_I2C_IBCR_INTE    	(IO_MFS9.I2C.IBCR.bit.INTE)
#define	MFS9_I2C_IBCR_BER    	(IO_MFS9.I2C.IBCR.bit.BER)
#define	MFS9_I2C_IBCR_INT    	(IO_MFS9.I2C.IBCR.bit.INT)
#define	MFS9_I2C_SMR			(IO_MFS9.I2C.SMR.byte)
#define	MFS9_I2C_SMR_MD    	(IO_MFS9.I2C.SMR.bit.MD)
#define	MFS9_I2C_SMR_RIE    	(IO_MFS9.I2C.SMR.bit.RIE)
#define	MFS9_I2C_SMR_TIE    	(IO_MFS9.I2C.SMR.bit.TIE)
#define	MFS9_I2C_SSR			(IO_MFS9.I2C.SSR.byte)
#define	MFS9_I2C_SSR_REC    	(IO_MFS9.I2C.SSR.bit.REC)
#define	MFS9_I2C_SSR_TSET    	(IO_MFS9.I2C.SSR.bit.TSET)
#define	MFS9_I2C_SSR_DMA    	(IO_MFS9.I2C.SSR.bit.DMA)
#define	MFS9_I2C_SSR_TBIE    	(IO_MFS9.I2C.SSR.bit.TBIE)
#define	MFS9_I2C_SSR_ORE    	(IO_MFS9.I2C.SSR.bit.ORE)
#define	MFS9_I2C_SSR_RDRF    	(IO_MFS9.I2C.SSR.bit.RDRF)
#define	MFS9_I2C_SSR_TDRE    	(IO_MFS9.I2C.SSR.bit.TDRE)
#define	MFS9_I2C_SSR_TBI    	(IO_MFS9.I2C.SSR.bit.TBI)
#define	MFS9_I2C_IBSR			(IO_MFS9.I2C.IBSR.byte)
#define	MFS9_I2C_IBSR_FBT    	(IO_MFS9.I2C.IBSR.bit.FBT)
#define	MFS9_I2C_IBSR_RACK    	(IO_MFS9.I2C.IBSR.bit.RACK)
#define	MFS9_I2C_IBSR_RSA    	(IO_MFS9.I2C.IBSR.bit.RSA)
#define	MFS9_I2C_IBSR_TRX    	(IO_MFS9.I2C.IBSR.bit.TRX)
#define	MFS9_I2C_IBSR_AL    	(IO_MFS9.I2C.IBSR.bit.AL)
#define	MFS9_I2C_IBSR_RSC    	(IO_MFS9.I2C.IBSR.bit.RSC)
#define	MFS9_I2C_IBSR_SPC    	(IO_MFS9.I2C.IBSR.bit.SPC)
#define	MFS9_I2C_IBSR_BB    	(IO_MFS9.I2C.IBSR.bit.BB)
#define	MFS9_I2C_RDR0	(IO_MFS9.I2C.RDR0)
#define	MFS9_I2C_TDR0	(IO_MFS9.I2C.RDR0)
#define	MFS9_I2C_SACSR			(IO_MFS9.I2C.SACSR.hword)
#define	MFS9_I2C_SACSR_TRG    	(IO_MFS9.I2C.SACSR.bit.TRG)
#define	MFS9_I2C_SACSR_TINT    	(IO_MFS9.I2C.SACSR.bit.TINT)
#define	MFS9_I2C_SACSR_TINTE    	(IO_MFS9.I2C.SACSR.bit.TINTE)
#define	MFS9_I2C_SACSR_TRGE    	(IO_MFS9.I2C.SACSR.bit.TRGE)
#define	MFS9_I2C_SACSR_TDIV    	(IO_MFS9.I2C.SACSR.bit.TDIV)
#define	MFS9_I2C_SACSR_TMRE    	(IO_MFS9.I2C.SACSR.bit.TMRE)
#define	MFS9_I2C_STMR	(IO_MFS9.I2C.STMR)
#define	MFS9_I2C_STMCR	(IO_MFS9.I2C.STMCR)
#define	MFS9_I2C_BGR	(IO_MFS9.I2C.BGR)
#define	MFS9_I2C_ISMK			(IO_MFS9.I2C.ISMK.byte)
#define	MFS9_I2C_ISMK_EN    	(IO_MFS9.I2C.ISMK.bit.EN)
#define	MFS9_I2C_ISMK_SM    	(IO_MFS9.I2C.ISMK.bit.SM)
#define	MFS9_I2C_ISBA			(IO_MFS9.I2C.ISBA.byte)
#define	MFS9_I2C_ISBA_SAEN    	(IO_MFS9.I2C.ISBA.bit.SAEN)
#define	MFS9_I2C_ISBA_SA    	(IO_MFS9.I2C.ISBA.bit.SA)
#define	MFS9_I2C_FCR1			(IO_MFS9.I2C.FCR1.byte)
#define	MFS9_I2C_FCR1_FLSTE    	(IO_MFS9.I2C.FCR1.bit.FLSTE)
#define	MFS9_I2C_FCR1_FRIIE    	(IO_MFS9.I2C.FCR1.bit.FRIIE)
#define	MFS9_I2C_FCR1_FDRQ    	(IO_MFS9.I2C.FCR1.bit.FDRQ)
#define	MFS9_I2C_FCR1_FTIE    	(IO_MFS9.I2C.FCR1.bit.FTIE)
#define	MFS9_I2C_FCR1_FSEL    	(IO_MFS9.I2C.FCR1.bit.FSEL)
#define	MFS9_I2C_FCR0			(IO_MFS9.I2C.FCR0.byte)
#define	MFS9_I2C_FCR0_FLST    	(IO_MFS9.I2C.FCR0.bit.FLST)
#define	MFS9_I2C_FCR0_FLD    	(IO_MFS9.I2C.FCR0.bit.FLD)
#define	MFS9_I2C_FCR0_FSET    	(IO_MFS9.I2C.FCR0.bit.FSET)
#define	MFS9_I2C_FCR0_FCL2    	(IO_MFS9.I2C.FCR0.bit.FCL2)
#define	MFS9_I2C_FCR0_FCL1    	(IO_MFS9.I2C.FCR0.bit.FCL1)
#define	MFS9_I2C_FCR0_FE2    	(IO_MFS9.I2C.FCR0.bit.FE2)
#define	MFS9_I2C_FCR0_FE1    	(IO_MFS9.I2C.FCR0.bit.FE1)
#define	MFS9_I2C_FBYTE 	(IO_MFS9.I2C.FBYTE.hword)
#define	MFS9_I2C_FBYTE2	(IO_MFS9.I2C.FBYTE.byte.FBYTE2)
#define	MFS9_I2C_FBYTE1	(IO_MFS9.I2C.FBYTE.byte.FBYTE1)
#define	MFS9_I2C_FTICR 	(IO_MFS9.I2C.FTICR.hword)
#define	MFS9_I2C_FTICR2	(IO_MFS9.I2C.FTICR.byte.FTICR2)
#define	MFS9_I2C_FTICR1	(IO_MFS9.I2C.FTICR.byte.FTICR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MFS10,attr=IO,locate=0x18E0
#endif

__IO_EXTENDED	MFSSTR	IO_MFS10;

#define	MFS10_UART_SCR			(IO_MFS10.UART.SCR.byte)
#define	MFS10_UART_SCR_UPCL    	(IO_MFS10.UART.SCR.bit.UPCL)
#define	MFS10_UART_SCR_RIE    	(IO_MFS10.UART.SCR.bit.RIE)
#define	MFS10_UART_SCR_TIE    	(IO_MFS10.UART.SCR.bit.TIE)
#define	MFS10_UART_SCR_TBIE    	(IO_MFS10.UART.SCR.bit.TBIE)
#define	MFS10_UART_SCR_RXE    	(IO_MFS10.UART.SCR.bit.RXE)
#define	MFS10_UART_SCR_TXE    	(IO_MFS10.UART.SCR.bit.TXE)
#define	MFS10_UART_SMR			(IO_MFS10.UART.SMR.byte)
#define	MFS10_UART_SMR_MD    	(IO_MFS10.UART.SMR.bit.MD)
#define	MFS10_UART_SMR_SBL    	(IO_MFS10.UART.SMR.bit.SBL)
#define	MFS10_UART_SMR_BDS    	(IO_MFS10.UART.SMR.bit.BDS)
#define	MFS10_UART_SMR_SOE    	(IO_MFS10.UART.SMR.bit.SOE)
#define	MFS10_UART_SSR			(IO_MFS10.UART.SSR.byte)
#define	MFS10_UART_SSR_REC    	(IO_MFS10.UART.SSR.bit.REC)
#define	MFS10_UART_SSR_PE    	(IO_MFS10.UART.SSR.bit.PE)
#define	MFS10_UART_SSR_FRE    	(IO_MFS10.UART.SSR.bit.FRE)
#define	MFS10_UART_SSR_ORE    	(IO_MFS10.UART.SSR.bit.ORE)
#define	MFS10_UART_SSR_RDRF    	(IO_MFS10.UART.SSR.bit.RDRF)
#define	MFS10_UART_SSR_TDRE    	(IO_MFS10.UART.SSR.bit.TDRE)
#define	MFS10_UART_SSR_TBI    	(IO_MFS10.UART.SSR.bit.TBI)
#define	MFS10_UART_ESCR			(IO_MFS10.UART.ESCR.byte)
#define	MFS10_UART_ESCR_FLWEN    	(IO_MFS10.UART.ESCR.bit.FLWEN)
#define	MFS10_UART_ESCR_ESBL    	(IO_MFS10.UART.ESCR.bit.ESBL)
#define	MFS10_UART_ESCR_INV    	(IO_MFS10.UART.ESCR.bit.INV)
#define	MFS10_UART_ESCR_PEN    	(IO_MFS10.UART.ESCR.bit.PEN)
#define	MFS10_UART_ESCR_P    	(IO_MFS10.UART.ESCR.bit.P)
#define	MFS10_UART_ESCR_L    	(IO_MFS10.UART.ESCR.bit.L)
#define	MFS10_UART_RDR0	(IO_MFS10.UART.RDR0.hword)
#define	MFS10_UART_RDR0_RDR0L	(IO_MFS10.UART.RDR0.byte.RDR0L)
#define	MFS10_UART_RDR0_bit9	(IO_MFS10.UART.RDR0.bit9.D)
#define	MFS10_UART_RDR0_bit7	(IO_MFS10.UART.RDR0.bit7.D)
#define	MFS10_UART_RDR0_bit6	(IO_MFS10.UART.RDR0.bit6.D)
#define	MFS10_UART_RDR0_bit5	(IO_MFS10.UART.RDR0.bit5.D)
#define	MFS10_UART_TDR0	(IO_MFS10.UART.RDR0.hword)
#define	MFS10_UART_TDR0_TDR0L	(IO_MFS10.UART.RDR0.byte.RDR0L)
#define	MFS10_UART_TDR0_bit9	(IO_MFS10.UART.RDR0.bit9.D)
#define	MFS10_UART_TDR0_bit7	(IO_MFS10.UART.RDR0.bit7.D)
#define	MFS10_UART_TDR0_bit6	(IO_MFS10.UART.RDR0.bit6.D)
#define	MFS10_UART_TDR0_bit5	(IO_MFS10.UART.RDR0.bit5.D)
#define	MFS10_UART_SACSR			(IO_MFS10.UART.SACSR.hword)
#define	MFS10_UART_SACSR_STST    	(IO_MFS10.UART.SACSR.bit.STST)
#define	MFS10_UART_SACSR_TRG    	(IO_MFS10.UART.SACSR.bit.TRG)
#define	MFS10_UART_SACSR_TINT    	(IO_MFS10.UART.SACSR.bit.TINT)
#define	MFS10_UART_SACSR_TINTE    	(IO_MFS10.UART.SACSR.bit.TINTE)
#define	MFS10_UART_SACSR_TSYNE    	(IO_MFS10.UART.SACSR.bit.TSYNE)
#define	MFS10_UART_SACSR_TRGE    	(IO_MFS10.UART.SACSR.bit.TRGE)
#define	MFS10_UART_SACSR_TDIV    	(IO_MFS10.UART.SACSR.bit.TDIV)
#define	MFS10_UART_SACSR_TMRE    	(IO_MFS10.UART.SACSR.bit.TMRE)
#define	MFS10_UART_STMR	(IO_MFS10.UART.STMR)
#define	MFS10_UART_STMCR	(IO_MFS10.UART.STMCR)
#define	MFS10_UART_TBYTE0	(IO_MFS10.UART.TBYTE0)
#define	MFS10_UART_BGR			(IO_MFS10.UART.BGR)
#define	MFS10_UART_FCR1			(IO_MFS10.UART.FCR1.byte)
#define	MFS10_UART_FCR1_FLSTE    	(IO_MFS10.UART.FCR1.bit.FLSTE)
#define	MFS10_UART_FCR1_FRIIE    	(IO_MFS10.UART.FCR1.bit.FRIIE)
#define	MFS10_UART_FCR1_FDRQ    	(IO_MFS10.UART.FCR1.bit.FDRQ)
#define	MFS10_UART_FCR1_FTIE    	(IO_MFS10.UART.FCR1.bit.FTIE)
#define	MFS10_UART_FCR1_FSEL    	(IO_MFS10.UART.FCR1.bit.FSEL)
#define	MFS10_UART_FCR0			(IO_MFS10.UART.FCR0.byte)
#define	MFS10_UART_FCR0_FLST    	(IO_MFS10.UART.FCR0.bit.FLST)
#define	MFS10_UART_FCR0_FLD    	(IO_MFS10.UART.FCR0.bit.FLD)
#define	MFS10_UART_FCR0_FSET    	(IO_MFS10.UART.FCR0.bit.FSET)
#define	MFS10_UART_FCR0_FCL2    	(IO_MFS10.UART.FCR0.bit.FCL2)
#define	MFS10_UART_FCR0_FCL1    	(IO_MFS10.UART.FCR0.bit.FCL1)
#define	MFS10_UART_FCR0_FE2    	(IO_MFS10.UART.FCR0.bit.FE2)
#define	MFS10_UART_FCR0_FE1    	(IO_MFS10.UART.FCR0.bit.FE1)
#define	MFS10_UART_FBYTE 	(IO_MFS10.UART.FBYTE.hword)
#define	MFS10_UART_FBYTE2	(IO_MFS10.UART.FBYTE.byte.FBYTE2)
#define	MFS10_UART_FBYTE1	(IO_MFS10.UART.FBYTE.byte.FBYTE1)
#define	MFS10_UART_FTICR 	(IO_MFS10.UART.FTICR.hword)
#define	MFS10_UART_FTICR2	(IO_MFS10.UART.FTICR.byte.FTICR2)
#define	MFS10_UART_FTICR1	(IO_MFS10.UART.FTICR.byte.FTICR1)

#define	MFS10_CSIO_SCR			(IO_MFS10.CSIO.SCR.byte)
#define	MFS10_CSIO_SCR_UPCL    	(IO_MFS10.CSIO.SCR.bit.UPCL)
#define	MFS10_CSIO_SCR_MS    	(IO_MFS10.CSIO.SCR.bit.MS)
#define	MFS10_CSIO_SCR_SPI    	(IO_MFS10.CSIO.SCR.bit.SPI)
#define	MFS10_CSIO_SCR_RIE    	(IO_MFS10.CSIO.SCR.bit.RIE)
#define	MFS10_CSIO_SCR_TIE    	(IO_MFS10.CSIO.SCR.bit.TIE)
#define	MFS10_CSIO_SCR_TBIE    	(IO_MFS10.CSIO.SCR.bit.TBIE)
#define	MFS10_CSIO_SCR_RXE    	(IO_MFS10.CSIO.SCR.bit.RXE)
#define	MFS10_CSIO_SCR_TXE    	(IO_MFS10.CSIO.SCR.bit.TXE)
#define	MFS10_CSIO_SMR			(IO_MFS10.CSIO.SMR.byte)
#define	MFS10_CSIO_SMR_MD    	(IO_MFS10.CSIO.SMR.bit.MD)
#define	MFS10_CSIO_SMR_SCINV    	(IO_MFS10.CSIO.SMR.bit.SCINV)
#define	MFS10_CSIO_SMR_BDS    	(IO_MFS10.CSIO.SMR.bit.BDS)
#define	MFS10_CSIO_SMR_SCKE    	(IO_MFS10.CSIO.SMR.bit.SCKE)
#define	MFS10_CSIO_SMR_SOE    	(IO_MFS10.CSIO.SMR.bit.SOE)
#define	MFS10_CSIO_SSR			(IO_MFS10.CSIO.SSR.byte)
#define	MFS10_CSIO_SSR_REC    	(IO_MFS10.CSIO.SSR.bit.REC)
#define	MFS10_CSIO_SSR_ES    	(IO_MFS10.CSIO.SSR.bit.ES)
#define	MFS10_CSIO_SSR_AWC    	(IO_MFS10.CSIO.SSR.bit.AWC)
#define	MFS10_CSIO_SSR_ORE    	(IO_MFS10.CSIO.SSR.bit.ORE)
#define	MFS10_CSIO_SSR_RDRF    	(IO_MFS10.CSIO.SSR.bit.RDRF)
#define	MFS10_CSIO_SSR_TDRE    	(IO_MFS10.CSIO.SSR.bit.TDRE)
#define	MFS10_CSIO_SSR_TBI    	(IO_MFS10.CSIO.SSR.bit.TBI)
#define	MFS10_CSIO_ESCR			(IO_MFS10.CSIO.ESCR.byte)
#define	MFS10_CSIO_ESCR_SOP    	(IO_MFS10.CSIO.ESCR.bit.SOP)
#define	MFS10_CSIO_ESCR_L3    	(IO_MFS10.CSIO.ESCR.bit.L3)
#define	MFS10_CSIO_ESCR_CSFE    	(IO_MFS10.CSIO.ESCR.bit.CSFE)
#define	MFS10_CSIO_ESCR_WT    	(IO_MFS10.CSIO.ESCR.bit.WT)
#define	MFS10_CSIO_ESCR_L    	(IO_MFS10.CSIO.ESCR.bit.L)
#define	MFS10_CSIO_RDR	(IO_MFS10.CSIO.RDR.word)
#define	MFS10_CSIO_RDR1	(IO_MFS10.CSIO.RDR.hword.RDR1)
#define	MFS10_CSIO_RDR0	(IO_MFS10.CSIO.RDR.hword.RDR0)
#define	MFS10_CSIO_TDR	(IO_MFS10.CSIO.RDR.word)
#define	MFS10_CSIO_TDR1	(IO_MFS10.CSIO.RDR.hword.RDR1)
#define	MFS10_CSIO_TDR0	(IO_MFS10.CSIO.RDR.hword.RDR0)
#define	MFS10_CSIO_SACSR			(IO_MFS10.CSIO.SACSR.hword)
#define	MFS10_CSIO_SACSR_STST    	(IO_MFS10.CSIO.SACSR.bit.STST)
#define	MFS10_CSIO_SACSR_TBEEN    	(IO_MFS10.CSIO.SACSR.bit.TBEEN)
#define	MFS10_CSIO_SACSR_CSEIE    	(IO_MFS10.CSIO.SACSR.bit.CSEIE)
#define	MFS10_CSIO_SACSR_CSE    	(IO_MFS10.CSIO.SACSR.bit.CSE)
#define	MFS10_CSIO_SACSR_TRG    	(IO_MFS10.CSIO.SACSR.bit.TRG)
#define	MFS10_CSIO_SACSR_TINT    	(IO_MFS10.CSIO.SACSR.bit.TINT)
#define	MFS10_CSIO_SACSR_TINTE    	(IO_MFS10.CSIO.SACSR.bit.TINTE)
#define	MFS10_CSIO_SACSR_TSYNE    	(IO_MFS10.CSIO.SACSR.bit.TSYNE)
#define	MFS10_CSIO_SACSR_TRGE    	(IO_MFS10.CSIO.SACSR.bit.TRGE)
#define	MFS10_CSIO_SACSR_TDIV    	(IO_MFS10.CSIO.SACSR.bit.TDIV)
#define	MFS10_CSIO_SACSR_TMRE    	(IO_MFS10.CSIO.SACSR.bit.TMRE)
#define	MFS10_CSIO_STMR	(IO_MFS10.CSIO.STMR)
#define	MFS10_CSIO_STMCR	(IO_MFS10.CSIO.STMCR)
#define	MFS10_CSIO_SCSCR			(IO_MFS10.CSIO.SCSCR.hword)
#define	MFS10_CSIO_SCSCR_SST    	(IO_MFS10.CSIO.SCSCR.bit.SST)
#define	MFS10_CSIO_SCSCR_SED    	(IO_MFS10.CSIO.SCSCR.bit.SED)
#define	MFS10_CSIO_SCSCR_SCD    	(IO_MFS10.CSIO.SCSCR.bit.SCD)
#define	MFS10_CSIO_SCSCR_SCAM    	(IO_MFS10.CSIO.SCSCR.bit.SCAM)
#define	MFS10_CSIO_SCSCR_CDIV    	(IO_MFS10.CSIO.SCSCR.bit.CDIV)
#define	MFS10_CSIO_SCSCR_CSLVL    	(IO_MFS10.CSIO.SCSCR.bit.CSLVL)
#define	MFS10_CSIO_SCSCR_CSEN3    	(IO_MFS10.CSIO.SCSCR.bit.CSEN3)
#define	MFS10_CSIO_SCSCR_CSEN2    	(IO_MFS10.CSIO.SCSCR.bit.CSEN2)
#define	MFS10_CSIO_SCSCR_CSEN1    	(IO_MFS10.CSIO.SCSCR.bit.CSEN1)
#define	MFS10_CSIO_SCSCR_CSEN0    	(IO_MFS10.CSIO.SCSCR.bit.CSEN0)
#define	MFS10_CSIO_SCSCR_CSOE    	(IO_MFS10.CSIO.SCSCR.bit.CSOE)
#define	MFS10_CSIO_SCSTR	(IO_MFS10.CSIO.SCSTR.word)
#define	MFS10_CSIO_SCSTR32	(IO_MFS10.CSIO.SCSTR.hword.SCSTR32)
#define	MFS10_CSIO_SCSTR3	(IO_MFS10.CSIO.SCSTR.byte.SCSTR3)
#define	MFS10_CSIO_SCSTR2	(IO_MFS10.CSIO.SCSTR.byte.SCSTR2)
#define	MFS10_CSIO_SCSTR10	(IO_MFS10.CSIO.SCSTR.hword.SCSTR10)
#define	MFS10_CSIO_SCSTR1	(IO_MFS10.CSIO.SCSTR.byte.SCSTR1)
#define	MFS10_CSIO_SCSTR0	(IO_MFS10.CSIO.SCSTR.byte.SCSTR0)
#define	MFS10_CSIO_SCSFR2			(IO_MFS10.CSIO.SCSFR2.byte)
#define	MFS10_CSIO_SCSFR2_CSLVL    	(IO_MFS10.CSIO.SCSFR2.bit.CSLVL)
#define	MFS10_CSIO_SCSFR2_SCINV    	(IO_MFS10.CSIO.SCSFR2.bit.SCINV)
#define	MFS10_CSIO_SCSFR2_SPI    	(IO_MFS10.CSIO.SCSFR2.bit.SPI)
#define	MFS10_CSIO_SCSFR2_BDS    	(IO_MFS10.CSIO.SCSFR2.bit.BDS)
#define	MFS10_CSIO_SCSFR2_L    	(IO_MFS10.CSIO.SCSFR2.bit.L)
#define	MFS10_CSIO_SCSFR1			(IO_MFS10.CSIO.SCSFR1.byte)
#define	MFS10_CSIO_SCSFR1_CSLVL    	(IO_MFS10.CSIO.SCSFR1.bit.CSLVL)
#define	MFS10_CSIO_SCSFR1_SCINV    	(IO_MFS10.CSIO.SCSFR1.bit.SCINV)
#define	MFS10_CSIO_SCSFR1_SPI    	(IO_MFS10.CSIO.SCSFR1.bit.SPI)
#define	MFS10_CSIO_SCSFR1_BDS    	(IO_MFS10.CSIO.SCSFR1.bit.BDS)
#define	MFS10_CSIO_SCSFR1_L    	(IO_MFS10.CSIO.SCSFR1.bit.L)
#define	MFS10_CSIO_SCSFR0			(IO_MFS10.CSIO.SCSFR0.byte)
#define	MFS10_CSIO_SCSFR0_CSLVL    	(IO_MFS10.CSIO.SCSFR0.bit.CSLVL)
#define	MFS10_CSIO_SCSFR0_SCINV    	(IO_MFS10.CSIO.SCSFR0.bit.SCINV)
#define	MFS10_CSIO_SCSFR0_SPI    	(IO_MFS10.CSIO.SCSFR0.bit.SPI)
#define	MFS10_CSIO_SCSFR0_BDS    	(IO_MFS10.CSIO.SCSFR0.bit.BDS)
#define	MFS10_CSIO_SCSFR0_L    	(IO_MFS10.CSIO.SCSFR0.bit.L)
#define	MFS10_CSIO_TBYTE3	(IO_MFS10.CSIO.TBYTE3)
#define	MFS10_CSIO_TBYTE2	(IO_MFS10.CSIO.TBYTE2)
#define	MFS10_CSIO_TBYTE1	(IO_MFS10.CSIO.TBYTE1)
#define	MFS10_CSIO_TBYTE0	(IO_MFS10.CSIO.TBYTE0)
#define	MFS10_CSIO_BGR			(IO_MFS10.CSIO.BGR)
#define	MFS10_CSIO_FCR1			(IO_MFS10.CSIO.FCR1.byte)
#define	MFS10_CSIO_FCR1_FLSTE    	(IO_MFS10.CSIO.FCR1.bit.FLSTE)
#define	MFS10_CSIO_FCR1_FRIIE    	(IO_MFS10.CSIO.FCR1.bit.FRIIE)
#define	MFS10_CSIO_FCR1_FDRQ    	(IO_MFS10.CSIO.FCR1.bit.FDRQ)
#define	MFS10_CSIO_FCR1_FTIE    	(IO_MFS10.CSIO.FCR1.bit.FTIE)
#define	MFS10_CSIO_FCR1_FSEL    	(IO_MFS10.CSIO.FCR1.bit.FSEL)
#define	MFS10_CSIO_FCR0			(IO_MFS10.CSIO.FCR0.byte)
#define	MFS10_CSIO_FCR0_FLST    	(IO_MFS10.CSIO.FCR0.bit.FLST)
#define	MFS10_CSIO_FCR0_FLD    	(IO_MFS10.CSIO.FCR0.bit.FLD)
#define	MFS10_CSIO_FCR0_FSET    	(IO_MFS10.CSIO.FCR0.bit.FSET)
#define	MFS10_CSIO_FCR0_FCL2    	(IO_MFS10.CSIO.FCR0.bit.FCL2)
#define	MFS10_CSIO_FCR0_FCL1    	(IO_MFS10.CSIO.FCR0.bit.FCL1)
#define	MFS10_CSIO_FCR0_FE2    	(IO_MFS10.CSIO.FCR0.bit.FE2)
#define	MFS10_CSIO_FCR0_FE1    	(IO_MFS10.CSIO.FCR0.bit.FE1)
#define	MFS10_CSIO_FBYTE 	(IO_MFS10.CSIO.FBYTE.hword)
#define	MFS10_CSIO_FBYTE2	(IO_MFS10.CSIO.FBYTE.byte.FBYTE2)
#define	MFS10_CSIO_FBYTE1	(IO_MFS10.CSIO.FBYTE.byte.FBYTE1)
#define	MFS10_CSIO_FTICR 	(IO_MFS10.CSIO.FTICR.hword)
#define	MFS10_CSIO_FTICR2	(IO_MFS10.CSIO.FTICR.byte.FTICR2)
#define	MFS10_CSIO_FTICR1	(IO_MFS10.CSIO.FTICR.byte.FTICR1)

#define	MFS10_LINUART_SCR			(IO_MFS10.LINUART.SCR.byte)
#define	MFS10_LINUART_SCR_UPCL    	(IO_MFS10.LINUART.SCR.bit.UPCL)
#define	MFS10_LINUART_SCR_MS    	(IO_MFS10.LINUART.SCR.bit.MS)
#define	MFS10_LINUART_SCR_LBR    	(IO_MFS10.LINUART.SCR.bit.LBR)
#define	MFS10_LINUART_SCR_RIE    	(IO_MFS10.LINUART.SCR.bit.RIE)
#define	MFS10_LINUART_SCR_TIE    	(IO_MFS10.LINUART.SCR.bit.TIE)
#define	MFS10_LINUART_SCR_TBIE    	(IO_MFS10.LINUART.SCR.bit.TBIE)
#define	MFS10_LINUART_SCR_RXE    	(IO_MFS10.LINUART.SCR.bit.RXE)
#define	MFS10_LINUART_SCR_TXE    	(IO_MFS10.LINUART.SCR.bit.TXE)
#define	MFS10_LINUART_SMR			(IO_MFS10.LINUART.SMR.byte)
#define	MFS10_LINUART_SMR_MD    	(IO_MFS10.LINUART.SMR.bit.MD)
#define	MFS10_LINUART_SMR_SBL    	(IO_MFS10.LINUART.SMR.bit.SBL)
#define	MFS10_LINUART_SMR_SOE    	(IO_MFS10.LINUART.SMR.bit.SOE)
#define	MFS10_LINUART_SSR			(IO_MFS10.LINUART.SSR.byte)
#define	MFS10_LINUART_SSR_REC    	(IO_MFS10.LINUART.SSR.bit.REC)
#define	MFS10_LINUART_SSR_LBD    	(IO_MFS10.LINUART.SSR.bit.LBD)
#define	MFS10_LINUART_SSR_FRE    	(IO_MFS10.LINUART.SSR.bit.FRE)
#define	MFS10_LINUART_SSR_ORE    	(IO_MFS10.LINUART.SSR.bit.ORE)
#define	MFS10_LINUART_SSR_RDRF    	(IO_MFS10.LINUART.SSR.bit.RDRF)
#define	MFS10_LINUART_SSR_TDRE    	(IO_MFS10.LINUART.SSR.bit.TDRE)
#define	MFS10_LINUART_SSR_TBI    	(IO_MFS10.LINUART.SSR.bit.TBI)
#define	MFS10_LINUART_ESCR			(IO_MFS10.LINUART.ESCR.byte)
#define	MFS10_LINUART_ESCR_ESBL    	(IO_MFS10.LINUART.ESCR.bit.ESBL)
#define	MFS10_LINUART_ESCR_LBIE    	(IO_MFS10.LINUART.ESCR.bit.LBIE)
#define	MFS10_LINUART_ESCR_LBL    	(IO_MFS10.LINUART.ESCR.bit.LBL)
#define	MFS10_LINUART_ESCR_DEL    	(IO_MFS10.LINUART.ESCR.bit.DEL)
#define	MFS10_LINUART_RDR0	(IO_MFS10.LINUART.RDR0)
#define	MFS10_LINUART_TDR0	(IO_MFS10.LINUART.RDR0)
#define	MFS10_LINUART_SACSR			(IO_MFS10.LINUART.SACSR.hword)
#define	MFS10_LINUART_SACSR_STST    	(IO_MFS10.LINUART.SACSR.bit.STST)
#define	MFS10_LINUART_SACSR_BST    	(IO_MFS10.LINUART.SACSR.bit.BST)
#define	MFS10_LINUART_SACSR_SFD    	(IO_MFS10.LINUART.SACSR.bit.SFD)
#define	MFS10_LINUART_SACSR_SFDE    	(IO_MFS10.LINUART.SACSR.bit.SFDE)
#define	MFS10_LINUART_SACSR_AUTE    	(IO_MFS10.LINUART.SACSR.bit.AUTE)
#define	MFS10_LINUART_SACSR_TRG    	(IO_MFS10.LINUART.SACSR.bit.TRG)
#define	MFS10_LINUART_SACSR_TINT    	(IO_MFS10.LINUART.SACSR.bit.TINT)
#define	MFS10_LINUART_SACSR_TINTE    	(IO_MFS10.LINUART.SACSR.bit.TINTE)
#define	MFS10_LINUART_SACSR_TSYNE    	(IO_MFS10.LINUART.SACSR.bit.TSYNE)
#define	MFS10_LINUART_SACSR_TRGE    	(IO_MFS10.LINUART.SACSR.bit.TRGE)
#define	MFS10_LINUART_SACSR_TDIV    	(IO_MFS10.LINUART.SACSR.bit.TDIV)
#define	MFS10_LINUART_SACSR_TMRE    	(IO_MFS10.LINUART.SACSR.bit.TMRE)
#define	MFS10_LINUART_STMR	(IO_MFS10.LINUART.STMR)
#define	MFS10_LINUART_STMCR	(IO_MFS10.LINUART.STMCR)
#define	MFS10_LINUART_SFUR	(IO_MFS10.LINUART.SFUR)
#define	MFS10_LINUART_LAMSR			(IO_MFS10.LINUART.LAMSR.byte)
#define	MFS10_LINUART_LAMSR_LER    	(IO_MFS10.LINUART.LAMSR.bit.LER)
#define	MFS10_LINUART_LAMSR_SER    	(IO_MFS10.LINUART.LAMSR.bit.SER)
#define	MFS10_LINUART_LAMSR_RDRF    	(IO_MFS10.LINUART.LAMSR.bit.RDRF)
#define	MFS10_LINUART_LAMSR_TDRE    	(IO_MFS10.LINUART.LAMSR.bit.TDRE)
#define	MFS10_LINUART_LAMSR_TBI    	(IO_MFS10.LINUART.LAMSR.bit.TBI)
#define	MFS10_LINUART_LAMSR_LCSC    	(IO_MFS10.LINUART.LAMSR.bit.LCSC)
#define	MFS10_LINUART_LAMSR_LAHC    	(IO_MFS10.LINUART.LAMSR.bit.LAHC)
#define	MFS10_LINUART_LAMCR			(IO_MFS10.LINUART.LAMCR.byte)
#define	MFS10_LINUART_LAMCR_LDL    	(IO_MFS10.LINUART.LAMCR.bit.LDL)
#define	MFS10_LINUART_LAMCR_LTDRCL    	(IO_MFS10.LINUART.LAMCR.bit.LTDRCL)
#define	MFS10_LINUART_LAMCR_LCSTYP    	(IO_MFS10.LINUART.LAMCR.bit.LCSTYP)
#define	MFS10_LINUART_LAMCR_LIDEN    	(IO_MFS10.LINUART.LAMCR.bit.LIDEN)
#define	MFS10_LINUART_LAMCR_LAMEN    	(IO_MFS10.LINUART.LAMCR.bit.LAMEN)
#define	MFS10_LINUART_SFLR	(IO_MFS10.LINUART.SFLR.hword)
#define	MFS10_LINUART_SFLR1	(IO_MFS10.LINUART.SFLR.byte.SFLR1)
#define	MFS10_LINUART_SFLR0	(IO_MFS10.LINUART.SFLR.byte.SFLR0)
#define	MFS10_LINUART_LAMESR			(IO_MFS10.LINUART.LAMESR.byte)
#define	MFS10_LINUART_LAMESR_LCSER    	(IO_MFS10.LINUART.LAMESR.bit.LCSER)
#define	MFS10_LINUART_LAMESR_LPTER    	(IO_MFS10.LINUART.LAMESR.bit.LPTER)
#define	MFS10_LINUART_LAMESR_LSFER    	(IO_MFS10.LINUART.LAMESR.bit.LSFER)
#define	MFS10_LINUART_LAMESR_LBSER    	(IO_MFS10.LINUART.LAMESR.bit.LBSER)
#define	MFS10_LINUART_LAMERT			(IO_MFS10.LINUART.LAMERT.byte)
#define	MFS10_LINUART_LAMERT_KEY    	(IO_MFS10.LINUART.LAMERT.bit.KEY)
#define	MFS10_LINUART_LAMERT_LCSERT    	(IO_MFS10.LINUART.LAMERT.bit.LCSERT)
#define	MFS10_LINUART_LAMERT_LPTERT    	(IO_MFS10.LINUART.LAMERT.bit.LPTERT)
#define	MFS10_LINUART_LAMERT_LSFERT    	(IO_MFS10.LINUART.LAMERT.bit.LSFERT)
#define	MFS10_LINUART_LAMERT_LBSERT    	(IO_MFS10.LINUART.LAMERT.bit.LBSERT)
#define	MFS10_LINUART_LAMERT_FRET    	(IO_MFS10.LINUART.LAMERT.bit.FRET)
#define	MFS10_LINUART_LAMIER			(IO_MFS10.LINUART.LAMIER.byte)
#define	MFS10_LINUART_LAMIER_LCSERIE    	(IO_MFS10.LINUART.LAMIER.bit.LCSERIE)
#define	MFS10_LINUART_LAMIER_LPTERIE    	(IO_MFS10.LINUART.LAMIER.bit.LPTERIE)
#define	MFS10_LINUART_LAMIER_LSFERIE    	(IO_MFS10.LINUART.LAMIER.bit.LSFERIE)
#define	MFS10_LINUART_LAMIER_LBSERIE    	(IO_MFS10.LINUART.LAMIER.bit.LBSERIE)
#define	MFS10_LINUART_LAMIER_LCSCIE    	(IO_MFS10.LINUART.LAMIER.bit.LCSCIE)
#define	MFS10_LINUART_LAMIER_LAHCIE    	(IO_MFS10.LINUART.LAMIER.bit.LAHCIE)
#define	MFS10_LINUART_LAMID			(IO_MFS10.LINUART.LAMID.byte)
#define	MFS10_LINUART_LAMID_P    	(IO_MFS10.LINUART.LAMID.bit.P)
#define	MFS10_LINUART_LAMID_LID    	(IO_MFS10.LINUART.LAMID.bit.LID)
#define	MFS10_LINUART_BGR			(IO_MFS10.LINUART.BGR)
#define	MFS10_LINUART_FCR1			(IO_MFS10.LINUART.FCR1.byte)
#define	MFS10_LINUART_FCR1_FLSTE    	(IO_MFS10.LINUART.FCR1.bit.FLSTE)
#define	MFS10_LINUART_FCR1_FRIIE    	(IO_MFS10.LINUART.FCR1.bit.FRIIE)
#define	MFS10_LINUART_FCR1_FDRQ    	(IO_MFS10.LINUART.FCR1.bit.FDRQ)
#define	MFS10_LINUART_FCR1_FTIE    	(IO_MFS10.LINUART.FCR1.bit.FTIE)
#define	MFS10_LINUART_FCR1_FSEL    	(IO_MFS10.LINUART.FCR1.bit.FSEL)
#define	MFS10_LINUART_FCR0			(IO_MFS10.LINUART.FCR0.byte)
#define	MFS10_LINUART_FCR0_FLST    	(IO_MFS10.LINUART.FCR0.bit.FLST)
#define	MFS10_LINUART_FCR0_FLD    	(IO_MFS10.LINUART.FCR0.bit.FLD)
#define	MFS10_LINUART_FCR0_FSET    	(IO_MFS10.LINUART.FCR0.bit.FSET)
#define	MFS10_LINUART_FCR0_FCL2    	(IO_MFS10.LINUART.FCR0.bit.FCL2)
#define	MFS10_LINUART_FCR0_FCL1    	(IO_MFS10.LINUART.FCR0.bit.FCL1)
#define	MFS10_LINUART_FCR0_FE2    	(IO_MFS10.LINUART.FCR0.bit.FE2)
#define	MFS10_LINUART_FCR0_FE1    	(IO_MFS10.LINUART.FCR0.bit.FE1)
#define	MFS10_LINUART_FBYTE 	(IO_MFS10.LINUART.FBYTE.hword)
#define	MFS10_LINUART_FBYTE2	(IO_MFS10.LINUART.FBYTE.byte.FBYTE2)
#define	MFS10_LINUART_FBYTE1	(IO_MFS10.LINUART.FBYTE.byte.FBYTE1)
#define	MFS10_LINUART_FTICR 	(IO_MFS10.LINUART.FTICR.hword)
#define	MFS10_LINUART_FTICR2	(IO_MFS10.LINUART.FTICR.byte.FTICR2)
#define	MFS10_LINUART_FTICR1	(IO_MFS10.LINUART.FTICR.byte.FTICR1)

#define	MFS10_I2C_IBCR			(IO_MFS10.I2C.IBCR.byte)
#define	MFS10_I2C_IBCR_MSS    	(IO_MFS10.I2C.IBCR.bit.MSS)
#define	MFS10_I2C_IBCR_ACT_SCC    	(IO_MFS10.I2C.IBCR.bit.ACT_SCC)
#define	MFS10_I2C_IBCR_ACKE    	(IO_MFS10.I2C.IBCR.bit.ACKE)
#define	MFS10_I2C_IBCR_WSEL    	(IO_MFS10.I2C.IBCR.bit.WSEL)
#define	MFS10_I2C_IBCR_CNDE    	(IO_MFS10.I2C.IBCR.bit.CNDE)
#define	MFS10_I2C_IBCR_INTE    	(IO_MFS10.I2C.IBCR.bit.INTE)
#define	MFS10_I2C_IBCR_BER    	(IO_MFS10.I2C.IBCR.bit.BER)
#define	MFS10_I2C_IBCR_INT    	(IO_MFS10.I2C.IBCR.bit.INT)
#define	MFS10_I2C_SMR			(IO_MFS10.I2C.SMR.byte)
#define	MFS10_I2C_SMR_MD    	(IO_MFS10.I2C.SMR.bit.MD)
#define	MFS10_I2C_SMR_RIE    	(IO_MFS10.I2C.SMR.bit.RIE)
#define	MFS10_I2C_SMR_TIE    	(IO_MFS10.I2C.SMR.bit.TIE)
#define	MFS10_I2C_SSR			(IO_MFS10.I2C.SSR.byte)
#define	MFS10_I2C_SSR_REC    	(IO_MFS10.I2C.SSR.bit.REC)
#define	MFS10_I2C_SSR_TSET    	(IO_MFS10.I2C.SSR.bit.TSET)
#define	MFS10_I2C_SSR_DMA    	(IO_MFS10.I2C.SSR.bit.DMA)
#define	MFS10_I2C_SSR_TBIE    	(IO_MFS10.I2C.SSR.bit.TBIE)
#define	MFS10_I2C_SSR_ORE    	(IO_MFS10.I2C.SSR.bit.ORE)
#define	MFS10_I2C_SSR_RDRF    	(IO_MFS10.I2C.SSR.bit.RDRF)
#define	MFS10_I2C_SSR_TDRE    	(IO_MFS10.I2C.SSR.bit.TDRE)
#define	MFS10_I2C_SSR_TBI    	(IO_MFS10.I2C.SSR.bit.TBI)
#define	MFS10_I2C_IBSR			(IO_MFS10.I2C.IBSR.byte)
#define	MFS10_I2C_IBSR_FBT    	(IO_MFS10.I2C.IBSR.bit.FBT)
#define	MFS10_I2C_IBSR_RACK    	(IO_MFS10.I2C.IBSR.bit.RACK)
#define	MFS10_I2C_IBSR_RSA    	(IO_MFS10.I2C.IBSR.bit.RSA)
#define	MFS10_I2C_IBSR_TRX    	(IO_MFS10.I2C.IBSR.bit.TRX)
#define	MFS10_I2C_IBSR_AL    	(IO_MFS10.I2C.IBSR.bit.AL)
#define	MFS10_I2C_IBSR_RSC    	(IO_MFS10.I2C.IBSR.bit.RSC)
#define	MFS10_I2C_IBSR_SPC    	(IO_MFS10.I2C.IBSR.bit.SPC)
#define	MFS10_I2C_IBSR_BB    	(IO_MFS10.I2C.IBSR.bit.BB)
#define	MFS10_I2C_RDR0	(IO_MFS10.I2C.RDR0)
#define	MFS10_I2C_TDR0	(IO_MFS10.I2C.RDR0)
#define	MFS10_I2C_SACSR			(IO_MFS10.I2C.SACSR.hword)
#define	MFS10_I2C_SACSR_TRG    	(IO_MFS10.I2C.SACSR.bit.TRG)
#define	MFS10_I2C_SACSR_TINT    	(IO_MFS10.I2C.SACSR.bit.TINT)
#define	MFS10_I2C_SACSR_TINTE    	(IO_MFS10.I2C.SACSR.bit.TINTE)
#define	MFS10_I2C_SACSR_TRGE    	(IO_MFS10.I2C.SACSR.bit.TRGE)
#define	MFS10_I2C_SACSR_TDIV    	(IO_MFS10.I2C.SACSR.bit.TDIV)
#define	MFS10_I2C_SACSR_TMRE    	(IO_MFS10.I2C.SACSR.bit.TMRE)
#define	MFS10_I2C_STMR	(IO_MFS10.I2C.STMR)
#define	MFS10_I2C_STMCR	(IO_MFS10.I2C.STMCR)
#define	MFS10_I2C_BGR	(IO_MFS10.I2C.BGR)
#define	MFS10_I2C_ISMK			(IO_MFS10.I2C.ISMK.byte)
#define	MFS10_I2C_ISMK_EN    	(IO_MFS10.I2C.ISMK.bit.EN)
#define	MFS10_I2C_ISMK_SM    	(IO_MFS10.I2C.ISMK.bit.SM)
#define	MFS10_I2C_ISBA			(IO_MFS10.I2C.ISBA.byte)
#define	MFS10_I2C_ISBA_SAEN    	(IO_MFS10.I2C.ISBA.bit.SAEN)
#define	MFS10_I2C_ISBA_SA    	(IO_MFS10.I2C.ISBA.bit.SA)
#define	MFS10_I2C_FCR1			(IO_MFS10.I2C.FCR1.byte)
#define	MFS10_I2C_FCR1_FLSTE    	(IO_MFS10.I2C.FCR1.bit.FLSTE)
#define	MFS10_I2C_FCR1_FRIIE    	(IO_MFS10.I2C.FCR1.bit.FRIIE)
#define	MFS10_I2C_FCR1_FDRQ    	(IO_MFS10.I2C.FCR1.bit.FDRQ)
#define	MFS10_I2C_FCR1_FTIE    	(IO_MFS10.I2C.FCR1.bit.FTIE)
#define	MFS10_I2C_FCR1_FSEL    	(IO_MFS10.I2C.FCR1.bit.FSEL)
#define	MFS10_I2C_FCR0			(IO_MFS10.I2C.FCR0.byte)
#define	MFS10_I2C_FCR0_FLST    	(IO_MFS10.I2C.FCR0.bit.FLST)
#define	MFS10_I2C_FCR0_FLD    	(IO_MFS10.I2C.FCR0.bit.FLD)
#define	MFS10_I2C_FCR0_FSET    	(IO_MFS10.I2C.FCR0.bit.FSET)
#define	MFS10_I2C_FCR0_FCL2    	(IO_MFS10.I2C.FCR0.bit.FCL2)
#define	MFS10_I2C_FCR0_FCL1    	(IO_MFS10.I2C.FCR0.bit.FCL1)
#define	MFS10_I2C_FCR0_FE2    	(IO_MFS10.I2C.FCR0.bit.FE2)
#define	MFS10_I2C_FCR0_FE1    	(IO_MFS10.I2C.FCR0.bit.FE1)
#define	MFS10_I2C_FBYTE 	(IO_MFS10.I2C.FBYTE.hword)
#define	MFS10_I2C_FBYTE2	(IO_MFS10.I2C.FBYTE.byte.FBYTE2)
#define	MFS10_I2C_FBYTE1	(IO_MFS10.I2C.FBYTE.byte.FBYTE1)
#define	MFS10_I2C_FTICR 	(IO_MFS10.I2C.FTICR.hword)
#define	MFS10_I2C_FTICR2	(IO_MFS10.I2C.FTICR.byte.FTICR2)
#define	MFS10_I2C_FTICR1	(IO_MFS10.I2C.FTICR.byte.FTICR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_MFS11,attr=IO,locate=0x1908
#endif

__IO_EXTENDED	MFSSTR	IO_MFS11;

#define	MFS11_UART_SCR			(IO_MFS11.UART.SCR.byte)
#define	MFS11_UART_SCR_UPCL    	(IO_MFS11.UART.SCR.bit.UPCL)
#define	MFS11_UART_SCR_RIE    	(IO_MFS11.UART.SCR.bit.RIE)
#define	MFS11_UART_SCR_TIE    	(IO_MFS11.UART.SCR.bit.TIE)
#define	MFS11_UART_SCR_TBIE    	(IO_MFS11.UART.SCR.bit.TBIE)
#define	MFS11_UART_SCR_RXE    	(IO_MFS11.UART.SCR.bit.RXE)
#define	MFS11_UART_SCR_TXE    	(IO_MFS11.UART.SCR.bit.TXE)
#define	MFS11_UART_SMR			(IO_MFS11.UART.SMR.byte)
#define	MFS11_UART_SMR_MD    	(IO_MFS11.UART.SMR.bit.MD)
#define	MFS11_UART_SMR_SBL    	(IO_MFS11.UART.SMR.bit.SBL)
#define	MFS11_UART_SMR_BDS    	(IO_MFS11.UART.SMR.bit.BDS)
#define	MFS11_UART_SMR_SOE    	(IO_MFS11.UART.SMR.bit.SOE)
#define	MFS11_UART_SSR			(IO_MFS11.UART.SSR.byte)
#define	MFS11_UART_SSR_REC    	(IO_MFS11.UART.SSR.bit.REC)
#define	MFS11_UART_SSR_PE    	(IO_MFS11.UART.SSR.bit.PE)
#define	MFS11_UART_SSR_FRE    	(IO_MFS11.UART.SSR.bit.FRE)
#define	MFS11_UART_SSR_ORE    	(IO_MFS11.UART.SSR.bit.ORE)
#define	MFS11_UART_SSR_RDRF    	(IO_MFS11.UART.SSR.bit.RDRF)
#define	MFS11_UART_SSR_TDRE    	(IO_MFS11.UART.SSR.bit.TDRE)
#define	MFS11_UART_SSR_TBI    	(IO_MFS11.UART.SSR.bit.TBI)
#define	MFS11_UART_ESCR			(IO_MFS11.UART.ESCR.byte)
#define	MFS11_UART_ESCR_FLWEN    	(IO_MFS11.UART.ESCR.bit.FLWEN)
#define	MFS11_UART_ESCR_ESBL    	(IO_MFS11.UART.ESCR.bit.ESBL)
#define	MFS11_UART_ESCR_INV    	(IO_MFS11.UART.ESCR.bit.INV)
#define	MFS11_UART_ESCR_PEN    	(IO_MFS11.UART.ESCR.bit.PEN)
#define	MFS11_UART_ESCR_P    	(IO_MFS11.UART.ESCR.bit.P)
#define	MFS11_UART_ESCR_L    	(IO_MFS11.UART.ESCR.bit.L)
#define	MFS11_UART_RDR0	(IO_MFS11.UART.RDR0.hword)
#define	MFS11_UART_RDR0_RDR0L	(IO_MFS11.UART.RDR0.byte.RDR0L)
#define	MFS11_UART_RDR0_bit9	(IO_MFS11.UART.RDR0.bit9.D)
#define	MFS11_UART_RDR0_bit7	(IO_MFS11.UART.RDR0.bit7.D)
#define	MFS11_UART_RDR0_bit6	(IO_MFS11.UART.RDR0.bit6.D)
#define	MFS11_UART_RDR0_bit5	(IO_MFS11.UART.RDR0.bit5.D)
#define	MFS11_UART_TDR0	(IO_MFS11.UART.RDR0.hword)
#define	MFS11_UART_TDR0_TDR0L	(IO_MFS11.UART.RDR0.byte.RDR0L)
#define	MFS11_UART_TDR0_bit9	(IO_MFS11.UART.RDR0.bit9.D)
#define	MFS11_UART_TDR0_bit7	(IO_MFS11.UART.RDR0.bit7.D)
#define	MFS11_UART_TDR0_bit6	(IO_MFS11.UART.RDR0.bit6.D)
#define	MFS11_UART_TDR0_bit5	(IO_MFS11.UART.RDR0.bit5.D)
#define	MFS11_UART_SACSR			(IO_MFS11.UART.SACSR.hword)
#define	MFS11_UART_SACSR_STST    	(IO_MFS11.UART.SACSR.bit.STST)
#define	MFS11_UART_SACSR_TRG    	(IO_MFS11.UART.SACSR.bit.TRG)
#define	MFS11_UART_SACSR_TINT    	(IO_MFS11.UART.SACSR.bit.TINT)
#define	MFS11_UART_SACSR_TINTE    	(IO_MFS11.UART.SACSR.bit.TINTE)
#define	MFS11_UART_SACSR_TSYNE    	(IO_MFS11.UART.SACSR.bit.TSYNE)
#define	MFS11_UART_SACSR_TRGE    	(IO_MFS11.UART.SACSR.bit.TRGE)
#define	MFS11_UART_SACSR_TDIV    	(IO_MFS11.UART.SACSR.bit.TDIV)
#define	MFS11_UART_SACSR_TMRE    	(IO_MFS11.UART.SACSR.bit.TMRE)
#define	MFS11_UART_STMR	(IO_MFS11.UART.STMR)
#define	MFS11_UART_STMCR	(IO_MFS11.UART.STMCR)
#define	MFS11_UART_TBYTE0	(IO_MFS11.UART.TBYTE0)
#define	MFS11_UART_BGR			(IO_MFS11.UART.BGR)
#define	MFS11_UART_FCR1			(IO_MFS11.UART.FCR1.byte)
#define	MFS11_UART_FCR1_FLSTE    	(IO_MFS11.UART.FCR1.bit.FLSTE)
#define	MFS11_UART_FCR1_FRIIE    	(IO_MFS11.UART.FCR1.bit.FRIIE)
#define	MFS11_UART_FCR1_FDRQ    	(IO_MFS11.UART.FCR1.bit.FDRQ)
#define	MFS11_UART_FCR1_FTIE    	(IO_MFS11.UART.FCR1.bit.FTIE)
#define	MFS11_UART_FCR1_FSEL    	(IO_MFS11.UART.FCR1.bit.FSEL)
#define	MFS11_UART_FCR0			(IO_MFS11.UART.FCR0.byte)
#define	MFS11_UART_FCR0_FLST    	(IO_MFS11.UART.FCR0.bit.FLST)
#define	MFS11_UART_FCR0_FLD    	(IO_MFS11.UART.FCR0.bit.FLD)
#define	MFS11_UART_FCR0_FSET    	(IO_MFS11.UART.FCR0.bit.FSET)
#define	MFS11_UART_FCR0_FCL2    	(IO_MFS11.UART.FCR0.bit.FCL2)
#define	MFS11_UART_FCR0_FCL1    	(IO_MFS11.UART.FCR0.bit.FCL1)
#define	MFS11_UART_FCR0_FE2    	(IO_MFS11.UART.FCR0.bit.FE2)
#define	MFS11_UART_FCR0_FE1    	(IO_MFS11.UART.FCR0.bit.FE1)
#define	MFS11_UART_FBYTE 	(IO_MFS11.UART.FBYTE.hword)
#define	MFS11_UART_FBYTE2	(IO_MFS11.UART.FBYTE.byte.FBYTE2)
#define	MFS11_UART_FBYTE1	(IO_MFS11.UART.FBYTE.byte.FBYTE1)
#define	MFS11_UART_FTICR 	(IO_MFS11.UART.FTICR.hword)
#define	MFS11_UART_FTICR2	(IO_MFS11.UART.FTICR.byte.FTICR2)
#define	MFS11_UART_FTICR1	(IO_MFS11.UART.FTICR.byte.FTICR1)

#define	MFS11_CSIO_SCR			(IO_MFS11.CSIO.SCR.byte)
#define	MFS11_CSIO_SCR_UPCL    	(IO_MFS11.CSIO.SCR.bit.UPCL)
#define	MFS11_CSIO_SCR_MS    	(IO_MFS11.CSIO.SCR.bit.MS)
#define	MFS11_CSIO_SCR_SPI    	(IO_MFS11.CSIO.SCR.bit.SPI)
#define	MFS11_CSIO_SCR_RIE    	(IO_MFS11.CSIO.SCR.bit.RIE)
#define	MFS11_CSIO_SCR_TIE    	(IO_MFS11.CSIO.SCR.bit.TIE)
#define	MFS11_CSIO_SCR_TBIE    	(IO_MFS11.CSIO.SCR.bit.TBIE)
#define	MFS11_CSIO_SCR_RXE    	(IO_MFS11.CSIO.SCR.bit.RXE)
#define	MFS11_CSIO_SCR_TXE    	(IO_MFS11.CSIO.SCR.bit.TXE)
#define	MFS11_CSIO_SMR			(IO_MFS11.CSIO.SMR.byte)
#define	MFS11_CSIO_SMR_MD    	(IO_MFS11.CSIO.SMR.bit.MD)
#define	MFS11_CSIO_SMR_SCINV    	(IO_MFS11.CSIO.SMR.bit.SCINV)
#define	MFS11_CSIO_SMR_BDS    	(IO_MFS11.CSIO.SMR.bit.BDS)
#define	MFS11_CSIO_SMR_SCKE    	(IO_MFS11.CSIO.SMR.bit.SCKE)
#define	MFS11_CSIO_SMR_SOE    	(IO_MFS11.CSIO.SMR.bit.SOE)
#define	MFS11_CSIO_SSR			(IO_MFS11.CSIO.SSR.byte)
#define	MFS11_CSIO_SSR_REC    	(IO_MFS11.CSIO.SSR.bit.REC)
#define	MFS11_CSIO_SSR_ES    	(IO_MFS11.CSIO.SSR.bit.ES)
#define	MFS11_CSIO_SSR_AWC    	(IO_MFS11.CSIO.SSR.bit.AWC)
#define	MFS11_CSIO_SSR_ORE    	(IO_MFS11.CSIO.SSR.bit.ORE)
#define	MFS11_CSIO_SSR_RDRF    	(IO_MFS11.CSIO.SSR.bit.RDRF)
#define	MFS11_CSIO_SSR_TDRE    	(IO_MFS11.CSIO.SSR.bit.TDRE)
#define	MFS11_CSIO_SSR_TBI    	(IO_MFS11.CSIO.SSR.bit.TBI)
#define	MFS11_CSIO_ESCR			(IO_MFS11.CSIO.ESCR.byte)
#define	MFS11_CSIO_ESCR_SOP    	(IO_MFS11.CSIO.ESCR.bit.SOP)
#define	MFS11_CSIO_ESCR_L3    	(IO_MFS11.CSIO.ESCR.bit.L3)
#define	MFS11_CSIO_ESCR_CSFE    	(IO_MFS11.CSIO.ESCR.bit.CSFE)
#define	MFS11_CSIO_ESCR_WT    	(IO_MFS11.CSIO.ESCR.bit.WT)
#define	MFS11_CSIO_ESCR_L    	(IO_MFS11.CSIO.ESCR.bit.L)
#define	MFS11_CSIO_RDR	(IO_MFS11.CSIO.RDR.word)
#define	MFS11_CSIO_RDR1	(IO_MFS11.CSIO.RDR.hword.RDR1)
#define	MFS11_CSIO_RDR0	(IO_MFS11.CSIO.RDR.hword.RDR0)
#define	MFS11_CSIO_TDR	(IO_MFS11.CSIO.RDR.word)
#define	MFS11_CSIO_TDR1	(IO_MFS11.CSIO.RDR.hword.RDR1)
#define	MFS11_CSIO_TDR0	(IO_MFS11.CSIO.RDR.hword.RDR0)
#define	MFS11_CSIO_SACSR			(IO_MFS11.CSIO.SACSR.hword)
#define	MFS11_CSIO_SACSR_STST    	(IO_MFS11.CSIO.SACSR.bit.STST)
#define	MFS11_CSIO_SACSR_TBEEN    	(IO_MFS11.CSIO.SACSR.bit.TBEEN)
#define	MFS11_CSIO_SACSR_CSEIE    	(IO_MFS11.CSIO.SACSR.bit.CSEIE)
#define	MFS11_CSIO_SACSR_CSE    	(IO_MFS11.CSIO.SACSR.bit.CSE)
#define	MFS11_CSIO_SACSR_TRG    	(IO_MFS11.CSIO.SACSR.bit.TRG)
#define	MFS11_CSIO_SACSR_TINT    	(IO_MFS11.CSIO.SACSR.bit.TINT)
#define	MFS11_CSIO_SACSR_TINTE    	(IO_MFS11.CSIO.SACSR.bit.TINTE)
#define	MFS11_CSIO_SACSR_TSYNE    	(IO_MFS11.CSIO.SACSR.bit.TSYNE)
#define	MFS11_CSIO_SACSR_TRGE    	(IO_MFS11.CSIO.SACSR.bit.TRGE)
#define	MFS11_CSIO_SACSR_TDIV    	(IO_MFS11.CSIO.SACSR.bit.TDIV)
#define	MFS11_CSIO_SACSR_TMRE    	(IO_MFS11.CSIO.SACSR.bit.TMRE)
#define	MFS11_CSIO_STMR	(IO_MFS11.CSIO.STMR)
#define	MFS11_CSIO_STMCR	(IO_MFS11.CSIO.STMCR)
#define	MFS11_CSIO_SCSCR			(IO_MFS11.CSIO.SCSCR.hword)
#define	MFS11_CSIO_SCSCR_SST    	(IO_MFS11.CSIO.SCSCR.bit.SST)
#define	MFS11_CSIO_SCSCR_SED    	(IO_MFS11.CSIO.SCSCR.bit.SED)
#define	MFS11_CSIO_SCSCR_SCD    	(IO_MFS11.CSIO.SCSCR.bit.SCD)
#define	MFS11_CSIO_SCSCR_SCAM    	(IO_MFS11.CSIO.SCSCR.bit.SCAM)
#define	MFS11_CSIO_SCSCR_CDIV    	(IO_MFS11.CSIO.SCSCR.bit.CDIV)
#define	MFS11_CSIO_SCSCR_CSLVL    	(IO_MFS11.CSIO.SCSCR.bit.CSLVL)
#define	MFS11_CSIO_SCSCR_CSEN3    	(IO_MFS11.CSIO.SCSCR.bit.CSEN3)
#define	MFS11_CSIO_SCSCR_CSEN2    	(IO_MFS11.CSIO.SCSCR.bit.CSEN2)
#define	MFS11_CSIO_SCSCR_CSEN1    	(IO_MFS11.CSIO.SCSCR.bit.CSEN1)
#define	MFS11_CSIO_SCSCR_CSEN0    	(IO_MFS11.CSIO.SCSCR.bit.CSEN0)
#define	MFS11_CSIO_SCSCR_CSOE    	(IO_MFS11.CSIO.SCSCR.bit.CSOE)
#define	MFS11_CSIO_SCSTR	(IO_MFS11.CSIO.SCSTR.word)
#define	MFS11_CSIO_SCSTR32	(IO_MFS11.CSIO.SCSTR.hword.SCSTR32)
#define	MFS11_CSIO_SCSTR3	(IO_MFS11.CSIO.SCSTR.byte.SCSTR3)
#define	MFS11_CSIO_SCSTR2	(IO_MFS11.CSIO.SCSTR.byte.SCSTR2)
#define	MFS11_CSIO_SCSTR10	(IO_MFS11.CSIO.SCSTR.hword.SCSTR10)
#define	MFS11_CSIO_SCSTR1	(IO_MFS11.CSIO.SCSTR.byte.SCSTR1)
#define	MFS11_CSIO_SCSTR0	(IO_MFS11.CSIO.SCSTR.byte.SCSTR0)
#define	MFS11_CSIO_SCSFR2			(IO_MFS11.CSIO.SCSFR2.byte)
#define	MFS11_CSIO_SCSFR2_CSLVL    	(IO_MFS11.CSIO.SCSFR2.bit.CSLVL)
#define	MFS11_CSIO_SCSFR2_SCINV    	(IO_MFS11.CSIO.SCSFR2.bit.SCINV)
#define	MFS11_CSIO_SCSFR2_SPI    	(IO_MFS11.CSIO.SCSFR2.bit.SPI)
#define	MFS11_CSIO_SCSFR2_BDS    	(IO_MFS11.CSIO.SCSFR2.bit.BDS)
#define	MFS11_CSIO_SCSFR2_L    	(IO_MFS11.CSIO.SCSFR2.bit.L)
#define	MFS11_CSIO_SCSFR1			(IO_MFS11.CSIO.SCSFR1.byte)
#define	MFS11_CSIO_SCSFR1_CSLVL    	(IO_MFS11.CSIO.SCSFR1.bit.CSLVL)
#define	MFS11_CSIO_SCSFR1_SCINV    	(IO_MFS11.CSIO.SCSFR1.bit.SCINV)
#define	MFS11_CSIO_SCSFR1_SPI    	(IO_MFS11.CSIO.SCSFR1.bit.SPI)
#define	MFS11_CSIO_SCSFR1_BDS    	(IO_MFS11.CSIO.SCSFR1.bit.BDS)
#define	MFS11_CSIO_SCSFR1_L    	(IO_MFS11.CSIO.SCSFR1.bit.L)
#define	MFS11_CSIO_SCSFR0			(IO_MFS11.CSIO.SCSFR0.byte)
#define	MFS11_CSIO_SCSFR0_CSLVL    	(IO_MFS11.CSIO.SCSFR0.bit.CSLVL)
#define	MFS11_CSIO_SCSFR0_SCINV    	(IO_MFS11.CSIO.SCSFR0.bit.SCINV)
#define	MFS11_CSIO_SCSFR0_SPI    	(IO_MFS11.CSIO.SCSFR0.bit.SPI)
#define	MFS11_CSIO_SCSFR0_BDS    	(IO_MFS11.CSIO.SCSFR0.bit.BDS)
#define	MFS11_CSIO_SCSFR0_L    	(IO_MFS11.CSIO.SCSFR0.bit.L)
#define	MFS11_CSIO_TBYTE3	(IO_MFS11.CSIO.TBYTE3)
#define	MFS11_CSIO_TBYTE2	(IO_MFS11.CSIO.TBYTE2)
#define	MFS11_CSIO_TBYTE1	(IO_MFS11.CSIO.TBYTE1)
#define	MFS11_CSIO_TBYTE0	(IO_MFS11.CSIO.TBYTE0)
#define	MFS11_CSIO_BGR			(IO_MFS11.CSIO.BGR)
#define	MFS11_CSIO_FCR1			(IO_MFS11.CSIO.FCR1.byte)
#define	MFS11_CSIO_FCR1_FLSTE    	(IO_MFS11.CSIO.FCR1.bit.FLSTE)
#define	MFS11_CSIO_FCR1_FRIIE    	(IO_MFS11.CSIO.FCR1.bit.FRIIE)
#define	MFS11_CSIO_FCR1_FDRQ    	(IO_MFS11.CSIO.FCR1.bit.FDRQ)
#define	MFS11_CSIO_FCR1_FTIE    	(IO_MFS11.CSIO.FCR1.bit.FTIE)
#define	MFS11_CSIO_FCR1_FSEL    	(IO_MFS11.CSIO.FCR1.bit.FSEL)
#define	MFS11_CSIO_FCR0			(IO_MFS11.CSIO.FCR0.byte)
#define	MFS11_CSIO_FCR0_FLST    	(IO_MFS11.CSIO.FCR0.bit.FLST)
#define	MFS11_CSIO_FCR0_FLD    	(IO_MFS11.CSIO.FCR0.bit.FLD)
#define	MFS11_CSIO_FCR0_FSET    	(IO_MFS11.CSIO.FCR0.bit.FSET)
#define	MFS11_CSIO_FCR0_FCL2    	(IO_MFS11.CSIO.FCR0.bit.FCL2)
#define	MFS11_CSIO_FCR0_FCL1    	(IO_MFS11.CSIO.FCR0.bit.FCL1)
#define	MFS11_CSIO_FCR0_FE2    	(IO_MFS11.CSIO.FCR0.bit.FE2)
#define	MFS11_CSIO_FCR0_FE1    	(IO_MFS11.CSIO.FCR0.bit.FE1)
#define	MFS11_CSIO_FBYTE 	(IO_MFS11.CSIO.FBYTE.hword)
#define	MFS11_CSIO_FBYTE2	(IO_MFS11.CSIO.FBYTE.byte.FBYTE2)
#define	MFS11_CSIO_FBYTE1	(IO_MFS11.CSIO.FBYTE.byte.FBYTE1)
#define	MFS11_CSIO_FTICR 	(IO_MFS11.CSIO.FTICR.hword)
#define	MFS11_CSIO_FTICR2	(IO_MFS11.CSIO.FTICR.byte.FTICR2)
#define	MFS11_CSIO_FTICR1	(IO_MFS11.CSIO.FTICR.byte.FTICR1)

#define	MFS11_LINUART_SCR			(IO_MFS11.LINUART.SCR.byte)
#define	MFS11_LINUART_SCR_UPCL    	(IO_MFS11.LINUART.SCR.bit.UPCL)
#define	MFS11_LINUART_SCR_MS    	(IO_MFS11.LINUART.SCR.bit.MS)
#define	MFS11_LINUART_SCR_LBR    	(IO_MFS11.LINUART.SCR.bit.LBR)
#define	MFS11_LINUART_SCR_RIE    	(IO_MFS11.LINUART.SCR.bit.RIE)
#define	MFS11_LINUART_SCR_TIE    	(IO_MFS11.LINUART.SCR.bit.TIE)
#define	MFS11_LINUART_SCR_TBIE    	(IO_MFS11.LINUART.SCR.bit.TBIE)
#define	MFS11_LINUART_SCR_RXE    	(IO_MFS11.LINUART.SCR.bit.RXE)
#define	MFS11_LINUART_SCR_TXE    	(IO_MFS11.LINUART.SCR.bit.TXE)
#define	MFS11_LINUART_SMR			(IO_MFS11.LINUART.SMR.byte)
#define	MFS11_LINUART_SMR_MD    	(IO_MFS11.LINUART.SMR.bit.MD)
#define	MFS11_LINUART_SMR_SBL    	(IO_MFS11.LINUART.SMR.bit.SBL)
#define	MFS11_LINUART_SMR_SOE    	(IO_MFS11.LINUART.SMR.bit.SOE)
#define	MFS11_LINUART_SSR			(IO_MFS11.LINUART.SSR.byte)
#define	MFS11_LINUART_SSR_REC    	(IO_MFS11.LINUART.SSR.bit.REC)
#define	MFS11_LINUART_SSR_LBD    	(IO_MFS11.LINUART.SSR.bit.LBD)
#define	MFS11_LINUART_SSR_FRE    	(IO_MFS11.LINUART.SSR.bit.FRE)
#define	MFS11_LINUART_SSR_ORE    	(IO_MFS11.LINUART.SSR.bit.ORE)
#define	MFS11_LINUART_SSR_RDRF    	(IO_MFS11.LINUART.SSR.bit.RDRF)
#define	MFS11_LINUART_SSR_TDRE    	(IO_MFS11.LINUART.SSR.bit.TDRE)
#define	MFS11_LINUART_SSR_TBI    	(IO_MFS11.LINUART.SSR.bit.TBI)
#define	MFS11_LINUART_ESCR			(IO_MFS11.LINUART.ESCR.byte)
#define	MFS11_LINUART_ESCR_ESBL    	(IO_MFS11.LINUART.ESCR.bit.ESBL)
#define	MFS11_LINUART_ESCR_LBIE    	(IO_MFS11.LINUART.ESCR.bit.LBIE)
#define	MFS11_LINUART_ESCR_LBL    	(IO_MFS11.LINUART.ESCR.bit.LBL)
#define	MFS11_LINUART_ESCR_DEL    	(IO_MFS11.LINUART.ESCR.bit.DEL)
#define	MFS11_LINUART_RDR0	(IO_MFS11.LINUART.RDR0)
#define	MFS11_LINUART_TDR0	(IO_MFS11.LINUART.RDR0)
#define	MFS11_LINUART_SACSR			(IO_MFS11.LINUART.SACSR.hword)
#define	MFS11_LINUART_SACSR_STST    	(IO_MFS11.LINUART.SACSR.bit.STST)
#define	MFS11_LINUART_SACSR_BST    	(IO_MFS11.LINUART.SACSR.bit.BST)
#define	MFS11_LINUART_SACSR_SFD    	(IO_MFS11.LINUART.SACSR.bit.SFD)
#define	MFS11_LINUART_SACSR_SFDE    	(IO_MFS11.LINUART.SACSR.bit.SFDE)
#define	MFS11_LINUART_SACSR_AUTE    	(IO_MFS11.LINUART.SACSR.bit.AUTE)
#define	MFS11_LINUART_SACSR_TRG    	(IO_MFS11.LINUART.SACSR.bit.TRG)
#define	MFS11_LINUART_SACSR_TINT    	(IO_MFS11.LINUART.SACSR.bit.TINT)
#define	MFS11_LINUART_SACSR_TINTE    	(IO_MFS11.LINUART.SACSR.bit.TINTE)
#define	MFS11_LINUART_SACSR_TSYNE    	(IO_MFS11.LINUART.SACSR.bit.TSYNE)
#define	MFS11_LINUART_SACSR_TRGE    	(IO_MFS11.LINUART.SACSR.bit.TRGE)
#define	MFS11_LINUART_SACSR_TDIV    	(IO_MFS11.LINUART.SACSR.bit.TDIV)
#define	MFS11_LINUART_SACSR_TMRE    	(IO_MFS11.LINUART.SACSR.bit.TMRE)
#define	MFS11_LINUART_STMR	(IO_MFS11.LINUART.STMR)
#define	MFS11_LINUART_STMCR	(IO_MFS11.LINUART.STMCR)
#define	MFS11_LINUART_SFUR	(IO_MFS11.LINUART.SFUR)
#define	MFS11_LINUART_LAMSR			(IO_MFS11.LINUART.LAMSR.byte)
#define	MFS11_LINUART_LAMSR_LER    	(IO_MFS11.LINUART.LAMSR.bit.LER)
#define	MFS11_LINUART_LAMSR_SER    	(IO_MFS11.LINUART.LAMSR.bit.SER)
#define	MFS11_LINUART_LAMSR_RDRF    	(IO_MFS11.LINUART.LAMSR.bit.RDRF)
#define	MFS11_LINUART_LAMSR_TDRE    	(IO_MFS11.LINUART.LAMSR.bit.TDRE)
#define	MFS11_LINUART_LAMSR_TBI    	(IO_MFS11.LINUART.LAMSR.bit.TBI)
#define	MFS11_LINUART_LAMSR_LCSC    	(IO_MFS11.LINUART.LAMSR.bit.LCSC)
#define	MFS11_LINUART_LAMSR_LAHC    	(IO_MFS11.LINUART.LAMSR.bit.LAHC)
#define	MFS11_LINUART_LAMCR			(IO_MFS11.LINUART.LAMCR.byte)
#define	MFS11_LINUART_LAMCR_LDL    	(IO_MFS11.LINUART.LAMCR.bit.LDL)
#define	MFS11_LINUART_LAMCR_LTDRCL    	(IO_MFS11.LINUART.LAMCR.bit.LTDRCL)
#define	MFS11_LINUART_LAMCR_LCSTYP    	(IO_MFS11.LINUART.LAMCR.bit.LCSTYP)
#define	MFS11_LINUART_LAMCR_LIDEN    	(IO_MFS11.LINUART.LAMCR.bit.LIDEN)
#define	MFS11_LINUART_LAMCR_LAMEN    	(IO_MFS11.LINUART.LAMCR.bit.LAMEN)
#define	MFS11_LINUART_SFLR	(IO_MFS11.LINUART.SFLR.hword)
#define	MFS11_LINUART_SFLR1	(IO_MFS11.LINUART.SFLR.byte.SFLR1)
#define	MFS11_LINUART_SFLR0	(IO_MFS11.LINUART.SFLR.byte.SFLR0)
#define	MFS11_LINUART_LAMESR			(IO_MFS11.LINUART.LAMESR.byte)
#define	MFS11_LINUART_LAMESR_LCSER    	(IO_MFS11.LINUART.LAMESR.bit.LCSER)
#define	MFS11_LINUART_LAMESR_LPTER    	(IO_MFS11.LINUART.LAMESR.bit.LPTER)
#define	MFS11_LINUART_LAMESR_LSFER    	(IO_MFS11.LINUART.LAMESR.bit.LSFER)
#define	MFS11_LINUART_LAMESR_LBSER    	(IO_MFS11.LINUART.LAMESR.bit.LBSER)
#define	MFS11_LINUART_LAMERT			(IO_MFS11.LINUART.LAMERT.byte)
#define	MFS11_LINUART_LAMERT_KEY    	(IO_MFS11.LINUART.LAMERT.bit.KEY)
#define	MFS11_LINUART_LAMERT_LCSERT    	(IO_MFS11.LINUART.LAMERT.bit.LCSERT)
#define	MFS11_LINUART_LAMERT_LPTERT    	(IO_MFS11.LINUART.LAMERT.bit.LPTERT)
#define	MFS11_LINUART_LAMERT_LSFERT    	(IO_MFS11.LINUART.LAMERT.bit.LSFERT)
#define	MFS11_LINUART_LAMERT_LBSERT    	(IO_MFS11.LINUART.LAMERT.bit.LBSERT)
#define	MFS11_LINUART_LAMERT_FRET    	(IO_MFS11.LINUART.LAMERT.bit.FRET)
#define	MFS11_LINUART_LAMIER			(IO_MFS11.LINUART.LAMIER.byte)
#define	MFS11_LINUART_LAMIER_LCSERIE    	(IO_MFS11.LINUART.LAMIER.bit.LCSERIE)
#define	MFS11_LINUART_LAMIER_LPTERIE    	(IO_MFS11.LINUART.LAMIER.bit.LPTERIE)
#define	MFS11_LINUART_LAMIER_LSFERIE    	(IO_MFS11.LINUART.LAMIER.bit.LSFERIE)
#define	MFS11_LINUART_LAMIER_LBSERIE    	(IO_MFS11.LINUART.LAMIER.bit.LBSERIE)
#define	MFS11_LINUART_LAMIER_LCSCIE    	(IO_MFS11.LINUART.LAMIER.bit.LCSCIE)
#define	MFS11_LINUART_LAMIER_LAHCIE    	(IO_MFS11.LINUART.LAMIER.bit.LAHCIE)
#define	MFS11_LINUART_LAMID			(IO_MFS11.LINUART.LAMID.byte)
#define	MFS11_LINUART_LAMID_P    	(IO_MFS11.LINUART.LAMID.bit.P)
#define	MFS11_LINUART_LAMID_LID    	(IO_MFS11.LINUART.LAMID.bit.LID)
#define	MFS11_LINUART_BGR			(IO_MFS11.LINUART.BGR)
#define	MFS11_LINUART_FCR1			(IO_MFS11.LINUART.FCR1.byte)
#define	MFS11_LINUART_FCR1_FLSTE    	(IO_MFS11.LINUART.FCR1.bit.FLSTE)
#define	MFS11_LINUART_FCR1_FRIIE    	(IO_MFS11.LINUART.FCR1.bit.FRIIE)
#define	MFS11_LINUART_FCR1_FDRQ    	(IO_MFS11.LINUART.FCR1.bit.FDRQ)
#define	MFS11_LINUART_FCR1_FTIE    	(IO_MFS11.LINUART.FCR1.bit.FTIE)
#define	MFS11_LINUART_FCR1_FSEL    	(IO_MFS11.LINUART.FCR1.bit.FSEL)
#define	MFS11_LINUART_FCR0			(IO_MFS11.LINUART.FCR0.byte)
#define	MFS11_LINUART_FCR0_FLST    	(IO_MFS11.LINUART.FCR0.bit.FLST)
#define	MFS11_LINUART_FCR0_FLD    	(IO_MFS11.LINUART.FCR0.bit.FLD)
#define	MFS11_LINUART_FCR0_FSET    	(IO_MFS11.LINUART.FCR0.bit.FSET)
#define	MFS11_LINUART_FCR0_FCL2    	(IO_MFS11.LINUART.FCR0.bit.FCL2)
#define	MFS11_LINUART_FCR0_FCL1    	(IO_MFS11.LINUART.FCR0.bit.FCL1)
#define	MFS11_LINUART_FCR0_FE2    	(IO_MFS11.LINUART.FCR0.bit.FE2)
#define	MFS11_LINUART_FCR0_FE1    	(IO_MFS11.LINUART.FCR0.bit.FE1)
#define	MFS11_LINUART_FBYTE 	(IO_MFS11.LINUART.FBYTE.hword)
#define	MFS11_LINUART_FBYTE2	(IO_MFS11.LINUART.FBYTE.byte.FBYTE2)
#define	MFS11_LINUART_FBYTE1	(IO_MFS11.LINUART.FBYTE.byte.FBYTE1)
#define	MFS11_LINUART_FTICR 	(IO_MFS11.LINUART.FTICR.hword)
#define	MFS11_LINUART_FTICR2	(IO_MFS11.LINUART.FTICR.byte.FTICR2)
#define	MFS11_LINUART_FTICR1	(IO_MFS11.LINUART.FTICR.byte.FTICR1)

#define	MFS11_I2C_IBCR			(IO_MFS11.I2C.IBCR.byte)
#define	MFS11_I2C_IBCR_MSS    	(IO_MFS11.I2C.IBCR.bit.MSS)
#define	MFS11_I2C_IBCR_ACT_SCC    	(IO_MFS11.I2C.IBCR.bit.ACT_SCC)
#define	MFS11_I2C_IBCR_ACKE    	(IO_MFS11.I2C.IBCR.bit.ACKE)
#define	MFS11_I2C_IBCR_WSEL    	(IO_MFS11.I2C.IBCR.bit.WSEL)
#define	MFS11_I2C_IBCR_CNDE    	(IO_MFS11.I2C.IBCR.bit.CNDE)
#define	MFS11_I2C_IBCR_INTE    	(IO_MFS11.I2C.IBCR.bit.INTE)
#define	MFS11_I2C_IBCR_BER    	(IO_MFS11.I2C.IBCR.bit.BER)
#define	MFS11_I2C_IBCR_INT    	(IO_MFS11.I2C.IBCR.bit.INT)
#define	MFS11_I2C_SMR			(IO_MFS11.I2C.SMR.byte)
#define	MFS11_I2C_SMR_MD    	(IO_MFS11.I2C.SMR.bit.MD)
#define	MFS11_I2C_SMR_RIE    	(IO_MFS11.I2C.SMR.bit.RIE)
#define	MFS11_I2C_SMR_TIE    	(IO_MFS11.I2C.SMR.bit.TIE)
#define	MFS11_I2C_SSR			(IO_MFS11.I2C.SSR.byte)
#define	MFS11_I2C_SSR_REC    	(IO_MFS11.I2C.SSR.bit.REC)
#define	MFS11_I2C_SSR_TSET    	(IO_MFS11.I2C.SSR.bit.TSET)
#define	MFS11_I2C_SSR_DMA    	(IO_MFS11.I2C.SSR.bit.DMA)
#define	MFS11_I2C_SSR_TBIE    	(IO_MFS11.I2C.SSR.bit.TBIE)
#define	MFS11_I2C_SSR_ORE    	(IO_MFS11.I2C.SSR.bit.ORE)
#define	MFS11_I2C_SSR_RDRF    	(IO_MFS11.I2C.SSR.bit.RDRF)
#define	MFS11_I2C_SSR_TDRE    	(IO_MFS11.I2C.SSR.bit.TDRE)
#define	MFS11_I2C_SSR_TBI    	(IO_MFS11.I2C.SSR.bit.TBI)
#define	MFS11_I2C_IBSR			(IO_MFS11.I2C.IBSR.byte)
#define	MFS11_I2C_IBSR_FBT    	(IO_MFS11.I2C.IBSR.bit.FBT)
#define	MFS11_I2C_IBSR_RACK    	(IO_MFS11.I2C.IBSR.bit.RACK)
#define	MFS11_I2C_IBSR_RSA    	(IO_MFS11.I2C.IBSR.bit.RSA)
#define	MFS11_I2C_IBSR_TRX    	(IO_MFS11.I2C.IBSR.bit.TRX)
#define	MFS11_I2C_IBSR_AL    	(IO_MFS11.I2C.IBSR.bit.AL)
#define	MFS11_I2C_IBSR_RSC    	(IO_MFS11.I2C.IBSR.bit.RSC)
#define	MFS11_I2C_IBSR_SPC    	(IO_MFS11.I2C.IBSR.bit.SPC)
#define	MFS11_I2C_IBSR_BB    	(IO_MFS11.I2C.IBSR.bit.BB)
#define	MFS11_I2C_RDR0	(IO_MFS11.I2C.RDR0)
#define	MFS11_I2C_TDR0	(IO_MFS11.I2C.RDR0)
#define	MFS11_I2C_SACSR			(IO_MFS11.I2C.SACSR.hword)
#define	MFS11_I2C_SACSR_TRG    	(IO_MFS11.I2C.SACSR.bit.TRG)
#define	MFS11_I2C_SACSR_TINT    	(IO_MFS11.I2C.SACSR.bit.TINT)
#define	MFS11_I2C_SACSR_TINTE    	(IO_MFS11.I2C.SACSR.bit.TINTE)
#define	MFS11_I2C_SACSR_TRGE    	(IO_MFS11.I2C.SACSR.bit.TRGE)
#define	MFS11_I2C_SACSR_TDIV    	(IO_MFS11.I2C.SACSR.bit.TDIV)
#define	MFS11_I2C_SACSR_TMRE    	(IO_MFS11.I2C.SACSR.bit.TMRE)
#define	MFS11_I2C_STMR	(IO_MFS11.I2C.STMR)
#define	MFS11_I2C_STMCR	(IO_MFS11.I2C.STMCR)
#define	MFS11_I2C_BGR	(IO_MFS11.I2C.BGR)
#define	MFS11_I2C_ISMK			(IO_MFS11.I2C.ISMK.byte)
#define	MFS11_I2C_ISMK_EN    	(IO_MFS11.I2C.ISMK.bit.EN)
#define	MFS11_I2C_ISMK_SM    	(IO_MFS11.I2C.ISMK.bit.SM)
#define	MFS11_I2C_ISBA			(IO_MFS11.I2C.ISBA.byte)
#define	MFS11_I2C_ISBA_SAEN    	(IO_MFS11.I2C.ISBA.bit.SAEN)
#define	MFS11_I2C_ISBA_SA    	(IO_MFS11.I2C.ISBA.bit.SA)
#define	MFS11_I2C_FCR1			(IO_MFS11.I2C.FCR1.byte)
#define	MFS11_I2C_FCR1_FLSTE    	(IO_MFS11.I2C.FCR1.bit.FLSTE)
#define	MFS11_I2C_FCR1_FRIIE    	(IO_MFS11.I2C.FCR1.bit.FRIIE)
#define	MFS11_I2C_FCR1_FDRQ    	(IO_MFS11.I2C.FCR1.bit.FDRQ)
#define	MFS11_I2C_FCR1_FTIE    	(IO_MFS11.I2C.FCR1.bit.FTIE)
#define	MFS11_I2C_FCR1_FSEL    	(IO_MFS11.I2C.FCR1.bit.FSEL)
#define	MFS11_I2C_FCR0			(IO_MFS11.I2C.FCR0.byte)
#define	MFS11_I2C_FCR0_FLST    	(IO_MFS11.I2C.FCR0.bit.FLST)
#define	MFS11_I2C_FCR0_FLD    	(IO_MFS11.I2C.FCR0.bit.FLD)
#define	MFS11_I2C_FCR0_FSET    	(IO_MFS11.I2C.FCR0.bit.FSET)
#define	MFS11_I2C_FCR0_FCL2    	(IO_MFS11.I2C.FCR0.bit.FCL2)
#define	MFS11_I2C_FCR0_FCL1    	(IO_MFS11.I2C.FCR0.bit.FCL1)
#define	MFS11_I2C_FCR0_FE2    	(IO_MFS11.I2C.FCR0.bit.FE2)
#define	MFS11_I2C_FCR0_FE1    	(IO_MFS11.I2C.FCR0.bit.FE1)
#define	MFS11_I2C_FBYTE 	(IO_MFS11.I2C.FBYTE.hword)
#define	MFS11_I2C_FBYTE2	(IO_MFS11.I2C.FBYTE.byte.FBYTE2)
#define	MFS11_I2C_FBYTE1	(IO_MFS11.I2C.FBYTE.byte.FBYTE1)
#define	MFS11_I2C_FTICR 	(IO_MFS11.I2C.FTICR.hword)
#define	MFS11_I2C_FTICR2	(IO_MFS11.I2C.FTICR.byte.FTICR2)
#define	MFS11_I2C_FTICR1	(IO_MFS11.I2C.FTICR.byte.FTICR1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GATEC0,attr=IO,locate=0x19DD
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	STGR:1;
        __BYTE	EDGE:1;
    } bit;
} GATEC0STR;

__IO_EXTENDED	  GATEC0STR	IO_GATEC0;
#define	_gatec0		(IO_GATEC0)
#define	GATEC0		(IO_GATEC0.byte)
#define	GATEC0_STGR  	(IO_GATEC0.bit.STGR)
#define	GATEC0_EDGE  	(IO_GATEC0.bit.EDGE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GATEC2,attr=IO,locate=0x19DF
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	STGR:1;
        __BYTE	EDGE:1;
    } bit;
} GATEC2STR;

__IO_EXTENDED	  GATEC2STR	IO_GATEC2;
#define	_gatec2		(IO_GATEC2)
#define	GATEC2		(IO_GATEC2.byte)
#define	GATEC2_STGR  	(IO_GATEC2.bit.STGR)
#define	GATEC2_EDGE  	(IO_GATEC2.bit.EDGE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GATEC4,attr=IO,locate=0x19E1
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	STGR:1;
        __BYTE	EDGE:1;
    } bit;
} GATEC4STR;

__IO_EXTENDED	  GATEC4STR	IO_GATEC4;
#define	_gatec4		(IO_GATEC4)
#define	GATEC4		(IO_GATEC4.byte)
#define	GATEC4_STGR  	(IO_GATEC4.bit.STGR)
#define	GATEC4_EDGE  	(IO_GATEC4.bit.EDGE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS0,attr=IO,locate=0x19E8
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL1:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL0:7;
    } bit;
} GTRS0STR;

__IO_EXTENDED	  GTRS0STR	IO_GTRS0;
#define	_gtrs0		(IO_GTRS0)
#define	GTRS0		(IO_GTRS0.hword)
#define	GTRS0_TSEL1  	(IO_GTRS0.bit.TSEL1)
#define	GTRS0_TSEL0  	(IO_GTRS0.bit.TSEL0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS1,attr=IO,locate=0x19EA
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL3:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL2:7;
    } bit;
} GTRS1STR;

__IO_EXTENDED	  GTRS1STR	IO_GTRS1;
#define	_gtrs1		(IO_GTRS1)
#define	GTRS1		(IO_GTRS1.hword)
#define	GTRS1_TSEL3  	(IO_GTRS1.bit.TSEL3)
#define	GTRS1_TSEL2  	(IO_GTRS1.bit.TSEL2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS2,attr=IO,locate=0x19EC
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL5:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL4:7;
    } bit;
} GTRS2STR;

__IO_EXTENDED	  GTRS2STR	IO_GTRS2;
#define	_gtrs2		(IO_GTRS2)
#define	GTRS2		(IO_GTRS2.hword)
#define	GTRS2_TSEL5  	(IO_GTRS2.bit.TSEL5)
#define	GTRS2_TSEL4  	(IO_GTRS2.bit.TSEL4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS3,attr=IO,locate=0x19EE
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL7:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL6:7;
    } bit;
} GTRS3STR;

__IO_EXTENDED	  GTRS3STR	IO_GTRS3;
#define	_gtrs3		(IO_GTRS3)
#define	GTRS3		(IO_GTRS3.hword)
#define	GTRS3_TSEL7  	(IO_GTRS3.bit.TSEL7)
#define	GTRS3_TSEL6  	(IO_GTRS3.bit.TSEL6)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS4,attr=IO,locate=0x19F0
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL9:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL8:7;
    } bit;
} GTRS4STR;

__IO_EXTENDED	  GTRS4STR	IO_GTRS4;
#define	_gtrs4		(IO_GTRS4)
#define	GTRS4		(IO_GTRS4.hword)
#define	GTRS4_TSEL9  	(IO_GTRS4.bit.TSEL9)
#define	GTRS4_TSEL8  	(IO_GTRS4.bit.TSEL8)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS5,attr=IO,locate=0x19F2
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL11:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL10:7;
    } bit;
} GTRS5STR;

__IO_EXTENDED	  GTRS5STR	IO_GTRS5;
#define	_gtrs5		(IO_GTRS5)
#define	GTRS5		(IO_GTRS5.hword)
#define	GTRS5_TSEL11  	(IO_GTRS5.bit.TSEL11)
#define	GTRS5_TSEL10  	(IO_GTRS5.bit.TSEL10)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS6,attr=IO,locate=0x19F4
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL13:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL12:7;
    } bit;
} GTRS6STR;

__IO_EXTENDED	  GTRS6STR	IO_GTRS6;
#define	_gtrs6		(IO_GTRS6)
#define	GTRS6		(IO_GTRS6.hword)
#define	GTRS6_TSEL13  	(IO_GTRS6.bit.TSEL13)
#define	GTRS6_TSEL12  	(IO_GTRS6.bit.TSEL12)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS7,attr=IO,locate=0x19F6
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL15:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL14:7;
    } bit;
} GTRS7STR;

__IO_EXTENDED	  GTRS7STR	IO_GTRS7;
#define	_gtrs7		(IO_GTRS7)
#define	GTRS7		(IO_GTRS7.hword)
#define	GTRS7_TSEL15  	(IO_GTRS7.bit.TSEL15)
#define	GTRS7_TSEL14  	(IO_GTRS7.bit.TSEL14)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS8,attr=IO,locate=0x19F8
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL17:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL16:7;
    } bit;
} GTRS8STR;

__IO_EXTENDED	  GTRS8STR	IO_GTRS8;
#define	_gtrs8		(IO_GTRS8)
#define	GTRS8		(IO_GTRS8.hword)
#define	GTRS8_TSEL17  	(IO_GTRS8.bit.TSEL17)
#define	GTRS8_TSEL16  	(IO_GTRS8.bit.TSEL16)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS9,attr=IO,locate=0x19FA
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL19:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL18:7;
    } bit;
} GTRS9STR;

__IO_EXTENDED	  GTRS9STR	IO_GTRS9;
#define	_gtrs9		(IO_GTRS9)
#define	GTRS9		(IO_GTRS9.hword)
#define	GTRS9_TSEL19  	(IO_GTRS9.bit.TSEL19)
#define	GTRS9_TSEL18  	(IO_GTRS9.bit.TSEL18)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS10,attr=IO,locate=0x19FC
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL21:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL20:7;
    } bit;
} GTRS10STR;

__IO_EXTENDED	  GTRS10STR	IO_GTRS10;
#define	_gtrs10		(IO_GTRS10)
#define	GTRS10		(IO_GTRS10.hword)
#define	GTRS10_TSEL21  	(IO_GTRS10.bit.TSEL21)
#define	GTRS10_TSEL20  	(IO_GTRS10.bit.TSEL20)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS11,attr=IO,locate=0x19FE
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL23:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL22:7;
    } bit;
} GTRS11STR;

__IO_EXTENDED	  GTRS11STR	IO_GTRS11;
#define	_gtrs11		(IO_GTRS11)
#define	GTRS11		(IO_GTRS11.hword)
#define	GTRS11_TSEL23  	(IO_GTRS11.bit.TSEL23)
#define	GTRS11_TSEL22  	(IO_GTRS11.bit.TSEL22)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS12,attr=IO,locate=0x1A00
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL25:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL24:7;
    } bit;
} GTRS12STR;

__IO_EXTENDED	  GTRS12STR	IO_GTRS12;
#define	_gtrs12		(IO_GTRS12)
#define	GTRS12		(IO_GTRS12.hword)
#define	GTRS12_TSEL25  	(IO_GTRS12.bit.TSEL25)
#define	GTRS12_TSEL24  	(IO_GTRS12.bit.TSEL24)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS13,attr=IO,locate=0x1A02
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL27:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL26:7;
    } bit;
} GTRS13STR;

__IO_EXTENDED	  GTRS13STR	IO_GTRS13;
#define	_gtrs13		(IO_GTRS13)
#define	GTRS13		(IO_GTRS13.hword)
#define	GTRS13_TSEL27  	(IO_GTRS13.bit.TSEL27)
#define	GTRS13_TSEL26  	(IO_GTRS13.bit.TSEL26)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS14,attr=IO,locate=0x1A04
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL29:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL28:7;
    } bit;
} GTRS14STR;

__IO_EXTENDED	  GTRS14STR	IO_GTRS14;
#define	_gtrs14		(IO_GTRS14)
#define	GTRS14		(IO_GTRS14.hword)
#define	GTRS14_TSEL29  	(IO_GTRS14.bit.TSEL29)
#define	GTRS14_TSEL28  	(IO_GTRS14.bit.TSEL28)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS15,attr=IO,locate=0x1A06
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL31:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL30:7;
    } bit;
} GTRS15STR;

__IO_EXTENDED	  GTRS15STR	IO_GTRS15;
#define	_gtrs15		(IO_GTRS15)
#define	GTRS15		(IO_GTRS15.hword)
#define	GTRS15_TSEL31  	(IO_GTRS15.bit.TSEL31)
#define	GTRS15_TSEL30  	(IO_GTRS15.bit.TSEL30)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS16,attr=IO,locate=0x1A08
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL33:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL32:7;
    } bit;
} GTRS16STR;

__IO_EXTENDED	  GTRS16STR	IO_GTRS16;
#define	_gtrs16		(IO_GTRS16)
#define	GTRS16		(IO_GTRS16.hword)
#define	GTRS16_TSEL33  	(IO_GTRS16.bit.TSEL33)
#define	GTRS16_TSEL32  	(IO_GTRS16.bit.TSEL32)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS17,attr=IO,locate=0x1A0A
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL35:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL34:7;
    } bit;
} GTRS17STR;

__IO_EXTENDED	  GTRS17STR	IO_GTRS17;
#define	_gtrs17		(IO_GTRS17)
#define	GTRS17		(IO_GTRS17.hword)
#define	GTRS17_TSEL35  	(IO_GTRS17.bit.TSEL35)
#define	GTRS17_TSEL34  	(IO_GTRS17.bit.TSEL34)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS18,attr=IO,locate=0x1A0C
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL37:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL36:7;
    } bit;
} GTRS18STR;

__IO_EXTENDED	  GTRS18STR	IO_GTRS18;
#define	_gtrs18		(IO_GTRS18)
#define	GTRS18		(IO_GTRS18.hword)
#define	GTRS18_TSEL37  	(IO_GTRS18.bit.TSEL37)
#define	GTRS18_TSEL36  	(IO_GTRS18.bit.TSEL36)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS19,attr=IO,locate=0x1A0E
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL39:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL38:7;
    } bit;
} GTRS19STR;

__IO_EXTENDED	  GTRS19STR	IO_GTRS19;
#define	_gtrs19		(IO_GTRS19)
#define	GTRS19		(IO_GTRS19.hword)
#define	GTRS19_TSEL39  	(IO_GTRS19.bit.TSEL39)
#define	GTRS19_TSEL38  	(IO_GTRS19.bit.TSEL38)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS20,attr=IO,locate=0x1A10
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL41:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL40:7;
    } bit;
} GTRS20STR;

__IO_EXTENDED	  GTRS20STR	IO_GTRS20;
#define	_gtrs20		(IO_GTRS20)
#define	GTRS20		(IO_GTRS20.hword)
#define	GTRS20_TSEL41  	(IO_GTRS20.bit.TSEL41)
#define	GTRS20_TSEL40  	(IO_GTRS20.bit.TSEL40)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS21,attr=IO,locate=0x1A12
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL43:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL42:7;
    } bit;
} GTRS21STR;

__IO_EXTENDED	  GTRS21STR	IO_GTRS21;
#define	_gtrs21		(IO_GTRS21)
#define	GTRS21		(IO_GTRS21.hword)
#define	GTRS21_TSEL43  	(IO_GTRS21.bit.TSEL43)
#define	GTRS21_TSEL42  	(IO_GTRS21.bit.TSEL42)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS22,attr=IO,locate=0x1A14
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL45:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL44:7;
    } bit;
} GTRS22STR;

__IO_EXTENDED	  GTRS22STR	IO_GTRS22;
#define	_gtrs22		(IO_GTRS22)
#define	GTRS22		(IO_GTRS22.hword)
#define	GTRS22_TSEL45  	(IO_GTRS22.bit.TSEL45)
#define	GTRS22_TSEL44  	(IO_GTRS22.bit.TSEL44)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTRS23,attr=IO,locate=0x1A16
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	TSEL47:7;
        __HWORD	RESV2:1;
        __HWORD	TSEL46:7;
    } bit;
} GTRS23STR;

__IO_EXTENDED	  GTRS23STR	IO_GTRS23;
#define	_gtrs23		(IO_GTRS23)
#define	GTRS23		(IO_GTRS23.hword)
#define	GTRS23_TSEL47  	(IO_GTRS23.bit.TSEL47)
#define	GTRS23_TSEL46  	(IO_GTRS23.bit.TSEL46)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTREN0,attr=IO,locate=0x1A38
#endif

__IO_EXTENDED	__HWORD	IO_GTREN0;
#define	_gtren0		(IO_GTREN0)
#define	GTREN0	(_gtren0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTREN1,attr=IO,locate=0x1A3A
#endif

__IO_EXTENDED	__HWORD	IO_GTREN1;
#define	_gtren1		(IO_GTREN1)
#define	GTREN1	(_gtren1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_GTREN2,attr=IO,locate=0x1A3C
#endif

__IO_EXTENDED	__HWORD	IO_GTREN2;
#define	_gtren2		(IO_GTREN2)
#define	GTREN2	(_gtren2)

/*PPG(0-3) definition*/
typedef struct
{
    union
    {
        __HWORD	hword;
        struct
        {
            __HWORD	CNTE:1;
            __HWORD	STGR:1;
            __HWORD	MDSE:1;
            __HWORD	RTRG:1;
            __HWORD	CKS:2;
            __HWORD	PGMS:1;
            __HWORD	OWFS:1;
            __HWORD	EGS:2;
            __HWORD	IREN:1;
            __HWORD	IRQF:1;
            __HWORD	IRS:2;
            __BYTE	RESV011:1;
            __HWORD	OSEL:1;
        } bit;
    } PCN;
    __HWORD	PCSR;
    __HWORD	PDUT;
    const __HWORD	PTMR;
    union
    {
        __HWORD	hword;
        struct
        {
            __HWORD	RESV80:1;
            __HWORD	RESV81:1;
            __HWORD	LFPR:1;
            __HWORD	HFPR:1;
            __HWORD	CMDSEL:1;
            __HWORD	CMD:1;
            __HWORD	TPC:1;
            __HWORD	STRD:1;
            __HWORD	RESV88:1;
            __HWORD	RESV89:1;
            __HWORD	RESV810:1;
            __HWORD	RESV811:1;
            __HWORD	RESV812:1;
            __HWORD	REMP:1;
            __HWORD	SREMP:1;
            __HWORD	IRS2:1;
        } bit;
    } PCN2;
    __HWORD	PSDR;
    __HWORD	PTPC;
    __BYTE	IO_RESV00;
    union
    {
        __BYTE	byte;
        struct
        {
            __BYTE	RESV150:1;
            __BYTE	RESV151:1;
            __BYTE	RESV152:1;
            __BYTE	RESV153:1;
            __BYTE	D:4;
        } bit;
    } PCMDWD;
    __HWORD	PHCSR;
    __HWORD	PLCSR;
    __HWORD	PHDUT;
    __HWORD	PLDUT;
    __HWORD	PCMDDT;
    __HWORD	IO_RESV01;
} PPGASTR;

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG0,attr=IO,locate=0x1A40
#endif

__IO_EXTENDED	PPGASTR	IO_PPG0;

#define	PPG0_PCN			(IO_PPG0.PCN.hword)
#define	PPG0_PCN_CNTE    	(IO_PPG0.PCN.bit.CNTE)
#define	PPG0_PCN_STGR    	(IO_PPG0.PCN.bit.STGR)
#define	PPG0_PCN_MDSE    	(IO_PPG0.PCN.bit.MDSE)
#define	PPG0_PCN_RTRG    	(IO_PPG0.PCN.bit.RTRG)
#define	PPG0_PCN_CKS    	(IO_PPG0.PCN.bit.CKS)
#define	PPG0_PCN_PGMS    	(IO_PPG0.PCN.bit.PGMS)
#define	PPG0_PCN_OWFS    	(IO_PPG0.PCN.bit.OWFS)
#define	PPG0_PCN_EGS    	(IO_PPG0.PCN.bit.EGS)
#define	PPG0_PCN_IREN    	(IO_PPG0.PCN.bit.IREN)
#define	PPG0_PCN_IRQF    	(IO_PPG0.PCN.bit.IRQF)
#define	PPG0_PCN_IRS    	(IO_PPG0.PCN.bit.IRS)
#define	PPG0_PCN_OSEL    	(IO_PPG0.PCN.bit.OSEL)
#define	PPG0_PCSR	(IO_PPG0.PCSR)
#define	PPG0_PDUT	(IO_PPG0.PDUT)
#define	PPG0_PTMR	(IO_PPG0.PTMR)
#define	PPG0_PCN2			(IO_PPG0.PCN2.hword)
#define	PPG0_PCN2_LFPR    	(IO_PPG0.PCN2.bit.LFPR)
#define	PPG0_PCN2_HFPR    	(IO_PPG0.PCN2.bit.HFPR)
#define	PPG0_PCN2_CMDSEL    	(IO_PPG0.PCN2.bit.CMDSEL)
#define	PPG0_PCN2_CMD    	(IO_PPG0.PCN2.bit.CMD)
#define	PPG0_PCN2_TPC    	(IO_PPG0.PCN2.bit.TPC)
#define	PPG0_PCN2_STRD    	(IO_PPG0.PCN2.bit.STRD)
#define	PPG0_PCN2_REMP    	(IO_PPG0.PCN2.bit.REMP)
#define	PPG0_PCN2_SREMP    	(IO_PPG0.PCN2.bit.SREMP)
#define	PPG0_PCN2_IRS2    	(IO_PPG0.PCN2.bit.IRS2)
#define	PPG0_PSDR	(IO_PPG0.PSDR)
#define	PPG0_PTPC	(IO_PPG0.PTPC)
#define	PPG0_PCMDWD			(IO_PPG0.PCMDWD.byte)
#define	PPG0_PCMDWD_D    	(IO_PPG0.PCMDWD.bit.D)
#define	PPG0_PHCSR	(IO_PPG0.PHCSR)
#define	PPG0_PLCSR	(IO_PPG0.PLCSR)
#define	PPG0_PHDUT	(IO_PPG0.PHDUT)
#define	PPG0_PLDUT	(IO_PPG0.PLDUT)
#define	PPG0_PCMDDT	(IO_PPG0.PCMDDT)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG1,attr=IO,locate=0x1A5C
#endif

__IO_EXTENDED	PPGASTR	IO_PPG1;

#define	PPG1_PCN			(IO_PPG1.PCN.hword)
#define	PPG1_PCN_CNTE    	(IO_PPG1.PCN.bit.CNTE)
#define	PPG1_PCN_STGR    	(IO_PPG1.PCN.bit.STGR)
#define	PPG1_PCN_MDSE    	(IO_PPG1.PCN.bit.MDSE)
#define	PPG1_PCN_RTRG    	(IO_PPG1.PCN.bit.RTRG)
#define	PPG1_PCN_CKS    	(IO_PPG1.PCN.bit.CKS)
#define	PPG1_PCN_PGMS    	(IO_PPG1.PCN.bit.PGMS)
#define	PPG1_PCN_OWFS    	(IO_PPG1.PCN.bit.OWFS)
#define	PPG1_PCN_EGS    	(IO_PPG1.PCN.bit.EGS)
#define	PPG1_PCN_IREN    	(IO_PPG1.PCN.bit.IREN)
#define	PPG1_PCN_IRQF    	(IO_PPG1.PCN.bit.IRQF)
#define	PPG1_PCN_IRS    	(IO_PPG1.PCN.bit.IRS)
#define	PPG1_PCN_OSEL    	(IO_PPG1.PCN.bit.OSEL)
#define	PPG1_PCSR	(IO_PPG1.PCSR)
#define	PPG1_PDUT	(IO_PPG1.PDUT)
#define	PPG1_PTMR	(IO_PPG1.PTMR)
#define	PPG1_PCN2			(IO_PPG1.PCN2.hword)
#define	PPG1_PCN2_LFPR    	(IO_PPG1.PCN2.bit.LFPR)
#define	PPG1_PCN2_HFPR    	(IO_PPG1.PCN2.bit.HFPR)
#define	PPG1_PCN2_CMDSEL    	(IO_PPG1.PCN2.bit.CMDSEL)
#define	PPG1_PCN2_CMD    	(IO_PPG1.PCN2.bit.CMD)
#define	PPG1_PCN2_TPC    	(IO_PPG1.PCN2.bit.TPC)
#define	PPG1_PCN2_STRD    	(IO_PPG1.PCN2.bit.STRD)
#define	PPG1_PCN2_REMP    	(IO_PPG1.PCN2.bit.REMP)
#define	PPG1_PCN2_SREMP    	(IO_PPG1.PCN2.bit.SREMP)
#define	PPG1_PCN2_IRS2    	(IO_PPG1.PCN2.bit.IRS2)
#define	PPG1_PSDR	(IO_PPG1.PSDR)
#define	PPG1_PTPC	(IO_PPG1.PTPC)
#define	PPG1_PCMDWD			(IO_PPG1.PCMDWD.byte)
#define	PPG1_PCMDWD_D    	(IO_PPG1.PCMDWD.bit.D)
#define	PPG1_PHCSR	(IO_PPG1.PHCSR)
#define	PPG1_PLCSR	(IO_PPG1.PLCSR)
#define	PPG1_PHDUT	(IO_PPG1.PHDUT)
#define	PPG1_PLDUT	(IO_PPG1.PLDUT)
#define	PPG1_PCMDDT	(IO_PPG1.PCMDDT)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG2,attr=IO,locate=0x1A78
#endif

__IO_EXTENDED	PPGASTR	IO_PPG2;

#define	PPG2_PCN			(IO_PPG2.PCN.hword)
#define	PPG2_PCN_CNTE    	(IO_PPG2.PCN.bit.CNTE)
#define	PPG2_PCN_STGR    	(IO_PPG2.PCN.bit.STGR)
#define	PPG2_PCN_MDSE    	(IO_PPG2.PCN.bit.MDSE)
#define	PPG2_PCN_RTRG    	(IO_PPG2.PCN.bit.RTRG)
#define	PPG2_PCN_CKS    	(IO_PPG2.PCN.bit.CKS)
#define	PPG2_PCN_PGMS    	(IO_PPG2.PCN.bit.PGMS)
#define	PPG2_PCN_OWFS    	(IO_PPG2.PCN.bit.OWFS)
#define	PPG2_PCN_EGS    	(IO_PPG2.PCN.bit.EGS)
#define	PPG2_PCN_IREN    	(IO_PPG2.PCN.bit.IREN)
#define	PPG2_PCN_IRQF    	(IO_PPG2.PCN.bit.IRQF)
#define	PPG2_PCN_IRS    	(IO_PPG2.PCN.bit.IRS)
#define	PPG2_PCN_OSEL    	(IO_PPG2.PCN.bit.OSEL)
#define	PPG2_PCSR	(IO_PPG2.PCSR)
#define	PPG2_PDUT	(IO_PPG2.PDUT)
#define	PPG2_PTMR	(IO_PPG2.PTMR)
#define	PPG2_PCN2			(IO_PPG2.PCN2.hword)
#define	PPG2_PCN2_LFPR    	(IO_PPG2.PCN2.bit.LFPR)
#define	PPG2_PCN2_HFPR    	(IO_PPG2.PCN2.bit.HFPR)
#define	PPG2_PCN2_CMDSEL    	(IO_PPG2.PCN2.bit.CMDSEL)
#define	PPG2_PCN2_CMD    	(IO_PPG2.PCN2.bit.CMD)
#define	PPG2_PCN2_TPC    	(IO_PPG2.PCN2.bit.TPC)
#define	PPG2_PCN2_STRD    	(IO_PPG2.PCN2.bit.STRD)
#define	PPG2_PCN2_REMP    	(IO_PPG2.PCN2.bit.REMP)
#define	PPG2_PCN2_SREMP    	(IO_PPG2.PCN2.bit.SREMP)
#define	PPG2_PCN2_IRS2    	(IO_PPG2.PCN2.bit.IRS2)
#define	PPG2_PSDR	(IO_PPG2.PSDR)
#define	PPG2_PTPC	(IO_PPG2.PTPC)
#define	PPG2_PCMDWD			(IO_PPG2.PCMDWD.byte)
#define	PPG2_PCMDWD_D    	(IO_PPG2.PCMDWD.bit.D)
#define	PPG2_PHCSR	(IO_PPG2.PHCSR)
#define	PPG2_PLCSR	(IO_PPG2.PLCSR)
#define	PPG2_PHDUT	(IO_PPG2.PHDUT)
#define	PPG2_PLDUT	(IO_PPG2.PLDUT)
#define	PPG2_PCMDDT	(IO_PPG2.PCMDDT)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG3,attr=IO,locate=0x1A94
#endif

__IO_EXTENDED	PPGASTR	IO_PPG3;

#define	PPG3_PCN			(IO_PPG3.PCN.hword)
#define	PPG3_PCN_CNTE    	(IO_PPG3.PCN.bit.CNTE)
#define	PPG3_PCN_STGR    	(IO_PPG3.PCN.bit.STGR)
#define	PPG3_PCN_MDSE    	(IO_PPG3.PCN.bit.MDSE)
#define	PPG3_PCN_RTRG    	(IO_PPG3.PCN.bit.RTRG)
#define	PPG3_PCN_CKS    	(IO_PPG3.PCN.bit.CKS)
#define	PPG3_PCN_PGMS    	(IO_PPG3.PCN.bit.PGMS)
#define	PPG3_PCN_OWFS    	(IO_PPG3.PCN.bit.OWFS)
#define	PPG3_PCN_EGS    	(IO_PPG3.PCN.bit.EGS)
#define	PPG3_PCN_IREN    	(IO_PPG3.PCN.bit.IREN)
#define	PPG3_PCN_IRQF    	(IO_PPG3.PCN.bit.IRQF)
#define	PPG3_PCN_IRS    	(IO_PPG3.PCN.bit.IRS)
#define	PPG3_PCN_OSEL    	(IO_PPG3.PCN.bit.OSEL)
#define	PPG3_PCSR	(IO_PPG3.PCSR)
#define	PPG3_PDUT	(IO_PPG3.PDUT)
#define	PPG3_PTMR	(IO_PPG3.PTMR)
#define	PPG3_PCN2			(IO_PPG3.PCN2.hword)
#define	PPG3_PCN2_LFPR    	(IO_PPG3.PCN2.bit.LFPR)
#define	PPG3_PCN2_HFPR    	(IO_PPG3.PCN2.bit.HFPR)
#define	PPG3_PCN2_CMDSEL    	(IO_PPG3.PCN2.bit.CMDSEL)
#define	PPG3_PCN2_CMD    	(IO_PPG3.PCN2.bit.CMD)
#define	PPG3_PCN2_TPC    	(IO_PPG3.PCN2.bit.TPC)
#define	PPG3_PCN2_STRD    	(IO_PPG3.PCN2.bit.STRD)
#define	PPG3_PCN2_REMP    	(IO_PPG3.PCN2.bit.REMP)
#define	PPG3_PCN2_SREMP    	(IO_PPG3.PCN2.bit.SREMP)
#define	PPG3_PCN2_IRS2    	(IO_PPG3.PCN2.bit.IRS2)
#define	PPG3_PSDR	(IO_PPG3.PSDR)
#define	PPG3_PTPC	(IO_PPG3.PTPC)
#define	PPG3_PCMDWD			(IO_PPG3.PCMDWD.byte)
#define	PPG3_PCMDWD_D    	(IO_PPG3.PCMDWD.bit.D)
#define	PPG3_PHCSR	(IO_PPG3.PHCSR)
#define	PPG3_PLCSR	(IO_PPG3.PLCSR)
#define	PPG3_PHDUT	(IO_PPG3.PHDUT)
#define	PPG3_PLDUT	(IO_PPG3.PLDUT)
#define	PPG3_PCMDDT	(IO_PPG3.PCMDDT)

/*PPG(4-47) definition*/
typedef struct
{
    union
    {
        __HWORD	hword;
        struct
        {
            __HWORD	CNTE:1;
            __HWORD	STGR:1;
            __HWORD	MDSE:1;
            __HWORD	RTRG:1;
            __HWORD	CKS:2;
            __HWORD	PGMS:1;
            __HWORD	OWFS:1;
            __HWORD	EGS:2;
            __HWORD	IREN:1;
            __HWORD	IRQF:1;
            __HWORD	IRS:2;
            __BYTE	RESV011:1;
            __HWORD	OSEL:1;
        } bit;
    } PCN;
    __HWORD	PCSR;
    __HWORD	PDUT;
    const __HWORD	PTMR;
    union
    {
        __HWORD	hword;
        struct
        {
            __HWORD	RESV80:1;
            __HWORD	RESV81:1;
            __HWORD	LFPR:1;
            __HWORD	HFPR:1;
            __HWORD	CMDSEL:1;
            __HWORD	CMD:1;
            __HWORD	TPC:1;
            __HWORD	STRD:1;
            __HWORD	RESV88:1;
            __HWORD	RESV89:1;
            __HWORD	RESV810:1;
            __HWORD	RESV811:1;
            __HWORD	RESV812:1;
            __HWORD	REMP:1;
            __HWORD	SREMP:1;
            __HWORD	IRS2:1;
        } bit;
    } PCN2;
    __HWORD	PSDR;
    __HWORD	PTPC;
    __BYTE	IO_RESV00;
} PPGBSTR;

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG4,attr=IO,locate=0x1AB0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG4;

#define	PPG4_PCN			(IO_PPG4.PCN.hword)
#define	PPG4_PCN_CNTE    	(IO_PPG4.PCN.bit.CNTE)
#define	PPG4_PCN_STGR    	(IO_PPG4.PCN.bit.STGR)
#define	PPG4_PCN_MDSE    	(IO_PPG4.PCN.bit.MDSE)
#define	PPG4_PCN_RTRG    	(IO_PPG4.PCN.bit.RTRG)
#define	PPG4_PCN_CKS    	(IO_PPG4.PCN.bit.CKS)
#define	PPG4_PCN_PGMS    	(IO_PPG4.PCN.bit.PGMS)
#define	PPG4_PCN_OWFS    	(IO_PPG4.PCN.bit.OWFS)
#define	PPG4_PCN_EGS    	(IO_PPG4.PCN.bit.EGS)
#define	PPG4_PCN_IREN    	(IO_PPG4.PCN.bit.IREN)
#define	PPG4_PCN_IRQF    	(IO_PPG4.PCN.bit.IRQF)
#define	PPG4_PCN_IRS    	(IO_PPG4.PCN.bit.IRS)
#define	PPG4_PCN_OSEL    	(IO_PPG4.PCN.bit.OSEL)
#define	PPG4_PCSR	(IO_PPG4.PCSR)
#define	PPG4_PDUT	(IO_PPG4.PDUT)
#define	PPG4_PTMR	(IO_PPG4.PTMR)
#define	PPG4_PCN2			(IO_PPG4.PCN2.hword)
#define	PPG4_PCN2_LFPR    	(IO_PPG4.PCN2.bit.LFPR)
#define	PPG4_PCN2_HFPR    	(IO_PPG4.PCN2.bit.HFPR)
#define	PPG4_PCN2_CMDSEL    	(IO_PPG4.PCN2.bit.CMDSEL)
#define	PPG4_PCN2_CMD    	(IO_PPG4.PCN2.bit.CMD)
#define	PPG4_PCN2_TPC    	(IO_PPG4.PCN2.bit.TPC)
#define	PPG4_PCN2_STRD    	(IO_PPG4.PCN2.bit.STRD)
#define	PPG4_PCN2_REMP    	(IO_PPG4.PCN2.bit.REMP)
#define	PPG4_PCN2_SREMP    	(IO_PPG4.PCN2.bit.SREMP)
#define	PPG4_PCN2_IRS2    	(IO_PPG4.PCN2.bit.IRS2)
#define	PPG4_PSDR	(IO_PPG4.PSDR)
#define	PPG4_PTPC	(IO_PPG4.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG5,attr=IO,locate=0x1AC0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG5;

#define	PPG5_PCN			(IO_PPG5.PCN.hword)
#define	PPG5_PCN_CNTE    	(IO_PPG5.PCN.bit.CNTE)
#define	PPG5_PCN_STGR    	(IO_PPG5.PCN.bit.STGR)
#define	PPG5_PCN_MDSE    	(IO_PPG5.PCN.bit.MDSE)
#define	PPG5_PCN_RTRG    	(IO_PPG5.PCN.bit.RTRG)
#define	PPG5_PCN_CKS    	(IO_PPG5.PCN.bit.CKS)
#define	PPG5_PCN_PGMS    	(IO_PPG5.PCN.bit.PGMS)
#define	PPG5_PCN_OWFS    	(IO_PPG5.PCN.bit.OWFS)
#define	PPG5_PCN_EGS    	(IO_PPG5.PCN.bit.EGS)
#define	PPG5_PCN_IREN    	(IO_PPG5.PCN.bit.IREN)
#define	PPG5_PCN_IRQF    	(IO_PPG5.PCN.bit.IRQF)
#define	PPG5_PCN_IRS    	(IO_PPG5.PCN.bit.IRS)
#define	PPG5_PCN_OSEL    	(IO_PPG5.PCN.bit.OSEL)
#define	PPG5_PCSR	(IO_PPG5.PCSR)
#define	PPG5_PDUT	(IO_PPG5.PDUT)
#define	PPG5_PTMR	(IO_PPG5.PTMR)
#define	PPG5_PCN2			(IO_PPG5.PCN2.hword)
#define	PPG5_PCN2_LFPR    	(IO_PPG5.PCN2.bit.LFPR)
#define	PPG5_PCN2_HFPR    	(IO_PPG5.PCN2.bit.HFPR)
#define	PPG5_PCN2_CMDSEL    	(IO_PPG5.PCN2.bit.CMDSEL)
#define	PPG5_PCN2_CMD    	(IO_PPG5.PCN2.bit.CMD)
#define	PPG5_PCN2_TPC    	(IO_PPG5.PCN2.bit.TPC)
#define	PPG5_PCN2_STRD    	(IO_PPG5.PCN2.bit.STRD)
#define	PPG5_PCN2_REMP    	(IO_PPG5.PCN2.bit.REMP)
#define	PPG5_PCN2_SREMP    	(IO_PPG5.PCN2.bit.SREMP)
#define	PPG5_PCN2_IRS2    	(IO_PPG5.PCN2.bit.IRS2)
#define	PPG5_PSDR	(IO_PPG5.PSDR)
#define	PPG5_PTPC	(IO_PPG5.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG6,attr=IO,locate=0x1AD0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG6;

#define	PPG6_PCN			(IO_PPG6.PCN.hword)
#define	PPG6_PCN_CNTE    	(IO_PPG6.PCN.bit.CNTE)
#define	PPG6_PCN_STGR    	(IO_PPG6.PCN.bit.STGR)
#define	PPG6_PCN_MDSE    	(IO_PPG6.PCN.bit.MDSE)
#define	PPG6_PCN_RTRG    	(IO_PPG6.PCN.bit.RTRG)
#define	PPG6_PCN_CKS    	(IO_PPG6.PCN.bit.CKS)
#define	PPG6_PCN_PGMS    	(IO_PPG6.PCN.bit.PGMS)
#define	PPG6_PCN_OWFS    	(IO_PPG6.PCN.bit.OWFS)
#define	PPG6_PCN_EGS    	(IO_PPG6.PCN.bit.EGS)
#define	PPG6_PCN_IREN    	(IO_PPG6.PCN.bit.IREN)
#define	PPG6_PCN_IRQF    	(IO_PPG6.PCN.bit.IRQF)
#define	PPG6_PCN_IRS    	(IO_PPG6.PCN.bit.IRS)
#define	PPG6_PCN_OSEL    	(IO_PPG6.PCN.bit.OSEL)
#define	PPG6_PCSR	(IO_PPG6.PCSR)
#define	PPG6_PDUT	(IO_PPG6.PDUT)
#define	PPG6_PTMR	(IO_PPG6.PTMR)
#define	PPG6_PCN2			(IO_PPG6.PCN2.hword)
#define	PPG6_PCN2_LFPR    	(IO_PPG6.PCN2.bit.LFPR)
#define	PPG6_PCN2_HFPR    	(IO_PPG6.PCN2.bit.HFPR)
#define	PPG6_PCN2_CMDSEL    	(IO_PPG6.PCN2.bit.CMDSEL)
#define	PPG6_PCN2_CMD    	(IO_PPG6.PCN2.bit.CMD)
#define	PPG6_PCN2_TPC    	(IO_PPG6.PCN2.bit.TPC)
#define	PPG6_PCN2_STRD    	(IO_PPG6.PCN2.bit.STRD)
#define	PPG6_PCN2_REMP    	(IO_PPG6.PCN2.bit.REMP)
#define	PPG6_PCN2_SREMP    	(IO_PPG6.PCN2.bit.SREMP)
#define	PPG6_PCN2_IRS2    	(IO_PPG6.PCN2.bit.IRS2)
#define	PPG6_PSDR	(IO_PPG6.PSDR)
#define	PPG6_PTPC	(IO_PPG6.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG7,attr=IO,locate=0x1AE0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG7;

#define	PPG7_PCN			(IO_PPG7.PCN.hword)
#define	PPG7_PCN_CNTE    	(IO_PPG7.PCN.bit.CNTE)
#define	PPG7_PCN_STGR    	(IO_PPG7.PCN.bit.STGR)
#define	PPG7_PCN_MDSE    	(IO_PPG7.PCN.bit.MDSE)
#define	PPG7_PCN_RTRG    	(IO_PPG7.PCN.bit.RTRG)
#define	PPG7_PCN_CKS    	(IO_PPG7.PCN.bit.CKS)
#define	PPG7_PCN_PGMS    	(IO_PPG7.PCN.bit.PGMS)
#define	PPG7_PCN_OWFS    	(IO_PPG7.PCN.bit.OWFS)
#define	PPG7_PCN_EGS    	(IO_PPG7.PCN.bit.EGS)
#define	PPG7_PCN_IREN    	(IO_PPG7.PCN.bit.IREN)
#define	PPG7_PCN_IRQF    	(IO_PPG7.PCN.bit.IRQF)
#define	PPG7_PCN_IRS    	(IO_PPG7.PCN.bit.IRS)
#define	PPG7_PCN_OSEL    	(IO_PPG7.PCN.bit.OSEL)
#define	PPG7_PCSR	(IO_PPG7.PCSR)
#define	PPG7_PDUT	(IO_PPG7.PDUT)
#define	PPG7_PTMR	(IO_PPG7.PTMR)
#define	PPG7_PCN2			(IO_PPG7.PCN2.hword)
#define	PPG7_PCN2_LFPR    	(IO_PPG7.PCN2.bit.LFPR)
#define	PPG7_PCN2_HFPR    	(IO_PPG7.PCN2.bit.HFPR)
#define	PPG7_PCN2_CMDSEL    	(IO_PPG7.PCN2.bit.CMDSEL)
#define	PPG7_PCN2_CMD    	(IO_PPG7.PCN2.bit.CMD)
#define	PPG7_PCN2_TPC    	(IO_PPG7.PCN2.bit.TPC)
#define	PPG7_PCN2_STRD    	(IO_PPG7.PCN2.bit.STRD)
#define	PPG7_PCN2_REMP    	(IO_PPG7.PCN2.bit.REMP)
#define	PPG7_PCN2_SREMP    	(IO_PPG7.PCN2.bit.SREMP)
#define	PPG7_PCN2_IRS2    	(IO_PPG7.PCN2.bit.IRS2)
#define	PPG7_PSDR	(IO_PPG7.PSDR)
#define	PPG7_PTPC	(IO_PPG7.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG8,attr=IO,locate=0x1AF0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG8;

#define	PPG8_PCN			(IO_PPG8.PCN.hword)
#define	PPG8_PCN_CNTE    	(IO_PPG8.PCN.bit.CNTE)
#define	PPG8_PCN_STGR    	(IO_PPG8.PCN.bit.STGR)
#define	PPG8_PCN_MDSE    	(IO_PPG8.PCN.bit.MDSE)
#define	PPG8_PCN_RTRG    	(IO_PPG8.PCN.bit.RTRG)
#define	PPG8_PCN_CKS    	(IO_PPG8.PCN.bit.CKS)
#define	PPG8_PCN_PGMS    	(IO_PPG8.PCN.bit.PGMS)
#define	PPG8_PCN_OWFS    	(IO_PPG8.PCN.bit.OWFS)
#define	PPG8_PCN_EGS    	(IO_PPG8.PCN.bit.EGS)
#define	PPG8_PCN_IREN    	(IO_PPG8.PCN.bit.IREN)
#define	PPG8_PCN_IRQF    	(IO_PPG8.PCN.bit.IRQF)
#define	PPG8_PCN_IRS    	(IO_PPG8.PCN.bit.IRS)
#define	PPG8_PCN_OSEL    	(IO_PPG8.PCN.bit.OSEL)
#define	PPG8_PCSR	(IO_PPG8.PCSR)
#define	PPG8_PDUT	(IO_PPG8.PDUT)
#define	PPG8_PTMR	(IO_PPG8.PTMR)
#define	PPG8_PCN2			(IO_PPG8.PCN2.hword)
#define	PPG8_PCN2_LFPR    	(IO_PPG8.PCN2.bit.LFPR)
#define	PPG8_PCN2_HFPR    	(IO_PPG8.PCN2.bit.HFPR)
#define	PPG8_PCN2_CMDSEL    	(IO_PPG8.PCN2.bit.CMDSEL)
#define	PPG8_PCN2_CMD    	(IO_PPG8.PCN2.bit.CMD)
#define	PPG8_PCN2_TPC    	(IO_PPG8.PCN2.bit.TPC)
#define	PPG8_PCN2_STRD    	(IO_PPG8.PCN2.bit.STRD)
#define	PPG8_PCN2_REMP    	(IO_PPG8.PCN2.bit.REMP)
#define	PPG8_PCN2_SREMP    	(IO_PPG8.PCN2.bit.SREMP)
#define	PPG8_PCN2_IRS2    	(IO_PPG8.PCN2.bit.IRS2)
#define	PPG8_PSDR	(IO_PPG8.PSDR)
#define	PPG8_PTPC	(IO_PPG8.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG9,attr=IO,locate=0x1B00
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG9;

#define	PPG9_PCN			(IO_PPG9.PCN.hword)
#define	PPG9_PCN_CNTE    	(IO_PPG9.PCN.bit.CNTE)
#define	PPG9_PCN_STGR    	(IO_PPG9.PCN.bit.STGR)
#define	PPG9_PCN_MDSE    	(IO_PPG9.PCN.bit.MDSE)
#define	PPG9_PCN_RTRG    	(IO_PPG9.PCN.bit.RTRG)
#define	PPG9_PCN_CKS    	(IO_PPG9.PCN.bit.CKS)
#define	PPG9_PCN_PGMS    	(IO_PPG9.PCN.bit.PGMS)
#define	PPG9_PCN_OWFS    	(IO_PPG9.PCN.bit.OWFS)
#define	PPG9_PCN_EGS    	(IO_PPG9.PCN.bit.EGS)
#define	PPG9_PCN_IREN    	(IO_PPG9.PCN.bit.IREN)
#define	PPG9_PCN_IRQF    	(IO_PPG9.PCN.bit.IRQF)
#define	PPG9_PCN_IRS    	(IO_PPG9.PCN.bit.IRS)
#define	PPG9_PCN_OSEL    	(IO_PPG9.PCN.bit.OSEL)
#define	PPG9_PCSR	(IO_PPG9.PCSR)
#define	PPG9_PDUT	(IO_PPG9.PDUT)
#define	PPG9_PTMR	(IO_PPG9.PTMR)
#define	PPG9_PCN2			(IO_PPG9.PCN2.hword)
#define	PPG9_PCN2_LFPR    	(IO_PPG9.PCN2.bit.LFPR)
#define	PPG9_PCN2_HFPR    	(IO_PPG9.PCN2.bit.HFPR)
#define	PPG9_PCN2_CMDSEL    	(IO_PPG9.PCN2.bit.CMDSEL)
#define	PPG9_PCN2_CMD    	(IO_PPG9.PCN2.bit.CMD)
#define	PPG9_PCN2_TPC    	(IO_PPG9.PCN2.bit.TPC)
#define	PPG9_PCN2_STRD    	(IO_PPG9.PCN2.bit.STRD)
#define	PPG9_PCN2_REMP    	(IO_PPG9.PCN2.bit.REMP)
#define	PPG9_PCN2_SREMP    	(IO_PPG9.PCN2.bit.SREMP)
#define	PPG9_PCN2_IRS2    	(IO_PPG9.PCN2.bit.IRS2)
#define	PPG9_PSDR	(IO_PPG9.PSDR)
#define	PPG9_PTPC	(IO_PPG9.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG10,attr=IO,locate=0x1B10
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG10;

#define	PPG10_PCN			(IO_PPG10.PCN.hword)
#define	PPG10_PCN_CNTE    	(IO_PPG10.PCN.bit.CNTE)
#define	PPG10_PCN_STGR    	(IO_PPG10.PCN.bit.STGR)
#define	PPG10_PCN_MDSE    	(IO_PPG10.PCN.bit.MDSE)
#define	PPG10_PCN_RTRG    	(IO_PPG10.PCN.bit.RTRG)
#define	PPG10_PCN_CKS    	(IO_PPG10.PCN.bit.CKS)
#define	PPG10_PCN_PGMS    	(IO_PPG10.PCN.bit.PGMS)
#define	PPG10_PCN_OWFS    	(IO_PPG10.PCN.bit.OWFS)
#define	PPG10_PCN_EGS    	(IO_PPG10.PCN.bit.EGS)
#define	PPG10_PCN_IREN    	(IO_PPG10.PCN.bit.IREN)
#define	PPG10_PCN_IRQF    	(IO_PPG10.PCN.bit.IRQF)
#define	PPG10_PCN_IRS    	(IO_PPG10.PCN.bit.IRS)
#define	PPG10_PCN_OSEL    	(IO_PPG10.PCN.bit.OSEL)
#define	PPG10_PCSR	(IO_PPG10.PCSR)
#define	PPG10_PDUT	(IO_PPG10.PDUT)
#define	PPG10_PTMR	(IO_PPG10.PTMR)
#define	PPG10_PCN2			(IO_PPG10.PCN2.hword)
#define	PPG10_PCN2_LFPR    	(IO_PPG10.PCN2.bit.LFPR)
#define	PPG10_PCN2_HFPR    	(IO_PPG10.PCN2.bit.HFPR)
#define	PPG10_PCN2_CMDSEL    	(IO_PPG10.PCN2.bit.CMDSEL)
#define	PPG10_PCN2_CMD    	(IO_PPG10.PCN2.bit.CMD)
#define	PPG10_PCN2_TPC    	(IO_PPG10.PCN2.bit.TPC)
#define	PPG10_PCN2_STRD    	(IO_PPG10.PCN2.bit.STRD)
#define	PPG10_PCN2_REMP    	(IO_PPG10.PCN2.bit.REMP)
#define	PPG10_PCN2_SREMP    	(IO_PPG10.PCN2.bit.SREMP)
#define	PPG10_PCN2_IRS2    	(IO_PPG10.PCN2.bit.IRS2)
#define	PPG10_PSDR	(IO_PPG10.PSDR)
#define	PPG10_PTPC	(IO_PPG10.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG11,attr=IO,locate=0x1B20
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG11;

#define	PPG11_PCN			(IO_PPG11.PCN.hword)
#define	PPG11_PCN_CNTE    	(IO_PPG11.PCN.bit.CNTE)
#define	PPG11_PCN_STGR    	(IO_PPG11.PCN.bit.STGR)
#define	PPG11_PCN_MDSE    	(IO_PPG11.PCN.bit.MDSE)
#define	PPG11_PCN_RTRG    	(IO_PPG11.PCN.bit.RTRG)
#define	PPG11_PCN_CKS    	(IO_PPG11.PCN.bit.CKS)
#define	PPG11_PCN_PGMS    	(IO_PPG11.PCN.bit.PGMS)
#define	PPG11_PCN_OWFS    	(IO_PPG11.PCN.bit.OWFS)
#define	PPG11_PCN_EGS    	(IO_PPG11.PCN.bit.EGS)
#define	PPG11_PCN_IREN    	(IO_PPG11.PCN.bit.IREN)
#define	PPG11_PCN_IRQF    	(IO_PPG11.PCN.bit.IRQF)
#define	PPG11_PCN_IRS    	(IO_PPG11.PCN.bit.IRS)
#define	PPG11_PCN_OSEL    	(IO_PPG11.PCN.bit.OSEL)
#define	PPG11_PCSR	(IO_PPG11.PCSR)
#define	PPG11_PDUT	(IO_PPG11.PDUT)
#define	PPG11_PTMR	(IO_PPG11.PTMR)
#define	PPG11_PCN2			(IO_PPG11.PCN2.hword)
#define	PPG11_PCN2_LFPR    	(IO_PPG11.PCN2.bit.LFPR)
#define	PPG11_PCN2_HFPR    	(IO_PPG11.PCN2.bit.HFPR)
#define	PPG11_PCN2_CMDSEL    	(IO_PPG11.PCN2.bit.CMDSEL)
#define	PPG11_PCN2_CMD    	(IO_PPG11.PCN2.bit.CMD)
#define	PPG11_PCN2_TPC    	(IO_PPG11.PCN2.bit.TPC)
#define	PPG11_PCN2_STRD    	(IO_PPG11.PCN2.bit.STRD)
#define	PPG11_PCN2_REMP    	(IO_PPG11.PCN2.bit.REMP)
#define	PPG11_PCN2_SREMP    	(IO_PPG11.PCN2.bit.SREMP)
#define	PPG11_PCN2_IRS2    	(IO_PPG11.PCN2.bit.IRS2)
#define	PPG11_PSDR	(IO_PPG11.PSDR)
#define	PPG11_PTPC	(IO_PPG11.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG12,attr=IO,locate=0x1B30
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG12;

#define	PPG12_PCN			(IO_PPG12.PCN.hword)
#define	PPG12_PCN_CNTE    	(IO_PPG12.PCN.bit.CNTE)
#define	PPG12_PCN_STGR    	(IO_PPG12.PCN.bit.STGR)
#define	PPG12_PCN_MDSE    	(IO_PPG12.PCN.bit.MDSE)
#define	PPG12_PCN_RTRG    	(IO_PPG12.PCN.bit.RTRG)
#define	PPG12_PCN_CKS    	(IO_PPG12.PCN.bit.CKS)
#define	PPG12_PCN_PGMS    	(IO_PPG12.PCN.bit.PGMS)
#define	PPG12_PCN_OWFS    	(IO_PPG12.PCN.bit.OWFS)
#define	PPG12_PCN_EGS    	(IO_PPG12.PCN.bit.EGS)
#define	PPG12_PCN_IREN    	(IO_PPG12.PCN.bit.IREN)
#define	PPG12_PCN_IRQF    	(IO_PPG12.PCN.bit.IRQF)
#define	PPG12_PCN_IRS    	(IO_PPG12.PCN.bit.IRS)
#define	PPG12_PCN_OSEL    	(IO_PPG12.PCN.bit.OSEL)
#define	PPG12_PCSR	(IO_PPG12.PCSR)
#define	PPG12_PDUT	(IO_PPG12.PDUT)
#define	PPG12_PTMR	(IO_PPG12.PTMR)
#define	PPG12_PCN2			(IO_PPG12.PCN2.hword)
#define	PPG12_PCN2_LFPR    	(IO_PPG12.PCN2.bit.LFPR)
#define	PPG12_PCN2_HFPR    	(IO_PPG12.PCN2.bit.HFPR)
#define	PPG12_PCN2_CMDSEL    	(IO_PPG12.PCN2.bit.CMDSEL)
#define	PPG12_PCN2_CMD    	(IO_PPG12.PCN2.bit.CMD)
#define	PPG12_PCN2_TPC    	(IO_PPG12.PCN2.bit.TPC)
#define	PPG12_PCN2_STRD    	(IO_PPG12.PCN2.bit.STRD)
#define	PPG12_PCN2_REMP    	(IO_PPG12.PCN2.bit.REMP)
#define	PPG12_PCN2_SREMP    	(IO_PPG12.PCN2.bit.SREMP)
#define	PPG12_PCN2_IRS2    	(IO_PPG12.PCN2.bit.IRS2)
#define	PPG12_PSDR	(IO_PPG12.PSDR)
#define	PPG12_PTPC	(IO_PPG12.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG13,attr=IO,locate=0x1B40
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG13;

#define	PPG13_PCN			(IO_PPG13.PCN.hword)
#define	PPG13_PCN_CNTE    	(IO_PPG13.PCN.bit.CNTE)
#define	PPG13_PCN_STGR    	(IO_PPG13.PCN.bit.STGR)
#define	PPG13_PCN_MDSE    	(IO_PPG13.PCN.bit.MDSE)
#define	PPG13_PCN_RTRG    	(IO_PPG13.PCN.bit.RTRG)
#define	PPG13_PCN_CKS    	(IO_PPG13.PCN.bit.CKS)
#define	PPG13_PCN_PGMS    	(IO_PPG13.PCN.bit.PGMS)
#define	PPG13_PCN_OWFS    	(IO_PPG13.PCN.bit.OWFS)
#define	PPG13_PCN_EGS    	(IO_PPG13.PCN.bit.EGS)
#define	PPG13_PCN_IREN    	(IO_PPG13.PCN.bit.IREN)
#define	PPG13_PCN_IRQF    	(IO_PPG13.PCN.bit.IRQF)
#define	PPG13_PCN_IRS    	(IO_PPG13.PCN.bit.IRS)
#define	PPG13_PCN_OSEL    	(IO_PPG13.PCN.bit.OSEL)
#define	PPG13_PCSR	(IO_PPG13.PCSR)
#define	PPG13_PDUT	(IO_PPG13.PDUT)
#define	PPG13_PTMR	(IO_PPG13.PTMR)
#define	PPG13_PCN2			(IO_PPG13.PCN2.hword)
#define	PPG13_PCN2_LFPR    	(IO_PPG13.PCN2.bit.LFPR)
#define	PPG13_PCN2_HFPR    	(IO_PPG13.PCN2.bit.HFPR)
#define	PPG13_PCN2_CMDSEL    	(IO_PPG13.PCN2.bit.CMDSEL)
#define	PPG13_PCN2_CMD    	(IO_PPG13.PCN2.bit.CMD)
#define	PPG13_PCN2_TPC    	(IO_PPG13.PCN2.bit.TPC)
#define	PPG13_PCN2_STRD    	(IO_PPG13.PCN2.bit.STRD)
#define	PPG13_PCN2_REMP    	(IO_PPG13.PCN2.bit.REMP)
#define	PPG13_PCN2_SREMP    	(IO_PPG13.PCN2.bit.SREMP)
#define	PPG13_PCN2_IRS2    	(IO_PPG13.PCN2.bit.IRS2)
#define	PPG13_PSDR	(IO_PPG13.PSDR)
#define	PPG13_PTPC	(IO_PPG13.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG14,attr=IO,locate=0x1B50
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG14;

#define	PPG14_PCN			(IO_PPG14.PCN.hword)
#define	PPG14_PCN_CNTE    	(IO_PPG14.PCN.bit.CNTE)
#define	PPG14_PCN_STGR    	(IO_PPG14.PCN.bit.STGR)
#define	PPG14_PCN_MDSE    	(IO_PPG14.PCN.bit.MDSE)
#define	PPG14_PCN_RTRG    	(IO_PPG14.PCN.bit.RTRG)
#define	PPG14_PCN_CKS    	(IO_PPG14.PCN.bit.CKS)
#define	PPG14_PCN_PGMS    	(IO_PPG14.PCN.bit.PGMS)
#define	PPG14_PCN_OWFS    	(IO_PPG14.PCN.bit.OWFS)
#define	PPG14_PCN_EGS    	(IO_PPG14.PCN.bit.EGS)
#define	PPG14_PCN_IREN    	(IO_PPG14.PCN.bit.IREN)
#define	PPG14_PCN_IRQF    	(IO_PPG14.PCN.bit.IRQF)
#define	PPG14_PCN_IRS    	(IO_PPG14.PCN.bit.IRS)
#define	PPG14_PCN_OSEL    	(IO_PPG14.PCN.bit.OSEL)
#define	PPG14_PCSR	(IO_PPG14.PCSR)
#define	PPG14_PDUT	(IO_PPG14.PDUT)
#define	PPG14_PTMR	(IO_PPG14.PTMR)
#define	PPG14_PCN2			(IO_PPG14.PCN2.hword)
#define	PPG14_PCN2_LFPR    	(IO_PPG14.PCN2.bit.LFPR)
#define	PPG14_PCN2_HFPR    	(IO_PPG14.PCN2.bit.HFPR)
#define	PPG14_PCN2_CMDSEL    	(IO_PPG14.PCN2.bit.CMDSEL)
#define	PPG14_PCN2_CMD    	(IO_PPG14.PCN2.bit.CMD)
#define	PPG14_PCN2_TPC    	(IO_PPG14.PCN2.bit.TPC)
#define	PPG14_PCN2_STRD    	(IO_PPG14.PCN2.bit.STRD)
#define	PPG14_PCN2_REMP    	(IO_PPG14.PCN2.bit.REMP)
#define	PPG14_PCN2_SREMP    	(IO_PPG14.PCN2.bit.SREMP)
#define	PPG14_PCN2_IRS2    	(IO_PPG14.PCN2.bit.IRS2)
#define	PPG14_PSDR	(IO_PPG14.PSDR)
#define	PPG14_PTPC	(IO_PPG14.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG15,attr=IO,locate=0x1B60
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG15;

#define	PPG15_PCN			(IO_PPG15.PCN.hword)
#define	PPG15_PCN_CNTE    	(IO_PPG15.PCN.bit.CNTE)
#define	PPG15_PCN_STGR    	(IO_PPG15.PCN.bit.STGR)
#define	PPG15_PCN_MDSE    	(IO_PPG15.PCN.bit.MDSE)
#define	PPG15_PCN_RTRG    	(IO_PPG15.PCN.bit.RTRG)
#define	PPG15_PCN_CKS    	(IO_PPG15.PCN.bit.CKS)
#define	PPG15_PCN_PGMS    	(IO_PPG15.PCN.bit.PGMS)
#define	PPG15_PCN_OWFS    	(IO_PPG15.PCN.bit.OWFS)
#define	PPG15_PCN_EGS    	(IO_PPG15.PCN.bit.EGS)
#define	PPG15_PCN_IREN    	(IO_PPG15.PCN.bit.IREN)
#define	PPG15_PCN_IRQF    	(IO_PPG15.PCN.bit.IRQF)
#define	PPG15_PCN_IRS    	(IO_PPG15.PCN.bit.IRS)
#define	PPG15_PCN_OSEL    	(IO_PPG15.PCN.bit.OSEL)
#define	PPG15_PCSR	(IO_PPG15.PCSR)
#define	PPG15_PDUT	(IO_PPG15.PDUT)
#define	PPG15_PTMR	(IO_PPG15.PTMR)
#define	PPG15_PCN2			(IO_PPG15.PCN2.hword)
#define	PPG15_PCN2_LFPR    	(IO_PPG15.PCN2.bit.LFPR)
#define	PPG15_PCN2_HFPR    	(IO_PPG15.PCN2.bit.HFPR)
#define	PPG15_PCN2_CMDSEL    	(IO_PPG15.PCN2.bit.CMDSEL)
#define	PPG15_PCN2_CMD    	(IO_PPG15.PCN2.bit.CMD)
#define	PPG15_PCN2_TPC    	(IO_PPG15.PCN2.bit.TPC)
#define	PPG15_PCN2_STRD    	(IO_PPG15.PCN2.bit.STRD)
#define	PPG15_PCN2_REMP    	(IO_PPG15.PCN2.bit.REMP)
#define	PPG15_PCN2_SREMP    	(IO_PPG15.PCN2.bit.SREMP)
#define	PPG15_PCN2_IRS2    	(IO_PPG15.PCN2.bit.IRS2)
#define	PPG15_PSDR	(IO_PPG15.PSDR)
#define	PPG15_PTPC	(IO_PPG15.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG16,attr=IO,locate=0x1B70
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG16;

#define	PPG16_PCN			(IO_PPG16.PCN.hword)
#define	PPG16_PCN_CNTE    	(IO_PPG16.PCN.bit.CNTE)
#define	PPG16_PCN_STGR    	(IO_PPG16.PCN.bit.STGR)
#define	PPG16_PCN_MDSE    	(IO_PPG16.PCN.bit.MDSE)
#define	PPG16_PCN_RTRG    	(IO_PPG16.PCN.bit.RTRG)
#define	PPG16_PCN_CKS    	(IO_PPG16.PCN.bit.CKS)
#define	PPG16_PCN_PGMS    	(IO_PPG16.PCN.bit.PGMS)
#define	PPG16_PCN_OWFS    	(IO_PPG16.PCN.bit.OWFS)
#define	PPG16_PCN_EGS    	(IO_PPG16.PCN.bit.EGS)
#define	PPG16_PCN_IREN    	(IO_PPG16.PCN.bit.IREN)
#define	PPG16_PCN_IRQF    	(IO_PPG16.PCN.bit.IRQF)
#define	PPG16_PCN_IRS    	(IO_PPG16.PCN.bit.IRS)
#define	PPG16_PCN_OSEL    	(IO_PPG16.PCN.bit.OSEL)
#define	PPG16_PCSR	(IO_PPG16.PCSR)
#define	PPG16_PDUT	(IO_PPG16.PDUT)
#define	PPG16_PTMR	(IO_PPG16.PTMR)
#define	PPG16_PCN2			(IO_PPG16.PCN2.hword)
#define	PPG16_PCN2_LFPR    	(IO_PPG16.PCN2.bit.LFPR)
#define	PPG16_PCN2_HFPR    	(IO_PPG16.PCN2.bit.HFPR)
#define	PPG16_PCN2_CMDSEL    	(IO_PPG16.PCN2.bit.CMDSEL)
#define	PPG16_PCN2_CMD    	(IO_PPG16.PCN2.bit.CMD)
#define	PPG16_PCN2_TPC    	(IO_PPG16.PCN2.bit.TPC)
#define	PPG16_PCN2_STRD    	(IO_PPG16.PCN2.bit.STRD)
#define	PPG16_PCN2_REMP    	(IO_PPG16.PCN2.bit.REMP)
#define	PPG16_PCN2_SREMP    	(IO_PPG16.PCN2.bit.SREMP)
#define	PPG16_PCN2_IRS2    	(IO_PPG16.PCN2.bit.IRS2)
#define	PPG16_PSDR	(IO_PPG16.PSDR)
#define	PPG16_PTPC	(IO_PPG16.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG17,attr=IO,locate=0x1B80
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG17;

#define	PPG17_PCN			(IO_PPG17.PCN.hword)
#define	PPG17_PCN_CNTE    	(IO_PPG17.PCN.bit.CNTE)
#define	PPG17_PCN_STGR    	(IO_PPG17.PCN.bit.STGR)
#define	PPG17_PCN_MDSE    	(IO_PPG17.PCN.bit.MDSE)
#define	PPG17_PCN_RTRG    	(IO_PPG17.PCN.bit.RTRG)
#define	PPG17_PCN_CKS    	(IO_PPG17.PCN.bit.CKS)
#define	PPG17_PCN_PGMS    	(IO_PPG17.PCN.bit.PGMS)
#define	PPG17_PCN_OWFS    	(IO_PPG17.PCN.bit.OWFS)
#define	PPG17_PCN_EGS    	(IO_PPG17.PCN.bit.EGS)
#define	PPG17_PCN_IREN    	(IO_PPG17.PCN.bit.IREN)
#define	PPG17_PCN_IRQF    	(IO_PPG17.PCN.bit.IRQF)
#define	PPG17_PCN_IRS    	(IO_PPG17.PCN.bit.IRS)
#define	PPG17_PCN_OSEL    	(IO_PPG17.PCN.bit.OSEL)
#define	PPG17_PCSR	(IO_PPG17.PCSR)
#define	PPG17_PDUT	(IO_PPG17.PDUT)
#define	PPG17_PTMR	(IO_PPG17.PTMR)
#define	PPG17_PCN2			(IO_PPG17.PCN2.hword)
#define	PPG17_PCN2_LFPR    	(IO_PPG17.PCN2.bit.LFPR)
#define	PPG17_PCN2_HFPR    	(IO_PPG17.PCN2.bit.HFPR)
#define	PPG17_PCN2_CMDSEL    	(IO_PPG17.PCN2.bit.CMDSEL)
#define	PPG17_PCN2_CMD    	(IO_PPG17.PCN2.bit.CMD)
#define	PPG17_PCN2_TPC    	(IO_PPG17.PCN2.bit.TPC)
#define	PPG17_PCN2_STRD    	(IO_PPG17.PCN2.bit.STRD)
#define	PPG17_PCN2_REMP    	(IO_PPG17.PCN2.bit.REMP)
#define	PPG17_PCN2_SREMP    	(IO_PPG17.PCN2.bit.SREMP)
#define	PPG17_PCN2_IRS2    	(IO_PPG17.PCN2.bit.IRS2)
#define	PPG17_PSDR	(IO_PPG17.PSDR)
#define	PPG17_PTPC	(IO_PPG17.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG18,attr=IO,locate=0x1B90
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG18;

#define	PPG18_PCN			(IO_PPG18.PCN.hword)
#define	PPG18_PCN_CNTE    	(IO_PPG18.PCN.bit.CNTE)
#define	PPG18_PCN_STGR    	(IO_PPG18.PCN.bit.STGR)
#define	PPG18_PCN_MDSE    	(IO_PPG18.PCN.bit.MDSE)
#define	PPG18_PCN_RTRG    	(IO_PPG18.PCN.bit.RTRG)
#define	PPG18_PCN_CKS    	(IO_PPG18.PCN.bit.CKS)
#define	PPG18_PCN_PGMS    	(IO_PPG18.PCN.bit.PGMS)
#define	PPG18_PCN_OWFS    	(IO_PPG18.PCN.bit.OWFS)
#define	PPG18_PCN_EGS    	(IO_PPG18.PCN.bit.EGS)
#define	PPG18_PCN_IREN    	(IO_PPG18.PCN.bit.IREN)
#define	PPG18_PCN_IRQF    	(IO_PPG18.PCN.bit.IRQF)
#define	PPG18_PCN_IRS    	(IO_PPG18.PCN.bit.IRS)
#define	PPG18_PCN_OSEL    	(IO_PPG18.PCN.bit.OSEL)
#define	PPG18_PCSR	(IO_PPG18.PCSR)
#define	PPG18_PDUT	(IO_PPG18.PDUT)
#define	PPG18_PTMR	(IO_PPG18.PTMR)
#define	PPG18_PCN2			(IO_PPG18.PCN2.hword)
#define	PPG18_PCN2_LFPR    	(IO_PPG18.PCN2.bit.LFPR)
#define	PPG18_PCN2_HFPR    	(IO_PPG18.PCN2.bit.HFPR)
#define	PPG18_PCN2_CMDSEL    	(IO_PPG18.PCN2.bit.CMDSEL)
#define	PPG18_PCN2_CMD    	(IO_PPG18.PCN2.bit.CMD)
#define	PPG18_PCN2_TPC    	(IO_PPG18.PCN2.bit.TPC)
#define	PPG18_PCN2_STRD    	(IO_PPG18.PCN2.bit.STRD)
#define	PPG18_PCN2_REMP    	(IO_PPG18.PCN2.bit.REMP)
#define	PPG18_PCN2_SREMP    	(IO_PPG18.PCN2.bit.SREMP)
#define	PPG18_PCN2_IRS2    	(IO_PPG18.PCN2.bit.IRS2)
#define	PPG18_PSDR	(IO_PPG18.PSDR)
#define	PPG18_PTPC	(IO_PPG18.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG19,attr=IO,locate=0x1BA0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG19;

#define	PPG19_PCN			(IO_PPG19.PCN.hword)
#define	PPG19_PCN_CNTE    	(IO_PPG19.PCN.bit.CNTE)
#define	PPG19_PCN_STGR    	(IO_PPG19.PCN.bit.STGR)
#define	PPG19_PCN_MDSE    	(IO_PPG19.PCN.bit.MDSE)
#define	PPG19_PCN_RTRG    	(IO_PPG19.PCN.bit.RTRG)
#define	PPG19_PCN_CKS    	(IO_PPG19.PCN.bit.CKS)
#define	PPG19_PCN_PGMS    	(IO_PPG19.PCN.bit.PGMS)
#define	PPG19_PCN_OWFS    	(IO_PPG19.PCN.bit.OWFS)
#define	PPG19_PCN_EGS    	(IO_PPG19.PCN.bit.EGS)
#define	PPG19_PCN_IREN    	(IO_PPG19.PCN.bit.IREN)
#define	PPG19_PCN_IRQF    	(IO_PPG19.PCN.bit.IRQF)
#define	PPG19_PCN_IRS    	(IO_PPG19.PCN.bit.IRS)
#define	PPG19_PCN_OSEL    	(IO_PPG19.PCN.bit.OSEL)
#define	PPG19_PCSR	(IO_PPG19.PCSR)
#define	PPG19_PDUT	(IO_PPG19.PDUT)
#define	PPG19_PTMR	(IO_PPG19.PTMR)
#define	PPG19_PCN2			(IO_PPG19.PCN2.hword)
#define	PPG19_PCN2_LFPR    	(IO_PPG19.PCN2.bit.LFPR)
#define	PPG19_PCN2_HFPR    	(IO_PPG19.PCN2.bit.HFPR)
#define	PPG19_PCN2_CMDSEL    	(IO_PPG19.PCN2.bit.CMDSEL)
#define	PPG19_PCN2_CMD    	(IO_PPG19.PCN2.bit.CMD)
#define	PPG19_PCN2_TPC    	(IO_PPG19.PCN2.bit.TPC)
#define	PPG19_PCN2_STRD    	(IO_PPG19.PCN2.bit.STRD)
#define	PPG19_PCN2_REMP    	(IO_PPG19.PCN2.bit.REMP)
#define	PPG19_PCN2_SREMP    	(IO_PPG19.PCN2.bit.SREMP)
#define	PPG19_PCN2_IRS2    	(IO_PPG19.PCN2.bit.IRS2)
#define	PPG19_PSDR	(IO_PPG19.PSDR)
#define	PPG19_PTPC	(IO_PPG19.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG20,attr=IO,locate=0x1BB0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG20;

#define	PPG20_PCN			(IO_PPG20.PCN.hword)
#define	PPG20_PCN_CNTE    	(IO_PPG20.PCN.bit.CNTE)
#define	PPG20_PCN_STGR    	(IO_PPG20.PCN.bit.STGR)
#define	PPG20_PCN_MDSE    	(IO_PPG20.PCN.bit.MDSE)
#define	PPG20_PCN_RTRG    	(IO_PPG20.PCN.bit.RTRG)
#define	PPG20_PCN_CKS    	(IO_PPG20.PCN.bit.CKS)
#define	PPG20_PCN_PGMS    	(IO_PPG20.PCN.bit.PGMS)
#define	PPG20_PCN_OWFS    	(IO_PPG20.PCN.bit.OWFS)
#define	PPG20_PCN_EGS    	(IO_PPG20.PCN.bit.EGS)
#define	PPG20_PCN_IREN    	(IO_PPG20.PCN.bit.IREN)
#define	PPG20_PCN_IRQF    	(IO_PPG20.PCN.bit.IRQF)
#define	PPG20_PCN_IRS    	(IO_PPG20.PCN.bit.IRS)
#define	PPG20_PCN_OSEL    	(IO_PPG20.PCN.bit.OSEL)
#define	PPG20_PCSR	(IO_PPG20.PCSR)
#define	PPG20_PDUT	(IO_PPG20.PDUT)
#define	PPG20_PTMR	(IO_PPG20.PTMR)
#define	PPG20_PCN2			(IO_PPG20.PCN2.hword)
#define	PPG20_PCN2_LFPR    	(IO_PPG20.PCN2.bit.LFPR)
#define	PPG20_PCN2_HFPR    	(IO_PPG20.PCN2.bit.HFPR)
#define	PPG20_PCN2_CMDSEL    	(IO_PPG20.PCN2.bit.CMDSEL)
#define	PPG20_PCN2_CMD    	(IO_PPG20.PCN2.bit.CMD)
#define	PPG20_PCN2_TPC    	(IO_PPG20.PCN2.bit.TPC)
#define	PPG20_PCN2_STRD    	(IO_PPG20.PCN2.bit.STRD)
#define	PPG20_PCN2_REMP    	(IO_PPG20.PCN2.bit.REMP)
#define	PPG20_PCN2_SREMP    	(IO_PPG20.PCN2.bit.SREMP)
#define	PPG20_PCN2_IRS2    	(IO_PPG20.PCN2.bit.IRS2)
#define	PPG20_PSDR	(IO_PPG20.PSDR)
#define	PPG20_PTPC	(IO_PPG20.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG21,attr=IO,locate=0x1BC0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG21;

#define	PPG21_PCN			(IO_PPG21.PCN.hword)
#define	PPG21_PCN_CNTE    	(IO_PPG21.PCN.bit.CNTE)
#define	PPG21_PCN_STGR    	(IO_PPG21.PCN.bit.STGR)
#define	PPG21_PCN_MDSE    	(IO_PPG21.PCN.bit.MDSE)
#define	PPG21_PCN_RTRG    	(IO_PPG21.PCN.bit.RTRG)
#define	PPG21_PCN_CKS    	(IO_PPG21.PCN.bit.CKS)
#define	PPG21_PCN_PGMS    	(IO_PPG21.PCN.bit.PGMS)
#define	PPG21_PCN_OWFS    	(IO_PPG21.PCN.bit.OWFS)
#define	PPG21_PCN_EGS    	(IO_PPG21.PCN.bit.EGS)
#define	PPG21_PCN_IREN    	(IO_PPG21.PCN.bit.IREN)
#define	PPG21_PCN_IRQF    	(IO_PPG21.PCN.bit.IRQF)
#define	PPG21_PCN_IRS    	(IO_PPG21.PCN.bit.IRS)
#define	PPG21_PCN_OSEL    	(IO_PPG21.PCN.bit.OSEL)
#define	PPG21_PCSR	(IO_PPG21.PCSR)
#define	PPG21_PDUT	(IO_PPG21.PDUT)
#define	PPG21_PTMR	(IO_PPG21.PTMR)
#define	PPG21_PCN2			(IO_PPG21.PCN2.hword)
#define	PPG21_PCN2_LFPR    	(IO_PPG21.PCN2.bit.LFPR)
#define	PPG21_PCN2_HFPR    	(IO_PPG21.PCN2.bit.HFPR)
#define	PPG21_PCN2_CMDSEL    	(IO_PPG21.PCN2.bit.CMDSEL)
#define	PPG21_PCN2_CMD    	(IO_PPG21.PCN2.bit.CMD)
#define	PPG21_PCN2_TPC    	(IO_PPG21.PCN2.bit.TPC)
#define	PPG21_PCN2_STRD    	(IO_PPG21.PCN2.bit.STRD)
#define	PPG21_PCN2_REMP    	(IO_PPG21.PCN2.bit.REMP)
#define	PPG21_PCN2_SREMP    	(IO_PPG21.PCN2.bit.SREMP)
#define	PPG21_PCN2_IRS2    	(IO_PPG21.PCN2.bit.IRS2)
#define	PPG21_PSDR	(IO_PPG21.PSDR)
#define	PPG21_PTPC	(IO_PPG21.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG22,attr=IO,locate=0x1BD0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG22;

#define	PPG22_PCN			(IO_PPG22.PCN.hword)
#define	PPG22_PCN_CNTE    	(IO_PPG22.PCN.bit.CNTE)
#define	PPG22_PCN_STGR    	(IO_PPG22.PCN.bit.STGR)
#define	PPG22_PCN_MDSE    	(IO_PPG22.PCN.bit.MDSE)
#define	PPG22_PCN_RTRG    	(IO_PPG22.PCN.bit.RTRG)
#define	PPG22_PCN_CKS    	(IO_PPG22.PCN.bit.CKS)
#define	PPG22_PCN_PGMS    	(IO_PPG22.PCN.bit.PGMS)
#define	PPG22_PCN_OWFS    	(IO_PPG22.PCN.bit.OWFS)
#define	PPG22_PCN_EGS    	(IO_PPG22.PCN.bit.EGS)
#define	PPG22_PCN_IREN    	(IO_PPG22.PCN.bit.IREN)
#define	PPG22_PCN_IRQF    	(IO_PPG22.PCN.bit.IRQF)
#define	PPG22_PCN_IRS    	(IO_PPG22.PCN.bit.IRS)
#define	PPG22_PCN_OSEL    	(IO_PPG22.PCN.bit.OSEL)
#define	PPG22_PCSR	(IO_PPG22.PCSR)
#define	PPG22_PDUT	(IO_PPG22.PDUT)
#define	PPG22_PTMR	(IO_PPG22.PTMR)
#define	PPG22_PCN2			(IO_PPG22.PCN2.hword)
#define	PPG22_PCN2_LFPR    	(IO_PPG22.PCN2.bit.LFPR)
#define	PPG22_PCN2_HFPR    	(IO_PPG22.PCN2.bit.HFPR)
#define	PPG22_PCN2_CMDSEL    	(IO_PPG22.PCN2.bit.CMDSEL)
#define	PPG22_PCN2_CMD    	(IO_PPG22.PCN2.bit.CMD)
#define	PPG22_PCN2_TPC    	(IO_PPG22.PCN2.bit.TPC)
#define	PPG22_PCN2_STRD    	(IO_PPG22.PCN2.bit.STRD)
#define	PPG22_PCN2_REMP    	(IO_PPG22.PCN2.bit.REMP)
#define	PPG22_PCN2_SREMP    	(IO_PPG22.PCN2.bit.SREMP)
#define	PPG22_PCN2_IRS2    	(IO_PPG22.PCN2.bit.IRS2)
#define	PPG22_PSDR	(IO_PPG22.PSDR)
#define	PPG22_PTPC	(IO_PPG22.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG23,attr=IO,locate=0x1BE0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG23;

#define	PPG23_PCN			(IO_PPG23.PCN.hword)
#define	PPG23_PCN_CNTE    	(IO_PPG23.PCN.bit.CNTE)
#define	PPG23_PCN_STGR    	(IO_PPG23.PCN.bit.STGR)
#define	PPG23_PCN_MDSE    	(IO_PPG23.PCN.bit.MDSE)
#define	PPG23_PCN_RTRG    	(IO_PPG23.PCN.bit.RTRG)
#define	PPG23_PCN_CKS    	(IO_PPG23.PCN.bit.CKS)
#define	PPG23_PCN_PGMS    	(IO_PPG23.PCN.bit.PGMS)
#define	PPG23_PCN_OWFS    	(IO_PPG23.PCN.bit.OWFS)
#define	PPG23_PCN_EGS    	(IO_PPG23.PCN.bit.EGS)
#define	PPG23_PCN_IREN    	(IO_PPG23.PCN.bit.IREN)
#define	PPG23_PCN_IRQF    	(IO_PPG23.PCN.bit.IRQF)
#define	PPG23_PCN_IRS    	(IO_PPG23.PCN.bit.IRS)
#define	PPG23_PCN_OSEL    	(IO_PPG23.PCN.bit.OSEL)
#define	PPG23_PCSR	(IO_PPG23.PCSR)
#define	PPG23_PDUT	(IO_PPG23.PDUT)
#define	PPG23_PTMR	(IO_PPG23.PTMR)
#define	PPG23_PCN2			(IO_PPG23.PCN2.hword)
#define	PPG23_PCN2_LFPR    	(IO_PPG23.PCN2.bit.LFPR)
#define	PPG23_PCN2_HFPR    	(IO_PPG23.PCN2.bit.HFPR)
#define	PPG23_PCN2_CMDSEL    	(IO_PPG23.PCN2.bit.CMDSEL)
#define	PPG23_PCN2_CMD    	(IO_PPG23.PCN2.bit.CMD)
#define	PPG23_PCN2_TPC    	(IO_PPG23.PCN2.bit.TPC)
#define	PPG23_PCN2_STRD    	(IO_PPG23.PCN2.bit.STRD)
#define	PPG23_PCN2_REMP    	(IO_PPG23.PCN2.bit.REMP)
#define	PPG23_PCN2_SREMP    	(IO_PPG23.PCN2.bit.SREMP)
#define	PPG23_PCN2_IRS2    	(IO_PPG23.PCN2.bit.IRS2)
#define	PPG23_PSDR	(IO_PPG23.PSDR)
#define	PPG23_PTPC	(IO_PPG23.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG24,attr=IO,locate=0x1BF0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG24;

#define	PPG24_PCN			(IO_PPG24.PCN.hword)
#define	PPG24_PCN_CNTE    	(IO_PPG24.PCN.bit.CNTE)
#define	PPG24_PCN_STGR    	(IO_PPG24.PCN.bit.STGR)
#define	PPG24_PCN_MDSE    	(IO_PPG24.PCN.bit.MDSE)
#define	PPG24_PCN_RTRG    	(IO_PPG24.PCN.bit.RTRG)
#define	PPG24_PCN_CKS    	(IO_PPG24.PCN.bit.CKS)
#define	PPG24_PCN_PGMS    	(IO_PPG24.PCN.bit.PGMS)
#define	PPG24_PCN_OWFS    	(IO_PPG24.PCN.bit.OWFS)
#define	PPG24_PCN_EGS    	(IO_PPG24.PCN.bit.EGS)
#define	PPG24_PCN_IREN    	(IO_PPG24.PCN.bit.IREN)
#define	PPG24_PCN_IRQF    	(IO_PPG24.PCN.bit.IRQF)
#define	PPG24_PCN_IRS    	(IO_PPG24.PCN.bit.IRS)
#define	PPG24_PCN_OSEL    	(IO_PPG24.PCN.bit.OSEL)
#define	PPG24_PCSR	(IO_PPG24.PCSR)
#define	PPG24_PDUT	(IO_PPG24.PDUT)
#define	PPG24_PTMR	(IO_PPG24.PTMR)
#define	PPG24_PCN2			(IO_PPG24.PCN2.hword)
#define	PPG24_PCN2_LFPR    	(IO_PPG24.PCN2.bit.LFPR)
#define	PPG24_PCN2_HFPR    	(IO_PPG24.PCN2.bit.HFPR)
#define	PPG24_PCN2_CMDSEL    	(IO_PPG24.PCN2.bit.CMDSEL)
#define	PPG24_PCN2_CMD    	(IO_PPG24.PCN2.bit.CMD)
#define	PPG24_PCN2_TPC    	(IO_PPG24.PCN2.bit.TPC)
#define	PPG24_PCN2_STRD    	(IO_PPG24.PCN2.bit.STRD)
#define	PPG24_PCN2_REMP    	(IO_PPG24.PCN2.bit.REMP)
#define	PPG24_PCN2_SREMP    	(IO_PPG24.PCN2.bit.SREMP)
#define	PPG24_PCN2_IRS2    	(IO_PPG24.PCN2.bit.IRS2)
#define	PPG24_PSDR	(IO_PPG24.PSDR)
#define	PPG24_PTPC	(IO_PPG24.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG25,attr=IO,locate=0x1C00
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG25;

#define	PPG25_PCN			(IO_PPG25.PCN.hword)
#define	PPG25_PCN_CNTE    	(IO_PPG25.PCN.bit.CNTE)
#define	PPG25_PCN_STGR    	(IO_PPG25.PCN.bit.STGR)
#define	PPG25_PCN_MDSE    	(IO_PPG25.PCN.bit.MDSE)
#define	PPG25_PCN_RTRG    	(IO_PPG25.PCN.bit.RTRG)
#define	PPG25_PCN_CKS    	(IO_PPG25.PCN.bit.CKS)
#define	PPG25_PCN_PGMS    	(IO_PPG25.PCN.bit.PGMS)
#define	PPG25_PCN_OWFS    	(IO_PPG25.PCN.bit.OWFS)
#define	PPG25_PCN_EGS    	(IO_PPG25.PCN.bit.EGS)
#define	PPG25_PCN_IREN    	(IO_PPG25.PCN.bit.IREN)
#define	PPG25_PCN_IRQF    	(IO_PPG25.PCN.bit.IRQF)
#define	PPG25_PCN_IRS    	(IO_PPG25.PCN.bit.IRS)
#define	PPG25_PCN_OSEL    	(IO_PPG25.PCN.bit.OSEL)
#define	PPG25_PCSR	(IO_PPG25.PCSR)
#define	PPG25_PDUT	(IO_PPG25.PDUT)
#define	PPG25_PTMR	(IO_PPG25.PTMR)
#define	PPG25_PCN2			(IO_PPG25.PCN2.hword)
#define	PPG25_PCN2_LFPR    	(IO_PPG25.PCN2.bit.LFPR)
#define	PPG25_PCN2_HFPR    	(IO_PPG25.PCN2.bit.HFPR)
#define	PPG25_PCN2_CMDSEL    	(IO_PPG25.PCN2.bit.CMDSEL)
#define	PPG25_PCN2_CMD    	(IO_PPG25.PCN2.bit.CMD)
#define	PPG25_PCN2_TPC    	(IO_PPG25.PCN2.bit.TPC)
#define	PPG25_PCN2_STRD    	(IO_PPG25.PCN2.bit.STRD)
#define	PPG25_PCN2_REMP    	(IO_PPG25.PCN2.bit.REMP)
#define	PPG25_PCN2_SREMP    	(IO_PPG25.PCN2.bit.SREMP)
#define	PPG25_PCN2_IRS2    	(IO_PPG25.PCN2.bit.IRS2)
#define	PPG25_PSDR	(IO_PPG25.PSDR)
#define	PPG25_PTPC	(IO_PPG25.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG26,attr=IO,locate=0x1C10
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG26;

#define	PPG26_PCN			(IO_PPG26.PCN.hword)
#define	PPG26_PCN_CNTE    	(IO_PPG26.PCN.bit.CNTE)
#define	PPG26_PCN_STGR    	(IO_PPG26.PCN.bit.STGR)
#define	PPG26_PCN_MDSE    	(IO_PPG26.PCN.bit.MDSE)
#define	PPG26_PCN_RTRG    	(IO_PPG26.PCN.bit.RTRG)
#define	PPG26_PCN_CKS    	(IO_PPG26.PCN.bit.CKS)
#define	PPG26_PCN_PGMS    	(IO_PPG26.PCN.bit.PGMS)
#define	PPG26_PCN_OWFS    	(IO_PPG26.PCN.bit.OWFS)
#define	PPG26_PCN_EGS    	(IO_PPG26.PCN.bit.EGS)
#define	PPG26_PCN_IREN    	(IO_PPG26.PCN.bit.IREN)
#define	PPG26_PCN_IRQF    	(IO_PPG26.PCN.bit.IRQF)
#define	PPG26_PCN_IRS    	(IO_PPG26.PCN.bit.IRS)
#define	PPG26_PCN_OSEL    	(IO_PPG26.PCN.bit.OSEL)
#define	PPG26_PCSR	(IO_PPG26.PCSR)
#define	PPG26_PDUT	(IO_PPG26.PDUT)
#define	PPG26_PTMR	(IO_PPG26.PTMR)
#define	PPG26_PCN2			(IO_PPG26.PCN2.hword)
#define	PPG26_PCN2_LFPR    	(IO_PPG26.PCN2.bit.LFPR)
#define	PPG26_PCN2_HFPR    	(IO_PPG26.PCN2.bit.HFPR)
#define	PPG26_PCN2_CMDSEL    	(IO_PPG26.PCN2.bit.CMDSEL)
#define	PPG26_PCN2_CMD    	(IO_PPG26.PCN2.bit.CMD)
#define	PPG26_PCN2_TPC    	(IO_PPG26.PCN2.bit.TPC)
#define	PPG26_PCN2_STRD    	(IO_PPG26.PCN2.bit.STRD)
#define	PPG26_PCN2_REMP    	(IO_PPG26.PCN2.bit.REMP)
#define	PPG26_PCN2_SREMP    	(IO_PPG26.PCN2.bit.SREMP)
#define	PPG26_PCN2_IRS2    	(IO_PPG26.PCN2.bit.IRS2)
#define	PPG26_PSDR	(IO_PPG26.PSDR)
#define	PPG26_PTPC	(IO_PPG26.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG27,attr=IO,locate=0x1C20
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG27;

#define	PPG27_PCN			(IO_PPG27.PCN.hword)
#define	PPG27_PCN_CNTE    	(IO_PPG27.PCN.bit.CNTE)
#define	PPG27_PCN_STGR    	(IO_PPG27.PCN.bit.STGR)
#define	PPG27_PCN_MDSE    	(IO_PPG27.PCN.bit.MDSE)
#define	PPG27_PCN_RTRG    	(IO_PPG27.PCN.bit.RTRG)
#define	PPG27_PCN_CKS    	(IO_PPG27.PCN.bit.CKS)
#define	PPG27_PCN_PGMS    	(IO_PPG27.PCN.bit.PGMS)
#define	PPG27_PCN_OWFS    	(IO_PPG27.PCN.bit.OWFS)
#define	PPG27_PCN_EGS    	(IO_PPG27.PCN.bit.EGS)
#define	PPG27_PCN_IREN    	(IO_PPG27.PCN.bit.IREN)
#define	PPG27_PCN_IRQF    	(IO_PPG27.PCN.bit.IRQF)
#define	PPG27_PCN_IRS    	(IO_PPG27.PCN.bit.IRS)
#define	PPG27_PCN_OSEL    	(IO_PPG27.PCN.bit.OSEL)
#define	PPG27_PCSR	(IO_PPG27.PCSR)
#define	PPG27_PDUT	(IO_PPG27.PDUT)
#define	PPG27_PTMR	(IO_PPG27.PTMR)
#define	PPG27_PCN2			(IO_PPG27.PCN2.hword)
#define	PPG27_PCN2_LFPR    	(IO_PPG27.PCN2.bit.LFPR)
#define	PPG27_PCN2_HFPR    	(IO_PPG27.PCN2.bit.HFPR)
#define	PPG27_PCN2_CMDSEL    	(IO_PPG27.PCN2.bit.CMDSEL)
#define	PPG27_PCN2_CMD    	(IO_PPG27.PCN2.bit.CMD)
#define	PPG27_PCN2_TPC    	(IO_PPG27.PCN2.bit.TPC)
#define	PPG27_PCN2_STRD    	(IO_PPG27.PCN2.bit.STRD)
#define	PPG27_PCN2_REMP    	(IO_PPG27.PCN2.bit.REMP)
#define	PPG27_PCN2_SREMP    	(IO_PPG27.PCN2.bit.SREMP)
#define	PPG27_PCN2_IRS2    	(IO_PPG27.PCN2.bit.IRS2)
#define	PPG27_PSDR	(IO_PPG27.PSDR)
#define	PPG27_PTPC	(IO_PPG27.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG28,attr=IO,locate=0x1C30
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG28;

#define	PPG28_PCN			(IO_PPG28.PCN.hword)
#define	PPG28_PCN_CNTE    	(IO_PPG28.PCN.bit.CNTE)
#define	PPG28_PCN_STGR    	(IO_PPG28.PCN.bit.STGR)
#define	PPG28_PCN_MDSE    	(IO_PPG28.PCN.bit.MDSE)
#define	PPG28_PCN_RTRG    	(IO_PPG28.PCN.bit.RTRG)
#define	PPG28_PCN_CKS    	(IO_PPG28.PCN.bit.CKS)
#define	PPG28_PCN_PGMS    	(IO_PPG28.PCN.bit.PGMS)
#define	PPG28_PCN_OWFS    	(IO_PPG28.PCN.bit.OWFS)
#define	PPG28_PCN_EGS    	(IO_PPG28.PCN.bit.EGS)
#define	PPG28_PCN_IREN    	(IO_PPG28.PCN.bit.IREN)
#define	PPG28_PCN_IRQF    	(IO_PPG28.PCN.bit.IRQF)
#define	PPG28_PCN_IRS    	(IO_PPG28.PCN.bit.IRS)
#define	PPG28_PCN_OSEL    	(IO_PPG28.PCN.bit.OSEL)
#define	PPG28_PCSR	(IO_PPG28.PCSR)
#define	PPG28_PDUT	(IO_PPG28.PDUT)
#define	PPG28_PTMR	(IO_PPG28.PTMR)
#define	PPG28_PCN2			(IO_PPG28.PCN2.hword)
#define	PPG28_PCN2_LFPR    	(IO_PPG28.PCN2.bit.LFPR)
#define	PPG28_PCN2_HFPR    	(IO_PPG28.PCN2.bit.HFPR)
#define	PPG28_PCN2_CMDSEL    	(IO_PPG28.PCN2.bit.CMDSEL)
#define	PPG28_PCN2_CMD    	(IO_PPG28.PCN2.bit.CMD)
#define	PPG28_PCN2_TPC    	(IO_PPG28.PCN2.bit.TPC)
#define	PPG28_PCN2_STRD    	(IO_PPG28.PCN2.bit.STRD)
#define	PPG28_PCN2_REMP    	(IO_PPG28.PCN2.bit.REMP)
#define	PPG28_PCN2_SREMP    	(IO_PPG28.PCN2.bit.SREMP)
#define	PPG28_PCN2_IRS2    	(IO_PPG28.PCN2.bit.IRS2)
#define	PPG28_PSDR	(IO_PPG28.PSDR)
#define	PPG28_PTPC	(IO_PPG28.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG29,attr=IO,locate=0x1C40
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG29;

#define	PPG29_PCN			(IO_PPG29.PCN.hword)
#define	PPG29_PCN_CNTE    	(IO_PPG29.PCN.bit.CNTE)
#define	PPG29_PCN_STGR    	(IO_PPG29.PCN.bit.STGR)
#define	PPG29_PCN_MDSE    	(IO_PPG29.PCN.bit.MDSE)
#define	PPG29_PCN_RTRG    	(IO_PPG29.PCN.bit.RTRG)
#define	PPG29_PCN_CKS    	(IO_PPG29.PCN.bit.CKS)
#define	PPG29_PCN_PGMS    	(IO_PPG29.PCN.bit.PGMS)
#define	PPG29_PCN_OWFS    	(IO_PPG29.PCN.bit.OWFS)
#define	PPG29_PCN_EGS    	(IO_PPG29.PCN.bit.EGS)
#define	PPG29_PCN_IREN    	(IO_PPG29.PCN.bit.IREN)
#define	PPG29_PCN_IRQF    	(IO_PPG29.PCN.bit.IRQF)
#define	PPG29_PCN_IRS    	(IO_PPG29.PCN.bit.IRS)
#define	PPG29_PCN_OSEL    	(IO_PPG29.PCN.bit.OSEL)
#define	PPG29_PCSR	(IO_PPG29.PCSR)
#define	PPG29_PDUT	(IO_PPG29.PDUT)
#define	PPG29_PTMR	(IO_PPG29.PTMR)
#define	PPG29_PCN2			(IO_PPG29.PCN2.hword)
#define	PPG29_PCN2_LFPR    	(IO_PPG29.PCN2.bit.LFPR)
#define	PPG29_PCN2_HFPR    	(IO_PPG29.PCN2.bit.HFPR)
#define	PPG29_PCN2_CMDSEL    	(IO_PPG29.PCN2.bit.CMDSEL)
#define	PPG29_PCN2_CMD    	(IO_PPG29.PCN2.bit.CMD)
#define	PPG29_PCN2_TPC    	(IO_PPG29.PCN2.bit.TPC)
#define	PPG29_PCN2_STRD    	(IO_PPG29.PCN2.bit.STRD)
#define	PPG29_PCN2_REMP    	(IO_PPG29.PCN2.bit.REMP)
#define	PPG29_PCN2_SREMP    	(IO_PPG29.PCN2.bit.SREMP)
#define	PPG29_PCN2_IRS2    	(IO_PPG29.PCN2.bit.IRS2)
#define	PPG29_PSDR	(IO_PPG29.PSDR)
#define	PPG29_PTPC	(IO_PPG29.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG30,attr=IO,locate=0x1C50
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG30;

#define	PPG30_PCN			(IO_PPG30.PCN.hword)
#define	PPG30_PCN_CNTE    	(IO_PPG30.PCN.bit.CNTE)
#define	PPG30_PCN_STGR    	(IO_PPG30.PCN.bit.STGR)
#define	PPG30_PCN_MDSE    	(IO_PPG30.PCN.bit.MDSE)
#define	PPG30_PCN_RTRG    	(IO_PPG30.PCN.bit.RTRG)
#define	PPG30_PCN_CKS    	(IO_PPG30.PCN.bit.CKS)
#define	PPG30_PCN_PGMS    	(IO_PPG30.PCN.bit.PGMS)
#define	PPG30_PCN_OWFS    	(IO_PPG30.PCN.bit.OWFS)
#define	PPG30_PCN_EGS    	(IO_PPG30.PCN.bit.EGS)
#define	PPG30_PCN_IREN    	(IO_PPG30.PCN.bit.IREN)
#define	PPG30_PCN_IRQF    	(IO_PPG30.PCN.bit.IRQF)
#define	PPG30_PCN_IRS    	(IO_PPG30.PCN.bit.IRS)
#define	PPG30_PCN_OSEL    	(IO_PPG30.PCN.bit.OSEL)
#define	PPG30_PCSR	(IO_PPG30.PCSR)
#define	PPG30_PDUT	(IO_PPG30.PDUT)
#define	PPG30_PTMR	(IO_PPG30.PTMR)
#define	PPG30_PCN2			(IO_PPG30.PCN2.hword)
#define	PPG30_PCN2_LFPR    	(IO_PPG30.PCN2.bit.LFPR)
#define	PPG30_PCN2_HFPR    	(IO_PPG30.PCN2.bit.HFPR)
#define	PPG30_PCN2_CMDSEL    	(IO_PPG30.PCN2.bit.CMDSEL)
#define	PPG30_PCN2_CMD    	(IO_PPG30.PCN2.bit.CMD)
#define	PPG30_PCN2_TPC    	(IO_PPG30.PCN2.bit.TPC)
#define	PPG30_PCN2_STRD    	(IO_PPG30.PCN2.bit.STRD)
#define	PPG30_PCN2_REMP    	(IO_PPG30.PCN2.bit.REMP)
#define	PPG30_PCN2_SREMP    	(IO_PPG30.PCN2.bit.SREMP)
#define	PPG30_PCN2_IRS2    	(IO_PPG30.PCN2.bit.IRS2)
#define	PPG30_PSDR	(IO_PPG30.PSDR)
#define	PPG30_PTPC	(IO_PPG30.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG31,attr=IO,locate=0x1C60
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG31;

#define	PPG31_PCN			(IO_PPG31.PCN.hword)
#define	PPG31_PCN_CNTE    	(IO_PPG31.PCN.bit.CNTE)
#define	PPG31_PCN_STGR    	(IO_PPG31.PCN.bit.STGR)
#define	PPG31_PCN_MDSE    	(IO_PPG31.PCN.bit.MDSE)
#define	PPG31_PCN_RTRG    	(IO_PPG31.PCN.bit.RTRG)
#define	PPG31_PCN_CKS    	(IO_PPG31.PCN.bit.CKS)
#define	PPG31_PCN_PGMS    	(IO_PPG31.PCN.bit.PGMS)
#define	PPG31_PCN_OWFS    	(IO_PPG31.PCN.bit.OWFS)
#define	PPG31_PCN_EGS    	(IO_PPG31.PCN.bit.EGS)
#define	PPG31_PCN_IREN    	(IO_PPG31.PCN.bit.IREN)
#define	PPG31_PCN_IRQF    	(IO_PPG31.PCN.bit.IRQF)
#define	PPG31_PCN_IRS    	(IO_PPG31.PCN.bit.IRS)
#define	PPG31_PCN_OSEL    	(IO_PPG31.PCN.bit.OSEL)
#define	PPG31_PCSR	(IO_PPG31.PCSR)
#define	PPG31_PDUT	(IO_PPG31.PDUT)
#define	PPG31_PTMR	(IO_PPG31.PTMR)
#define	PPG31_PCN2			(IO_PPG31.PCN2.hword)
#define	PPG31_PCN2_LFPR    	(IO_PPG31.PCN2.bit.LFPR)
#define	PPG31_PCN2_HFPR    	(IO_PPG31.PCN2.bit.HFPR)
#define	PPG31_PCN2_CMDSEL    	(IO_PPG31.PCN2.bit.CMDSEL)
#define	PPG31_PCN2_CMD    	(IO_PPG31.PCN2.bit.CMD)
#define	PPG31_PCN2_TPC    	(IO_PPG31.PCN2.bit.TPC)
#define	PPG31_PCN2_STRD    	(IO_PPG31.PCN2.bit.STRD)
#define	PPG31_PCN2_REMP    	(IO_PPG31.PCN2.bit.REMP)
#define	PPG31_PCN2_SREMP    	(IO_PPG31.PCN2.bit.SREMP)
#define	PPG31_PCN2_IRS2    	(IO_PPG31.PCN2.bit.IRS2)
#define	PPG31_PSDR	(IO_PPG31.PSDR)
#define	PPG31_PTPC	(IO_PPG31.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG32,attr=IO,locate=0x1C70
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG32;

#define	PPG32_PCN			(IO_PPG32.PCN.hword)
#define	PPG32_PCN_CNTE    	(IO_PPG32.PCN.bit.CNTE)
#define	PPG32_PCN_STGR    	(IO_PPG32.PCN.bit.STGR)
#define	PPG32_PCN_MDSE    	(IO_PPG32.PCN.bit.MDSE)
#define	PPG32_PCN_RTRG    	(IO_PPG32.PCN.bit.RTRG)
#define	PPG32_PCN_CKS    	(IO_PPG32.PCN.bit.CKS)
#define	PPG32_PCN_PGMS    	(IO_PPG32.PCN.bit.PGMS)
#define	PPG32_PCN_OWFS    	(IO_PPG32.PCN.bit.OWFS)
#define	PPG32_PCN_EGS    	(IO_PPG32.PCN.bit.EGS)
#define	PPG32_PCN_IREN    	(IO_PPG32.PCN.bit.IREN)
#define	PPG32_PCN_IRQF    	(IO_PPG32.PCN.bit.IRQF)
#define	PPG32_PCN_IRS    	(IO_PPG32.PCN.bit.IRS)
#define	PPG32_PCN_OSEL    	(IO_PPG32.PCN.bit.OSEL)
#define	PPG32_PCSR	(IO_PPG32.PCSR)
#define	PPG32_PDUT	(IO_PPG32.PDUT)
#define	PPG32_PTMR	(IO_PPG32.PTMR)
#define	PPG32_PCN2			(IO_PPG32.PCN2.hword)
#define	PPG32_PCN2_LFPR    	(IO_PPG32.PCN2.bit.LFPR)
#define	PPG32_PCN2_HFPR    	(IO_PPG32.PCN2.bit.HFPR)
#define	PPG32_PCN2_CMDSEL    	(IO_PPG32.PCN2.bit.CMDSEL)
#define	PPG32_PCN2_CMD    	(IO_PPG32.PCN2.bit.CMD)
#define	PPG32_PCN2_TPC    	(IO_PPG32.PCN2.bit.TPC)
#define	PPG32_PCN2_STRD    	(IO_PPG32.PCN2.bit.STRD)
#define	PPG32_PCN2_REMP    	(IO_PPG32.PCN2.bit.REMP)
#define	PPG32_PCN2_SREMP    	(IO_PPG32.PCN2.bit.SREMP)
#define	PPG32_PCN2_IRS2    	(IO_PPG32.PCN2.bit.IRS2)
#define	PPG32_PSDR	(IO_PPG32.PSDR)
#define	PPG32_PTPC	(IO_PPG32.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG33,attr=IO,locate=0x1C80
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG33;

#define	PPG33_PCN			(IO_PPG33.PCN.hword)
#define	PPG33_PCN_CNTE    	(IO_PPG33.PCN.bit.CNTE)
#define	PPG33_PCN_STGR    	(IO_PPG33.PCN.bit.STGR)
#define	PPG33_PCN_MDSE    	(IO_PPG33.PCN.bit.MDSE)
#define	PPG33_PCN_RTRG    	(IO_PPG33.PCN.bit.RTRG)
#define	PPG33_PCN_CKS    	(IO_PPG33.PCN.bit.CKS)
#define	PPG33_PCN_PGMS    	(IO_PPG33.PCN.bit.PGMS)
#define	PPG33_PCN_OWFS    	(IO_PPG33.PCN.bit.OWFS)
#define	PPG33_PCN_EGS    	(IO_PPG33.PCN.bit.EGS)
#define	PPG33_PCN_IREN    	(IO_PPG33.PCN.bit.IREN)
#define	PPG33_PCN_IRQF    	(IO_PPG33.PCN.bit.IRQF)
#define	PPG33_PCN_IRS    	(IO_PPG33.PCN.bit.IRS)
#define	PPG33_PCN_OSEL    	(IO_PPG33.PCN.bit.OSEL)
#define	PPG33_PCSR	(IO_PPG33.PCSR)
#define	PPG33_PDUT	(IO_PPG33.PDUT)
#define	PPG33_PTMR	(IO_PPG33.PTMR)
#define	PPG33_PCN2			(IO_PPG33.PCN2.hword)
#define	PPG33_PCN2_LFPR    	(IO_PPG33.PCN2.bit.LFPR)
#define	PPG33_PCN2_HFPR    	(IO_PPG33.PCN2.bit.HFPR)
#define	PPG33_PCN2_CMDSEL    	(IO_PPG33.PCN2.bit.CMDSEL)
#define	PPG33_PCN2_CMD    	(IO_PPG33.PCN2.bit.CMD)
#define	PPG33_PCN2_TPC    	(IO_PPG33.PCN2.bit.TPC)
#define	PPG33_PCN2_STRD    	(IO_PPG33.PCN2.bit.STRD)
#define	PPG33_PCN2_REMP    	(IO_PPG33.PCN2.bit.REMP)
#define	PPG33_PCN2_SREMP    	(IO_PPG33.PCN2.bit.SREMP)
#define	PPG33_PCN2_IRS2    	(IO_PPG33.PCN2.bit.IRS2)
#define	PPG33_PSDR	(IO_PPG33.PSDR)
#define	PPG33_PTPC	(IO_PPG33.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG34,attr=IO,locate=0x1C90
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG34;

#define	PPG34_PCN			(IO_PPG34.PCN.hword)
#define	PPG34_PCN_CNTE    	(IO_PPG34.PCN.bit.CNTE)
#define	PPG34_PCN_STGR    	(IO_PPG34.PCN.bit.STGR)
#define	PPG34_PCN_MDSE    	(IO_PPG34.PCN.bit.MDSE)
#define	PPG34_PCN_RTRG    	(IO_PPG34.PCN.bit.RTRG)
#define	PPG34_PCN_CKS    	(IO_PPG34.PCN.bit.CKS)
#define	PPG34_PCN_PGMS    	(IO_PPG34.PCN.bit.PGMS)
#define	PPG34_PCN_OWFS    	(IO_PPG34.PCN.bit.OWFS)
#define	PPG34_PCN_EGS    	(IO_PPG34.PCN.bit.EGS)
#define	PPG34_PCN_IREN    	(IO_PPG34.PCN.bit.IREN)
#define	PPG34_PCN_IRQF    	(IO_PPG34.PCN.bit.IRQF)
#define	PPG34_PCN_IRS    	(IO_PPG34.PCN.bit.IRS)
#define	PPG34_PCN_OSEL    	(IO_PPG34.PCN.bit.OSEL)
#define	PPG34_PCSR	(IO_PPG34.PCSR)
#define	PPG34_PDUT	(IO_PPG34.PDUT)
#define	PPG34_PTMR	(IO_PPG34.PTMR)
#define	PPG34_PCN2			(IO_PPG34.PCN2.hword)
#define	PPG34_PCN2_LFPR    	(IO_PPG34.PCN2.bit.LFPR)
#define	PPG34_PCN2_HFPR    	(IO_PPG34.PCN2.bit.HFPR)
#define	PPG34_PCN2_CMDSEL    	(IO_PPG34.PCN2.bit.CMDSEL)
#define	PPG34_PCN2_CMD    	(IO_PPG34.PCN2.bit.CMD)
#define	PPG34_PCN2_TPC    	(IO_PPG34.PCN2.bit.TPC)
#define	PPG34_PCN2_STRD    	(IO_PPG34.PCN2.bit.STRD)
#define	PPG34_PCN2_REMP    	(IO_PPG34.PCN2.bit.REMP)
#define	PPG34_PCN2_SREMP    	(IO_PPG34.PCN2.bit.SREMP)
#define	PPG34_PCN2_IRS2    	(IO_PPG34.PCN2.bit.IRS2)
#define	PPG34_PSDR	(IO_PPG34.PSDR)
#define	PPG34_PTPC	(IO_PPG34.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG35,attr=IO,locate=0x1CA0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG35;

#define	PPG35_PCN			(IO_PPG35.PCN.hword)
#define	PPG35_PCN_CNTE    	(IO_PPG35.PCN.bit.CNTE)
#define	PPG35_PCN_STGR    	(IO_PPG35.PCN.bit.STGR)
#define	PPG35_PCN_MDSE    	(IO_PPG35.PCN.bit.MDSE)
#define	PPG35_PCN_RTRG    	(IO_PPG35.PCN.bit.RTRG)
#define	PPG35_PCN_CKS    	(IO_PPG35.PCN.bit.CKS)
#define	PPG35_PCN_PGMS    	(IO_PPG35.PCN.bit.PGMS)
#define	PPG35_PCN_OWFS    	(IO_PPG35.PCN.bit.OWFS)
#define	PPG35_PCN_EGS    	(IO_PPG35.PCN.bit.EGS)
#define	PPG35_PCN_IREN    	(IO_PPG35.PCN.bit.IREN)
#define	PPG35_PCN_IRQF    	(IO_PPG35.PCN.bit.IRQF)
#define	PPG35_PCN_IRS    	(IO_PPG35.PCN.bit.IRS)
#define	PPG35_PCN_OSEL    	(IO_PPG35.PCN.bit.OSEL)
#define	PPG35_PCSR	(IO_PPG35.PCSR)
#define	PPG35_PDUT	(IO_PPG35.PDUT)
#define	PPG35_PTMR	(IO_PPG35.PTMR)
#define	PPG35_PCN2			(IO_PPG35.PCN2.hword)
#define	PPG35_PCN2_LFPR    	(IO_PPG35.PCN2.bit.LFPR)
#define	PPG35_PCN2_HFPR    	(IO_PPG35.PCN2.bit.HFPR)
#define	PPG35_PCN2_CMDSEL    	(IO_PPG35.PCN2.bit.CMDSEL)
#define	PPG35_PCN2_CMD    	(IO_PPG35.PCN2.bit.CMD)
#define	PPG35_PCN2_TPC    	(IO_PPG35.PCN2.bit.TPC)
#define	PPG35_PCN2_STRD    	(IO_PPG35.PCN2.bit.STRD)
#define	PPG35_PCN2_REMP    	(IO_PPG35.PCN2.bit.REMP)
#define	PPG35_PCN2_SREMP    	(IO_PPG35.PCN2.bit.SREMP)
#define	PPG35_PCN2_IRS2    	(IO_PPG35.PCN2.bit.IRS2)
#define	PPG35_PSDR	(IO_PPG35.PSDR)
#define	PPG35_PTPC	(IO_PPG35.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG36,attr=IO,locate=0x1CB0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG36;

#define	PPG36_PCN			(IO_PPG36.PCN.hword)
#define	PPG36_PCN_CNTE    	(IO_PPG36.PCN.bit.CNTE)
#define	PPG36_PCN_STGR    	(IO_PPG36.PCN.bit.STGR)
#define	PPG36_PCN_MDSE    	(IO_PPG36.PCN.bit.MDSE)
#define	PPG36_PCN_RTRG    	(IO_PPG36.PCN.bit.RTRG)
#define	PPG36_PCN_CKS    	(IO_PPG36.PCN.bit.CKS)
#define	PPG36_PCN_PGMS    	(IO_PPG36.PCN.bit.PGMS)
#define	PPG36_PCN_OWFS    	(IO_PPG36.PCN.bit.OWFS)
#define	PPG36_PCN_EGS    	(IO_PPG36.PCN.bit.EGS)
#define	PPG36_PCN_IREN    	(IO_PPG36.PCN.bit.IREN)
#define	PPG36_PCN_IRQF    	(IO_PPG36.PCN.bit.IRQF)
#define	PPG36_PCN_IRS    	(IO_PPG36.PCN.bit.IRS)
#define	PPG36_PCN_OSEL    	(IO_PPG36.PCN.bit.OSEL)
#define	PPG36_PCSR	(IO_PPG36.PCSR)
#define	PPG36_PDUT	(IO_PPG36.PDUT)
#define	PPG36_PTMR	(IO_PPG36.PTMR)
#define	PPG36_PCN2			(IO_PPG36.PCN2.hword)
#define	PPG36_PCN2_LFPR    	(IO_PPG36.PCN2.bit.LFPR)
#define	PPG36_PCN2_HFPR    	(IO_PPG36.PCN2.bit.HFPR)
#define	PPG36_PCN2_CMDSEL    	(IO_PPG36.PCN2.bit.CMDSEL)
#define	PPG36_PCN2_CMD    	(IO_PPG36.PCN2.bit.CMD)
#define	PPG36_PCN2_TPC    	(IO_PPG36.PCN2.bit.TPC)
#define	PPG36_PCN2_STRD    	(IO_PPG36.PCN2.bit.STRD)
#define	PPG36_PCN2_REMP    	(IO_PPG36.PCN2.bit.REMP)
#define	PPG36_PCN2_SREMP    	(IO_PPG36.PCN2.bit.SREMP)
#define	PPG36_PCN2_IRS2    	(IO_PPG36.PCN2.bit.IRS2)
#define	PPG36_PSDR	(IO_PPG36.PSDR)
#define	PPG36_PTPC	(IO_PPG36.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG37,attr=IO,locate=0x1CC0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG37;

#define	PPG37_PCN			(IO_PPG37.PCN.hword)
#define	PPG37_PCN_CNTE    	(IO_PPG37.PCN.bit.CNTE)
#define	PPG37_PCN_STGR    	(IO_PPG37.PCN.bit.STGR)
#define	PPG37_PCN_MDSE    	(IO_PPG37.PCN.bit.MDSE)
#define	PPG37_PCN_RTRG    	(IO_PPG37.PCN.bit.RTRG)
#define	PPG37_PCN_CKS    	(IO_PPG37.PCN.bit.CKS)
#define	PPG37_PCN_PGMS    	(IO_PPG37.PCN.bit.PGMS)
#define	PPG37_PCN_OWFS    	(IO_PPG37.PCN.bit.OWFS)
#define	PPG37_PCN_EGS    	(IO_PPG37.PCN.bit.EGS)
#define	PPG37_PCN_IREN    	(IO_PPG37.PCN.bit.IREN)
#define	PPG37_PCN_IRQF    	(IO_PPG37.PCN.bit.IRQF)
#define	PPG37_PCN_IRS    	(IO_PPG37.PCN.bit.IRS)
#define	PPG37_PCN_OSEL    	(IO_PPG37.PCN.bit.OSEL)
#define	PPG37_PCSR	(IO_PPG37.PCSR)
#define	PPG37_PDUT	(IO_PPG37.PDUT)
#define	PPG37_PTMR	(IO_PPG37.PTMR)
#define	PPG37_PCN2			(IO_PPG37.PCN2.hword)
#define	PPG37_PCN2_LFPR    	(IO_PPG37.PCN2.bit.LFPR)
#define	PPG37_PCN2_HFPR    	(IO_PPG37.PCN2.bit.HFPR)
#define	PPG37_PCN2_CMDSEL    	(IO_PPG37.PCN2.bit.CMDSEL)
#define	PPG37_PCN2_CMD    	(IO_PPG37.PCN2.bit.CMD)
#define	PPG37_PCN2_TPC    	(IO_PPG37.PCN2.bit.TPC)
#define	PPG37_PCN2_STRD    	(IO_PPG37.PCN2.bit.STRD)
#define	PPG37_PCN2_REMP    	(IO_PPG37.PCN2.bit.REMP)
#define	PPG37_PCN2_SREMP    	(IO_PPG37.PCN2.bit.SREMP)
#define	PPG37_PCN2_IRS2    	(IO_PPG37.PCN2.bit.IRS2)
#define	PPG37_PSDR	(IO_PPG37.PSDR)
#define	PPG37_PTPC	(IO_PPG37.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG38,attr=IO,locate=0x1CD0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG38;

#define	PPG38_PCN			(IO_PPG38.PCN.hword)
#define	PPG38_PCN_CNTE    	(IO_PPG38.PCN.bit.CNTE)
#define	PPG38_PCN_STGR    	(IO_PPG38.PCN.bit.STGR)
#define	PPG38_PCN_MDSE    	(IO_PPG38.PCN.bit.MDSE)
#define	PPG38_PCN_RTRG    	(IO_PPG38.PCN.bit.RTRG)
#define	PPG38_PCN_CKS    	(IO_PPG38.PCN.bit.CKS)
#define	PPG38_PCN_PGMS    	(IO_PPG38.PCN.bit.PGMS)
#define	PPG38_PCN_OWFS    	(IO_PPG38.PCN.bit.OWFS)
#define	PPG38_PCN_EGS    	(IO_PPG38.PCN.bit.EGS)
#define	PPG38_PCN_IREN    	(IO_PPG38.PCN.bit.IREN)
#define	PPG38_PCN_IRQF    	(IO_PPG38.PCN.bit.IRQF)
#define	PPG38_PCN_IRS    	(IO_PPG38.PCN.bit.IRS)
#define	PPG38_PCN_OSEL    	(IO_PPG38.PCN.bit.OSEL)
#define	PPG38_PCSR	(IO_PPG38.PCSR)
#define	PPG38_PDUT	(IO_PPG38.PDUT)
#define	PPG38_PTMR	(IO_PPG38.PTMR)
#define	PPG38_PCN2			(IO_PPG38.PCN2.hword)
#define	PPG38_PCN2_LFPR    	(IO_PPG38.PCN2.bit.LFPR)
#define	PPG38_PCN2_HFPR    	(IO_PPG38.PCN2.bit.HFPR)
#define	PPG38_PCN2_CMDSEL    	(IO_PPG38.PCN2.bit.CMDSEL)
#define	PPG38_PCN2_CMD    	(IO_PPG38.PCN2.bit.CMD)
#define	PPG38_PCN2_TPC    	(IO_PPG38.PCN2.bit.TPC)
#define	PPG38_PCN2_STRD    	(IO_PPG38.PCN2.bit.STRD)
#define	PPG38_PCN2_REMP    	(IO_PPG38.PCN2.bit.REMP)
#define	PPG38_PCN2_SREMP    	(IO_PPG38.PCN2.bit.SREMP)
#define	PPG38_PCN2_IRS2    	(IO_PPG38.PCN2.bit.IRS2)
#define	PPG38_PSDR	(IO_PPG38.PSDR)
#define	PPG38_PTPC	(IO_PPG38.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG39,attr=IO,locate=0x1CE0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG39;

#define	PPG39_PCN			(IO_PPG39.PCN.hword)
#define	PPG39_PCN_CNTE    	(IO_PPG39.PCN.bit.CNTE)
#define	PPG39_PCN_STGR    	(IO_PPG39.PCN.bit.STGR)
#define	PPG39_PCN_MDSE    	(IO_PPG39.PCN.bit.MDSE)
#define	PPG39_PCN_RTRG    	(IO_PPG39.PCN.bit.RTRG)
#define	PPG39_PCN_CKS    	(IO_PPG39.PCN.bit.CKS)
#define	PPG39_PCN_PGMS    	(IO_PPG39.PCN.bit.PGMS)
#define	PPG39_PCN_OWFS    	(IO_PPG39.PCN.bit.OWFS)
#define	PPG39_PCN_EGS    	(IO_PPG39.PCN.bit.EGS)
#define	PPG39_PCN_IREN    	(IO_PPG39.PCN.bit.IREN)
#define	PPG39_PCN_IRQF    	(IO_PPG39.PCN.bit.IRQF)
#define	PPG39_PCN_IRS    	(IO_PPG39.PCN.bit.IRS)
#define	PPG39_PCN_OSEL    	(IO_PPG39.PCN.bit.OSEL)
#define	PPG39_PCSR	(IO_PPG39.PCSR)
#define	PPG39_PDUT	(IO_PPG39.PDUT)
#define	PPG39_PTMR	(IO_PPG39.PTMR)
#define	PPG39_PCN2			(IO_PPG39.PCN2.hword)
#define	PPG39_PCN2_LFPR    	(IO_PPG39.PCN2.bit.LFPR)
#define	PPG39_PCN2_HFPR    	(IO_PPG39.PCN2.bit.HFPR)
#define	PPG39_PCN2_CMDSEL    	(IO_PPG39.PCN2.bit.CMDSEL)
#define	PPG39_PCN2_CMD    	(IO_PPG39.PCN2.bit.CMD)
#define	PPG39_PCN2_TPC    	(IO_PPG39.PCN2.bit.TPC)
#define	PPG39_PCN2_STRD    	(IO_PPG39.PCN2.bit.STRD)
#define	PPG39_PCN2_REMP    	(IO_PPG39.PCN2.bit.REMP)
#define	PPG39_PCN2_SREMP    	(IO_PPG39.PCN2.bit.SREMP)
#define	PPG39_PCN2_IRS2    	(IO_PPG39.PCN2.bit.IRS2)
#define	PPG39_PSDR	(IO_PPG39.PSDR)
#define	PPG39_PTPC	(IO_PPG39.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG40,attr=IO,locate=0x1CF0
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG40;

#define	PPG40_PCN			(IO_PPG40.PCN.hword)
#define	PPG40_PCN_CNTE    	(IO_PPG40.PCN.bit.CNTE)
#define	PPG40_PCN_STGR    	(IO_PPG40.PCN.bit.STGR)
#define	PPG40_PCN_MDSE    	(IO_PPG40.PCN.bit.MDSE)
#define	PPG40_PCN_RTRG    	(IO_PPG40.PCN.bit.RTRG)
#define	PPG40_PCN_CKS    	(IO_PPG40.PCN.bit.CKS)
#define	PPG40_PCN_PGMS    	(IO_PPG40.PCN.bit.PGMS)
#define	PPG40_PCN_OWFS    	(IO_PPG40.PCN.bit.OWFS)
#define	PPG40_PCN_EGS    	(IO_PPG40.PCN.bit.EGS)
#define	PPG40_PCN_IREN    	(IO_PPG40.PCN.bit.IREN)
#define	PPG40_PCN_IRQF    	(IO_PPG40.PCN.bit.IRQF)
#define	PPG40_PCN_IRS    	(IO_PPG40.PCN.bit.IRS)
#define	PPG40_PCN_OSEL    	(IO_PPG40.PCN.bit.OSEL)
#define	PPG40_PCSR	(IO_PPG40.PCSR)
#define	PPG40_PDUT	(IO_PPG40.PDUT)
#define	PPG40_PTMR	(IO_PPG40.PTMR)
#define	PPG40_PCN2			(IO_PPG40.PCN2.hword)
#define	PPG40_PCN2_LFPR    	(IO_PPG40.PCN2.bit.LFPR)
#define	PPG40_PCN2_HFPR    	(IO_PPG40.PCN2.bit.HFPR)
#define	PPG40_PCN2_CMDSEL    	(IO_PPG40.PCN2.bit.CMDSEL)
#define	PPG40_PCN2_CMD    	(IO_PPG40.PCN2.bit.CMD)
#define	PPG40_PCN2_TPC    	(IO_PPG40.PCN2.bit.TPC)
#define	PPG40_PCN2_STRD    	(IO_PPG40.PCN2.bit.STRD)
#define	PPG40_PCN2_REMP    	(IO_PPG40.PCN2.bit.REMP)
#define	PPG40_PCN2_SREMP    	(IO_PPG40.PCN2.bit.SREMP)
#define	PPG40_PCN2_IRS2    	(IO_PPG40.PCN2.bit.IRS2)
#define	PPG40_PSDR	(IO_PPG40.PSDR)
#define	PPG40_PTPC	(IO_PPG40.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG41,attr=IO,locate=0x1D00
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG41;

#define	PPG41_PCN			(IO_PPG41.PCN.hword)
#define	PPG41_PCN_CNTE    	(IO_PPG41.PCN.bit.CNTE)
#define	PPG41_PCN_STGR    	(IO_PPG41.PCN.bit.STGR)
#define	PPG41_PCN_MDSE    	(IO_PPG41.PCN.bit.MDSE)
#define	PPG41_PCN_RTRG    	(IO_PPG41.PCN.bit.RTRG)
#define	PPG41_PCN_CKS    	(IO_PPG41.PCN.bit.CKS)
#define	PPG41_PCN_PGMS    	(IO_PPG41.PCN.bit.PGMS)
#define	PPG41_PCN_OWFS    	(IO_PPG41.PCN.bit.OWFS)
#define	PPG41_PCN_EGS    	(IO_PPG41.PCN.bit.EGS)
#define	PPG41_PCN_IREN    	(IO_PPG41.PCN.bit.IREN)
#define	PPG41_PCN_IRQF    	(IO_PPG41.PCN.bit.IRQF)
#define	PPG41_PCN_IRS    	(IO_PPG41.PCN.bit.IRS)
#define	PPG41_PCN_OSEL    	(IO_PPG41.PCN.bit.OSEL)
#define	PPG41_PCSR	(IO_PPG41.PCSR)
#define	PPG41_PDUT	(IO_PPG41.PDUT)
#define	PPG41_PTMR	(IO_PPG41.PTMR)
#define	PPG41_PCN2			(IO_PPG41.PCN2.hword)
#define	PPG41_PCN2_LFPR    	(IO_PPG41.PCN2.bit.LFPR)
#define	PPG41_PCN2_HFPR    	(IO_PPG41.PCN2.bit.HFPR)
#define	PPG41_PCN2_CMDSEL    	(IO_PPG41.PCN2.bit.CMDSEL)
#define	PPG41_PCN2_CMD    	(IO_PPG41.PCN2.bit.CMD)
#define	PPG41_PCN2_TPC    	(IO_PPG41.PCN2.bit.TPC)
#define	PPG41_PCN2_STRD    	(IO_PPG41.PCN2.bit.STRD)
#define	PPG41_PCN2_REMP    	(IO_PPG41.PCN2.bit.REMP)
#define	PPG41_PCN2_SREMP    	(IO_PPG41.PCN2.bit.SREMP)
#define	PPG41_PCN2_IRS2    	(IO_PPG41.PCN2.bit.IRS2)
#define	PPG41_PSDR	(IO_PPG41.PSDR)
#define	PPG41_PTPC	(IO_PPG41.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG42,attr=IO,locate=0x1D10
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG42;

#define	PPG42_PCN			(IO_PPG42.PCN.hword)
#define	PPG42_PCN_CNTE    	(IO_PPG42.PCN.bit.CNTE)
#define	PPG42_PCN_STGR    	(IO_PPG42.PCN.bit.STGR)
#define	PPG42_PCN_MDSE    	(IO_PPG42.PCN.bit.MDSE)
#define	PPG42_PCN_RTRG    	(IO_PPG42.PCN.bit.RTRG)
#define	PPG42_PCN_CKS    	(IO_PPG42.PCN.bit.CKS)
#define	PPG42_PCN_PGMS    	(IO_PPG42.PCN.bit.PGMS)
#define	PPG42_PCN_OWFS    	(IO_PPG42.PCN.bit.OWFS)
#define	PPG42_PCN_EGS    	(IO_PPG42.PCN.bit.EGS)
#define	PPG42_PCN_IREN    	(IO_PPG42.PCN.bit.IREN)
#define	PPG42_PCN_IRQF    	(IO_PPG42.PCN.bit.IRQF)
#define	PPG42_PCN_IRS    	(IO_PPG42.PCN.bit.IRS)
#define	PPG42_PCN_OSEL    	(IO_PPG42.PCN.bit.OSEL)
#define	PPG42_PCSR	(IO_PPG42.PCSR)
#define	PPG42_PDUT	(IO_PPG42.PDUT)
#define	PPG42_PTMR	(IO_PPG42.PTMR)
#define	PPG42_PCN2			(IO_PPG42.PCN2.hword)
#define	PPG42_PCN2_LFPR    	(IO_PPG42.PCN2.bit.LFPR)
#define	PPG42_PCN2_HFPR    	(IO_PPG42.PCN2.bit.HFPR)
#define	PPG42_PCN2_CMDSEL    	(IO_PPG42.PCN2.bit.CMDSEL)
#define	PPG42_PCN2_CMD    	(IO_PPG42.PCN2.bit.CMD)
#define	PPG42_PCN2_TPC    	(IO_PPG42.PCN2.bit.TPC)
#define	PPG42_PCN2_STRD    	(IO_PPG42.PCN2.bit.STRD)
#define	PPG42_PCN2_REMP    	(IO_PPG42.PCN2.bit.REMP)
#define	PPG42_PCN2_SREMP    	(IO_PPG42.PCN2.bit.SREMP)
#define	PPG42_PCN2_IRS2    	(IO_PPG42.PCN2.bit.IRS2)
#define	PPG42_PSDR	(IO_PPG42.PSDR)
#define	PPG42_PTPC	(IO_PPG42.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG43,attr=IO,locate=0x1D20
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG43;

#define	PPG43_PCN			(IO_PPG43.PCN.hword)
#define	PPG43_PCN_CNTE    	(IO_PPG43.PCN.bit.CNTE)
#define	PPG43_PCN_STGR    	(IO_PPG43.PCN.bit.STGR)
#define	PPG43_PCN_MDSE    	(IO_PPG43.PCN.bit.MDSE)
#define	PPG43_PCN_RTRG    	(IO_PPG43.PCN.bit.RTRG)
#define	PPG43_PCN_CKS    	(IO_PPG43.PCN.bit.CKS)
#define	PPG43_PCN_PGMS    	(IO_PPG43.PCN.bit.PGMS)
#define	PPG43_PCN_OWFS    	(IO_PPG43.PCN.bit.OWFS)
#define	PPG43_PCN_EGS    	(IO_PPG43.PCN.bit.EGS)
#define	PPG43_PCN_IREN    	(IO_PPG43.PCN.bit.IREN)
#define	PPG43_PCN_IRQF    	(IO_PPG43.PCN.bit.IRQF)
#define	PPG43_PCN_IRS    	(IO_PPG43.PCN.bit.IRS)
#define	PPG43_PCN_OSEL    	(IO_PPG43.PCN.bit.OSEL)
#define	PPG43_PCSR	(IO_PPG43.PCSR)
#define	PPG43_PDUT	(IO_PPG43.PDUT)
#define	PPG43_PTMR	(IO_PPG43.PTMR)
#define	PPG43_PCN2			(IO_PPG43.PCN2.hword)
#define	PPG43_PCN2_LFPR    	(IO_PPG43.PCN2.bit.LFPR)
#define	PPG43_PCN2_HFPR    	(IO_PPG43.PCN2.bit.HFPR)
#define	PPG43_PCN2_CMDSEL    	(IO_PPG43.PCN2.bit.CMDSEL)
#define	PPG43_PCN2_CMD    	(IO_PPG43.PCN2.bit.CMD)
#define	PPG43_PCN2_TPC    	(IO_PPG43.PCN2.bit.TPC)
#define	PPG43_PCN2_STRD    	(IO_PPG43.PCN2.bit.STRD)
#define	PPG43_PCN2_REMP    	(IO_PPG43.PCN2.bit.REMP)
#define	PPG43_PCN2_SREMP    	(IO_PPG43.PCN2.bit.SREMP)
#define	PPG43_PCN2_IRS2    	(IO_PPG43.PCN2.bit.IRS2)
#define	PPG43_PSDR	(IO_PPG43.PSDR)
#define	PPG43_PTPC	(IO_PPG43.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG44,attr=IO,locate=0x1D30
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG44;

#define	PPG44_PCN			(IO_PPG44.PCN.hword)
#define	PPG44_PCN_CNTE    	(IO_PPG44.PCN.bit.CNTE)
#define	PPG44_PCN_STGR    	(IO_PPG44.PCN.bit.STGR)
#define	PPG44_PCN_MDSE    	(IO_PPG44.PCN.bit.MDSE)
#define	PPG44_PCN_RTRG    	(IO_PPG44.PCN.bit.RTRG)
#define	PPG44_PCN_CKS    	(IO_PPG44.PCN.bit.CKS)
#define	PPG44_PCN_PGMS    	(IO_PPG44.PCN.bit.PGMS)
#define	PPG44_PCN_OWFS    	(IO_PPG44.PCN.bit.OWFS)
#define	PPG44_PCN_EGS    	(IO_PPG44.PCN.bit.EGS)
#define	PPG44_PCN_IREN    	(IO_PPG44.PCN.bit.IREN)
#define	PPG44_PCN_IRQF    	(IO_PPG44.PCN.bit.IRQF)
#define	PPG44_PCN_IRS    	(IO_PPG44.PCN.bit.IRS)
#define	PPG44_PCN_OSEL    	(IO_PPG44.PCN.bit.OSEL)
#define	PPG44_PCSR	(IO_PPG44.PCSR)
#define	PPG44_PDUT	(IO_PPG44.PDUT)
#define	PPG44_PTMR	(IO_PPG44.PTMR)
#define	PPG44_PCN2			(IO_PPG44.PCN2.hword)
#define	PPG44_PCN2_LFPR    	(IO_PPG44.PCN2.bit.LFPR)
#define	PPG44_PCN2_HFPR    	(IO_PPG44.PCN2.bit.HFPR)
#define	PPG44_PCN2_CMDSEL    	(IO_PPG44.PCN2.bit.CMDSEL)
#define	PPG44_PCN2_CMD    	(IO_PPG44.PCN2.bit.CMD)
#define	PPG44_PCN2_TPC    	(IO_PPG44.PCN2.bit.TPC)
#define	PPG44_PCN2_STRD    	(IO_PPG44.PCN2.bit.STRD)
#define	PPG44_PCN2_REMP    	(IO_PPG44.PCN2.bit.REMP)
#define	PPG44_PCN2_SREMP    	(IO_PPG44.PCN2.bit.SREMP)
#define	PPG44_PCN2_IRS2    	(IO_PPG44.PCN2.bit.IRS2)
#define	PPG44_PSDR	(IO_PPG44.PSDR)
#define	PPG44_PTPC	(IO_PPG44.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG45,attr=IO,locate=0x1D40
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG45;

#define	PPG45_PCN			(IO_PPG45.PCN.hword)
#define	PPG45_PCN_CNTE    	(IO_PPG45.PCN.bit.CNTE)
#define	PPG45_PCN_STGR    	(IO_PPG45.PCN.bit.STGR)
#define	PPG45_PCN_MDSE    	(IO_PPG45.PCN.bit.MDSE)
#define	PPG45_PCN_RTRG    	(IO_PPG45.PCN.bit.RTRG)
#define	PPG45_PCN_CKS    	(IO_PPG45.PCN.bit.CKS)
#define	PPG45_PCN_PGMS    	(IO_PPG45.PCN.bit.PGMS)
#define	PPG45_PCN_OWFS    	(IO_PPG45.PCN.bit.OWFS)
#define	PPG45_PCN_EGS    	(IO_PPG45.PCN.bit.EGS)
#define	PPG45_PCN_IREN    	(IO_PPG45.PCN.bit.IREN)
#define	PPG45_PCN_IRQF    	(IO_PPG45.PCN.bit.IRQF)
#define	PPG45_PCN_IRS    	(IO_PPG45.PCN.bit.IRS)
#define	PPG45_PCN_OSEL    	(IO_PPG45.PCN.bit.OSEL)
#define	PPG45_PCSR	(IO_PPG45.PCSR)
#define	PPG45_PDUT	(IO_PPG45.PDUT)
#define	PPG45_PTMR	(IO_PPG45.PTMR)
#define	PPG45_PCN2			(IO_PPG45.PCN2.hword)
#define	PPG45_PCN2_LFPR    	(IO_PPG45.PCN2.bit.LFPR)
#define	PPG45_PCN2_HFPR    	(IO_PPG45.PCN2.bit.HFPR)
#define	PPG45_PCN2_CMDSEL    	(IO_PPG45.PCN2.bit.CMDSEL)
#define	PPG45_PCN2_CMD    	(IO_PPG45.PCN2.bit.CMD)
#define	PPG45_PCN2_TPC    	(IO_PPG45.PCN2.bit.TPC)
#define	PPG45_PCN2_STRD    	(IO_PPG45.PCN2.bit.STRD)
#define	PPG45_PCN2_REMP    	(IO_PPG45.PCN2.bit.REMP)
#define	PPG45_PCN2_SREMP    	(IO_PPG45.PCN2.bit.SREMP)
#define	PPG45_PCN2_IRS2    	(IO_PPG45.PCN2.bit.IRS2)
#define	PPG45_PSDR	(IO_PPG45.PSDR)
#define	PPG45_PTPC	(IO_PPG45.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG46,attr=IO,locate=0x1D50
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG46;

#define	PPG46_PCN			(IO_PPG46.PCN.hword)
#define	PPG46_PCN_CNTE    	(IO_PPG46.PCN.bit.CNTE)
#define	PPG46_PCN_STGR    	(IO_PPG46.PCN.bit.STGR)
#define	PPG46_PCN_MDSE    	(IO_PPG46.PCN.bit.MDSE)
#define	PPG46_PCN_RTRG    	(IO_PPG46.PCN.bit.RTRG)
#define	PPG46_PCN_CKS    	(IO_PPG46.PCN.bit.CKS)
#define	PPG46_PCN_PGMS    	(IO_PPG46.PCN.bit.PGMS)
#define	PPG46_PCN_OWFS    	(IO_PPG46.PCN.bit.OWFS)
#define	PPG46_PCN_EGS    	(IO_PPG46.PCN.bit.EGS)
#define	PPG46_PCN_IREN    	(IO_PPG46.PCN.bit.IREN)
#define	PPG46_PCN_IRQF    	(IO_PPG46.PCN.bit.IRQF)
#define	PPG46_PCN_IRS    	(IO_PPG46.PCN.bit.IRS)
#define	PPG46_PCN_OSEL    	(IO_PPG46.PCN.bit.OSEL)
#define	PPG46_PCSR	(IO_PPG46.PCSR)
#define	PPG46_PDUT	(IO_PPG46.PDUT)
#define	PPG46_PTMR	(IO_PPG46.PTMR)
#define	PPG46_PCN2			(IO_PPG46.PCN2.hword)
#define	PPG46_PCN2_LFPR    	(IO_PPG46.PCN2.bit.LFPR)
#define	PPG46_PCN2_HFPR    	(IO_PPG46.PCN2.bit.HFPR)
#define	PPG46_PCN2_CMDSEL    	(IO_PPG46.PCN2.bit.CMDSEL)
#define	PPG46_PCN2_CMD    	(IO_PPG46.PCN2.bit.CMD)
#define	PPG46_PCN2_TPC    	(IO_PPG46.PCN2.bit.TPC)
#define	PPG46_PCN2_STRD    	(IO_PPG46.PCN2.bit.STRD)
#define	PPG46_PCN2_REMP    	(IO_PPG46.PCN2.bit.REMP)
#define	PPG46_PCN2_SREMP    	(IO_PPG46.PCN2.bit.SREMP)
#define	PPG46_PCN2_IRS2    	(IO_PPG46.PCN2.bit.IRS2)
#define	PPG46_PSDR	(IO_PPG46.PSDR)
#define	PPG46_PTPC	(IO_PPG46.PTPC)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PPG47,attr=IO,locate=0x1D60
#endif

__IO_EXTENDED	PPGBSTR	IO_PPG47;

#define	PPG47_PCN			(IO_PPG47.PCN.hword)
#define	PPG47_PCN_CNTE    	(IO_PPG47.PCN.bit.CNTE)
#define	PPG47_PCN_STGR    	(IO_PPG47.PCN.bit.STGR)
#define	PPG47_PCN_MDSE    	(IO_PPG47.PCN.bit.MDSE)
#define	PPG47_PCN_RTRG    	(IO_PPG47.PCN.bit.RTRG)
#define	PPG47_PCN_CKS    	(IO_PPG47.PCN.bit.CKS)
#define	PPG47_PCN_PGMS    	(IO_PPG47.PCN.bit.PGMS)
#define	PPG47_PCN_OWFS    	(IO_PPG47.PCN.bit.OWFS)
#define	PPG47_PCN_EGS    	(IO_PPG47.PCN.bit.EGS)
#define	PPG47_PCN_IREN    	(IO_PPG47.PCN.bit.IREN)
#define	PPG47_PCN_IRQF    	(IO_PPG47.PCN.bit.IRQF)
#define	PPG47_PCN_IRS    	(IO_PPG47.PCN.bit.IRS)
#define	PPG47_PCN_OSEL    	(IO_PPG47.PCN.bit.OSEL)
#define	PPG47_PCSR	(IO_PPG47.PCSR)
#define	PPG47_PDUT	(IO_PPG47.PDUT)
#define	PPG47_PTMR	(IO_PPG47.PTMR)
#define	PPG47_PCN2			(IO_PPG47.PCN2.hword)
#define	PPG47_PCN2_LFPR    	(IO_PPG47.PCN2.bit.LFPR)
#define	PPG47_PCN2_HFPR    	(IO_PPG47.PCN2.bit.HFPR)
#define	PPG47_PCN2_CMDSEL    	(IO_PPG47.PCN2.bit.CMDSEL)
#define	PPG47_PCN2_CMD    	(IO_PPG47.PCN2.bit.CMD)
#define	PPG47_PCN2_TPC    	(IO_PPG47.PCN2.bit.TPC)
#define	PPG47_PCN2_STRD    	(IO_PPG47.PCN2.bit.STRD)
#define	PPG47_PCN2_REMP    	(IO_PPG47.PCN2.bit.REMP)
#define	PPG47_PCN2_SREMP    	(IO_PPG47.PCN2.bit.SREMP)
#define	PPG47_PCN2_IRS2    	(IO_PPG47.PCN2.bit.IRS2)
#define	PPG47_PSDR	(IO_PPG47.PSDR)
#define	PPG47_PTPC	(IO_PPG47.PTPC)

/*CAN(0-3) definition*/
typedef struct
{
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	CTRLRH;
            __BYTE	CTRLRL;
        } byte;
        struct
        {
            __HWORD	RESV00:1;
            __HWORD	RESV01:1;
            __HWORD	RESV02:1;
            __HWORD	RESV03:1;
            __HWORD	RESV04:1;
            __HWORD	RESV05:1;
            __HWORD	RESV06:1;
            __HWORD	RESV07:1;
            __HWORD	Test:1;
            __HWORD	CCE:1;
            __HWORD	DAR:1;
            __HWORD	RESV011:1;
            __HWORD	EIE:1;
            __HWORD	SIE:1;
            __HWORD	IE:1;
            __HWORD	Init:1;
        } bit;
    } CTRLR;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	STATRH;
            __BYTE	STATRL;
        } byte;
        struct
        {
            __HWORD	RESV20:1;
            __HWORD	RESV21:1;
            __HWORD	RESV22:1;
            __HWORD	RESV23:1;
            __HWORD	RESV24:1;
            __HWORD	RESV25:1;
            __HWORD	RESV26:1;
            __HWORD	RESV27:1;
            __HWORD	BOff:1;
            __HWORD	EWarn:1;
            __HWORD	EPass:1;
            __HWORD	RxOk:1;
            __HWORD	TxOk:1;
            __HWORD	LEC:3;
        } bit;
    } STATR;
    const union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	ERRCNTH;
            __BYTE	ERRCNTL;
        } byte;
        struct
        {
            __HWORD	RP:1;
            __HWORD	REC:7;
            __HWORD	TEC:8;
        } bit;
    } ERRCNT;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	BTRH;
            __BYTE	BTRL;
        } byte;
        struct
        {
            __HWORD	RESV60:1;
            __HWORD	TSeg2:3;
            __HWORD	TSeg1:4;
            __HWORD	SJW:2;
            __HWORD	BRP:6;
        } bit;
    } BTR;
    const union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	INTRH;
            __BYTE	INTRL;
        } byte;
    } INTR;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	TESTRH;
            __BYTE	TESTRL;
        } byte;
        struct
        {
            __HWORD	RESV100:1;
            __HWORD	RESV101:1;
            __HWORD	RESV102:1;
            __HWORD	RESV103:1;
            __HWORD	RESV104:1;
            __HWORD	RESV105:1;
            __HWORD	RESV106:1;
            __HWORD	RESV107:1;
            __HWORD	Rx:1;
            __HWORD	Tx:2;
            __HWORD	LBack:1;
            __HWORD	Silent:1;
            __HWORD	Basic:1;
            __HWORD	RESV1013:1;
            __HWORD	RESV1014:1;
        } bit;
    } TESTR;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	BRPERH;
            __BYTE	BRPERL;
        } byte;
        struct
        {
            __HWORD	RESV120:1;
            __HWORD	RESV121:1;
            __HWORD	RESV122:1;
            __HWORD	RESV123:1;
            __HWORD	RESV124:1;
            __HWORD	RESV125:1;
            __HWORD	RESV126:1;
            __HWORD	RESV127:1;
            __HWORD	RESV128:1;
            __HWORD	RESV129:1;
            __HWORD	RESV1210:1;
            __HWORD	RESV1211:1;
            __HWORD	BRPE:4;
        } bit;
    } BRPER;
    __HWORD	IO_RESV1;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF1CREQH;
            __BYTE	IF1CREQL;
        } byte;
        struct
        {
            __HWORD	BUSY:1;
            __HWORD	RESV161:1;
            __HWORD	RESV162:1;
            __HWORD	RESV163:1;
            __HWORD	RESV164:1;
            __HWORD	RESV165:1;
            __HWORD	RESV166:1;
            __HWORD	RESV167:1;
            __HWORD	MN:8;
        } bit;
    } IF1CREQ;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF1CMSKH;
            __BYTE	IF1CMSKL;
        } byte;
        struct
        {
            __HWORD	RESV180:1;
            __HWORD	RESV181:1;
            __HWORD	RESV182:1;
            __HWORD	RESV183:1;
            __HWORD	RESV184:1;
            __HWORD	RESV185:1;
            __HWORD	RESV186:1;
            __HWORD	RESV187:1;
            __HWORD	WR_RD:1;
            __HWORD	Mask:1;
            __HWORD	Arb:1;
            __HWORD	Control:1;
            __HWORD	CIP:1;
            __HWORD	TxReq:1;
            __HWORD	DataA:1;
            __HWORD	DataB:1;
        } bit;
    } IF1CMSK;
    union
    {
        __WORD	word;
        struct
        {
            __HWORD	IF1MSK2;
            __HWORD	IF1MSK1;
        } hword;
        struct
        {
            __BYTE	IF1MSK2H;
            __BYTE	IF1MSK2L;
            __BYTE	IF1MSK1H;
            __BYTE	IF1MSK1L;
        } byte;
        struct
        {
            __WORD	MXtd:1;
            __WORD	MDir:1;
            __WORD	RESV202:1;
            __WORD	Msk:29;
        } bit;
    } IF1MSK;
    union
    {
        __WORD	word;
        struct
        {
            __HWORD	IF1ARB2;
            __HWORD	IF1ARB1;
        } hword;
        struct
        {
            __BYTE	IF1ARB2H;
            __BYTE	IF1ARB2L;
            __BYTE	IF1ARB1H;
            __BYTE	IF1ARB1L;
        } byte;
        struct
        {
            __WORD	MsgVal:1;
            __WORD	Xtd:1;
            __WORD	Dir:1;
            __WORD	ID:29;
        } bit;
    } IF1ARB;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF1MCTRH;
            __BYTE	IF1MCTRL;
        } byte;
        struct
        {
            __HWORD	NewDat:1;
            __HWORD	MsgLst:1;
            __HWORD	IntPnd:1;
            __HWORD	UMask:1;
            __HWORD	TxIE:1;
            __HWORD	RxIE:1;
            __HWORD	RmtEn:1;
            __HWORD	TxRqst:1;
            __HWORD	EoB:1;
            __HWORD	RESV289:1;
            __HWORD	RESV2810:1;
            __HWORD	RESV2811:1;
            __HWORD	DLC:4;
        } bit;
    } IF1MCTR;
    __HWORD	IO_RESV2;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF1DTA1H;
            __BYTE	IF1DTA1L;
        } byte;
    } IF1DTA1;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF1DTA2H;
            __BYTE	IF1DTA2L;
        } byte;
    } IF1DTA2;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF1DTB1H;
            __BYTE	IF1DTB1L;
        } byte;
    } IF1DTB1;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF1DTB2H;
            __BYTE	IF1DTB2L;
        } byte;
    } IF1DTB2;
    __WORD	IO_RESV3[CONSTANT_2];
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF1DTA2_H;
            __BYTE	IF1DTA2_L;
        } byte;
    } IF1DTA2_;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF1DTA1_H;
            __BYTE	IF1DTA1_L;
        } byte;
    } IF1DTA1_;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF1DTB2_H;
            __BYTE	IF1DTB2_L;
        } byte;
    } IF1DTB2_;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF1DTB1_H;
            __BYTE	IF1DTB1_L;
        } byte;
    } IF1DTB1_;
    __WORD	IO_RESV4[CONSTANT_2];
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF2CREQH;
            __BYTE	IF2CREQL;
        } byte;
        struct
        {
            __HWORD	BUSY:1;
            __HWORD	RESV641:1;
            __HWORD	RESV642:1;
            __HWORD	RESV643:1;
            __HWORD	RESV644:1;
            __HWORD	RESV645:1;
            __HWORD	RESV646:1;
            __HWORD	RESV647:1;
            __HWORD	MN:8;
        } bit;
    } IF2CREQ;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF2CMSKH;
            __BYTE	IF2CMSKL;
        } byte;
        struct
        {
            __HWORD	RESV660:1;
            __HWORD	RESV661:1;
            __HWORD	RESV662:1;
            __HWORD	RESV663:1;
            __HWORD	RESV664:1;
            __HWORD	RESV665:1;
            __HWORD	RESV666:1;
            __HWORD	RESV667:1;
            __HWORD	WR_RD:1;
            __HWORD	Mask:1;
            __HWORD	Arb:1;
            __HWORD	Control:1;
            __HWORD	CIP:1;
            __HWORD	TxReq:1;
            __HWORD	DataA:1;
            __HWORD	DataB:1;
        } bit;
    } IF2CMSK;
    union
    {
        __WORD	word;
        struct
        {
            __HWORD	IF2MSK2;
            __HWORD	IF2MSK1;
        } hword;
        struct
        {
            __BYTE	IF2MSK2H;
            __BYTE	IF2MSK2L;
            __BYTE	IF2MSK1H;
            __BYTE	IF2MSK1L;
        } byte;
        struct
        {
            __WORD	MXtd:1;
            __WORD	MDir:1;
            __WORD	RESV682:1;
            __WORD	Msk:29;
        } bit;
    } IF2MSK;
    union
    {
        __WORD	word;
        struct
        {
            __HWORD	IF2ARB2;
            __HWORD	IF2ARB1;
        } hword;
        struct
        {
            __BYTE	IF2ARB2H;
            __BYTE	IF2ARB2L;
            __BYTE	IF2ARB1H;
            __BYTE	IF2ARB1L;
        } byte;
        struct
        {
            __WORD	MsgVal:1;
            __WORD	Xtd:1;
            __WORD	Dir:1;
            __WORD	ID:29;
        } bit;
    } IF2ARB;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF2MCTRH;
            __BYTE	IF2MCTRL;
        } byte;
        struct
        {
            __HWORD	NewDat:1;
            __HWORD	MsgLst:1;
            __HWORD	IntPnd:1;
            __HWORD	UMask:1;
            __HWORD	TxIE:1;
            __HWORD	RxIE:1;
            __HWORD	RmtEn:1;
            __HWORD	TxRqst:1;
            __HWORD	EoB:1;
            __HWORD	RESV769:1;
            __HWORD	RESV7610:1;
            __HWORD	RESV7611:1;
            __HWORD	DLC:4;
        } bit;
    } IF2MCTR;
    __HWORD	IO_RESV5;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF2DTA1H;
            __BYTE	IF2DTA1L;
        } byte;
    } IF2DTA1;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF2DTA2H;
            __BYTE	IF2DTA2L;
        } byte;
    } IF2DTA2;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF2DTB1H;
            __BYTE	IF2DTB1L;
        } byte;
    } IF2DTB1;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF2DTB2H;
            __BYTE	IF2DTB2L;
        } byte;
    } IF2DTB2;
    __WORD	IO_RESV6[CONSTANT_2];
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF2DTA2_H;
            __BYTE	IF2DTA2_L;
        } byte;
    } IF2DTA2_;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF2DTA1_H;
            __BYTE	IF2DTA1_L;
        } byte;
    } IF2DTA1_;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF2DTB2_H;
            __BYTE	IF2DTB2_L;
        } byte;
    } IF2DTB2_;
    union
    {
        __HWORD	hword;
        struct
        {
            __BYTE	IF2DTB1_H;
            __BYTE	IF2DTB1_L;
        } byte;
    } IF2DTB1_;
    __WORD	IO_RESV7[CONSTANT_6];
    const union
    {
        __WORD	word;
        struct
        {
            __HWORD	TREQR2;
            __HWORD	TREQR1;
        } hword;
        struct
        {
            __BYTE	TREQR2H;
            __BYTE	TREQR2L;
            __BYTE	TREQR1H;
            __BYTE	TREQR1L;
        } byte;
    } TREQR12;
    const union
    {
        __WORD	word;
        struct
        {
            __HWORD	TREQR4;
            __HWORD	TREQR3;
        } hword;
        struct
        {
            __BYTE	TREQR4H;
            __BYTE	TREQR4L;
            __BYTE	TREQR3H;
            __BYTE	TREQR3L;
        } byte;
    } TREQR34;
    const union
    {
        __WORD	word;
        struct
        {
            __HWORD	TREQR6;
            __HWORD	TREQR5;
        } hword;
        struct
        {
            __BYTE	TREQR6H;
            __BYTE	TREQR6L;
            __BYTE	TREQR5H;
            __BYTE	TREQR5L;
        } byte;
    } TREQR56;
    const union
    {
        __WORD	word;
        struct
        {
            __HWORD	TREQR8;
            __HWORD	TREQR7;
        } hword;
        struct
        {
            __BYTE	TREQR8H;
            __BYTE	TREQR8L;
            __BYTE	TREQR7H;
            __BYTE	TREQR7L;
        } byte;
    } TREQR78;
    const union
    {
        __WORD	word;
        struct
        {
            __HWORD	NEWDT2;
            __HWORD	NEWDT1;
        } hword;
        struct
        {
            __BYTE	NEWDT2H;
            __BYTE	NEWDT2L;
            __BYTE	NEWDT1H;
            __BYTE	NEWDT1L;
        } byte;
    } NEWDT12;
    const union
    {
        __WORD	word;
        struct
        {
            __HWORD	NEWDT4;
            __HWORD	NEWDT3;
        } hword;
        struct
        {
            __BYTE	NEWDT4H;
            __BYTE	NEWDT4L;
            __BYTE	NEWDT3H;
            __BYTE	NEWDT3L;
        } byte;
    } NEWDT34;
    const union
    {
        __WORD	word;
        struct
        {
            __HWORD	NEWDT6;
            __HWORD	NEWDT5;
        } hword;
        struct
        {
            __BYTE	NEWDT6H;
            __BYTE	NEWDT6L;
            __BYTE	NEWDT5H;
            __BYTE	NEWDT5L;
        } byte;
    } NEWDT56;
    const union
    {
        __WORD	word;
        struct
        {
            __HWORD	NEWDT8;
            __HWORD	NEWDT7;
        } hword;
        struct
        {
            __BYTE	NEWDT8H;
            __BYTE	NEWDT8L;
            __BYTE	NEWDT7H;
            __BYTE	NEWDT7L;
        } byte;
    } NEWDT78;
    const union
    {
        __WORD	word;
        struct
        {
            __HWORD	INTPND2;
            __HWORD	INTPND1;
        } hword;
        struct
        {
            __BYTE	INTPND2H;
            __BYTE	INTPND2L;
            __BYTE	INTPND1H;
            __BYTE	INTPND1L;
        } byte;
    } INTPND12;
    const union
    {
        __WORD	word;
        struct
        {
            __HWORD	INTPND4;
            __HWORD	INTPND3;
        } hword;
        struct
        {
            __BYTE	INTPND4H;
            __BYTE	INTPND4L;
            __BYTE	INTPND3H;
            __BYTE	INTPND3L;
        } byte;
    } INTPND34;
    const union
    {
        __WORD	word;
        struct
        {
            __HWORD	INTPND6;
            __HWORD	INTPND5;
        } hword;
        struct
        {
            __BYTE	INTPND6H;
            __BYTE	INTPND6L;
            __BYTE	INTPND5H;
            __BYTE	INTPND5L;
        } byte;
    } INTPND56;
    const union
    {
        __WORD	word;
        struct
        {
            __HWORD	INTPND8;
            __HWORD	INTPND7;
        } hword;
        struct
        {
            __BYTE	INTPND8H;
            __BYTE	INTPND8L;
            __BYTE	INTPND7H;
            __BYTE	INTPND7L;
        } byte;
    } INTPND78;
    const union
    {
        __WORD	word;
        struct
        {
            __HWORD	MSGVAL2;
            __HWORD	MSGVAL1;
        } hword;
        struct
        {
            __BYTE	MSGVAL2H;
            __BYTE	MSGVAL2L;
            __BYTE	MSGVAL1H;
            __BYTE	MSGVAL1L;
        } byte;
    } MSGVAL12;
    const union
    {
        __WORD	word;
        struct
        {
            __HWORD	MSGVAL4;
            __HWORD	MSGVAL3;
        } hword;
        struct
        {
            __BYTE	MSGVAL4H;
            __BYTE	MSGVAL4L;
            __BYTE	MSGVAL3H;
            __BYTE	MSGVAL3L;
        } byte;
    } MSGVAL34;
    const union
    {
        __WORD	word;
        struct
        {
            __HWORD	MSGVAL6;
            __HWORD	MSGVAL5;
        } hword;
        struct
        {
            __BYTE	MSGVAL6H;
            __BYTE	MSGVAL6L;
            __BYTE	MSGVAL5H;
            __BYTE	MSGVAL5L;
        } byte;
    } MSGVAL56;
    const union
    {
        __WORD	word;
        struct
        {
            __HWORD	MSGVAL8;
            __HWORD	MSGVAL7;
        } hword;
        struct
        {
            __BYTE	MSGVAL8H;
            __BYTE	MSGVAL8L;
            __BYTE	MSGVAL7H;
            __BYTE	MSGVAL7L;
        } byte;
    } MSGVAL78;
} CANSTR;

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CAN0,attr=IO,locate=0x2000
#endif

__IO_EXTENDED	CANSTR	IO_CAN0;

#define	CAN0_CTRLR			(IO_CAN0.CTRLR.hword)
#define	CAN0_CTRLR_CTRLRH		(IO_CAN0.CTRLR.byte.CTRLRH)
#define	CAN0_CTRLR_CTRLRL		(IO_CAN0.CTRLR.byte.CTRLRL)
#define	CAN0_CTRLR_Test    	(IO_CAN0.CTRLR.bit.Test)
#define	CAN0_CTRLR_CCE    	(IO_CAN0.CTRLR.bit.CCE)
#define	CAN0_CTRLR_DAR    	(IO_CAN0.CTRLR.bit.DAR)
#define	CAN0_CTRLR_EIE    	(IO_CAN0.CTRLR.bit.EIE)
#define	CAN0_CTRLR_SIE    	(IO_CAN0.CTRLR.bit.SIE)
#define	CAN0_CTRLR_IE    	(IO_CAN0.CTRLR.bit.IE)
#define	CAN0_CTRLR_Init    	(IO_CAN0.CTRLR.bit.Init)
#define	CAN0_STATR			(IO_CAN0.STATR.hword)
#define	CAN0_STATR_STATRH		(IO_CAN0.STATR.byte.STATRH)
#define	CAN0_STATR_STATRL		(IO_CAN0.STATR.byte.STATRL)
#define	CAN0_STATR_BOff    	(IO_CAN0.STATR.bit.BOff)
#define	CAN0_STATR_EWarn    	(IO_CAN0.STATR.bit.EWarn)
#define	CAN0_STATR_EPass    	(IO_CAN0.STATR.bit.EPass)
#define	CAN0_STATR_RxOk    	(IO_CAN0.STATR.bit.RxOk)
#define	CAN0_STATR_TxOk    	(IO_CAN0.STATR.bit.TxOk)
#define	CAN0_STATR_LEC    	(IO_CAN0.STATR.bit.LEC)
#define	CAN0_ERRCNT			(IO_CAN0.ERRCNT.hword)
#define	CAN0_ERRCNT_ERRCNTH	(IO_CAN0.ERRCNT.byte.ERRCNTH)
#define	CAN0_ERRCNT_ERRCNTL	(IO_CAN0.ERRCNT.byte.ERRCNTL)
#define	CAN0_ERRCNT_RP    	(IO_CAN0.ERRCNT.bit.RP)
#define	CAN0_ERRCNT_REC    	(IO_CAN0.ERRCNT.bit.REC)
#define	CAN0_ERRCNT_TEC    	(IO_CAN0.ERRCNT.bit.TEC)
#define	CAN0_BTR			(IO_CAN0.BTR.hword)
#define	CAN0_BTR_BTRH	(IO_CAN0.BTR.byte.BTRH)
#define	CAN0_BTR_BTRL	(IO_CAN0.BTR.byte.BTRL)
#define	CAN0_BTR_TSeg2    	(IO_CAN0.BTR.bit.TSeg2)
#define	CAN0_BTR_TSeg1    	(IO_CAN0.BTR.bit.TSeg1)
#define	CAN0_BTR_SJW    	(IO_CAN0.BTR.bit.SJW)
#define	CAN0_BTR_BRP    	(IO_CAN0.BTR.bit.BRP)
#define	CAN0_INTR			(IO_CAN0.INTR.hword)
#define	CAN0_INTR_INTRH	(IO_CAN0.INTR.byte.INTRH)
#define	CAN0_INTR_INTRL	(IO_CAN0.INTR.byte.INTRL)
#define	CAN0_TESTR			(IO_CAN0.TESTR.hword)
#define	CAN0_TESTR_TESTRH	(IO_CAN0.TESTR.byte.TESTRH)
#define	CAN0_TESTR_TESTRL	(IO_CAN0.TESTR.byte.TESTRL)
#define	CAN0_TESTR_Rx    	(IO_CAN0.TESTR.bit.Rx)
#define	CAN0_TESTR_Tx    	(IO_CAN0.TESTR.bit.Tx)
#define	CAN0_TESTR_LBack    	(IO_CAN0.TESTR.bit.LBack)
#define	CAN0_TESTR_Silent    	(IO_CAN0.TESTR.bit.Silent)
#define	CAN0_TESTR_Basic    	(IO_CAN0.TESTR.bit.Basic)
#define	CAN0_BRPER			(IO_CAN0.BRPER.hword)
#define	CAN0_BRPER_BRPERH	(IO_CAN0.BRPER.byte.BRPERH)
#define	CAN0_BRPER_BRPERL	(IO_CAN0.BRPER.byte.BRPERL)
#define	CAN0_BRPER_BRPE    	(IO_CAN0.BRPER.bit.BRPE)
#define	CAN0_IF1CREQ			(IO_CAN0.IF1CREQ.hword)
#define	CAN0_IF1CREQ_IF1CREQH		(IO_CAN0.IF1CREQ.byte.IF1CREQH)
#define	CAN0_IF1CREQ_IF1CREQL		(IO_CAN0.IF1CREQ.byte.IF1CREQL)
#define	CAN0_IF1CREQ_BUSY    	(IO_CAN0.IF1CREQ.bit.BUSY)
#define	CAN0_IF1CREQ_MN    	(IO_CAN0.IF1CREQ.bit.MN)
#define	CAN0_IF1CMSK			(IO_CAN0.IF1CMSK.hword)
#define	CAN0_IF1CMSK_IF1CMSKH		(IO_CAN0.IF1CMSK.byte.IF1CMSKH)
#define	CAN0_IF1CMSK_IF1CMSKL		(IO_CAN0.IF1CMSK.byte.IF1CMSKL)
#define	CAN0_IF1CMSK_WR_RD    	(IO_CAN0.IF1CMSK.bit.WR_RD)
#define	CAN0_IF1CMSK_Mask    	(IO_CAN0.IF1CMSK.bit.Mask)
#define	CAN0_IF1CMSK_Arb    	(IO_CAN0.IF1CMSK.bit.Arb)
#define	CAN0_IF1CMSK_Control    	(IO_CAN0.IF1CMSK.bit.Control)
#define	CAN0_IF1CMSK_CIP    	(IO_CAN0.IF1CMSK.bit.CIP)
#define	CAN0_IF1CMSK_TxReq    	(IO_CAN0.IF1CMSK.bit.TxReq)
#define	CAN0_IF1CMSK_DataA    	(IO_CAN0.IF1CMSK.bit.DataA)
#define	CAN0_IF1CMSK_DataB    	(IO_CAN0.IF1CMSK.bit.DataB)
#define	CAN0_IF1MSK			(IO_CAN0.IF1MSK.word)
#define	CAN0_IF1MSK_IF1MSK2		(IO_CAN0.IF1MSK.hword.IF1MSK2)
#define	CAN0_IF1MSK_IF1MSK1		(IO_CAN0.IF1MSK.hword.IF1MSK1)
#define	CAN0_IF1MSK_IF1MSK2H		(IO_CAN0.IF1MSK.byte.IF1MSK2H)
#define	CAN0_IF1MSK_IF1MSK2L		(IO_CAN0.IF1MSK.byte.IF1MSK2L)
#define	CAN0_IF1MSK_IF1MSK1H		(IO_CAN0.IF1MSK.byte.IF1MSK1H)
#define	CAN0_IF1MSK_IF1MSK1L		(IO_CAN0.IF1MSK.byte.IF1MSK1L)
#define	CAN0_IF1MSK_MXtd    	(IO_CAN0.IF1MSK.bit.MXtd)
#define	CAN0_IF1MSK_MDir    	(IO_CAN0.IF1MSK.bit.MDir)
#define	CAN0_IF1MSK_Msk    	(IO_CAN0.IF1MSK.bit.Msk)
#define	CAN0_IF1ARB			(IO_CAN0.IF1ARB.word)
#define	CAN0_IF1ARB_IF1ARB2		(IO_CAN0.IF1ARB.hword.IF1ARB2)
#define	CAN0_IF1ARB_IF1ARB1		(IO_CAN0.IF1ARB.hword.IF1ARB1)
#define	CAN0_IF1ARB_IF1ARB2H		(IO_CAN0.IF1ARB.byte.IF1ARB2H)
#define	CAN0_IF1ARB_IF1ARB2L		(IO_CAN0.IF1ARB.byte.IF1ARB2L)
#define	CAN0_IF1ARB_IF1ARB1H		(IO_CAN0.IF1ARB.byte.IF1ARB1H)
#define	CAN0_IF1ARB_IF1ARB1L		(IO_CAN0.IF1ARB.byte.IF1ARB1L)
#define	CAN0_IF1ARB_MsgVal    	(IO_CAN0.IF1ARB.bit.MsgVal)
#define	CAN0_IF1ARB_Xtd    	(IO_CAN0.IF1ARB.bit.Xtd)
#define	CAN0_IF1ARB_Dir    	(IO_CAN0.IF1ARB.bit.Dir)
#define	CAN0_IF1ARB_ID    	(IO_CAN0.IF1ARB.bit.ID)
#define	CAN0_IF1MCTR			(IO_CAN0.IF1MCTR.hword)
#define	CAN0_IF1MCTR_IF1MCTRH		(IO_CAN0.IF1MCTR.byte.IF1MCTRH)
#define	CAN0_IF1MCTR_IF1MCTRL		(IO_CAN0.IF1MCTR.byte.IF1MCTRL)
#define	CAN0_IF1MCTR_NewDat    	(IO_CAN0.IF1MCTR.bit.NewDat)
#define	CAN0_IF1MCTR_MsgLst    	(IO_CAN0.IF1MCTR.bit.MsgLst)
#define	CAN0_IF1MCTR_IntPnd    	(IO_CAN0.IF1MCTR.bit.IntPnd)
#define	CAN0_IF1MCTR_UMask    	(IO_CAN0.IF1MCTR.bit.UMask)
#define	CAN0_IF1MCTR_TxIE    	(IO_CAN0.IF1MCTR.bit.TxIE)
#define	CAN0_IF1MCTR_RxIE    	(IO_CAN0.IF1MCTR.bit.RxIE)
#define	CAN0_IF1MCTR_RmtEn    	(IO_CAN0.IF1MCTR.bit.RmtEn)
#define	CAN0_IF1MCTR_TxRqst    	(IO_CAN0.IF1MCTR.bit.TxRqst)
#define	CAN0_IF1MCTR_EoB    	(IO_CAN0.IF1MCTR.bit.EoB)
#define	CAN0_IF1MCTR_DLC    	(IO_CAN0.IF1MCTR.bit.DLC)
#define	CAN0_IF1DTA1	(IO_CAN0.IF1DTA1.hword)
#define	CAN0_IF1DTA1_IF1DTA1H	(IO_CAN0.IF1DTA1.byte.IF1DTA1H)
#define	CAN0_IF1DTA1_IF1DTA1L	(IO_CAN0.IF1DTA1.byte.IF1DTA1L)
#define	CAN0_IF1DTA2	(IO_CAN0.IF1DTA2.hword)
#define	CAN0_IF1DTA2_IF1DTA2H	(IO_CAN0.IF1DTA2.byte.IF1DTA2H)
#define	CAN0_IF1DTA2_IF1DTA2L	(IO_CAN0.IF1DTA2.byte.IF1DTA2L)
#define	CAN0_IF1DTB1	(IO_CAN0.IF1DTB1.hword)
#define	CAN0_IF1DTB1_IF1DTB1H	(IO_CAN0.IF1DTB1.byte.IF1DTB1H)
#define	CAN0_IF1DTB1_IF1DTB1L	(IO_CAN0.IF1DTB1.byte.IF1DTB1L)
#define	CAN0_IF1DTB2	(IO_CAN0.IF1DTB2.hword)
#define	CAN0_IF1DTB2_IF1DTB2H	(IO_CAN0.IF1DTB2.byte.IF1DTB2H)
#define	CAN0_IF1DTB2_IF1DTB2L	(IO_CAN0.IF1DTB2.byte.IF1DTB2L)
#define	CAN0_IF1DTA2_	(IO_CAN0.IF1DTA2_.hword)
#define	CAN0_IF1DTA2__IF1DTA2_H	(IO_CAN0.IF1DTA2_.byte.IF1DTA2_H)
#define	CAN0_IF1DTA2__IF1DTA2_L	(IO_CAN0.IF1DTA2_.byte.IF1DTA2_L)
#define	CAN0_IF1DTA1_	(IO_CAN0.IF1DTA1_.hword)
#define	CAN0_IF1DTA1__IF1DTA1_H	(IO_CAN0.IF1DTA1_.byte.IF1DTA1_H)
#define	CAN0_IF1DTA1__IF1DTA1_L	(IO_CAN0.IF1DTA1_.byte.IF1DTA1_L)
#define	CAN0_IF1DTB2_	(IO_CAN0.IF1DTB2_.hword)
#define	CAN0_IF1DTB2__IF1DTB2_H	(IO_CAN0.IF1DTB2_.byte.IF1DTB2_H)
#define	CAN0_IF1DTB2__IF1DTB2_L	(IO_CAN0.IF1DTB2_.byte.IF1DTB2_L)
#define	CAN0_IF1DTB1_	(IO_CAN0.IF1DTB1_.hword)
#define	CAN0_IF1DTB1__IF1DTB1_H	(IO_CAN0.IF1DTB1_.byte.IF1DTB1_H)
#define	CAN0_IF1DTB1__IF1DTB1_L	(IO_CAN0.IF1DTB1_.byte.IF1DTB1_L)
#define	CAN0_IF2CREQ			(IO_CAN0.IF2CREQ.hword)
#define	CAN0_IF2CREQ_IF2CREQH		(IO_CAN0.IF2CREQ.byte.IF2CREQH)
#define	CAN0_IF2CREQ_IF2CREQL		(IO_CAN0.IF2CREQ.byte.IF2CREQL)
#define	CAN0_IF2CREQ_BUSY    	(IO_CAN0.IF2CREQ.bit.BUSY)
#define	CAN0_IF2CREQ_MN    	(IO_CAN0.IF2CREQ.bit.MN)
#define	CAN0_IF2CMSK			(IO_CAN0.IF2CMSK.hword)
#define	CAN0_IF2CMSK_IF2CMSKH		(IO_CAN0.IF2CMSK.byte.IF2CMSKH)
#define	CAN0_IF2CMSK_IF2CMSKL		(IO_CAN0.IF2CMSK.byte.IF2CMSKL)
#define	CAN0_IF2CMSK_WR_RD    	(IO_CAN0.IF2CMSK.bit.WR_RD)
#define	CAN0_IF2CMSK_Mask    	(IO_CAN0.IF2CMSK.bit.Mask)
#define	CAN0_IF2CMSK_Arb    	(IO_CAN0.IF2CMSK.bit.Arb)
#define	CAN0_IF2CMSK_Control    	(IO_CAN0.IF2CMSK.bit.Control)
#define	CAN0_IF2CMSK_CIP    	(IO_CAN0.IF2CMSK.bit.CIP)
#define	CAN0_IF2CMSK_TxReq    	(IO_CAN0.IF2CMSK.bit.TxReq)
#define	CAN0_IF2CMSK_DataA    	(IO_CAN0.IF2CMSK.bit.DataA)
#define	CAN0_IF2CMSK_DataB    	(IO_CAN0.IF2CMSK.bit.DataB)
#define	CAN0_IF2MSK			(IO_CAN0.IF2MSK.word)
#define	CAN0_IF2MSK_IF2MSK2		(IO_CAN0.IF2MSK.hword.IF2MSK2)
#define	CAN0_IF2MSK_IF2MSK1		(IO_CAN0.IF2MSK.hword.IF2MSK1)
#define	CAN0_IF2MSK_IF2MSK2H		(IO_CAN0.IF2MSK.byte.IF2MSK2H)
#define	CAN0_IF2MSK_IF2MSK2L		(IO_CAN0.IF2MSK.byte.IF2MSK2L)
#define	CAN0_IF2MSK_IF2MSK1H		(IO_CAN0.IF2MSK.byte.IF2MSK1H)
#define	CAN0_IF2MSK_IF2MSK1L		(IO_CAN0.IF2MSK.byte.IF2MSK1L)
#define	CAN0_IF2MSK_MXtd    	(IO_CAN0.IF2MSK.bit.MXtd)
#define	CAN0_IF2MSK_MDir    	(IO_CAN0.IF2MSK.bit.MDir)
#define	CAN0_IF2MSK_Msk    	(IO_CAN0.IF2MSK.bit.Msk)
#define	CAN0_IF2ARB			(IO_CAN0.IF2ARB.word)
#define	CAN0_IF2ARB_IF2ARB2		(IO_CAN0.IF2ARB.hword.IF2ARB2)
#define	CAN0_IF2ARB_IF2ARB1		(IO_CAN0.IF2ARB.hword.IF2ARB1)
#define	CAN0_IF2ARB_IF2ARB2H		(IO_CAN0.IF2ARB.byte.IF2ARB2H)
#define	CAN0_IF2ARB_IF2ARB2L		(IO_CAN0.IF2ARB.byte.IF2ARB2L)
#define	CAN0_IF2ARB_IF2ARB1H		(IO_CAN0.IF2ARB.byte.IF2ARB1H)
#define	CAN0_IF2ARB_IF2ARB1L		(IO_CAN0.IF2ARB.byte.IF2ARB1L)
#define	CAN0_IF2ARB_MsgVal    	(IO_CAN0.IF2ARB.bit.MsgVal)
#define	CAN0_IF2ARB_Xtd    	(IO_CAN0.IF2ARB.bit.Xtd)
#define	CAN0_IF2ARB_Dir    	(IO_CAN0.IF2ARB.bit.Dir)
#define	CAN0_IF2ARB_ID    	(IO_CAN0.IF2ARB.bit.ID)
#define	CAN0_IF2MCTR			(IO_CAN0.IF2MCTR.hword)
#define	CAN0_IF2MCTR_IF2MCTRH		(IO_CAN0.IF2MCTR.byte.IF2MCTRH)
#define	CAN0_IF2MCTR_IF2MCTRL		(IO_CAN0.IF2MCTR.byte.IF2MCTRL)
#define	CAN0_IF2MCTR_NewDat    	(IO_CAN0.IF2MCTR.bit.NewDat)
#define	CAN0_IF2MCTR_MsgLst    	(IO_CAN0.IF2MCTR.bit.MsgLst)
#define	CAN0_IF2MCTR_IntPnd    	(IO_CAN0.IF2MCTR.bit.IntPnd)
#define	CAN0_IF2MCTR_UMask    	(IO_CAN0.IF2MCTR.bit.UMask)
#define	CAN0_IF2MCTR_TxIE    	(IO_CAN0.IF2MCTR.bit.TxIE)
#define	CAN0_IF2MCTR_RxIE    	(IO_CAN0.IF2MCTR.bit.RxIE)
#define	CAN0_IF2MCTR_RmtEn    	(IO_CAN0.IF2MCTR.bit.RmtEn)
#define	CAN0_IF2MCTR_TxRqst    	(IO_CAN0.IF2MCTR.bit.TxRqst)
#define	CAN0_IF2MCTR_EoB    	(IO_CAN0.IF2MCTR.bit.EoB)
#define	CAN0_IF2MCTR_DLC    	(IO_CAN0.IF2MCTR.bit.DLC)
#define	CAN0_IF2DTA1	(IO_CAN0.IF2DTA1.hword)
#define	CAN0_IF2DTA1_IF2DTA1H	(IO_CAN0.IF2DTA1.byte.IF2DTA1H)
#define	CAN0_IF2DTA1_IF2DTA1L	(IO_CAN0.IF2DTA1.byte.IF2DTA1L)
#define	CAN0_IF2DTA2	(IO_CAN0.IF2DTA2.hword)
#define	CAN0_IF2DTA2_IF2DTA2H	(IO_CAN0.IF2DTA2.byte.IF2DTA2H)
#define	CAN0_IF2DTA2_IF2DTA2L	(IO_CAN0.IF2DTA2.byte.IF2DTA2L)
#define	CAN0_IF2DTB1	(IO_CAN0.IF2DTB1.hword)
#define	CAN0_IF2DTB1_IF2DTB1H	(IO_CAN0.IF2DTB1.byte.IF2DTB1H)
#define	CAN0_IF2DTB1_IF2DTB1L	(IO_CAN0.IF2DTB1.byte.IF2DTB1L)
#define	CAN0_IF2DTB2	(IO_CAN0.IF2DTB2.hword)
#define	CAN0_IF2DTB2_IF2DTB2H	(IO_CAN0.IF2DTB2.byte.IF2DTB2H)
#define	CAN0_IF2DTB2_IF2DTB2L	(IO_CAN0.IF2DTB2.byte.IF2DTB2L)
#define	CAN0_IF2DTA2_	(IO_CAN0.IF2DTA2_.hword)
#define	CAN0_IF2DTA2__IF2DTA2_H	(IO_CAN0.IF2DTA2_.byte.IF2DTA2_H)
#define	CAN0_IF2DTA2__IF2DTA2_L	(IO_CAN0.IF2DTA2_.byte.IF2DTA2_L)
#define	CAN0_IF2DTA1_	(IO_CAN0.IF2DTA1_.hword)
#define	CAN0_IF2DTA1__IF2DTA1_H	(IO_CAN0.IF2DTA1_.byte.IF2DTA1_H)
#define	CAN0_IF2DTA1__IF2DTA1_L	(IO_CAN0.IF2DTA1_.byte.IF2DTA1_L)
#define	CAN0_IF2DTB2_	(IO_CAN0.IF2DTB2_.hword)
#define	CAN0_IF2DTB2__IF2DTB2_H	(IO_CAN0.IF2DTB2_.byte.IF2DTB2_H)
#define	CAN0_IF2DTB2__IF2DTB2_L	(IO_CAN0.IF2DTB2_.byte.IF2DTB2_L)
#define	CAN0_IF2DTB1_	(IO_CAN0.IF2DTB1_.hword)
#define	CAN0_IF2DTB1__IF2DTB1_H	(IO_CAN0.IF2DTB1_.byte.IF2DTB1_H)
#define	CAN0_IF2DTB1__IF2DTB1_L	(IO_CAN0.IF2DTB1_.byte.IF2DTB1_L)
#define	CAN0_TREQR12			(IO_CAN0.TREQR12.word)
#define	CAN0_TREQR12_TREQR2		(IO_CAN0.TREQR12.hword.TREQR2)
#define	CAN0_TREQR12_TREQR1		(IO_CAN0.TREQR12.hword.TREQR1)
#define	CAN0_TREQR12_TREQR2H		(IO_CAN0.TREQR12.byte.TREQR2H)
#define	CAN0_TREQR12_TREQR2L		(IO_CAN0.TREQR12.byte.TREQR2L)
#define	CAN0_TREQR12_TREQR1H		(IO_CAN0.TREQR12.byte.TREQR1H)
#define	CAN0_TREQR12_TREQR1L		(IO_CAN0.TREQR12.byte.TREQR1L)
#define	CAN0_TREQR34			(IO_CAN0.TREQR34.word)
#define	CAN0_TREQR34_TREQR4		(IO_CAN0.TREQR34.hword.TREQR4)
#define	CAN0_TREQR34_TREQR3		(IO_CAN0.TREQR34.hword.TREQR3)
#define	CAN0_TREQR34_TREQR4H		(IO_CAN0.TREQR34.byte.TREQR4H)
#define	CAN0_TREQR34_TREQR4L		(IO_CAN0.TREQR34.byte.TREQR4L)
#define	CAN0_TREQR34_TREQR3H		(IO_CAN0.TREQR34.byte.TREQR3H)
#define	CAN0_TREQR34_TREQR3L		(IO_CAN0.TREQR34.byte.TREQR3L)
#define	CAN0_TREQR56			(IO_CAN0.TREQR56.word)
#define	CAN0_TREQR56_TREQR6		(IO_CAN0.TREQR56.hword.TREQR6)
#define	CAN0_TREQR56_TREQR5		(IO_CAN0.TREQR56.hword.TREQR5)
#define	CAN0_TREQR56_TREQR6H		(IO_CAN0.TREQR56.byte.TREQR6H)
#define	CAN0_TREQR56_TREQR6L		(IO_CAN0.TREQR56.byte.TREQR6L)
#define	CAN0_TREQR56_TREQR5H		(IO_CAN0.TREQR56.byte.TREQR5H)
#define	CAN0_TREQR56_TREQR5L		(IO_CAN0.TREQR56.byte.TREQR5L)
#define	CAN0_TREQR78			(IO_CAN0.TREQR78.word)
#define	CAN0_TREQR78_TREQR8		(IO_CAN0.TREQR78.hword.TREQR8)
#define	CAN0_TREQR78_TREQR7		(IO_CAN0.TREQR78.hword.TREQR7)
#define	CAN0_TREQR78_TREQR8H		(IO_CAN0.TREQR78.byte.TREQR8H)
#define	CAN0_TREQR78_TREQR8L		(IO_CAN0.TREQR78.byte.TREQR8L)
#define	CAN0_TREQR78_TREQR7H		(IO_CAN0.TREQR78.byte.TREQR7H)
#define	CAN0_TREQR78_TREQR7L		(IO_CAN0.TREQR78.byte.TREQR7L)
#define	CAN0_NEWDT12			(IO_CAN0.NEWDT12.word)
#define	CAN0_NEWDT12_NEWDT2		(IO_CAN0.NEWDT12.hword.NEWDT2)
#define	CAN0_NEWDT12_NEWDT1		(IO_CAN0.NEWDT12.hword.NEWDT1)
#define	CAN0_NEWDT12_NEWDT2H		(IO_CAN0.NEWDT12.byte.NEWDT2H)
#define	CAN0_NEWDT12_NEWDT2L		(IO_CAN0.NEWDT12.byte.NEWDT2L)
#define	CAN0_NEWDT12_NEWDT1H		(IO_CAN0.NEWDT12.byte.NEWDT1H)
#define	CAN0_NEWDT12_NEWDT1L		(IO_CAN0.NEWDT12.byte.NEWDT1L)
#define	CAN0_NEWDT34			(IO_CAN0.NEWDT34.word)
#define	CAN0_NEWDT34_NEWDT4		(IO_CAN0.NEWDT34.hword.NEWDT4)
#define	CAN0_NEWDT34_NEWDT3		(IO_CAN0.NEWDT34.hword.NEWDT3)
#define	CAN0_NEWDT34_NEWDT4H		(IO_CAN0.NEWDT34.byte.NEWDT4H)
#define	CAN0_NEWDT34_NEWDT4L		(IO_CAN0.NEWDT34.byte.NEWDT4L)
#define	CAN0_NEWDT34_NEWDT3H		(IO_CAN0.NEWDT34.byte.NEWDT3H)
#define	CAN0_NEWDT34_NEWDT3L		(IO_CAN0.NEWDT34.byte.NEWDT3L)
#define	CAN0_NEWDT56			(IO_CAN0.NEWDT56.word)
#define	CAN0_NEWDT56_NEWDT6		(IO_CAN0.NEWDT56.hword.NEWDT6)
#define	CAN0_NEWDT56_NEWDT5		(IO_CAN0.NEWDT56.hword.NEWDT5)
#define	CAN0_NEWDT56_NEWDT6H		(IO_CAN0.NEWDT56.byte.NEWDT6H)
#define	CAN0_NEWDT56_NEWDT6L		(IO_CAN0.NEWDT56.byte.NEWDT6L)
#define	CAN0_NEWDT56_NEWDT5H		(IO_CAN0.NEWDT56.byte.NEWDT5H)
#define	CAN0_NEWDT56_NEWDT5L		(IO_CAN0.NEWDT56.byte.NEWDT5L)
#define	CAN0_NEWDT78			(IO_CAN0.NEWDT78.word)
#define	CAN0_NEWDT78_NEWDT8		(IO_CAN0.NEWDT78.hword.NEWDT8)
#define	CAN0_NEWDT78_NEWDT7		(IO_CAN0.NEWDT78.hword.NEWDT7)
#define	CAN0_NEWDT78_NEWDT8H		(IO_CAN0.NEWDT78.byte.NEWDT8H)
#define	CAN0_NEWDT78_NEWDT8L		(IO_CAN0.NEWDT78.byte.NEWDT8L)
#define	CAN0_NEWDT78_NEWDT7H		(IO_CAN0.NEWDT78.byte.NEWDT7H)
#define	CAN0_NEWDT78_NEWDT7L		(IO_CAN0.NEWDT78.byte.NEWDT7L)
#define	CAN0_INTPND12			(IO_CAN0.INTPND12.word)
#define	CAN0_INTPND12_INTPND2		(IO_CAN0.INTPND12.hword.INTPND2)
#define	CAN0_INTPND12_INTPND1		(IO_CAN0.INTPND12.hword.INTPND1)
#define	CAN0_INTPND12_INTPND2H	(IO_CAN0.INTPND12.byte.INTPND2H)
#define	CAN0_INTPND12_INTPND2L	(IO_CAN0.INTPND12.byte.INTPND2L)
#define	CAN0_INTPND12_INTPND1H	(IO_CAN0.INTPND12.byte.INTPND1H)
#define	CAN0_INTPND12_INTPND1L	(IO_CAN0.INTPND12.byte.INTPND1L)
#define	CAN0_INTPND34			(IO_CAN0.INTPND34.word)
#define	CAN0_INTPND34_INTPND4		(IO_CAN0.INTPND34.hword.INTPND4)
#define	CAN0_INTPND34_INTPND3		(IO_CAN0.INTPND34.hword.INTPND3)
#define	CAN0_INTPND34_INTPND4H	(IO_CAN0.INTPND34.byte.INTPND4H)
#define	CAN0_INTPND34_INTPND4L	(IO_CAN0.INTPND34.byte.INTPND4L)
#define	CAN0_INTPND34_INTPND3H	(IO_CAN0.INTPND34.byte.INTPND3H)
#define	CAN0_INTPND34_INTPND3L	(IO_CAN0.INTPND34.byte.INTPND3L)
#define	CAN0_INTPND56			(IO_CAN0.INTPND56.word)
#define	CAN0_INTPND56_INTPND6		(IO_CAN0.INTPND56.hword.INTPND6)
#define	CAN0_INTPND56_INTPND5		(IO_CAN0.INTPND56.hword.INTPND5)
#define	CAN0_INTPND56_INTPND6H	(IO_CAN0.INTPND56.byte.INTPND6H)
#define	CAN0_INTPND56_INTPND6L	(IO_CAN0.INTPND56.byte.INTPND6L)
#define	CAN0_INTPND56_INTPND5H	(IO_CAN0.INTPND56.byte.INTPND5H)
#define	CAN0_INTPND56_INTPND5L	(IO_CAN0.INTPND56.byte.INTPND5L)
#define	CAN0_INTPND78			(IO_CAN0.INTPND78.word)
#define	CAN0_INTPND78_INTPND8		(IO_CAN0.INTPND78.hword.INTPND8)
#define	CAN0_INTPND78_INTPND7		(IO_CAN0.INTPND78.hword.INTPND7)
#define	CAN0_INTPND78_INTPND8H	(IO_CAN0.INTPND78.byte.INTPND8H)
#define	CAN0_INTPND78_INTPND8L	(IO_CAN0.INTPND78.byte.INTPND8L)
#define	CAN0_INTPND78_INTPND7H	(IO_CAN0.INTPND78.byte.INTPND7H)
#define	CAN0_INTPND78_INTPND7L	(IO_CAN0.INTPND78.byte.INTPND7L)
#define	CAN0_MSGVAL12			(IO_CAN0.MSGVAL12.word)
#define	CAN0_MSGVAL12_MSGVAL2		(IO_CAN0.MSGVAL12.hword.MSGVAL2)
#define	CAN0_MSGVAL12_MSGVAL1		(IO_CAN0.MSGVAL12.hword.MSGVAL1)
#define	CAN0_MSGVAL12_MSGVAL2H	(IO_CAN0.MSGVAL12.byte.MSGVAL2H)
#define	CAN0_MSGVAL12_MSGVAL2L	(IO_CAN0.MSGVAL12.byte.MSGVAL2L)
#define	CAN0_MSGVAL12_MSGVAL1H	(IO_CAN0.MSGVAL12.byte.MSGVAL1H)
#define	CAN0_MSGVAL12_MSGVAL1L	(IO_CAN0.MSGVAL12.byte.MSGVAL1L)
#define	CAN0_MSGVAL34			(IO_CAN0.MSGVAL34.word)
#define	CAN0_MSGVAL34_MSGVAL4		(IO_CAN0.MSGVAL34.hword.MSGVAL4)
#define	CAN0_MSGVAL34_MSGVAL3		(IO_CAN0.MSGVAL34.hword.MSGVAL3)
#define	CAN0_MSGVAL34_MSGVAL4H	(IO_CAN0.MSGVAL34.byte.MSGVAL4H)
#define	CAN0_MSGVAL34_MSGVAL4L	(IO_CAN0.MSGVAL34.byte.MSGVAL4L)
#define	CAN0_MSGVAL34_MSGVAL3H	(IO_CAN0.MSGVAL34.byte.MSGVAL3H)
#define	CAN0_MSGVAL34_MSGVAL3L	(IO_CAN0.MSGVAL34.byte.MSGVAL3L)
#define	CAN0_MSGVAL56			(IO_CAN0.MSGVAL56.word)
#define	CAN0_MSGVAL56_MSGVAL6		(IO_CAN0.MSGVAL56.hword.MSGVAL6)
#define	CAN0_MSGVAL56_MSGVAL5		(IO_CAN0.MSGVAL56.hword.MSGVAL5)
#define	CAN0_MSGVAL56_MSGVAL6H	(IO_CAN0.MSGVAL56.byte.MSGVAL6H)
#define	CAN0_MSGVAL56_MSGVAL6L	(IO_CAN0.MSGVAL56.byte.MSGVAL6L)
#define	CAN0_MSGVAL56_MSGVAL5H	(IO_CAN0.MSGVAL56.byte.MSGVAL5H)
#define	CAN0_MSGVAL56_MSGVAL5L	(IO_CAN0.MSGVAL56.byte.MSGVAL5L)
#define	CAN0_MSGVAL78			(IO_CAN0.MSGVAL78.word)
#define	CAN0_MSGVAL78_MSGVAL8		(IO_CAN0.MSGVAL78.hword.MSGVAL8)
#define	CAN0_MSGVAL78_MSGVAL7		(IO_CAN0.MSGVAL78.hword.MSGVAL7)
#define	CAN0_MSGVAL78_MSGVAL8H	(IO_CAN0.MSGVAL78.byte.MSGVAL8H)
#define	CAN0_MSGVAL78_MSGVAL8L	(IO_CAN0.MSGVAL78.byte.MSGVAL8L)
#define	CAN0_MSGVAL78_MSGVAL7H	(IO_CAN0.MSGVAL78.byte.MSGVAL7H)
#define	CAN0_MSGVAL78_MSGVAL7L	(IO_CAN0.MSGVAL78.byte.MSGVAL7L)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CAN1,attr=IO,locate=0x2100
#endif

__IO_EXTENDED	CANSTR	IO_CAN1;

#define	CAN1_CTRLR			(IO_CAN1.CTRLR.hword)
#define	CAN1_CTRLR_CTRLRH		(IO_CAN1.CTRLR.byte.CTRLRH)
#define	CAN1_CTRLR_CTRLRL		(IO_CAN1.CTRLR.byte.CTRLRL)
#define	CAN1_CTRLR_Test    	(IO_CAN1.CTRLR.bit.Test)
#define	CAN1_CTRLR_CCE    	(IO_CAN1.CTRLR.bit.CCE)
#define	CAN1_CTRLR_DAR    	(IO_CAN1.CTRLR.bit.DAR)
#define	CAN1_CTRLR_EIE    	(IO_CAN1.CTRLR.bit.EIE)
#define	CAN1_CTRLR_SIE    	(IO_CAN1.CTRLR.bit.SIE)
#define	CAN1_CTRLR_IE    	(IO_CAN1.CTRLR.bit.IE)
#define	CAN1_CTRLR_Init    	(IO_CAN1.CTRLR.bit.Init)
#define	CAN1_STATR			(IO_CAN1.STATR.hword)
#define	CAN1_STATR_STATRH		(IO_CAN1.STATR.byte.STATRH)
#define	CAN1_STATR_STATRL		(IO_CAN1.STATR.byte.STATRL)
#define	CAN1_STATR_BOff    	(IO_CAN1.STATR.bit.BOff)
#define	CAN1_STATR_EWarn    	(IO_CAN1.STATR.bit.EWarn)
#define	CAN1_STATR_EPass    	(IO_CAN1.STATR.bit.EPass)
#define	CAN1_STATR_RxOk    	(IO_CAN1.STATR.bit.RxOk)
#define	CAN1_STATR_TxOk    	(IO_CAN1.STATR.bit.TxOk)
#define	CAN1_STATR_LEC    	(IO_CAN1.STATR.bit.LEC)
#define	CAN1_ERRCNT			(IO_CAN1.ERRCNT.hword)
#define	CAN1_ERRCNT_ERRCNTH	(IO_CAN1.ERRCNT.byte.ERRCNTH)
#define	CAN1_ERRCNT_ERRCNTL	(IO_CAN1.ERRCNT.byte.ERRCNTL)
#define	CAN1_ERRCNT_RP    	(IO_CAN1.ERRCNT.bit.RP)
#define	CAN1_ERRCNT_REC    	(IO_CAN1.ERRCNT.bit.REC)
#define	CAN1_ERRCNT_TEC    	(IO_CAN1.ERRCNT.bit.TEC)
#define	CAN1_BTR			(IO_CAN1.BTR.hword)
#define	CAN1_BTR_BTRH	(IO_CAN1.BTR.byte.BTRH)
#define	CAN1_BTR_BTRL	(IO_CAN1.BTR.byte.BTRL)
#define	CAN1_BTR_TSeg2    	(IO_CAN1.BTR.bit.TSeg2)
#define	CAN1_BTR_TSeg1    	(IO_CAN1.BTR.bit.TSeg1)
#define	CAN1_BTR_SJW    	(IO_CAN1.BTR.bit.SJW)
#define	CAN1_BTR_BRP    	(IO_CAN1.BTR.bit.BRP)
#define	CAN1_INTR			(IO_CAN1.INTR.hword)
#define	CAN1_INTR_INTRH	(IO_CAN1.INTR.byte.INTRH)
#define	CAN1_INTR_INTRL	(IO_CAN1.INTR.byte.INTRL)
#define	CAN1_TESTR			(IO_CAN1.TESTR.hword)
#define	CAN1_TESTR_TESTRH	(IO_CAN1.TESTR.byte.TESTRH)
#define	CAN1_TESTR_TESTRL	(IO_CAN1.TESTR.byte.TESTRL)
#define	CAN1_TESTR_Rx    	(IO_CAN1.TESTR.bit.Rx)
#define	CAN1_TESTR_Tx    	(IO_CAN1.TESTR.bit.Tx)
#define	CAN1_TESTR_LBack    	(IO_CAN1.TESTR.bit.LBack)
#define	CAN1_TESTR_Silent    	(IO_CAN1.TESTR.bit.Silent)
#define	CAN1_TESTR_Basic    	(IO_CAN1.TESTR.bit.Basic)
#define	CAN1_BRPER			(IO_CAN1.BRPER.hword)
#define	CAN1_BRPER_BRPERH	(IO_CAN1.BRPER.byte.BRPERH)
#define	CAN1_BRPER_BRPERL	(IO_CAN1.BRPER.byte.BRPERL)
#define	CAN1_BRPER_BRPE    	(IO_CAN1.BRPER.bit.BRPE)
#define	CAN1_IF1CREQ			(IO_CAN1.IF1CREQ.hword)
#define	CAN1_IF1CREQ_IF1CREQH		(IO_CAN1.IF1CREQ.byte.IF1CREQH)
#define	CAN1_IF1CREQ_IF1CREQL		(IO_CAN1.IF1CREQ.byte.IF1CREQL)
#define	CAN1_IF1CREQ_BUSY    	(IO_CAN1.IF1CREQ.bit.BUSY)
#define	CAN1_IF1CREQ_MN    	(IO_CAN1.IF1CREQ.bit.MN)
#define	CAN1_IF1CMSK			(IO_CAN1.IF1CMSK.hword)
#define	CAN1_IF1CMSK_IF1CMSKH		(IO_CAN1.IF1CMSK.byte.IF1CMSKH)
#define	CAN1_IF1CMSK_IF1CMSKL		(IO_CAN1.IF1CMSK.byte.IF1CMSKL)
#define	CAN1_IF1CMSK_WR_RD    	(IO_CAN1.IF1CMSK.bit.WR_RD)
#define	CAN1_IF1CMSK_Mask    	(IO_CAN1.IF1CMSK.bit.Mask)
#define	CAN1_IF1CMSK_Arb    	(IO_CAN1.IF1CMSK.bit.Arb)
#define	CAN1_IF1CMSK_Control    	(IO_CAN1.IF1CMSK.bit.Control)
#define	CAN1_IF1CMSK_CIP    	(IO_CAN1.IF1CMSK.bit.CIP)
#define	CAN1_IF1CMSK_TxReq    	(IO_CAN1.IF1CMSK.bit.TxReq)
#define	CAN1_IF1CMSK_DataA    	(IO_CAN1.IF1CMSK.bit.DataA)
#define	CAN1_IF1CMSK_DataB    	(IO_CAN1.IF1CMSK.bit.DataB)
#define	CAN1_IF1MSK			(IO_CAN1.IF1MSK.word)
#define	CAN1_IF1MSK_IF1MSK2		(IO_CAN1.IF1MSK.hword.IF1MSK2)
#define	CAN1_IF1MSK_IF1MSK1		(IO_CAN1.IF1MSK.hword.IF1MSK1)
#define	CAN1_IF1MSK_IF1MSK2H		(IO_CAN1.IF1MSK.byte.IF1MSK2H)
#define	CAN1_IF1MSK_IF1MSK2L		(IO_CAN1.IF1MSK.byte.IF1MSK2L)
#define	CAN1_IF1MSK_IF1MSK1H		(IO_CAN1.IF1MSK.byte.IF1MSK1H)
#define	CAN1_IF1MSK_IF1MSK1L		(IO_CAN1.IF1MSK.byte.IF1MSK1L)
#define	CAN1_IF1MSK_MXtd    	(IO_CAN1.IF1MSK.bit.MXtd)
#define	CAN1_IF1MSK_MDir    	(IO_CAN1.IF1MSK.bit.MDir)
#define	CAN1_IF1MSK_Msk    	(IO_CAN1.IF1MSK.bit.Msk)
#define	CAN1_IF1ARB			(IO_CAN1.IF1ARB.word)
#define	CAN1_IF1ARB_IF1ARB2		(IO_CAN1.IF1ARB.hword.IF1ARB2)
#define	CAN1_IF1ARB_IF1ARB1		(IO_CAN1.IF1ARB.hword.IF1ARB1)
#define	CAN1_IF1ARB_IF1ARB2H		(IO_CAN1.IF1ARB.byte.IF1ARB2H)
#define	CAN1_IF1ARB_IF1ARB2L		(IO_CAN1.IF1ARB.byte.IF1ARB2L)
#define	CAN1_IF1ARB_IF1ARB1H		(IO_CAN1.IF1ARB.byte.IF1ARB1H)
#define	CAN1_IF1ARB_IF1ARB1L		(IO_CAN1.IF1ARB.byte.IF1ARB1L)
#define	CAN1_IF1ARB_MsgVal    	(IO_CAN1.IF1ARB.bit.MsgVal)
#define	CAN1_IF1ARB_Xtd    	(IO_CAN1.IF1ARB.bit.Xtd)
#define	CAN1_IF1ARB_Dir    	(IO_CAN1.IF1ARB.bit.Dir)
#define	CAN1_IF1ARB_ID    	(IO_CAN1.IF1ARB.bit.ID)
#define	CAN1_IF1MCTR			(IO_CAN1.IF1MCTR.hword)
#define	CAN1_IF1MCTR_IF1MCTRH		(IO_CAN1.IF1MCTR.byte.IF1MCTRH)
#define	CAN1_IF1MCTR_IF1MCTRL		(IO_CAN1.IF1MCTR.byte.IF1MCTRL)
#define	CAN1_IF1MCTR_NewDat    	(IO_CAN1.IF1MCTR.bit.NewDat)
#define	CAN1_IF1MCTR_MsgLst    	(IO_CAN1.IF1MCTR.bit.MsgLst)
#define	CAN1_IF1MCTR_IntPnd    	(IO_CAN1.IF1MCTR.bit.IntPnd)
#define	CAN1_IF1MCTR_UMask    	(IO_CAN1.IF1MCTR.bit.UMask)
#define	CAN1_IF1MCTR_TxIE    	(IO_CAN1.IF1MCTR.bit.TxIE)
#define	CAN1_IF1MCTR_RxIE    	(IO_CAN1.IF1MCTR.bit.RxIE)
#define	CAN1_IF1MCTR_RmtEn    	(IO_CAN1.IF1MCTR.bit.RmtEn)
#define	CAN1_IF1MCTR_TxRqst    	(IO_CAN1.IF1MCTR.bit.TxRqst)
#define	CAN1_IF1MCTR_EoB    	(IO_CAN1.IF1MCTR.bit.EoB)
#define	CAN1_IF1MCTR_DLC    	(IO_CAN1.IF1MCTR.bit.DLC)
#define	CAN1_IF1DTA1	(IO_CAN1.IF1DTA1.hword)
#define	CAN1_IF1DTA1_IF1DTA1H	(IO_CAN1.IF1DTA1.byte.IF1DTA1H)
#define	CAN1_IF1DTA1_IF1DTA1L	(IO_CAN1.IF1DTA1.byte.IF1DTA1L)
#define	CAN1_IF1DTA2	(IO_CAN1.IF1DTA2.hword)
#define	CAN1_IF1DTA2_IF1DTA2H	(IO_CAN1.IF1DTA2.byte.IF1DTA2H)
#define	CAN1_IF1DTA2_IF1DTA2L	(IO_CAN1.IF1DTA2.byte.IF1DTA2L)
#define	CAN1_IF1DTB1	(IO_CAN1.IF1DTB1.hword)
#define	CAN1_IF1DTB1_IF1DTB1H	(IO_CAN1.IF1DTB1.byte.IF1DTB1H)
#define	CAN1_IF1DTB1_IF1DTB1L	(IO_CAN1.IF1DTB1.byte.IF1DTB1L)
#define	CAN1_IF1DTB2	(IO_CAN1.IF1DTB2.hword)
#define	CAN1_IF1DTB2_IF1DTB2H	(IO_CAN1.IF1DTB2.byte.IF1DTB2H)
#define	CAN1_IF1DTB2_IF1DTB2L	(IO_CAN1.IF1DTB2.byte.IF1DTB2L)
#define	CAN1_IF1DTA2_	(IO_CAN1.IF1DTA2_.hword)
#define	CAN1_IF1DTA2__IF1DTA2_H	(IO_CAN1.IF1DTA2_.byte.IF1DTA2_H)
#define	CAN1_IF1DTA2__IF1DTA2_L	(IO_CAN1.IF1DTA2_.byte.IF1DTA2_L)
#define	CAN1_IF1DTA1_	(IO_CAN1.IF1DTA1_.hword)
#define	CAN1_IF1DTA1__IF1DTA1_H	(IO_CAN1.IF1DTA1_.byte.IF1DTA1_H)
#define	CAN1_IF1DTA1__IF1DTA1_L	(IO_CAN1.IF1DTA1_.byte.IF1DTA1_L)
#define	CAN1_IF1DTB2_	(IO_CAN1.IF1DTB2_.hword)
#define	CAN1_IF1DTB2__IF1DTB2_H	(IO_CAN1.IF1DTB2_.byte.IF1DTB2_H)
#define	CAN1_IF1DTB2__IF1DTB2_L	(IO_CAN1.IF1DTB2_.byte.IF1DTB2_L)
#define	CAN1_IF1DTB1_	(IO_CAN1.IF1DTB1_.hword)
#define	CAN1_IF1DTB1__IF1DTB1_H	(IO_CAN1.IF1DTB1_.byte.IF1DTB1_H)
#define	CAN1_IF1DTB1__IF1DTB1_L	(IO_CAN1.IF1DTB1_.byte.IF1DTB1_L)
#define	CAN1_IF2CREQ			(IO_CAN1.IF2CREQ.hword)
#define	CAN1_IF2CREQ_IF2CREQH		(IO_CAN1.IF2CREQ.byte.IF2CREQH)
#define	CAN1_IF2CREQ_IF2CREQL		(IO_CAN1.IF2CREQ.byte.IF2CREQL)
#define	CAN1_IF2CREQ_BUSY    	(IO_CAN1.IF2CREQ.bit.BUSY)
#define	CAN1_IF2CREQ_MN    	(IO_CAN1.IF2CREQ.bit.MN)
#define	CAN1_IF2CMSK			(IO_CAN1.IF2CMSK.hword)
#define	CAN1_IF2CMSK_IF2CMSKH		(IO_CAN1.IF2CMSK.byte.IF2CMSKH)
#define	CAN1_IF2CMSK_IF2CMSKL		(IO_CAN1.IF2CMSK.byte.IF2CMSKL)
#define	CAN1_IF2CMSK_WR_RD    	(IO_CAN1.IF2CMSK.bit.WR_RD)
#define	CAN1_IF2CMSK_Mask    	(IO_CAN1.IF2CMSK.bit.Mask)
#define	CAN1_IF2CMSK_Arb    	(IO_CAN1.IF2CMSK.bit.Arb)
#define	CAN1_IF2CMSK_Control    	(IO_CAN1.IF2CMSK.bit.Control)
#define	CAN1_IF2CMSK_CIP    	(IO_CAN1.IF2CMSK.bit.CIP)
#define	CAN1_IF2CMSK_TxReq    	(IO_CAN1.IF2CMSK.bit.TxReq)
#define	CAN1_IF2CMSK_DataA    	(IO_CAN1.IF2CMSK.bit.DataA)
#define	CAN1_IF2CMSK_DataB    	(IO_CAN1.IF2CMSK.bit.DataB)
#define	CAN1_IF2MSK			(IO_CAN1.IF2MSK.word)
#define	CAN1_IF2MSK_IF2MSK2		(IO_CAN1.IF2MSK.hword.IF2MSK2)
#define	CAN1_IF2MSK_IF2MSK1		(IO_CAN1.IF2MSK.hword.IF2MSK1)
#define	CAN1_IF2MSK_IF2MSK2H		(IO_CAN1.IF2MSK.byte.IF2MSK2H)
#define	CAN1_IF2MSK_IF2MSK2L		(IO_CAN1.IF2MSK.byte.IF2MSK2L)
#define	CAN1_IF2MSK_IF2MSK1H		(IO_CAN1.IF2MSK.byte.IF2MSK1H)
#define	CAN1_IF2MSK_IF2MSK1L		(IO_CAN1.IF2MSK.byte.IF2MSK1L)
#define	CAN1_IF2MSK_MXtd    	(IO_CAN1.IF2MSK.bit.MXtd)
#define	CAN1_IF2MSK_MDir    	(IO_CAN1.IF2MSK.bit.MDir)
#define	CAN1_IF2MSK_Msk    	(IO_CAN1.IF2MSK.bit.Msk)
#define	CAN1_IF2ARB			(IO_CAN1.IF2ARB.word)
#define	CAN1_IF2ARB_IF2ARB2		(IO_CAN1.IF2ARB.hword.IF2ARB2)
#define	CAN1_IF2ARB_IF2ARB1		(IO_CAN1.IF2ARB.hword.IF2ARB1)
#define	CAN1_IF2ARB_IF2ARB2H		(IO_CAN1.IF2ARB.byte.IF2ARB2H)
#define	CAN1_IF2ARB_IF2ARB2L		(IO_CAN1.IF2ARB.byte.IF2ARB2L)
#define	CAN1_IF2ARB_IF2ARB1H		(IO_CAN1.IF2ARB.byte.IF2ARB1H)
#define	CAN1_IF2ARB_IF2ARB1L		(IO_CAN1.IF2ARB.byte.IF2ARB1L)
#define	CAN1_IF2ARB_MsgVal    	(IO_CAN1.IF2ARB.bit.MsgVal)
#define	CAN1_IF2ARB_Xtd    	(IO_CAN1.IF2ARB.bit.Xtd)
#define	CAN1_IF2ARB_Dir    	(IO_CAN1.IF2ARB.bit.Dir)
#define	CAN1_IF2ARB_ID    	(IO_CAN1.IF2ARB.bit.ID)
#define	CAN1_IF2MCTR			(IO_CAN1.IF2MCTR.hword)
#define	CAN1_IF2MCTR_IF2MCTRH		(IO_CAN1.IF2MCTR.byte.IF2MCTRH)
#define	CAN1_IF2MCTR_IF2MCTRL		(IO_CAN1.IF2MCTR.byte.IF2MCTRL)
#define	CAN1_IF2MCTR_NewDat    	(IO_CAN1.IF2MCTR.bit.NewDat)
#define	CAN1_IF2MCTR_MsgLst    	(IO_CAN1.IF2MCTR.bit.MsgLst)
#define	CAN1_IF2MCTR_IntPnd    	(IO_CAN1.IF2MCTR.bit.IntPnd)
#define	CAN1_IF2MCTR_UMask    	(IO_CAN1.IF2MCTR.bit.UMask)
#define	CAN1_IF2MCTR_TxIE    	(IO_CAN1.IF2MCTR.bit.TxIE)
#define	CAN1_IF2MCTR_RxIE    	(IO_CAN1.IF2MCTR.bit.RxIE)
#define	CAN1_IF2MCTR_RmtEn    	(IO_CAN1.IF2MCTR.bit.RmtEn)
#define	CAN1_IF2MCTR_TxRqst    	(IO_CAN1.IF2MCTR.bit.TxRqst)
#define	CAN1_IF2MCTR_EoB    	(IO_CAN1.IF2MCTR.bit.EoB)
#define	CAN1_IF2MCTR_DLC    	(IO_CAN1.IF2MCTR.bit.DLC)
#define	CAN1_IF2DTA1	(IO_CAN1.IF2DTA1.hword)
#define	CAN1_IF2DTA1_IF2DTA1H	(IO_CAN1.IF2DTA1.byte.IF2DTA1H)
#define	CAN1_IF2DTA1_IF2DTA1L	(IO_CAN1.IF2DTA1.byte.IF2DTA1L)
#define	CAN1_IF2DTA2	(IO_CAN1.IF2DTA2.hword)
#define	CAN1_IF2DTA2_IF2DTA2H	(IO_CAN1.IF2DTA2.byte.IF2DTA2H)
#define	CAN1_IF2DTA2_IF2DTA2L	(IO_CAN1.IF2DTA2.byte.IF2DTA2L)
#define	CAN1_IF2DTB1	(IO_CAN1.IF2DTB1.hword)
#define	CAN1_IF2DTB1_IF2DTB1H	(IO_CAN1.IF2DTB1.byte.IF2DTB1H)
#define	CAN1_IF2DTB1_IF2DTB1L	(IO_CAN1.IF2DTB1.byte.IF2DTB1L)
#define	CAN1_IF2DTB2	(IO_CAN1.IF2DTB2.hword)
#define	CAN1_IF2DTB2_IF2DTB2H	(IO_CAN1.IF2DTB2.byte.IF2DTB2H)
#define	CAN1_IF2DTB2_IF2DTB2L	(IO_CAN1.IF2DTB2.byte.IF2DTB2L)
#define	CAN1_IF2DTA2_	(IO_CAN1.IF2DTA2_.hword)
#define	CAN1_IF2DTA2__IF2DTA2_H	(IO_CAN1.IF2DTA2_.byte.IF2DTA2_H)
#define	CAN1_IF2DTA2__IF2DTA2_L	(IO_CAN1.IF2DTA2_.byte.IF2DTA2_L)
#define	CAN1_IF2DTA1_	(IO_CAN1.IF2DTA1_.hword)
#define	CAN1_IF2DTA1__IF2DTA1_H	(IO_CAN1.IF2DTA1_.byte.IF2DTA1_H)
#define	CAN1_IF2DTA1__IF2DTA1_L	(IO_CAN1.IF2DTA1_.byte.IF2DTA1_L)
#define	CAN1_IF2DTB2_	(IO_CAN1.IF2DTB2_.hword)
#define	CAN1_IF2DTB2__IF2DTB2_H	(IO_CAN1.IF2DTB2_.byte.IF2DTB2_H)
#define	CAN1_IF2DTB2__IF2DTB2_L	(IO_CAN1.IF2DTB2_.byte.IF2DTB2_L)
#define	CAN1_IF2DTB1_	(IO_CAN1.IF2DTB1_.hword)
#define	CAN1_IF2DTB1__IF2DTB1_H	(IO_CAN1.IF2DTB1_.byte.IF2DTB1_H)
#define	CAN1_IF2DTB1__IF2DTB1_L	(IO_CAN1.IF2DTB1_.byte.IF2DTB1_L)
#define	CAN1_TREQR12			(IO_CAN1.TREQR12.word)
#define	CAN1_TREQR12_TREQR2		(IO_CAN1.TREQR12.hword.TREQR2)
#define	CAN1_TREQR12_TREQR1		(IO_CAN1.TREQR12.hword.TREQR1)
#define	CAN1_TREQR12_TREQR2H		(IO_CAN1.TREQR12.byte.TREQR2H)
#define	CAN1_TREQR12_TREQR2L		(IO_CAN1.TREQR12.byte.TREQR2L)
#define	CAN1_TREQR12_TREQR1H		(IO_CAN1.TREQR12.byte.TREQR1H)
#define	CAN1_TREQR12_TREQR1L		(IO_CAN1.TREQR12.byte.TREQR1L)
#define	CAN1_TREQR34			(IO_CAN1.TREQR34.word)
#define	CAN1_TREQR34_TREQR4		(IO_CAN1.TREQR34.hword.TREQR4)
#define	CAN1_TREQR34_TREQR3		(IO_CAN1.TREQR34.hword.TREQR3)
#define	CAN1_TREQR34_TREQR4H		(IO_CAN1.TREQR34.byte.TREQR4H)
#define	CAN1_TREQR34_TREQR4L		(IO_CAN1.TREQR34.byte.TREQR4L)
#define	CAN1_TREQR34_TREQR3H		(IO_CAN1.TREQR34.byte.TREQR3H)
#define	CAN1_TREQR34_TREQR3L		(IO_CAN1.TREQR34.byte.TREQR3L)
#define	CAN1_TREQR56			(IO_CAN1.TREQR56.word)
#define	CAN1_TREQR56_TREQR6		(IO_CAN1.TREQR56.hword.TREQR6)
#define	CAN1_TREQR56_TREQR5		(IO_CAN1.TREQR56.hword.TREQR5)
#define	CAN1_TREQR56_TREQR6H		(IO_CAN1.TREQR56.byte.TREQR6H)
#define	CAN1_TREQR56_TREQR6L		(IO_CAN1.TREQR56.byte.TREQR6L)
#define	CAN1_TREQR56_TREQR5H		(IO_CAN1.TREQR56.byte.TREQR5H)
#define	CAN1_TREQR56_TREQR5L		(IO_CAN1.TREQR56.byte.TREQR5L)
#define	CAN1_TREQR78			(IO_CAN1.TREQR78.word)
#define	CAN1_TREQR78_TREQR8		(IO_CAN1.TREQR78.hword.TREQR8)
#define	CAN1_TREQR78_TREQR7		(IO_CAN1.TREQR78.hword.TREQR7)
#define	CAN1_TREQR78_TREQR8H		(IO_CAN1.TREQR78.byte.TREQR8H)
#define	CAN1_TREQR78_TREQR8L		(IO_CAN1.TREQR78.byte.TREQR8L)
#define	CAN1_TREQR78_TREQR7H		(IO_CAN1.TREQR78.byte.TREQR7H)
#define	CAN1_TREQR78_TREQR7L		(IO_CAN1.TREQR78.byte.TREQR7L)
#define	CAN1_NEWDT12			(IO_CAN1.NEWDT12.word)
#define	CAN1_NEWDT12_NEWDT2		(IO_CAN1.NEWDT12.hword.NEWDT2)
#define	CAN1_NEWDT12_NEWDT1		(IO_CAN1.NEWDT12.hword.NEWDT1)
#define	CAN1_NEWDT12_NEWDT2H		(IO_CAN1.NEWDT12.byte.NEWDT2H)
#define	CAN1_NEWDT12_NEWDT2L		(IO_CAN1.NEWDT12.byte.NEWDT2L)
#define	CAN1_NEWDT12_NEWDT1H		(IO_CAN1.NEWDT12.byte.NEWDT1H)
#define	CAN1_NEWDT12_NEWDT1L		(IO_CAN1.NEWDT12.byte.NEWDT1L)
#define	CAN1_NEWDT34			(IO_CAN1.NEWDT34.word)
#define	CAN1_NEWDT34_NEWDT4		(IO_CAN1.NEWDT34.hword.NEWDT4)
#define	CAN1_NEWDT34_NEWDT3		(IO_CAN1.NEWDT34.hword.NEWDT3)
#define	CAN1_NEWDT34_NEWDT4H		(IO_CAN1.NEWDT34.byte.NEWDT4H)
#define	CAN1_NEWDT34_NEWDT4L		(IO_CAN1.NEWDT34.byte.NEWDT4L)
#define	CAN1_NEWDT34_NEWDT3H		(IO_CAN1.NEWDT34.byte.NEWDT3H)
#define	CAN1_NEWDT34_NEWDT3L		(IO_CAN1.NEWDT34.byte.NEWDT3L)
#define	CAN1_NEWDT56			(IO_CAN1.NEWDT56.word)
#define	CAN1_NEWDT56_NEWDT6		(IO_CAN1.NEWDT56.hword.NEWDT6)
#define	CAN1_NEWDT56_NEWDT5		(IO_CAN1.NEWDT56.hword.NEWDT5)
#define	CAN1_NEWDT56_NEWDT6H		(IO_CAN1.NEWDT56.byte.NEWDT6H)
#define	CAN1_NEWDT56_NEWDT6L		(IO_CAN1.NEWDT56.byte.NEWDT6L)
#define	CAN1_NEWDT56_NEWDT5H		(IO_CAN1.NEWDT56.byte.NEWDT5H)
#define	CAN1_NEWDT56_NEWDT5L		(IO_CAN1.NEWDT56.byte.NEWDT5L)
#define	CAN1_NEWDT78			(IO_CAN1.NEWDT78.word)
#define	CAN1_NEWDT78_NEWDT8		(IO_CAN1.NEWDT78.hword.NEWDT8)
#define	CAN1_NEWDT78_NEWDT7		(IO_CAN1.NEWDT78.hword.NEWDT7)
#define	CAN1_NEWDT78_NEWDT8H		(IO_CAN1.NEWDT78.byte.NEWDT8H)
#define	CAN1_NEWDT78_NEWDT8L		(IO_CAN1.NEWDT78.byte.NEWDT8L)
#define	CAN1_NEWDT78_NEWDT7H		(IO_CAN1.NEWDT78.byte.NEWDT7H)
#define	CAN1_NEWDT78_NEWDT7L		(IO_CAN1.NEWDT78.byte.NEWDT7L)
#define	CAN1_INTPND12			(IO_CAN1.INTPND12.word)
#define	CAN1_INTPND12_INTPND2		(IO_CAN1.INTPND12.hword.INTPND2)
#define	CAN1_INTPND12_INTPND1		(IO_CAN1.INTPND12.hword.INTPND1)
#define	CAN1_INTPND12_INTPND2H	(IO_CAN1.INTPND12.byte.INTPND2H)
#define	CAN1_INTPND12_INTPND2L	(IO_CAN1.INTPND12.byte.INTPND2L)
#define	CAN1_INTPND12_INTPND1H	(IO_CAN1.INTPND12.byte.INTPND1H)
#define	CAN1_INTPND12_INTPND1L	(IO_CAN1.INTPND12.byte.INTPND1L)
#define	CAN1_INTPND34			(IO_CAN1.INTPND34.word)
#define	CAN1_INTPND34_INTPND4		(IO_CAN1.INTPND34.hword.INTPND4)
#define	CAN1_INTPND34_INTPND3		(IO_CAN1.INTPND34.hword.INTPND3)
#define	CAN1_INTPND34_INTPND4H	(IO_CAN1.INTPND34.byte.INTPND4H)
#define	CAN1_INTPND34_INTPND4L	(IO_CAN1.INTPND34.byte.INTPND4L)
#define	CAN1_INTPND34_INTPND3H	(IO_CAN1.INTPND34.byte.INTPND3H)
#define	CAN1_INTPND34_INTPND3L	(IO_CAN1.INTPND34.byte.INTPND3L)
#define	CAN1_INTPND56			(IO_CAN1.INTPND56.word)
#define	CAN1_INTPND56_INTPND6		(IO_CAN1.INTPND56.hword.INTPND6)
#define	CAN1_INTPND56_INTPND5		(IO_CAN1.INTPND56.hword.INTPND5)
#define	CAN1_INTPND56_INTPND6H	(IO_CAN1.INTPND56.byte.INTPND6H)
#define	CAN1_INTPND56_INTPND6L	(IO_CAN1.INTPND56.byte.INTPND6L)
#define	CAN1_INTPND56_INTPND5H	(IO_CAN1.INTPND56.byte.INTPND5H)
#define	CAN1_INTPND56_INTPND5L	(IO_CAN1.INTPND56.byte.INTPND5L)
#define	CAN1_INTPND78			(IO_CAN1.INTPND78.word)
#define	CAN1_INTPND78_INTPND8		(IO_CAN1.INTPND78.hword.INTPND8)
#define	CAN1_INTPND78_INTPND7		(IO_CAN1.INTPND78.hword.INTPND7)
#define	CAN1_INTPND78_INTPND8H	(IO_CAN1.INTPND78.byte.INTPND8H)
#define	CAN1_INTPND78_INTPND8L	(IO_CAN1.INTPND78.byte.INTPND8L)
#define	CAN1_INTPND78_INTPND7H	(IO_CAN1.INTPND78.byte.INTPND7H)
#define	CAN1_INTPND78_INTPND7L	(IO_CAN1.INTPND78.byte.INTPND7L)
#define	CAN1_MSGVAL12			(IO_CAN1.MSGVAL12.word)
#define	CAN1_MSGVAL12_MSGVAL2		(IO_CAN1.MSGVAL12.hword.MSGVAL2)
#define	CAN1_MSGVAL12_MSGVAL1		(IO_CAN1.MSGVAL12.hword.MSGVAL1)
#define	CAN1_MSGVAL12_MSGVAL2H	(IO_CAN1.MSGVAL12.byte.MSGVAL2H)
#define	CAN1_MSGVAL12_MSGVAL2L	(IO_CAN1.MSGVAL12.byte.MSGVAL2L)
#define	CAN1_MSGVAL12_MSGVAL1H	(IO_CAN1.MSGVAL12.byte.MSGVAL1H)
#define	CAN1_MSGVAL12_MSGVAL1L	(IO_CAN1.MSGVAL12.byte.MSGVAL1L)
#define	CAN1_MSGVAL34			(IO_CAN1.MSGVAL34.word)
#define	CAN1_MSGVAL34_MSGVAL4		(IO_CAN1.MSGVAL34.hword.MSGVAL4)
#define	CAN1_MSGVAL34_MSGVAL3		(IO_CAN1.MSGVAL34.hword.MSGVAL3)
#define	CAN1_MSGVAL34_MSGVAL4H	(IO_CAN1.MSGVAL34.byte.MSGVAL4H)
#define	CAN1_MSGVAL34_MSGVAL4L	(IO_CAN1.MSGVAL34.byte.MSGVAL4L)
#define	CAN1_MSGVAL34_MSGVAL3H	(IO_CAN1.MSGVAL34.byte.MSGVAL3H)
#define	CAN1_MSGVAL34_MSGVAL3L	(IO_CAN1.MSGVAL34.byte.MSGVAL3L)
#define	CAN1_MSGVAL56			(IO_CAN1.MSGVAL56.word)
#define	CAN1_MSGVAL56_MSGVAL6		(IO_CAN1.MSGVAL56.hword.MSGVAL6)
#define	CAN1_MSGVAL56_MSGVAL5		(IO_CAN1.MSGVAL56.hword.MSGVAL5)
#define	CAN1_MSGVAL56_MSGVAL6H	(IO_CAN1.MSGVAL56.byte.MSGVAL6H)
#define	CAN1_MSGVAL56_MSGVAL6L	(IO_CAN1.MSGVAL56.byte.MSGVAL6L)
#define	CAN1_MSGVAL56_MSGVAL5H	(IO_CAN1.MSGVAL56.byte.MSGVAL5H)
#define	CAN1_MSGVAL56_MSGVAL5L	(IO_CAN1.MSGVAL56.byte.MSGVAL5L)
#define	CAN1_MSGVAL78			(IO_CAN1.MSGVAL78.word)
#define	CAN1_MSGVAL78_MSGVAL8		(IO_CAN1.MSGVAL78.hword.MSGVAL8)
#define	CAN1_MSGVAL78_MSGVAL7		(IO_CAN1.MSGVAL78.hword.MSGVAL7)
#define	CAN1_MSGVAL78_MSGVAL8H	(IO_CAN1.MSGVAL78.byte.MSGVAL8H)
#define	CAN1_MSGVAL78_MSGVAL8L	(IO_CAN1.MSGVAL78.byte.MSGVAL8L)
#define	CAN1_MSGVAL78_MSGVAL7H	(IO_CAN1.MSGVAL78.byte.MSGVAL7H)
#define	CAN1_MSGVAL78_MSGVAL7L	(IO_CAN1.MSGVAL78.byte.MSGVAL7L)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_CAN2,attr=IO,locate=0x2200
#endif

__IO_EXTENDED	CANSTR	IO_CAN2;

#define	CAN2_CTRLR			(IO_CAN2.CTRLR.hword)
#define	CAN2_CTRLR_CTRLRH		(IO_CAN2.CTRLR.byte.CTRLRH)
#define	CAN2_CTRLR_CTRLRL		(IO_CAN2.CTRLR.byte.CTRLRL)
#define	CAN2_CTRLR_Test    	(IO_CAN2.CTRLR.bit.Test)
#define	CAN2_CTRLR_CCE    	(IO_CAN2.CTRLR.bit.CCE)
#define	CAN2_CTRLR_DAR    	(IO_CAN2.CTRLR.bit.DAR)
#define	CAN2_CTRLR_EIE    	(IO_CAN2.CTRLR.bit.EIE)
#define	CAN2_CTRLR_SIE    	(IO_CAN2.CTRLR.bit.SIE)
#define	CAN2_CTRLR_IE    	(IO_CAN2.CTRLR.bit.IE)
#define	CAN2_CTRLR_Init    	(IO_CAN2.CTRLR.bit.Init)
#define	CAN2_STATR			(IO_CAN2.STATR.hword)
#define	CAN2_STATR_STATRH		(IO_CAN2.STATR.byte.STATRH)
#define	CAN2_STATR_STATRL		(IO_CAN2.STATR.byte.STATRL)
#define	CAN2_STATR_BOff    	(IO_CAN2.STATR.bit.BOff)
#define	CAN2_STATR_EWarn    	(IO_CAN2.STATR.bit.EWarn)
#define	CAN2_STATR_EPass    	(IO_CAN2.STATR.bit.EPass)
#define	CAN2_STATR_RxOk    	(IO_CAN2.STATR.bit.RxOk)
#define	CAN2_STATR_TxOk    	(IO_CAN2.STATR.bit.TxOk)
#define	CAN2_STATR_LEC    	(IO_CAN2.STATR.bit.LEC)
#define	CAN2_ERRCNT			(IO_CAN2.ERRCNT.hword)
#define	CAN2_ERRCNT_ERRCNTH	(IO_CAN2.ERRCNT.byte.ERRCNTH)
#define	CAN2_ERRCNT_ERRCNTL	(IO_CAN2.ERRCNT.byte.ERRCNTL)
#define	CAN2_ERRCNT_RP    	(IO_CAN2.ERRCNT.bit.RP)
#define	CAN2_ERRCNT_REC    	(IO_CAN2.ERRCNT.bit.REC)
#define	CAN2_ERRCNT_TEC    	(IO_CAN2.ERRCNT.bit.TEC)
#define	CAN2_BTR			(IO_CAN2.BTR.hword)
#define	CAN2_BTR_BTRH	(IO_CAN2.BTR.byte.BTRH)
#define	CAN2_BTR_BTRL	(IO_CAN2.BTR.byte.BTRL)
#define	CAN2_BTR_TSeg2    	(IO_CAN2.BTR.bit.TSeg2)
#define	CAN2_BTR_TSeg1    	(IO_CAN2.BTR.bit.TSeg1)
#define	CAN2_BTR_SJW    	(IO_CAN2.BTR.bit.SJW)
#define	CAN2_BTR_BRP    	(IO_CAN2.BTR.bit.BRP)
#define	CAN2_INTR			(IO_CAN2.INTR.hword)
#define	CAN2_INTR_INTRH	(IO_CAN2.INTR.byte.INTRH)
#define	CAN2_INTR_INTRL	(IO_CAN2.INTR.byte.INTRL)
#define	CAN2_TESTR			(IO_CAN2.TESTR.hword)
#define	CAN2_TESTR_TESTRH	(IO_CAN2.TESTR.byte.TESTRH)
#define	CAN2_TESTR_TESTRL	(IO_CAN2.TESTR.byte.TESTRL)
#define	CAN2_TESTR_Rx    	(IO_CAN2.TESTR.bit.Rx)
#define	CAN2_TESTR_Tx    	(IO_CAN2.TESTR.bit.Tx)
#define	CAN2_TESTR_LBack    	(IO_CAN2.TESTR.bit.LBack)
#define	CAN2_TESTR_Silent    	(IO_CAN2.TESTR.bit.Silent)
#define	CAN2_TESTR_Basic    	(IO_CAN2.TESTR.bit.Basic)
#define	CAN2_BRPER			(IO_CAN2.BRPER.hword)
#define	CAN2_BRPER_BRPERH	(IO_CAN2.BRPER.byte.BRPERH)
#define	CAN2_BRPER_BRPERL	(IO_CAN2.BRPER.byte.BRPERL)
#define	CAN2_BRPER_BRPE    	(IO_CAN2.BRPER.bit.BRPE)
#define	CAN2_IF1CREQ			(IO_CAN2.IF1CREQ.hword)
#define	CAN2_IF1CREQ_IF1CREQH		(IO_CAN2.IF1CREQ.byte.IF1CREQH)
#define	CAN2_IF1CREQ_IF1CREQL		(IO_CAN2.IF1CREQ.byte.IF1CREQL)
#define	CAN2_IF1CREQ_BUSY    	(IO_CAN2.IF1CREQ.bit.BUSY)
#define	CAN2_IF1CREQ_MN    	(IO_CAN2.IF1CREQ.bit.MN)
#define	CAN2_IF1CMSK			(IO_CAN2.IF1CMSK.hword)
#define	CAN2_IF1CMSK_IF1CMSKH		(IO_CAN2.IF1CMSK.byte.IF1CMSKH)
#define	CAN2_IF1CMSK_IF1CMSKL		(IO_CAN2.IF1CMSK.byte.IF1CMSKL)
#define	CAN2_IF1CMSK_WR_RD    	(IO_CAN2.IF1CMSK.bit.WR_RD)
#define	CAN2_IF1CMSK_Mask    	(IO_CAN2.IF1CMSK.bit.Mask)
#define	CAN2_IF1CMSK_Arb    	(IO_CAN2.IF1CMSK.bit.Arb)
#define	CAN2_IF1CMSK_Control    	(IO_CAN2.IF1CMSK.bit.Control)
#define	CAN2_IF1CMSK_CIP    	(IO_CAN2.IF1CMSK.bit.CIP)
#define	CAN2_IF1CMSK_TxReq    	(IO_CAN2.IF1CMSK.bit.TxReq)
#define	CAN2_IF1CMSK_DataA    	(IO_CAN2.IF1CMSK.bit.DataA)
#define	CAN2_IF1CMSK_DataB    	(IO_CAN2.IF1CMSK.bit.DataB)
#define	CAN2_IF1MSK			(IO_CAN2.IF1MSK.word)
#define	CAN2_IF1MSK_IF1MSK2		(IO_CAN2.IF1MSK.hword.IF1MSK2)
#define	CAN2_IF1MSK_IF1MSK1		(IO_CAN2.IF1MSK.hword.IF1MSK1)
#define	CAN2_IF1MSK_IF1MSK2H		(IO_CAN2.IF1MSK.byte.IF1MSK2H)
#define	CAN2_IF1MSK_IF1MSK2L		(IO_CAN2.IF1MSK.byte.IF1MSK2L)
#define	CAN2_IF1MSK_IF1MSK1H		(IO_CAN2.IF1MSK.byte.IF1MSK1H)
#define	CAN2_IF1MSK_IF1MSK1L		(IO_CAN2.IF1MSK.byte.IF1MSK1L)
#define	CAN2_IF1MSK_MXtd    	(IO_CAN2.IF1MSK.bit.MXtd)
#define	CAN2_IF1MSK_MDir    	(IO_CAN2.IF1MSK.bit.MDir)
#define	CAN2_IF1MSK_Msk    	(IO_CAN2.IF1MSK.bit.Msk)
#define	CAN2_IF1ARB			(IO_CAN2.IF1ARB.word)
#define	CAN2_IF1ARB_IF1ARB2		(IO_CAN2.IF1ARB.hword.IF1ARB2)
#define	CAN2_IF1ARB_IF1ARB1		(IO_CAN2.IF1ARB.hword.IF1ARB1)
#define	CAN2_IF1ARB_IF1ARB2H		(IO_CAN2.IF1ARB.byte.IF1ARB2H)
#define	CAN2_IF1ARB_IF1ARB2L		(IO_CAN2.IF1ARB.byte.IF1ARB2L)
#define	CAN2_IF1ARB_IF1ARB1H		(IO_CAN2.IF1ARB.byte.IF1ARB1H)
#define	CAN2_IF1ARB_IF1ARB1L		(IO_CAN2.IF1ARB.byte.IF1ARB1L)
#define	CAN2_IF1ARB_MsgVal    	(IO_CAN2.IF1ARB.bit.MsgVal)
#define	CAN2_IF1ARB_Xtd    	(IO_CAN2.IF1ARB.bit.Xtd)
#define	CAN2_IF1ARB_Dir    	(IO_CAN2.IF1ARB.bit.Dir)
#define	CAN2_IF1ARB_ID    	(IO_CAN2.IF1ARB.bit.ID)
#define	CAN2_IF1MCTR			(IO_CAN2.IF1MCTR.hword)
#define	CAN2_IF1MCTR_IF1MCTRH		(IO_CAN2.IF1MCTR.byte.IF1MCTRH)
#define	CAN2_IF1MCTR_IF1MCTRL		(IO_CAN2.IF1MCTR.byte.IF1MCTRL)
#define	CAN2_IF1MCTR_NewDat    	(IO_CAN2.IF1MCTR.bit.NewDat)
#define	CAN2_IF1MCTR_MsgLst    	(IO_CAN2.IF1MCTR.bit.MsgLst)
#define	CAN2_IF1MCTR_IntPnd    	(IO_CAN2.IF1MCTR.bit.IntPnd)
#define	CAN2_IF1MCTR_UMask    	(IO_CAN2.IF1MCTR.bit.UMask)
#define	CAN2_IF1MCTR_TxIE    	(IO_CAN2.IF1MCTR.bit.TxIE)
#define	CAN2_IF1MCTR_RxIE    	(IO_CAN2.IF1MCTR.bit.RxIE)
#define	CAN2_IF1MCTR_RmtEn    	(IO_CAN2.IF1MCTR.bit.RmtEn)
#define	CAN2_IF1MCTR_TxRqst    	(IO_CAN2.IF1MCTR.bit.TxRqst)
#define	CAN2_IF1MCTR_EoB    	(IO_CAN2.IF1MCTR.bit.EoB)
#define	CAN2_IF1MCTR_DLC    	(IO_CAN2.IF1MCTR.bit.DLC)
#define	CAN2_IF1DTA1	(IO_CAN2.IF1DTA1.hword)
#define	CAN2_IF1DTA1_IF1DTA1H	(IO_CAN2.IF1DTA1.byte.IF1DTA1H)
#define	CAN2_IF1DTA1_IF1DTA1L	(IO_CAN2.IF1DTA1.byte.IF1DTA1L)
#define	CAN2_IF1DTA2	(IO_CAN2.IF1DTA2.hword)
#define	CAN2_IF1DTA2_IF1DTA2H	(IO_CAN2.IF1DTA2.byte.IF1DTA2H)
#define	CAN2_IF1DTA2_IF1DTA2L	(IO_CAN2.IF1DTA2.byte.IF1DTA2L)
#define	CAN2_IF1DTB1	(IO_CAN2.IF1DTB1.hword)
#define	CAN2_IF1DTB1_IF1DTB1H	(IO_CAN2.IF1DTB1.byte.IF1DTB1H)
#define	CAN2_IF1DTB1_IF1DTB1L	(IO_CAN2.IF1DTB1.byte.IF1DTB1L)
#define	CAN2_IF1DTB2	(IO_CAN2.IF1DTB2.hword)
#define	CAN2_IF1DTB2_IF1DTB2H	(IO_CAN2.IF1DTB2.byte.IF1DTB2H)
#define	CAN2_IF1DTB2_IF1DTB2L	(IO_CAN2.IF1DTB2.byte.IF1DTB2L)
#define	CAN2_IF1DTA2_	(IO_CAN2.IF1DTA2_.hword)
#define	CAN2_IF1DTA2__IF1DTA2_H	(IO_CAN2.IF1DTA2_.byte.IF1DTA2_H)
#define	CAN2_IF1DTA2__IF1DTA2_L	(IO_CAN2.IF1DTA2_.byte.IF1DTA2_L)
#define	CAN2_IF1DTA1_	(IO_CAN2.IF1DTA1_.hword)
#define	CAN2_IF1DTA1__IF1DTA1_H	(IO_CAN2.IF1DTA1_.byte.IF1DTA1_H)
#define	CAN2_IF1DTA1__IF1DTA1_L	(IO_CAN2.IF1DTA1_.byte.IF1DTA1_L)
#define	CAN2_IF1DTB2_	(IO_CAN2.IF1DTB2_.hword)
#define	CAN2_IF1DTB2__IF1DTB2_H	(IO_CAN2.IF1DTB2_.byte.IF1DTB2_H)
#define	CAN2_IF1DTB2__IF1DTB2_L	(IO_CAN2.IF1DTB2_.byte.IF1DTB2_L)
#define	CAN2_IF1DTB1_	(IO_CAN2.IF1DTB1_.hword)
#define	CAN2_IF1DTB1__IF1DTB1_H	(IO_CAN2.IF1DTB1_.byte.IF1DTB1_H)
#define	CAN2_IF1DTB1__IF1DTB1_L	(IO_CAN2.IF1DTB1_.byte.IF1DTB1_L)
#define	CAN2_IF2CREQ			(IO_CAN2.IF2CREQ.hword)
#define	CAN2_IF2CREQ_IF2CREQH		(IO_CAN2.IF2CREQ.byte.IF2CREQH)
#define	CAN2_IF2CREQ_IF2CREQL		(IO_CAN2.IF2CREQ.byte.IF2CREQL)
#define	CAN2_IF2CREQ_BUSY    	(IO_CAN2.IF2CREQ.bit.BUSY)
#define	CAN2_IF2CREQ_MN    	(IO_CAN2.IF2CREQ.bit.MN)
#define	CAN2_IF2CMSK			(IO_CAN2.IF2CMSK.hword)
#define	CAN2_IF2CMSK_IF2CMSKH		(IO_CAN2.IF2CMSK.byte.IF2CMSKH)
#define	CAN2_IF2CMSK_IF2CMSKL		(IO_CAN2.IF2CMSK.byte.IF2CMSKL)
#define	CAN2_IF2CMSK_WR_RD    	(IO_CAN2.IF2CMSK.bit.WR_RD)
#define	CAN2_IF2CMSK_Mask    	(IO_CAN2.IF2CMSK.bit.Mask)
#define	CAN2_IF2CMSK_Arb    	(IO_CAN2.IF2CMSK.bit.Arb)
#define	CAN2_IF2CMSK_Control    	(IO_CAN2.IF2CMSK.bit.Control)
#define	CAN2_IF2CMSK_CIP    	(IO_CAN2.IF2CMSK.bit.CIP)
#define	CAN2_IF2CMSK_TxReq    	(IO_CAN2.IF2CMSK.bit.TxReq)
#define	CAN2_IF2CMSK_DataA    	(IO_CAN2.IF2CMSK.bit.DataA)
#define	CAN2_IF2CMSK_DataB    	(IO_CAN2.IF2CMSK.bit.DataB)
#define	CAN2_IF2MSK			(IO_CAN2.IF2MSK.word)
#define	CAN2_IF2MSK_IF2MSK2		(IO_CAN2.IF2MSK.hword.IF2MSK2)
#define	CAN2_IF2MSK_IF2MSK1		(IO_CAN2.IF2MSK.hword.IF2MSK1)
#define	CAN2_IF2MSK_IF2MSK2H		(IO_CAN2.IF2MSK.byte.IF2MSK2H)
#define	CAN2_IF2MSK_IF2MSK2L		(IO_CAN2.IF2MSK.byte.IF2MSK2L)
#define	CAN2_IF2MSK_IF2MSK1H		(IO_CAN2.IF2MSK.byte.IF2MSK1H)
#define	CAN2_IF2MSK_IF2MSK1L		(IO_CAN2.IF2MSK.byte.IF2MSK1L)
#define	CAN2_IF2MSK_MXtd    	(IO_CAN2.IF2MSK.bit.MXtd)
#define	CAN2_IF2MSK_MDir    	(IO_CAN2.IF2MSK.bit.MDir)
#define	CAN2_IF2MSK_Msk    	(IO_CAN2.IF2MSK.bit.Msk)
#define	CAN2_IF2ARB			(IO_CAN2.IF2ARB.word)
#define	CAN2_IF2ARB_IF2ARB2		(IO_CAN2.IF2ARB.hword.IF2ARB2)
#define	CAN2_IF2ARB_IF2ARB1		(IO_CAN2.IF2ARB.hword.IF2ARB1)
#define	CAN2_IF2ARB_IF2ARB2H		(IO_CAN2.IF2ARB.byte.IF2ARB2H)
#define	CAN2_IF2ARB_IF2ARB2L		(IO_CAN2.IF2ARB.byte.IF2ARB2L)
#define	CAN2_IF2ARB_IF2ARB1H		(IO_CAN2.IF2ARB.byte.IF2ARB1H)
#define	CAN2_IF2ARB_IF2ARB1L		(IO_CAN2.IF2ARB.byte.IF2ARB1L)
#define	CAN2_IF2ARB_MsgVal    	(IO_CAN2.IF2ARB.bit.MsgVal)
#define	CAN2_IF2ARB_Xtd    	(IO_CAN2.IF2ARB.bit.Xtd)
#define	CAN2_IF2ARB_Dir    	(IO_CAN2.IF2ARB.bit.Dir)
#define	CAN2_IF2ARB_ID    	(IO_CAN2.IF2ARB.bit.ID)
#define	CAN2_IF2MCTR			(IO_CAN2.IF2MCTR.hword)
#define	CAN2_IF2MCTR_IF2MCTRH		(IO_CAN2.IF2MCTR.byte.IF2MCTRH)
#define	CAN2_IF2MCTR_IF2MCTRL		(IO_CAN2.IF2MCTR.byte.IF2MCTRL)
#define	CAN2_IF2MCTR_NewDat    	(IO_CAN2.IF2MCTR.bit.NewDat)
#define	CAN2_IF2MCTR_MsgLst    	(IO_CAN2.IF2MCTR.bit.MsgLst)
#define	CAN2_IF2MCTR_IntPnd    	(IO_CAN2.IF2MCTR.bit.IntPnd)
#define	CAN2_IF2MCTR_UMask    	(IO_CAN2.IF2MCTR.bit.UMask)
#define	CAN2_IF2MCTR_TxIE    	(IO_CAN2.IF2MCTR.bit.TxIE)
#define	CAN2_IF2MCTR_RxIE    	(IO_CAN2.IF2MCTR.bit.RxIE)
#define	CAN2_IF2MCTR_RmtEn    	(IO_CAN2.IF2MCTR.bit.RmtEn)
#define	CAN2_IF2MCTR_TxRqst    	(IO_CAN2.IF2MCTR.bit.TxRqst)
#define	CAN2_IF2MCTR_EoB    	(IO_CAN2.IF2MCTR.bit.EoB)
#define	CAN2_IF2MCTR_DLC    	(IO_CAN2.IF2MCTR.bit.DLC)
#define	CAN2_IF2DTA1	(IO_CAN2.IF2DTA1.hword)
#define	CAN2_IF2DTA1_IF2DTA1H	(IO_CAN2.IF2DTA1.byte.IF2DTA1H)
#define	CAN2_IF2DTA1_IF2DTA1L	(IO_CAN2.IF2DTA1.byte.IF2DTA1L)
#define	CAN2_IF2DTA2	(IO_CAN2.IF2DTA2.hword)
#define	CAN2_IF2DTA2_IF2DTA2H	(IO_CAN2.IF2DTA2.byte.IF2DTA2H)
#define	CAN2_IF2DTA2_IF2DTA2L	(IO_CAN2.IF2DTA2.byte.IF2DTA2L)
#define	CAN2_IF2DTB1	(IO_CAN2.IF2DTB1.hword)
#define	CAN2_IF2DTB1_IF2DTB1H	(IO_CAN2.IF2DTB1.byte.IF2DTB1H)
#define	CAN2_IF2DTB1_IF2DTB1L	(IO_CAN2.IF2DTB1.byte.IF2DTB1L)
#define	CAN2_IF2DTB2	(IO_CAN2.IF2DTB2.hword)
#define	CAN2_IF2DTB2_IF2DTB2H	(IO_CAN2.IF2DTB2.byte.IF2DTB2H)
#define	CAN2_IF2DTB2_IF2DTB2L	(IO_CAN2.IF2DTB2.byte.IF2DTB2L)
#define	CAN2_IF2DTA2_	(IO_CAN2.IF2DTA2_.hword)
#define	CAN2_IF2DTA2__IF2DTA2_H	(IO_CAN2.IF2DTA2_.byte.IF2DTA2_H)
#define	CAN2_IF2DTA2__IF2DTA2_L	(IO_CAN2.IF2DTA2_.byte.IF2DTA2_L)
#define	CAN2_IF2DTA1_	(IO_CAN2.IF2DTA1_.hword)
#define	CAN2_IF2DTA1__IF2DTA1_H	(IO_CAN2.IF2DTA1_.byte.IF2DTA1_H)
#define	CAN2_IF2DTA1__IF2DTA1_L	(IO_CAN2.IF2DTA1_.byte.IF2DTA1_L)
#define	CAN2_IF2DTB2_	(IO_CAN2.IF2DTB2_.hword)
#define	CAN2_IF2DTB2__IF2DTB2_H	(IO_CAN2.IF2DTB2_.byte.IF2DTB2_H)
#define	CAN2_IF2DTB2__IF2DTB2_L	(IO_CAN2.IF2DTB2_.byte.IF2DTB2_L)
#define	CAN2_IF2DTB1_	(IO_CAN2.IF2DTB1_.hword)
#define	CAN2_IF2DTB1__IF2DTB1_H	(IO_CAN2.IF2DTB1_.byte.IF2DTB1_H)
#define	CAN2_IF2DTB1__IF2DTB1_L	(IO_CAN2.IF2DTB1_.byte.IF2DTB1_L)
#define	CAN2_TREQR12			(IO_CAN2.TREQR12.word)
#define	CAN2_TREQR12_TREQR2		(IO_CAN2.TREQR12.hword.TREQR2)
#define	CAN2_TREQR12_TREQR1		(IO_CAN2.TREQR12.hword.TREQR1)
#define	CAN2_TREQR12_TREQR2H		(IO_CAN2.TREQR12.byte.TREQR2H)
#define	CAN2_TREQR12_TREQR2L		(IO_CAN2.TREQR12.byte.TREQR2L)
#define	CAN2_TREQR12_TREQR1H		(IO_CAN2.TREQR12.byte.TREQR1H)
#define	CAN2_TREQR12_TREQR1L		(IO_CAN2.TREQR12.byte.TREQR1L)
#define	CAN2_TREQR34			(IO_CAN2.TREQR34.word)
#define	CAN2_TREQR34_TREQR4		(IO_CAN2.TREQR34.hword.TREQR4)
#define	CAN2_TREQR34_TREQR3		(IO_CAN2.TREQR34.hword.TREQR3)
#define	CAN2_TREQR34_TREQR4H		(IO_CAN2.TREQR34.byte.TREQR4H)
#define	CAN2_TREQR34_TREQR4L		(IO_CAN2.TREQR34.byte.TREQR4L)
#define	CAN2_TREQR34_TREQR3H		(IO_CAN2.TREQR34.byte.TREQR3H)
#define	CAN2_TREQR34_TREQR3L		(IO_CAN2.TREQR34.byte.TREQR3L)
#define	CAN2_TREQR56			(IO_CAN2.TREQR56.word)
#define	CAN2_TREQR56_TREQR6		(IO_CAN2.TREQR56.hword.TREQR6)
#define	CAN2_TREQR56_TREQR5		(IO_CAN2.TREQR56.hword.TREQR5)
#define	CAN2_TREQR56_TREQR6H		(IO_CAN2.TREQR56.byte.TREQR6H)
#define	CAN2_TREQR56_TREQR6L		(IO_CAN2.TREQR56.byte.TREQR6L)
#define	CAN2_TREQR56_TREQR5H		(IO_CAN2.TREQR56.byte.TREQR5H)
#define	CAN2_TREQR56_TREQR5L		(IO_CAN2.TREQR56.byte.TREQR5L)
#define	CAN2_TREQR78			(IO_CAN2.TREQR78.word)
#define	CAN2_TREQR78_TREQR8		(IO_CAN2.TREQR78.hword.TREQR8)
#define	CAN2_TREQR78_TREQR7		(IO_CAN2.TREQR78.hword.TREQR7)
#define	CAN2_TREQR78_TREQR8H		(IO_CAN2.TREQR78.byte.TREQR8H)
#define	CAN2_TREQR78_TREQR8L		(IO_CAN2.TREQR78.byte.TREQR8L)
#define	CAN2_TREQR78_TREQR7H		(IO_CAN2.TREQR78.byte.TREQR7H)
#define	CAN2_TREQR78_TREQR7L		(IO_CAN2.TREQR78.byte.TREQR7L)
#define	CAN2_NEWDT12			(IO_CAN2.NEWDT12.word)
#define	CAN2_NEWDT12_NEWDT2		(IO_CAN2.NEWDT12.hword.NEWDT2)
#define	CAN2_NEWDT12_NEWDT1		(IO_CAN2.NEWDT12.hword.NEWDT1)
#define	CAN2_NEWDT12_NEWDT2H		(IO_CAN2.NEWDT12.byte.NEWDT2H)
#define	CAN2_NEWDT12_NEWDT2L		(IO_CAN2.NEWDT12.byte.NEWDT2L)
#define	CAN2_NEWDT12_NEWDT1H		(IO_CAN2.NEWDT12.byte.NEWDT1H)
#define	CAN2_NEWDT12_NEWDT1L		(IO_CAN2.NEWDT12.byte.NEWDT1L)
#define	CAN2_NEWDT34			(IO_CAN2.NEWDT34.word)
#define	CAN2_NEWDT34_NEWDT4		(IO_CAN2.NEWDT34.hword.NEWDT4)
#define	CAN2_NEWDT34_NEWDT3		(IO_CAN2.NEWDT34.hword.NEWDT3)
#define	CAN2_NEWDT34_NEWDT4H		(IO_CAN2.NEWDT34.byte.NEWDT4H)
#define	CAN2_NEWDT34_NEWDT4L		(IO_CAN2.NEWDT34.byte.NEWDT4L)
#define	CAN2_NEWDT34_NEWDT3H		(IO_CAN2.NEWDT34.byte.NEWDT3H)
#define	CAN2_NEWDT34_NEWDT3L		(IO_CAN2.NEWDT34.byte.NEWDT3L)
#define	CAN2_NEWDT56			(IO_CAN2.NEWDT56.word)
#define	CAN2_NEWDT56_NEWDT6		(IO_CAN2.NEWDT56.hword.NEWDT6)
#define	CAN2_NEWDT56_NEWDT5		(IO_CAN2.NEWDT56.hword.NEWDT5)
#define	CAN2_NEWDT56_NEWDT6H		(IO_CAN2.NEWDT56.byte.NEWDT6H)
#define	CAN2_NEWDT56_NEWDT6L		(IO_CAN2.NEWDT56.byte.NEWDT6L)
#define	CAN2_NEWDT56_NEWDT5H		(IO_CAN2.NEWDT56.byte.NEWDT5H)
#define	CAN2_NEWDT56_NEWDT5L		(IO_CAN2.NEWDT56.byte.NEWDT5L)
#define	CAN2_NEWDT78			(IO_CAN2.NEWDT78.word)
#define	CAN2_NEWDT78_NEWDT8		(IO_CAN2.NEWDT78.hword.NEWDT8)
#define	CAN2_NEWDT78_NEWDT7		(IO_CAN2.NEWDT78.hword.NEWDT7)
#define	CAN2_NEWDT78_NEWDT8H		(IO_CAN2.NEWDT78.byte.NEWDT8H)
#define	CAN2_NEWDT78_NEWDT8L		(IO_CAN2.NEWDT78.byte.NEWDT8L)
#define	CAN2_NEWDT78_NEWDT7H		(IO_CAN2.NEWDT78.byte.NEWDT7H)
#define	CAN2_NEWDT78_NEWDT7L		(IO_CAN2.NEWDT78.byte.NEWDT7L)
#define	CAN2_INTPND12			(IO_CAN2.INTPND12.word)
#define	CAN2_INTPND12_INTPND2		(IO_CAN2.INTPND12.hword.INTPND2)
#define	CAN2_INTPND12_INTPND1		(IO_CAN2.INTPND12.hword.INTPND1)
#define	CAN2_INTPND12_INTPND2H	(IO_CAN2.INTPND12.byte.INTPND2H)
#define	CAN2_INTPND12_INTPND2L	(IO_CAN2.INTPND12.byte.INTPND2L)
#define	CAN2_INTPND12_INTPND1H	(IO_CAN2.INTPND12.byte.INTPND1H)
#define	CAN2_INTPND12_INTPND1L	(IO_CAN2.INTPND12.byte.INTPND1L)
#define	CAN2_INTPND34			(IO_CAN2.INTPND34.word)
#define	CAN2_INTPND34_INTPND4		(IO_CAN2.INTPND34.hword.INTPND4)
#define	CAN2_INTPND34_INTPND3		(IO_CAN2.INTPND34.hword.INTPND3)
#define	CAN2_INTPND34_INTPND4H	(IO_CAN2.INTPND34.byte.INTPND4H)
#define	CAN2_INTPND34_INTPND4L	(IO_CAN2.INTPND34.byte.INTPND4L)
#define	CAN2_INTPND34_INTPND3H	(IO_CAN2.INTPND34.byte.INTPND3H)
#define	CAN2_INTPND34_INTPND3L	(IO_CAN2.INTPND34.byte.INTPND3L)
#define	CAN2_INTPND56			(IO_CAN2.INTPND56.word)
#define	CAN2_INTPND56_INTPND6		(IO_CAN2.INTPND56.hword.INTPND6)
#define	CAN2_INTPND56_INTPND5		(IO_CAN2.INTPND56.hword.INTPND5)
#define	CAN2_INTPND56_INTPND6H	(IO_CAN2.INTPND56.byte.INTPND6H)
#define	CAN2_INTPND56_INTPND6L	(IO_CAN2.INTPND56.byte.INTPND6L)
#define	CAN2_INTPND56_INTPND5H	(IO_CAN2.INTPND56.byte.INTPND5H)
#define	CAN2_INTPND56_INTPND5L	(IO_CAN2.INTPND56.byte.INTPND5L)
#define	CAN2_INTPND78			(IO_CAN2.INTPND78.word)
#define	CAN2_INTPND78_INTPND8		(IO_CAN2.INTPND78.hword.INTPND8)
#define	CAN2_INTPND78_INTPND7		(IO_CAN2.INTPND78.hword.INTPND7)
#define	CAN2_INTPND78_INTPND8H	(IO_CAN2.INTPND78.byte.INTPND8H)
#define	CAN2_INTPND78_INTPND8L	(IO_CAN2.INTPND78.byte.INTPND8L)
#define	CAN2_INTPND78_INTPND7H	(IO_CAN2.INTPND78.byte.INTPND7H)
#define	CAN2_INTPND78_INTPND7L	(IO_CAN2.INTPND78.byte.INTPND7L)
#define	CAN2_MSGVAL12			(IO_CAN2.MSGVAL12.word)
#define	CAN2_MSGVAL12_MSGVAL2		(IO_CAN2.MSGVAL12.hword.MSGVAL2)
#define	CAN2_MSGVAL12_MSGVAL1		(IO_CAN2.MSGVAL12.hword.MSGVAL1)
#define	CAN2_MSGVAL12_MSGVAL2H	(IO_CAN2.MSGVAL12.byte.MSGVAL2H)
#define	CAN2_MSGVAL12_MSGVAL2L	(IO_CAN2.MSGVAL12.byte.MSGVAL2L)
#define	CAN2_MSGVAL12_MSGVAL1H	(IO_CAN2.MSGVAL12.byte.MSGVAL1H)
#define	CAN2_MSGVAL12_MSGVAL1L	(IO_CAN2.MSGVAL12.byte.MSGVAL1L)
#define	CAN2_MSGVAL34			(IO_CAN2.MSGVAL34.word)
#define	CAN2_MSGVAL34_MSGVAL4		(IO_CAN2.MSGVAL34.hword.MSGVAL4)
#define	CAN2_MSGVAL34_MSGVAL3		(IO_CAN2.MSGVAL34.hword.MSGVAL3)
#define	CAN2_MSGVAL34_MSGVAL4H	(IO_CAN2.MSGVAL34.byte.MSGVAL4H)
#define	CAN2_MSGVAL34_MSGVAL4L	(IO_CAN2.MSGVAL34.byte.MSGVAL4L)
#define	CAN2_MSGVAL34_MSGVAL3H	(IO_CAN2.MSGVAL34.byte.MSGVAL3H)
#define	CAN2_MSGVAL34_MSGVAL3L	(IO_CAN2.MSGVAL34.byte.MSGVAL3L)
#define	CAN2_MSGVAL56			(IO_CAN2.MSGVAL56.word)
#define	CAN2_MSGVAL56_MSGVAL6		(IO_CAN2.MSGVAL56.hword.MSGVAL6)
#define	CAN2_MSGVAL56_MSGVAL5		(IO_CAN2.MSGVAL56.hword.MSGVAL5)
#define	CAN2_MSGVAL56_MSGVAL6H	(IO_CAN2.MSGVAL56.byte.MSGVAL6H)
#define	CAN2_MSGVAL56_MSGVAL6L	(IO_CAN2.MSGVAL56.byte.MSGVAL6L)
#define	CAN2_MSGVAL56_MSGVAL5H	(IO_CAN2.MSGVAL56.byte.MSGVAL5H)
#define	CAN2_MSGVAL56_MSGVAL5L	(IO_CAN2.MSGVAL56.byte.MSGVAL5L)
#define	CAN2_MSGVAL78			(IO_CAN2.MSGVAL78.word)
#define	CAN2_MSGVAL78_MSGVAL8		(IO_CAN2.MSGVAL78.hword.MSGVAL8)
#define	CAN2_MSGVAL78_MSGVAL7		(IO_CAN2.MSGVAL78.hword.MSGVAL7)
#define	CAN2_MSGVAL78_MSGVAL8H	(IO_CAN2.MSGVAL78.byte.MSGVAL8H)
#define	CAN2_MSGVAL78_MSGVAL8L	(IO_CAN2.MSGVAL78.byte.MSGVAL8L)
#define	CAN2_MSGVAL78_MSGVAL7H	(IO_CAN2.MSGVAL78.byte.MSGVAL7H)
#define	CAN2_MSGVAL78_MSGVAL7L	(IO_CAN2.MSGVAL78.byte.MSGVAL7L)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DFCTLR,attr=IO,locate=0x2300
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	FWE:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	RESV8:1;
        __HWORD	RESV9:1;
        __HWORD	RESV10:1;
        __HWORD	RESV11:1;
        __HWORD	RESV12:1;
        __HWORD	RESV13:1;
        __HWORD	RESV14:1;
        __HWORD	RESV15:1;
    } bit;
} DFCTLRSTR;

__IO_EXTENDED	  DFCTLRSTR	IO_DFCTLR;
#define	_dfctlr		(IO_DFCTLR)
#define	DFCTLR		(IO_DFCTLR.hword)
#define	DFCTLR_FWE  	(IO_DFCTLR.bit.FWE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DFSTR,attr=IO,locate=0x2303
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	DFECCERR:1;
        __BYTE	DFHANG:1;
        __BYTE	DFRDY:1;
    } bit;
} DFSTRSTR;

__IO_EXTENDED	  DFSTRSTR	IO_DFSTR;
#define	_dfstr		(IO_DFSTR)
#define	DFSTR		(IO_DFSTR.byte)
#define	DFSTR_DFECCERR  	(IO_DFSTR.bit.DFECCERR)
#define	DFSTR_DFHANG  	(IO_DFSTR.bit.DFHANG)
#define	DFSTR_DFRDY  	(IO_DFSTR.bit.DFRDY)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FLIFCTLR,attr=IO,locate=0x2308
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	DFWDSBL:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	ECCDSBL1:1;
        __BYTE	ECCDSBL0:1;
    } bit;
} FLIFCTLRSTR;

__IO_EXTENDED	  FLIFCTLRSTR	IO_FLIFCTLR;
#define	_flifctlr		(IO_FLIFCTLR)
#define	FLIFCTLR		(IO_FLIFCTLR.byte)
#define	FLIFCTLR_DFWDSBL  	(IO_FLIFCTLR.bit.DFWDSBL)
#define	FLIFCTLR_ECCDSBL1  	(IO_FLIFCTLR.bit.ECCDSBL1)
#define	FLIFCTLR_ECCDSBL0  	(IO_FLIFCTLR.bit.ECCDSBL0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FLIFFER1,attr=IO,locate=0x230A
#endif

__IO_EXTENDED	__BYTE	IO_FLIFFER1;
#define	_fliffer1		(IO_FLIFFER1)
#define	FLIFFER1	(_fliffer1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_FLIFFER2,attr=IO,locate=0x230B
#endif

__IO_EXTENDED	__BYTE	IO_FLIFFER2;
#define	_fliffer2		(IO_FLIFFER2)
#define	FLIFFER2	(_fliffer2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_SEEARX,attr=IO,locate=0x2400
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	D:15;
    } bit;
} SEEARXSTR;

__IO_EXTENDED	  SEEARXSTR	IO_SEEARX;
#define	_seearx		(IO_SEEARX)
#define	SEEARX		(IO_SEEARX.hword)
#define	SEEARX_D  	(IO_SEEARX.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DEEARX,attr=IO,locate=0x2402
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	D:15;
    } bit;
} DEEARXSTR;

__IO_EXTENDED	  DEEARXSTR	IO_DEEARX;
#define	_deearx		(IO_DEEARX)
#define	DEEARX		(IO_DEEARX.hword)
#define	DEEARX_D  	(IO_DEEARX.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EECSRX,attr=IO,locate=0x2404
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	DEIE:1;
        __BYTE	DEI:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} EECSRXSTR;

__IO_EXTENDED	  EECSRXSTR	IO_EECSRX;
#define	_eecsrx		(IO_EECSRX)
#define	EECSRX		(IO_EECSRX.byte)
#define	EECSRX_DEIE  	(IO_EECSRX.bit.DEIE)
#define	EECSRX_DEI  	(IO_EECSRX.bit.DEI)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EFEARX,attr=IO,locate=0x2406
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	D:15;
    } bit;
} EFEARXSTR;

__IO_EXTENDED	  EFEARXSTR	IO_EFEARX;
#define	_efearx		(IO_EFEARX)
#define	EFEARX		(IO_EFEARX.hword)
#define	EFEARX_D  	(IO_EFEARX.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EFECRX,attr=IO,locate=0x2408
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	RESV14:1;
        __WORD	FERR:1;
        __WORD	EY7:1;
        __WORD	EY6:1;
        __WORD	EY5:1;
        __WORD	EY4:1;
        __WORD	EY3:1;
        __WORD	EY2:1;
        __WORD	EY1:1;
        __WORD	EY0:1;
        __WORD	EI7:1;
        __WORD	DI6:1;
        __WORD	EI5:1;
        __WORD	EI4:1;
        __WORD	EI3:1;
        __WORD	EI2:1;
        __WORD	EI1:1;
        __WORD	EI0:1;
    } bit;
} EFECRXSTR;

__IO_EXTENDED	  EFECRXSTR	IO_EFECRX;
#define	_efecrx		(IO_EFECRX)
#define	EFECRX		(IO_EFECRX.word)
#define	EFECRX_FERR  	(IO_EFECRX.bit.FERR)
#define	EFECRX_EY7  	(IO_EFECRX.bit.EY7)
#define	EFECRX_EY6  	(IO_EFECRX.bit.EY6)
#define	EFECRX_EY5  	(IO_EFECRX.bit.EY5)
#define	EFECRX_EY4  	(IO_EFECRX.bit.EY4)
#define	EFECRX_EY3  	(IO_EFECRX.bit.EY3)
#define	EFECRX_EY2  	(IO_EFECRX.bit.EY2)
#define	EFECRX_EY1  	(IO_EFECRX.bit.EY1)
#define	EFECRX_EY0  	(IO_EFECRX.bit.EY0)
#define	EFECRX_EI7  	(IO_EFECRX.bit.EI7)
#define	EFECRX_DI6  	(IO_EFECRX.bit.DI6)
#define	EFECRX_EI5  	(IO_EFECRX.bit.EI5)
#define	EFECRX_EI4  	(IO_EFECRX.bit.EI4)
#define	EFECRX_EI3  	(IO_EFECRX.bit.EI3)
#define	EFECRX_EI2  	(IO_EFECRX.bit.EI2)
#define	EFECRX_EI1  	(IO_EFECRX.bit.EI1)
#define	EFECRX_EI0  	(IO_EFECRX.bit.EI0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_SEEARA,attr=IO,locate=0x3000
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	D:11;
    } bit;
} SEEARASTR;

__IO_EXTENDED	  SEEARASTR	IO_SEEARA;
#define	_seeara		(IO_SEEARA)
#define	SEEARA		(IO_SEEARA.hword)
#define	SEEARA_D  	(IO_SEEARA.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DEEARA,attr=IO,locate=0x3002
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	D:11;
    } bit;
} DEEARASTR;

__IO_EXTENDED	  DEEARASTR	IO_DEEARA;
#define	_deeara		(IO_DEEARA)
#define	DEEARA		(IO_DEEARA.hword)
#define	DEEARA_D  	(IO_DEEARA.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EECSRA,attr=IO,locate=0x3004
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	DEIE:1;
        __BYTE	DEI:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} EECSRASTR;

__IO_EXTENDED	  EECSRASTR	IO_EECSRA;
#define	_eecsra		(IO_EECSRA)
#define	EECSRA		(IO_EECSRA.byte)
#define	EECSRA_DEIE  	(IO_EECSRA.bit.DEIE)
#define	EECSRA_DEI  	(IO_EECSRA.bit.DEI)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EFEARA,attr=IO,locate=0x3006
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	D:11;
    } bit;
} EFEARASTR;

__IO_EXTENDED	  EFEARASTR	IO_EFEARA;
#define	_efeara		(IO_EFEARA)
#define	EFEARA		(IO_EFEARA.hword)
#define	EFEARA_D  	(IO_EFEARA.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EFECRA,attr=IO,locate=0x3008
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	RESV0:1;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	RESV14:1;
        __WORD	FERR:1;
        __WORD	EY7:1;
        __WORD	EY6:1;
        __WORD	EY5:1;
        __WORD	EY4:1;
        __WORD	EY3:1;
        __WORD	EY2:1;
        __WORD	EY1:1;
        __WORD	EY0:1;
        __WORD	EI7:1;
        __WORD	DI6:1;
        __WORD	EI5:1;
        __WORD	EI4:1;
        __WORD	EI3:1;
        __WORD	EI2:1;
        __WORD	EI1:1;
        __WORD	EI0:1;
    } bit;
} EFECRASTR;

__IO_EXTENDED	  EFECRASTR	IO_EFECRA;
#define	_efecra		(IO_EFECRA)
#define	EFECRA		(IO_EFECRA.word)
#define	EFECRA_FERR  	(IO_EFECRA.bit.FERR)
#define	EFECRA_EY7  	(IO_EFECRA.bit.EY7)
#define	EFECRA_EY6  	(IO_EFECRA.bit.EY6)
#define	EFECRA_EY5  	(IO_EFECRA.bit.EY5)
#define	EFECRA_EY4  	(IO_EFECRA.bit.EY4)
#define	EFECRA_EY3  	(IO_EFECRA.bit.EY3)
#define	EFECRA_EY2  	(IO_EFECRA.bit.EY2)
#define	EFECRA_EY1  	(IO_EFECRA.bit.EY1)
#define	EFECRA_EY0  	(IO_EFECRA.bit.EY0)
#define	EFECRA_EI7  	(IO_EFECRA.bit.EI7)
#define	EFECRA_DI6  	(IO_EFECRA.bit.DI6)
#define	EFECRA_EI5  	(IO_EFECRA.bit.EI5)
#define	EFECRA_EI4  	(IO_EFECRA.bit.EI4)
#define	EFECRA_EI3  	(IO_EFECRA.bit.EI3)
#define	EFECRA_EI2  	(IO_EFECRA.bit.EI2)
#define	EFECRA_EI1  	(IO_EFECRA.bit.EI1)
#define	EFECRA_EI0  	(IO_EFECRA.bit.EI0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TEAR0X,attr=IO,locate=0x300C
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	TER:3;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	RESV14:1;
        __WORD	D:15;
    } bit;
} TEAR0XSTR;

__IO_EXTENDED	 const  TEAR0XSTR	IO_TEAR0X;
#define	_tear0x		(IO_TEAR0X)
#define	TEAR0X		(IO_TEAR0X.word)
#define	TEAR0X_TER  	(IO_TEAR0X.bit.TER)
#define	TEAR0X_D  	(IO_TEAR0X.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TEAR1X,attr=IO,locate=0x3010
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	TER:3;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	RESV14:1;
        __WORD	D:15;
    } bit;
} TEAR1XSTR;

__IO_EXTENDED	 const  TEAR1XSTR	IO_TEAR1X;
#define	_tear1x		(IO_TEAR1X)
#define	TEAR1X		(IO_TEAR1X.word)
#define	TEAR1X_TER  	(IO_TEAR1X.bit.TER)
#define	TEAR1X_D  	(IO_TEAR1X.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TEAR2X,attr=IO,locate=0x3014
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	TER:3;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	RESV14:1;
        __WORD	D:15;
    } bit;
} TEAR2XSTR;

__IO_EXTENDED	 const  TEAR2XSTR	IO_TEAR2X;
#define	_tear2x		(IO_TEAR2X)
#define	TEAR2X		(IO_TEAR2X.word)
#define	TEAR2X_TER  	(IO_TEAR2X.bit.TER)
#define	TEAR2X_D  	(IO_TEAR2X.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TAEARX,attr=IO,locate=0x3018
#endif

__IO_EXTENDED	__HWORD	IO_TAEARX;
#define	_taearx		(IO_TAEARX)
#define	TAEARX	(_taearx)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TASARX,attr=IO,locate=0x301A
#endif

__IO_EXTENDED	__HWORD	IO_TASARX;
#define	_tasarx		(IO_TASARX)
#define	TASARX	(_tasarx)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TFECRX,attr=IO,locate=0x301C
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	FERR:1;
        __BYTE	ETYP:3;
    } bit;
} TFECRXSTR;

__IO_EXTENDED	  TFECRXSTR	IO_TFECRX;
#define	_tfecrx		(IO_TFECRX)
#define	TFECRX		(IO_TFECRX.byte)
#define	TFECRX_FERR  	(IO_TFECRX.bit.FERR)
#define	TFECRX_ETYP  	(IO_TFECRX.bit.ETYP)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TICRX,attr=IO,locate=0x301D
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	ICIE:1;
        __BYTE	ICI:1;
        __BYTE	ITYP:1;
        __BYTE	IRUN:1;
    } bit;
} TICRXSTR;

__IO_EXTENDED	  TICRXSTR	IO_TICRX;
#define	_ticrx		(IO_TICRX)
#define	TICRX		(IO_TICRX.byte)
#define	TICRX_ICIE  	(IO_TICRX.bit.ICIE)
#define	TICRX_ICI  	(IO_TICRX.bit.ICI)
#define	TICRX_ITYP  	(IO_TICRX.bit.ITYP)
#define	TICRX_IRUN  	(IO_TICRX.bit.IRUN)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TTCRX,attr=IO,locate=0x301E
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	TSTAT:1;
        __HWORD	OVFLW:1;
        __HWORD	TEIE:1;
        __HWORD	TEI:1;
        __HWORD	TCIE:1;
        __HWORD	TCI:1;
        __HWORD	TTYP:3;
        __HWORD	TRUN:1;
    } bit;
} TTCRXSTR;

__IO_EXTENDED	  TTCRXSTR	IO_TTCRX;
#define	_ttcrx		(IO_TTCRX)
#define	TTCRX		(IO_TTCRX.hword)
#define	TTCRX_TSTAT  	(IO_TTCRX.bit.TSTAT)
#define	TTCRX_OVFLW  	(IO_TTCRX.bit.OVFLW)
#define	TTCRX_TEIE  	(IO_TTCRX.bit.TEIE)
#define	TTCRX_TEI  	(IO_TTCRX.bit.TEI)
#define	TTCRX_TCIE  	(IO_TTCRX.bit.TCIE)
#define	TTCRX_TCI  	(IO_TTCRX.bit.TCI)
#define	TTCRX_TTYP  	(IO_TTCRX.bit.TTYP)
#define	TTCRX_TRUN  	(IO_TTCRX.bit.TRUN)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TSRCRX,attr=IO,locate=0x3020
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	SRST:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} TSRCRXSTR;

__IO_EXTENDED	  TSRCRXSTR	IO_TSRCRX;
#define	_tsrcrx		(IO_TSRCRX)
#define	TSRCRX		(IO_TSRCRX.byte)
#define	TSRCRX_SRST  	(IO_TSRCRX.bit.SRST)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TKCCRX,attr=IO,locate=0x3023
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	KEY:2;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	CODE:2;
    } bit;
} TKCCRXSTR;

__IO_EXTENDED	  TKCCRXSTR	IO_TKCCRX;
#define	_tkccrx		(IO_TKCCRX)
#define	TKCCRX		(IO_TKCCRX.byte)
#define	TKCCRX_KEY  	(IO_TKCCRX.bit.KEY)
#define	TKCCRX_CODE  	(IO_TKCCRX.bit.CODE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TEAR0A,attr=IO,locate=0x3030
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	TER:3;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	RESV14:1;
        __WORD	RESV15:1;
        __WORD	RESV16:1;
        __WORD	RESV17:1;
        __WORD	RESV18:1;
        __WORD	D:11;
    } bit;
} TEAR0ASTR;

__IO_EXTENDED	 const  TEAR0ASTR	IO_TEAR0A;
#define	_tear0a		(IO_TEAR0A)
#define	TEAR0A		(IO_TEAR0A.word)
#define	TEAR0A_TER  	(IO_TEAR0A.bit.TER)
#define	TEAR0A_D  	(IO_TEAR0A.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TEAR1A,attr=IO,locate=0x3034
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	TER:3;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	RESV14:1;
        __WORD	RESV15:1;
        __WORD	RESV16:1;
        __WORD	RESV17:1;
        __WORD	RESV18:1;
        __WORD	D:11;
    } bit;
} TEAR1ASTR;

__IO_EXTENDED	 const  TEAR1ASTR	IO_TEAR1A;
#define	_tear1a		(IO_TEAR1A)
#define	TEAR1A		(IO_TEAR1A.word)
#define	TEAR1A_TER  	(IO_TEAR1A.bit.TER)
#define	TEAR1A_D  	(IO_TEAR1A.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TEAR2A,attr=IO,locate=0x3038
#endif

typedef union
{
    __WORD	word;
    struct
    {
        __WORD	TER:3;
        __WORD	RESV1:1;
        __WORD	RESV2:1;
        __WORD	RESV3:1;
        __WORD	RESV4:1;
        __WORD	RESV5:1;
        __WORD	RESV6:1;
        __WORD	RESV7:1;
        __WORD	RESV8:1;
        __WORD	RESV9:1;
        __WORD	RESV10:1;
        __WORD	RESV11:1;
        __WORD	RESV12:1;
        __WORD	RESV13:1;
        __WORD	RESV14:1;
        __WORD	RESV15:1;
        __WORD	RESV16:1;
        __WORD	RESV17:1;
        __WORD	RESV18:1;
        __WORD	D:11;
    } bit;
} TEAR2ASTR;

__IO_EXTENDED	 const  TEAR2ASTR	IO_TEAR2A;
#define	_tear2a		(IO_TEAR2A)
#define	TEAR2A		(IO_TEAR2A.word)
#define	TEAR2A_TER  	(IO_TEAR2A.bit.TER)
#define	TEAR2A_D  	(IO_TEAR2A.bit.D)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TAEARA,attr=IO,locate=0x303C
#endif

__IO_EXTENDED	__HWORD	IO_TAEARA;
#define	_taeara		(IO_TAEARA)
#define	TAEARA	(_taeara)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TASARA,attr=IO,locate=0x303E
#endif

__IO_EXTENDED	__HWORD	IO_TASARA;
#define	_tasara		(IO_TASARA)
#define	TASARA	(_tasara)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TFECRA,attr=IO,locate=0x3040
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	FERR:1;
        __BYTE	ETYP:3;
    } bit;
} TFECRASTR;

__IO_EXTENDED	  TFECRASTR	IO_TFECRA;
#define	_tfecra		(IO_TFECRA)
#define	TFECRA		(IO_TFECRA.byte)
#define	TFECRA_FERR  	(IO_TFECRA.bit.FERR)
#define	TFECRA_ETYP  	(IO_TFECRA.bit.ETYP)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TICRA,attr=IO,locate=0x3041
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	RESV0:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	ICIE:1;
        __BYTE	ICI:1;
        __BYTE	ITYP:1;
        __BYTE	IRUN:1;
    } bit;
} TICRASTR;

__IO_EXTENDED	  TICRASTR	IO_TICRA;
#define	_ticra		(IO_TICRA)
#define	TICRA		(IO_TICRA.byte)
#define	TICRA_ICIE  	(IO_TICRA.bit.ICIE)
#define	TICRA_ICI  	(IO_TICRA.bit.ICI)
#define	TICRA_ITYP  	(IO_TICRA.bit.ITYP)
#define	TICRA_IRUN  	(IO_TICRA.bit.IRUN)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TTCRA,attr=IO,locate=0x3042
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	RESV0:1;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	TSTAT:1;
        __HWORD	OVFLW:1;
        __HWORD	TEIE:1;
        __HWORD	TEI:1;
        __HWORD	TCIE:1;
        __HWORD	TCI:1;
        __HWORD	TTYP:3;
        __HWORD	TRUN:1;
    } bit;
} TTCRASTR;

__IO_EXTENDED	  TTCRASTR	IO_TTCRA;
#define	_ttcra		(IO_TTCRA)
#define	TTCRA		(IO_TTCRA.hword)
#define	TTCRA_TSTAT  	(IO_TTCRA.bit.TSTAT)
#define	TTCRA_OVFLW  	(IO_TTCRA.bit.OVFLW)
#define	TTCRA_TEIE  	(IO_TTCRA.bit.TEIE)
#define	TTCRA_TEI  	(IO_TTCRA.bit.TEI)
#define	TTCRA_TCIE  	(IO_TTCRA.bit.TCIE)
#define	TTCRA_TCI  	(IO_TTCRA.bit.TCI)
#define	TTCRA_TTYP  	(IO_TTCRA.bit.TTYP)
#define	TTCRA_TRUN  	(IO_TTCRA.bit.TRUN)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TSRCRA,attr=IO,locate=0x3044
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	SRST:1;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	RESV5:1;
        __BYTE	RESV6:1;
        __BYTE	RESV7:1;
    } bit;
} TSRCRASTR;

__IO_EXTENDED	  TSRCRASTR	IO_TSRCRA;
#define	_tsrcra		(IO_TSRCRA)
#define	TSRCRA		(IO_TSRCRA.byte)
#define	TSRCRA_SRST  	(IO_TSRCRA.bit.SRST)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_TKCCRA,attr=IO,locate=0x3047
#endif

typedef union
{
    __BYTE	byte;
    struct
    {
        __BYTE	KEY:2;
        __BYTE	RESV1:1;
        __BYTE	RESV2:1;
        __BYTE	RESV3:1;
        __BYTE	RESV4:1;
        __BYTE	CODE:2;
    } bit;
} TKCCRASTR;

__IO_EXTENDED	  TKCCRASTR	IO_TKCCRA;
#define	_tkccra		(IO_TKCCRA)
#define	TKCCRA		(IO_TKCCRA.byte)
#define	TKCCRA_KEY  	(IO_TKCCRA.bit.KEY)
#define	TKCCRA_CODE  	(IO_TKCCRA.bit.CODE)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BUSDIGSR0,attr=IO,locate=0x3100
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	DER:4;
        __HWORD	AER:4;
        __HWORD	FECLR:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	CNER:1;
        __HWORD	RDWR:1;
    } bit;
} BUSDIGSR0STR;

__IO_EXTENDED	  BUSDIGSR0STR	IO_BUSDIGSR0;
#define	_busdigsr0		(IO_BUSDIGSR0)
#define	BUSDIGSR0		(IO_BUSDIGSR0.hword)
#define	BUSDIGSR0_DER  	(IO_BUSDIGSR0.bit.DER)
#define	BUSDIGSR0_AER  	(IO_BUSDIGSR0.bit.AER)
#define	BUSDIGSR0_FECLR  	(IO_BUSDIGSR0.bit.FECLR)
#define	BUSDIGSR0_CNER  	(IO_BUSDIGSR0.bit.CNER)
#define	BUSDIGSR0_RDWR  	(IO_BUSDIGSR0.bit.RDWR)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BUSDIGSR1,attr=IO,locate=0x3102
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	DER:4;
        __HWORD	AER:4;
        __HWORD	FECLR:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	CNER:1;
        __HWORD	RDWR:1;
    } bit;
} BUSDIGSR1STR;

__IO_EXTENDED	  BUSDIGSR1STR	IO_BUSDIGSR1;
#define	_busdigsr1		(IO_BUSDIGSR1)
#define	BUSDIGSR1		(IO_BUSDIGSR1.hword)
#define	BUSDIGSR1_DER  	(IO_BUSDIGSR1.bit.DER)
#define	BUSDIGSR1_AER  	(IO_BUSDIGSR1.bit.AER)
#define	BUSDIGSR1_FECLR  	(IO_BUSDIGSR1.bit.FECLR)
#define	BUSDIGSR1_CNER  	(IO_BUSDIGSR1.bit.CNER)
#define	BUSDIGSR1_RDWR  	(IO_BUSDIGSR1.bit.RDWR)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BUSDIGSR2,attr=IO,locate=0x3104
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	DER:4;
        __HWORD	AER:4;
        __HWORD	FECLR:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	CNER:1;
        __HWORD	RDWR:1;
    } bit;
} BUSDIGSR2STR;

__IO_EXTENDED	  BUSDIGSR2STR	IO_BUSDIGSR2;
#define	_busdigsr2		(IO_BUSDIGSR2)
#define	BUSDIGSR2		(IO_BUSDIGSR2.hword)
#define	BUSDIGSR2_DER  	(IO_BUSDIGSR2.bit.DER)
#define	BUSDIGSR2_AER  	(IO_BUSDIGSR2.bit.AER)
#define	BUSDIGSR2_FECLR  	(IO_BUSDIGSR2.bit.FECLR)
#define	BUSDIGSR2_CNER  	(IO_BUSDIGSR2.bit.CNER)
#define	BUSDIGSR2_RDWR  	(IO_BUSDIGSR2.bit.RDWR)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BUSTSTR0,attr=IO,locate=0x3106
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	KEY:2;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	CEN:1;
        __HWORD	RBEN:1;
        __HWORD	APBEN:1;
        __HWORD	AHBEN:1;
        __HWORD	DEN:4;
        __HWORD	AEN:4;
    } bit;
} BUSTSTR0STR;

__IO_EXTENDED	  BUSTSTR0STR	IO_BUSTSTR0;
#define	_buststr0		(IO_BUSTSTR0)
#define	BUSTSTR0		(IO_BUSTSTR0.hword)
#define	BUSTSTR0_KEY  	(IO_BUSTSTR0.bit.KEY)
#define	BUSTSTR0_CEN  	(IO_BUSTSTR0.bit.CEN)
#define	BUSTSTR0_RBEN  	(IO_BUSTSTR0.bit.RBEN)
#define	BUSTSTR0_APBEN  	(IO_BUSTSTR0.bit.APBEN)
#define	BUSTSTR0_AHBEN  	(IO_BUSTSTR0.bit.AHBEN)
#define	BUSTSTR0_DEN  	(IO_BUSTSTR0.bit.DEN)
#define	BUSTSTR0_AEN  	(IO_BUSTSTR0.bit.AEN)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BUSADR0,attr=IO,locate=0x3108
#endif

__IO_EXTENDED	const __WORD	IO_BUSADR0;
#define	_busadr0		(IO_BUSADR0)
#define	BUSADR0	(_busadr0)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BUSADR1,attr=IO,locate=0x310C
#endif

__IO_EXTENDED	const __WORD	IO_BUSADR1;
#define	_busadr1		(IO_BUSADR1)
#define	BUSADR1	(_busadr1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BUSADR2,attr=IO,locate=0x3110
#endif

__IO_EXTENDED	const __WORD	IO_BUSADR2;
#define	_busadr2		(IO_BUSADR2)
#define	BUSADR2	(_busadr2)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BUSDIGSR3,attr=IO,locate=0x3116
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	DER:4;
        __HWORD	AER:4;
        __HWORD	FECLR:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	CNER:1;
        __HWORD	RDWR:1;
    } bit;
} BUSDIGSR3STR;

__IO_EXTENDED	  BUSDIGSR3STR	IO_BUSDIGSR3;
#define	_busdigsr3		(IO_BUSDIGSR3)
#define	BUSDIGSR3		(IO_BUSDIGSR3.hword)
#define	BUSDIGSR3_DER  	(IO_BUSDIGSR3.bit.DER)
#define	BUSDIGSR3_AER  	(IO_BUSDIGSR3.bit.AER)
#define	BUSDIGSR3_FECLR  	(IO_BUSDIGSR3.bit.FECLR)
#define	BUSDIGSR3_CNER  	(IO_BUSDIGSR3.bit.CNER)
#define	BUSDIGSR3_RDWR  	(IO_BUSDIGSR3.bit.RDWR)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BUSDIGSR4,attr=IO,locate=0x3118
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	DER:4;
        __HWORD	AER:4;
        __HWORD	FECLR:1;
        __HWORD	RESV3:1;
        __HWORD	RESV4:1;
        __HWORD	RESV5:1;
        __HWORD	RESV6:1;
        __HWORD	RESV7:1;
        __HWORD	CNER:1;
        __HWORD	RDWR:1;
    } bit;
} BUSDIGSR4STR;

__IO_EXTENDED	  BUSDIGSR4STR	IO_BUSDIGSR4;
#define	_busdigsr4		(IO_BUSDIGSR4)
#define	BUSDIGSR4		(IO_BUSDIGSR4.hword)
#define	BUSDIGSR4_DER  	(IO_BUSDIGSR4.bit.DER)
#define	BUSDIGSR4_AER  	(IO_BUSDIGSR4.bit.AER)
#define	BUSDIGSR4_FECLR  	(IO_BUSDIGSR4.bit.FECLR)
#define	BUSDIGSR4_CNER  	(IO_BUSDIGSR4.bit.CNER)
#define	BUSDIGSR4_RDWR  	(IO_BUSDIGSR4.bit.RDWR)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BUSTSTR1,attr=IO,locate=0x311A
#endif

typedef union
{
    __HWORD	hword;
    struct
    {
        __HWORD	KEY:2;
        __HWORD	RESV1:1;
        __HWORD	RESV2:1;
        __HWORD	CEN:1;
        __HWORD	RBEN:1;
        __HWORD	APBEN:1;
        __HWORD	RESV6:1;
        __HWORD	DEN:4;
        __HWORD	AEN:4;
    } bit;
} BUSTSTR1STR;

__IO_EXTENDED	  BUSTSTR1STR	IO_BUSTSTR1;
#define	_buststr1		(IO_BUSTSTR1)
#define	BUSTSTR1		(IO_BUSTSTR1.hword)
#define	BUSTSTR1_KEY  	(IO_BUSTSTR1.bit.KEY)
#define	BUSTSTR1_CEN  	(IO_BUSTSTR1.bit.CEN)
#define	BUSTSTR1_RBEN  	(IO_BUSTSTR1.bit.RBEN)
#define	BUSTSTR1_APBEN  	(IO_BUSTSTR1.bit.APBEN)
#define	BUSTSTR1_DEN  	(IO_BUSTSTR1.bit.DEN)
#define	BUSTSTR1_AEN  	(IO_BUSTSTR1.bit.AEN)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BUSADR3,attr=IO,locate=0x3120
#endif

__IO_EXTENDED	const __WORD	IO_BUSADR3;
#define	_busadr3		(IO_BUSADR3)
#define	BUSADR3	(_busadr3)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_BUSADR4,attr=IO,locate=0x3124
#endif

__IO_EXTENDED	const __WORD	IO_BUSADR4;
#define	_busadr4		(IO_BUSADR4)
#define	BUSADR4	(_busadr4)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_DSUCR,attr=IO,locate=0xFF00
#endif

__IO_EXTENDED	__HWORD	IO_DSUCR;
#define	_dsucr		(IO_DSUCR)
#define	DSUCR	(_dsucr)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PCSR,attr=IO,locate=0xFF10
#endif

__IO_EXTENDED	__WORD	IO_PCSR;
#define	_pcsr		(IO_PCSR)
#define	PCSR_	(_pcsr)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_PSSR,attr=IO,locate=0xFF14
#endif

__IO_EXTENDED	__WORD	IO_PSSR;
#define	_pssr		(IO_PSSR)
#define	PSSR	(_pssr)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EDIR1,attr=IO,locate=0xFFF8
#endif

__IO_EXTENDED	const __WORD	IO_EDIR1;
#define	_edir1		(IO_EDIR1)
#define	EDIR1	(_edir1)

#ifdef __IO_DEFINE
#pragma segment     DATA=IO_EDIR0,attr=IO,locate=0xFFFC
#endif

__IO_EXTENDED	const __WORD	IO_EDIR0;
#define	_edir0		(IO_EDIR0)
#define	EDIR0	(_edir0)

#endif

